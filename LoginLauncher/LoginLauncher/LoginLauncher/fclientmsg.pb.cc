// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fclientmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "fclientmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace FProtoClient {

namespace {

const ::google::protobuf::Descriptor* MsgLoginVerifyC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLoginVerifyC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgReturnS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReturnS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLoginResGatewayInfoS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLoginResGatewayInfoS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBindAccountC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBindAccountC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBindAccountS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBindAccountS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLoginGameVerifyAccountC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLoginGameVerifyAccountC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTimeGameTimer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTimeGameTimer_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLoginGameResS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLoginGameResS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgCreateCharC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgCreateCharC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgRquestEnterGameC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRquestEnterGameC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgEnterGameResS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEnterGameResS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMainDataS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMainDataS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTimeSyncS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTimeSyncS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUpdateResS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUpdateResS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgChatSystemS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgChatSystemS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMapScreenRemoveCharS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMapScreenRemoveCharS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMapScreenBatchRemoveCharS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMapScreenBatchRemoveCharS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMapScreenRemoveNpcS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMapScreenRemoveNpcS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMapScreenBatchRemoveNpcS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMapScreenBatchRemoveNpcS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMapScreenDeathNpcS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMapScreenDeathNpcS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgGMCommandC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgGMCommandC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicAttackCSC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicAttackCSC_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicAttackCSC_stpTarget_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicAttackCSC_stpTarget_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicAttackFailedS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicAttackFailedS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicAttackResS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicAttackResS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicTargetDeathS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicTargetDeathS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTipsS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTipsS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgRebornC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRebornC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNotifyRebornS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNotifyRebornS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNotifyBeAttackS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNotifyBeAttackS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageSendUserItemToClientS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageSendUserItemToClientS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageSendChangeEquipS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageSendChangeEquipS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageChangeEquipSaveC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageChangeEquipSaveC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgExtendBagC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgExtendBagC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageStObjectUserApplyC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageStObjectUserApplyC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageStObjectUserApplyOkS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageStObjectUserApplyOkS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectItemMoveS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectItemMoveS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectExchangeBatchS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectExchangeBatchS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgObjectExchangeBatchS2C_exchangeNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgObjectExchangeBatchS2C_exchangeNode_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDataMoneyRefreshS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDataMoneyRefreshS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgFreshSkillS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgFreshSkillS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgFreshSkillS2C_Skill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgFreshSkillS2C_Skill_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgRefreshHpMpS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRefreshHpMpS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* FMsgVisitNpcC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FMsgVisitNpcC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* FMsgResponseDialogS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FMsgResponseDialogS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* FMsgDialogFunctionAckC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FMsgDialogFunctionAckC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageVisitNpcS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageVisitNpcS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* FMsgAcceptQuestC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FMsgAcceptQuestC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* FMsgCompleteQuestC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FMsgCompleteQuestC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* FMsgQuestDataS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FMsgQuestDataS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* FMsgMyQuestsDataS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FMsgMyQuestsDataS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* FMsgMyQuestsCanComitS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FMsgMyQuestsCanComitS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MovePos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MovePos_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgCharacterMoveS8C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgCharacterMoveS8C_reflection_ = NULL;
const ::google::protobuf::Descriptor* FMsgPropertyStateS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FMsgPropertyStateS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageMapScreenRefreshCharacterS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageMapScreenRefreshCharacterS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgCharacterMoveFailS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgCharacterMoveFailS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageMapScreenNineScreenRefreshNpcS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageMapScreenNineScreenRefreshNpcS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageNineScreenRefreshPlayerS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageNineScreenRefreshPlayerS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageMapScreenNineScreenRefreshDeathNpcS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageMapScreenNineScreenRefreshDeathNpcS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageMapScreenSummonNpcS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageMapScreenSummonNpcS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderCell_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderCell_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageOrderDataS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageOrderDataS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageOrderRequestC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageOrderRequestC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProgressBarS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProgressBarS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProgressBarS2C_State_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_fclientmsg_2eproto() {
  protobuf_AddDesc_fclientmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "fclientmsg.proto");
  GOOGLE_CHECK(file != NULL);
  MsgLoginVerifyC2S_descriptor_ = file->message_type(0);
  static const int MsgLoginVerifyC2S_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginVerifyC2S, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginVerifyC2S, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginVerifyC2S, zoneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginVerifyC2S, gatetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginVerifyC2S, passwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginVerifyC2S, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginVerifyC2S, accid_),
  };
  MsgLoginVerifyC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLoginVerifyC2S_descriptor_,
      MsgLoginVerifyC2S::default_instance_,
      MsgLoginVerifyC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginVerifyC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginVerifyC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLoginVerifyC2S));
  MsgReturnS2C_descriptor_ = file->message_type(1);
  static const int MsgReturnS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReturnS2C, res_),
  };
  MsgReturnS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgReturnS2C_descriptor_,
      MsgReturnS2C::default_instance_,
      MsgReturnS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReturnS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReturnS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgReturnS2C));
  MsgLoginResGatewayInfoS2C_descriptor_ = file->message_type(2);
  static const int MsgLoginResGatewayInfoS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResGatewayInfoS2C, accid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResGatewayInfoS2C, loginpasswd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResGatewayInfoS2C, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResGatewayInfoS2C, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResGatewayInfoS2C, ipv4_),
  };
  MsgLoginResGatewayInfoS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLoginResGatewayInfoS2C_descriptor_,
      MsgLoginResGatewayInfoS2C::default_instance_,
      MsgLoginResGatewayInfoS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResGatewayInfoS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginResGatewayInfoS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLoginResGatewayInfoS2C));
  MsgBindAccountC2S_descriptor_ = file->message_type(3);
  static const int MsgBindAccountC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBindAccountC2S, passwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBindAccountC2S, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBindAccountC2S, accid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBindAccountC2S, charid_),
  };
  MsgBindAccountC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBindAccountC2S_descriptor_,
      MsgBindAccountC2S::default_instance_,
      MsgBindAccountC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBindAccountC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBindAccountC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBindAccountC2S));
  MsgBindAccountS2C_descriptor_ = file->message_type(4);
  static const int MsgBindAccountS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBindAccountS2C, success_),
  };
  MsgBindAccountS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBindAccountS2C_descriptor_,
      MsgBindAccountS2C::default_instance_,
      MsgBindAccountS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBindAccountS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBindAccountS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBindAccountS2C));
  MsgLoginGameVerifyAccountC2S_descriptor_ = file->message_type(5);
  static const int MsgLoginGameVerifyAccountC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginGameVerifyAccountC2S, accid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginGameVerifyAccountC2S, loginpasswd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginGameVerifyAccountC2S, flattype_),
  };
  MsgLoginGameVerifyAccountC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLoginGameVerifyAccountC2S_descriptor_,
      MsgLoginGameVerifyAccountC2S::default_instance_,
      MsgLoginGameVerifyAccountC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginGameVerifyAccountC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginGameVerifyAccountC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLoginGameVerifyAccountC2S));
  MsgTimeGameTimer_descriptor_ = file->message_type(6);
  static const int MsgTimeGameTimer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTimeGameTimer, gametime_),
  };
  MsgTimeGameTimer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgTimeGameTimer_descriptor_,
      MsgTimeGameTimer::default_instance_,
      MsgTimeGameTimer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTimeGameTimer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTimeGameTimer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgTimeGameTimer));
  MsgLoginGameResS2C_descriptor_ = file->message_type(7);
  static const int MsgLoginGameResS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginGameResS2C, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginGameResS2C, name_),
  };
  MsgLoginGameResS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLoginGameResS2C_descriptor_,
      MsgLoginGameResS2C::default_instance_,
      MsgLoginGameResS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginGameResS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginGameResS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLoginGameResS2C));
  MsgCreateCharC2S_descriptor_ = file->message_type(8);
  static const int MsgCreateCharC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCreateCharC2S, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCreateCharC2S, country_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCreateCharC2S, club_),
  };
  MsgCreateCharC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgCreateCharC2S_descriptor_,
      MsgCreateCharC2S::default_instance_,
      MsgCreateCharC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCreateCharC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCreateCharC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgCreateCharC2S));
  MsgRquestEnterGameC2S_descriptor_ = file->message_type(9);
  static const int MsgRquestEnterGameC2S_offsets_[1] = {
  };
  MsgRquestEnterGameC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgRquestEnterGameC2S_descriptor_,
      MsgRquestEnterGameC2S::default_instance_,
      MsgRquestEnterGameC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRquestEnterGameC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRquestEnterGameC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgRquestEnterGameC2S));
  MsgEnterGameResS2C_descriptor_ = file->message_type(10);
  static const int MsgEnterGameResS2C_offsets_[1] = {
  };
  MsgEnterGameResS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgEnterGameResS2C_descriptor_,
      MsgEnterGameResS2C::default_instance_,
      MsgEnterGameResS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterGameResS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterGameResS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgEnterGameResS2C));
  MsgMainDataS2C_descriptor_ = file->message_type(11);
  static const int MsgMainDataS2C_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, face_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, fcountry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, newbieguide_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, accid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, mapw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, maph_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, mp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, maxmp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, maxhp_),
  };
  MsgMainDataS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMainDataS2C_descriptor_,
      MsgMainDataS2C::default_instance_,
      MsgMainDataS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMainDataS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMainDataS2C));
  MsgTimeSyncS2C_descriptor_ = file->message_type(12);
  static const int MsgTimeSyncS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTimeSyncS2C, servertime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTimeSyncS2C, timezone_),
  };
  MsgTimeSyncS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgTimeSyncS2C_descriptor_,
      MsgTimeSyncS2C::default_instance_,
      MsgTimeSyncS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTimeSyncS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTimeSyncS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgTimeSyncS2C));
  MsgUpdateResS2C_descriptor_ = file->message_type(13);
  static const int MsgUpdateResS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpdateResS2C, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpdateResS2C, num_),
  };
  MsgUpdateResS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUpdateResS2C_descriptor_,
      MsgUpdateResS2C::default_instance_,
      MsgUpdateResS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpdateResS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpdateResS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUpdateResS2C));
  MsgChatSystemS2C_descriptor_ = file->message_type(14);
  static const int MsgChatSystemS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChatSystemS2C, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChatSystemS2C, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChatSystemS2C, msg_),
  };
  MsgChatSystemS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgChatSystemS2C_descriptor_,
      MsgChatSystemS2C::default_instance_,
      MsgChatSystemS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChatSystemS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgChatSystemS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgChatSystemS2C));
  MsgMapScreenRemoveCharS2C_descriptor_ = file->message_type(15);
  static const int MsgMapScreenRemoveCharS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenRemoveCharS2C, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenRemoveCharS2C, gohome_),
  };
  MsgMapScreenRemoveCharS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMapScreenRemoveCharS2C_descriptor_,
      MsgMapScreenRemoveCharS2C::default_instance_,
      MsgMapScreenRemoveCharS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenRemoveCharS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenRemoveCharS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMapScreenRemoveCharS2C));
  MsgMapScreenBatchRemoveCharS2C_descriptor_ = file->message_type(16);
  static const int MsgMapScreenBatchRemoveCharS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenBatchRemoveCharS2C, charid_),
  };
  MsgMapScreenBatchRemoveCharS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMapScreenBatchRemoveCharS2C_descriptor_,
      MsgMapScreenBatchRemoveCharS2C::default_instance_,
      MsgMapScreenBatchRemoveCharS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenBatchRemoveCharS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenBatchRemoveCharS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMapScreenBatchRemoveCharS2C));
  MsgMapScreenRemoveNpcS2C_descriptor_ = file->message_type(17);
  static const int MsgMapScreenRemoveNpcS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenRemoveNpcS2C, tempid_),
  };
  MsgMapScreenRemoveNpcS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMapScreenRemoveNpcS2C_descriptor_,
      MsgMapScreenRemoveNpcS2C::default_instance_,
      MsgMapScreenRemoveNpcS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenRemoveNpcS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenRemoveNpcS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMapScreenRemoveNpcS2C));
  MsgMapScreenBatchRemoveNpcS2C_descriptor_ = file->message_type(18);
  static const int MsgMapScreenBatchRemoveNpcS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenBatchRemoveNpcS2C, npcid_),
  };
  MsgMapScreenBatchRemoveNpcS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMapScreenBatchRemoveNpcS2C_descriptor_,
      MsgMapScreenBatchRemoveNpcS2C::default_instance_,
      MsgMapScreenBatchRemoveNpcS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenBatchRemoveNpcS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenBatchRemoveNpcS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMapScreenBatchRemoveNpcS2C));
  MsgMapScreenDeathNpcS2C_descriptor_ = file->message_type(19);
  static const int MsgMapScreenDeathNpcS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenDeathNpcS2C, targetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenDeathNpcS2C, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenDeathNpcS2C, disappeartime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenDeathNpcS2C, killer_),
  };
  MsgMapScreenDeathNpcS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMapScreenDeathNpcS2C_descriptor_,
      MsgMapScreenDeathNpcS2C::default_instance_,
      MsgMapScreenDeathNpcS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenDeathNpcS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMapScreenDeathNpcS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMapScreenDeathNpcS2C));
  MsgGMCommandC2S_descriptor_ = file->message_type(20);
  static const int MsgGMCommandC2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGMCommandC2S, str_),
  };
  MsgGMCommandC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgGMCommandC2S_descriptor_,
      MsgGMCommandC2S::default_instance_,
      MsgGMCommandC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGMCommandC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGMCommandC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgGMCommandC2S));
  MsgMagicAttackCSC_descriptor_ = file->message_type(21);
  static const int MsgMagicAttackCSC_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, srctype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, srcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, destype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, desid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, z_),
  };
  MsgMagicAttackCSC_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicAttackCSC_descriptor_,
      MsgMagicAttackCSC::default_instance_,
      MsgMagicAttackCSC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicAttackCSC));
  MsgMagicAttackCSC_stpTarget_descriptor_ = MsgMagicAttackCSC_descriptor_->nested_type(0);
  static const int MsgMagicAttackCSC_stpTarget_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC_stpTarget, targettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC_stpTarget, targetid_),
  };
  MsgMagicAttackCSC_stpTarget_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicAttackCSC_stpTarget_descriptor_,
      MsgMagicAttackCSC_stpTarget::default_instance_,
      MsgMagicAttackCSC_stpTarget_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC_stpTarget, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackCSC_stpTarget, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicAttackCSC_stpTarget));
  MsgMagicAttackFailedS2C_descriptor_ = file->message_type(22);
  static const int MsgMagicAttackFailedS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackFailedS2C, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackFailedS2C, failed_),
  };
  MsgMagicAttackFailedS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicAttackFailedS2C_descriptor_,
      MsgMagicAttackFailedS2C::default_instance_,
      MsgMagicAttackFailedS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackFailedS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackFailedS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicAttackFailedS2C));
  MsgMagicAttackResS2C_descriptor_ = file->message_type(23);
  static const int MsgMagicAttackResS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackResS2C, srcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackResS2C, srctype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackResS2C, desid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackResS2C, destype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackResS2C, attacktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackResS2C, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackResS2C, skillid_),
  };
  MsgMagicAttackResS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicAttackResS2C_descriptor_,
      MsgMagicAttackResS2C::default_instance_,
      MsgMagicAttackResS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackResS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicAttackResS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicAttackResS2C));
  MsgMagicTargetDeathS2C_descriptor_ = file->message_type(24);
  static const int MsgMagicTargetDeathS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicTargetDeathS2C, id_),
  };
  MsgMagicTargetDeathS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicTargetDeathS2C_descriptor_,
      MsgMagicTargetDeathS2C::default_instance_,
      MsgMagicTargetDeathS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicTargetDeathS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicTargetDeathS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicTargetDeathS2C));
  MsgTipsS2C_descriptor_ = file->message_type(25);
  static const int MsgTipsS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTipsS2C, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTipsS2C, tips_),
  };
  MsgTipsS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgTipsS2C_descriptor_,
      MsgTipsS2C::default_instance_,
      MsgTipsS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTipsS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTipsS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgTipsS2C));
  MsgRebornC2S_descriptor_ = file->message_type(26);
  static const int MsgRebornC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRebornC2S, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRebornC2S, costtype_),
  };
  MsgRebornC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgRebornC2S_descriptor_,
      MsgRebornC2S::default_instance_,
      MsgRebornC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRebornC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRebornC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgRebornC2S));
  MsgNotifyRebornS2C_descriptor_ = file->message_type(27);
  static const int MsgNotifyRebornS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNotifyRebornS2C, targetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNotifyRebornS2C, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNotifyRebornS2C, y_),
  };
  MsgNotifyRebornS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNotifyRebornS2C_descriptor_,
      MsgNotifyRebornS2C::default_instance_,
      MsgNotifyRebornS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNotifyRebornS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNotifyRebornS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNotifyRebornS2C));
  MsgNotifyBeAttackS2C_descriptor_ = file->message_type(28);
  static const int MsgNotifyBeAttackS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNotifyBeAttackS2C, targetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNotifyBeAttackS2C, targettype_),
  };
  MsgNotifyBeAttackS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNotifyBeAttackS2C_descriptor_,
      MsgNotifyBeAttackS2C::default_instance_,
      MsgNotifyBeAttackS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNotifyBeAttackS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNotifyBeAttackS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNotifyBeAttackS2C));
  MessageSendUserItemToClientS2C_descriptor_ = file->message_type(29);
  static const int MessageSendUserItemToClientS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSendUserItemToClientS2C, items_),
  };
  MessageSendUserItemToClientS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageSendUserItemToClientS2C_descriptor_,
      MessageSendUserItemToClientS2C::default_instance_,
      MessageSendUserItemToClientS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSendUserItemToClientS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSendUserItemToClientS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageSendUserItemToClientS2C));
  MessageSendChangeEquipS2C_descriptor_ = file->message_type(30);
  static const int MessageSendChangeEquipS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSendChangeEquipS2C, data_),
  };
  MessageSendChangeEquipS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageSendChangeEquipS2C_descriptor_,
      MessageSendChangeEquipS2C::default_instance_,
      MessageSendChangeEquipS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSendChangeEquipS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSendChangeEquipS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageSendChangeEquipS2C));
  MessageChangeEquipSaveC2S_descriptor_ = file->message_type(31);
  static const int MessageChangeEquipSaveC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageChangeEquipSaveC2S, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageChangeEquipSaveC2S, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageChangeEquipSaveC2S, acckeyid_),
  };
  MessageChangeEquipSaveC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageChangeEquipSaveC2S_descriptor_,
      MessageChangeEquipSaveC2S::default_instance_,
      MessageChangeEquipSaveC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageChangeEquipSaveC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageChangeEquipSaveC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageChangeEquipSaveC2S));
  MsgExtendBagC2S_descriptor_ = file->message_type(32);
  static const int MsgExtendBagC2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExtendBagC2S, pos_),
  };
  MsgExtendBagC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgExtendBagC2S_descriptor_,
      MsgExtendBagC2S::default_instance_,
      MsgExtendBagC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExtendBagC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgExtendBagC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgExtendBagC2S));
  MessageStObjectUserApplyC2S_descriptor_ = file->message_type(33);
  static const int MessageStObjectUserApplyC2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyC2S, tempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyC2S, desid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyC2S, destype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyC2S, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyC2S, y_),
  };
  MessageStObjectUserApplyC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageStObjectUserApplyC2S_descriptor_,
      MessageStObjectUserApplyC2S::default_instance_,
      MessageStObjectUserApplyC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageStObjectUserApplyC2S));
  MessageStObjectUserApplyOkS2C_descriptor_ = file->message_type(34);
  static const int MessageStObjectUserApplyOkS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyOkS2C, baseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyOkS2C, thisid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyOkS2C, fail_),
  };
  MessageStObjectUserApplyOkS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageStObjectUserApplyOkS2C_descriptor_,
      MessageStObjectUserApplyOkS2C::default_instance_,
      MessageStObjectUserApplyOkS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyOkS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStObjectUserApplyOkS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageStObjectUserApplyOkS2C));
  MsgObjectItemMoveS2C_descriptor_ = file->message_type(35);
  static const int MsgObjectItemMoveS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectItemMoveS2C, objs_),
  };
  MsgObjectItemMoveS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectItemMoveS2C_descriptor_,
      MsgObjectItemMoveS2C::default_instance_,
      MsgObjectItemMoveS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectItemMoveS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectItemMoveS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectItemMoveS2C));
  MsgObjectExchangeBatchS2C_descriptor_ = file->message_type(36);
  static const int MsgObjectExchangeBatchS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectExchangeBatchS2C, en_),
  };
  MsgObjectExchangeBatchS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectExchangeBatchS2C_descriptor_,
      MsgObjectExchangeBatchS2C::default_instance_,
      MsgObjectExchangeBatchS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectExchangeBatchS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectExchangeBatchS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectExchangeBatchS2C));
  MsgObjectExchangeBatchS2C_exchangeNode_descriptor_ = MsgObjectExchangeBatchS2C_descriptor_->nested_type(0);
  static const int MsgObjectExchangeBatchS2C_exchangeNode_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectExchangeBatchS2C_exchangeNode, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectExchangeBatchS2C_exchangeNode, dest_),
  };
  MsgObjectExchangeBatchS2C_exchangeNode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgObjectExchangeBatchS2C_exchangeNode_descriptor_,
      MsgObjectExchangeBatchS2C_exchangeNode::default_instance_,
      MsgObjectExchangeBatchS2C_exchangeNode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectExchangeBatchS2C_exchangeNode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgObjectExchangeBatchS2C_exchangeNode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgObjectExchangeBatchS2C_exchangeNode));
  MsgDataMoneyRefreshS2C_descriptor_ = file->message_type(37);
  static const int MsgDataMoneyRefreshS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDataMoneyRefreshS2C, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDataMoneyRefreshS2C, value_),
  };
  MsgDataMoneyRefreshS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDataMoneyRefreshS2C_descriptor_,
      MsgDataMoneyRefreshS2C::default_instance_,
      MsgDataMoneyRefreshS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDataMoneyRefreshS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDataMoneyRefreshS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDataMoneyRefreshS2C));
  MsgFreshSkillS2C_descriptor_ = file->message_type(38);
  static const int MsgFreshSkillS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFreshSkillS2C, skills_),
  };
  MsgFreshSkillS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgFreshSkillS2C_descriptor_,
      MsgFreshSkillS2C::default_instance_,
      MsgFreshSkillS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFreshSkillS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFreshSkillS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgFreshSkillS2C));
  MsgFreshSkillS2C_Skill_descriptor_ = MsgFreshSkillS2C_descriptor_->nested_type(0);
  static const int MsgFreshSkillS2C_Skill_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFreshSkillS2C_Skill, skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFreshSkillS2C_Skill, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFreshSkillS2C_Skill, appendlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFreshSkillS2C_Skill, levelup_),
  };
  MsgFreshSkillS2C_Skill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgFreshSkillS2C_Skill_descriptor_,
      MsgFreshSkillS2C_Skill::default_instance_,
      MsgFreshSkillS2C_Skill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFreshSkillS2C_Skill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFreshSkillS2C_Skill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgFreshSkillS2C_Skill));
  MsgRefreshHpMpS2C_descriptor_ = file->message_type(39);
  static const int MsgRefreshHpMpS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRefreshHpMpS2C, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRefreshHpMpS2C, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRefreshHpMpS2C, maxhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRefreshHpMpS2C, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRefreshHpMpS2C, maxmp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRefreshHpMpS2C, mp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRefreshHpMpS2C, select_),
  };
  MsgRefreshHpMpS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgRefreshHpMpS2C_descriptor_,
      MsgRefreshHpMpS2C::default_instance_,
      MsgRefreshHpMpS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRefreshHpMpS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRefreshHpMpS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgRefreshHpMpS2C));
  FMsgVisitNpcC2S_descriptor_ = file->message_type(40);
  static const int FMsgVisitNpcC2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgVisitNpcC2S, npcid_),
  };
  FMsgVisitNpcC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FMsgVisitNpcC2S_descriptor_,
      FMsgVisitNpcC2S::default_instance_,
      FMsgVisitNpcC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgVisitNpcC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgVisitNpcC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FMsgVisitNpcC2S));
  FMsgResponseDialogS2C_descriptor_ = file->message_type(41);
  static const int FMsgResponseDialogS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgResponseDialogS2C, npc_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgResponseDialogS2C, npc_tmpid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgResponseDialogS2C, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgResponseDialogS2C, acceptquest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgResponseDialogS2C, completequest_),
  };
  FMsgResponseDialogS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FMsgResponseDialogS2C_descriptor_,
      FMsgResponseDialogS2C::default_instance_,
      FMsgResponseDialogS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgResponseDialogS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgResponseDialogS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FMsgResponseDialogS2C));
  FMsgDialogFunctionAckC2S_descriptor_ = file->message_type(42);
  static const int FMsgDialogFunctionAckC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgDialogFunctionAckC2S, npc_tmpid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgDialogFunctionAckC2S, function_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgDialogFunctionAckC2S, input_str_),
  };
  FMsgDialogFunctionAckC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FMsgDialogFunctionAckC2S_descriptor_,
      FMsgDialogFunctionAckC2S::default_instance_,
      FMsgDialogFunctionAckC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgDialogFunctionAckC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgDialogFunctionAckC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FMsgDialogFunctionAckC2S));
  MessageVisitNpcS2C_descriptor_ = file->message_type(43);
  static const int MessageVisitNpcS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageVisitNpcS2C, npcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageVisitNpcS2C, acceptquest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageVisitNpcS2C, completequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageVisitNpcS2C, npcfunc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageVisitNpcS2C, dlgparalist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageVisitNpcS2C, dlgdesc_),
  };
  MessageVisitNpcS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageVisitNpcS2C_descriptor_,
      MessageVisitNpcS2C::default_instance_,
      MessageVisitNpcS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageVisitNpcS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageVisitNpcS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageVisitNpcS2C));
  FMsgAcceptQuestC2S_descriptor_ = file->message_type(44);
  static const int FMsgAcceptQuestC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgAcceptQuestC2S, questid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgAcceptQuestC2S, npcid_),
  };
  FMsgAcceptQuestC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FMsgAcceptQuestC2S_descriptor_,
      FMsgAcceptQuestC2S::default_instance_,
      FMsgAcceptQuestC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgAcceptQuestC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgAcceptQuestC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FMsgAcceptQuestC2S));
  FMsgCompleteQuestC2S_descriptor_ = file->message_type(45);
  static const int FMsgCompleteQuestC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgCompleteQuestC2S, questid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgCompleteQuestC2S, npctempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgCompleteQuestC2S, optionitembaseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgCompleteQuestC2S, commititemid_),
  };
  FMsgCompleteQuestC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FMsgCompleteQuestC2S_descriptor_,
      FMsgCompleteQuestC2S::default_instance_,
      FMsgCompleteQuestC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgCompleteQuestC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgCompleteQuestC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FMsgCompleteQuestC2S));
  FMsgQuestDataS2C_descriptor_ = file->message_type(46);
  static const int FMsgQuestDataS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgQuestDataS2C, questid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgQuestDataS2C, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgQuestDataS2C, vars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgQuestDataS2C, accepttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgQuestDataS2C, completesubnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgQuestDataS2C, subquestid_),
  };
  FMsgQuestDataS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FMsgQuestDataS2C_descriptor_,
      FMsgQuestDataS2C::default_instance_,
      FMsgQuestDataS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgQuestDataS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgQuestDataS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FMsgQuestDataS2C));
  FMsgMyQuestsDataS2C_descriptor_ = file->message_type(47);
  static const int FMsgMyQuestsDataS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgMyQuestsDataS2C, questsdata_),
  };
  FMsgMyQuestsDataS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FMsgMyQuestsDataS2C_descriptor_,
      FMsgMyQuestsDataS2C::default_instance_,
      FMsgMyQuestsDataS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgMyQuestsDataS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgMyQuestsDataS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FMsgMyQuestsDataS2C));
  FMsgMyQuestsCanComitS2C_descriptor_ = file->message_type(48);
  static const int FMsgMyQuestsCanComitS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgMyQuestsCanComitS2C, questid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgMyQuestsCanComitS2C, npcid_),
  };
  FMsgMyQuestsCanComitS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FMsgMyQuestsCanComitS2C_descriptor_,
      FMsgMyQuestsCanComitS2C::default_instance_,
      FMsgMyQuestsCanComitS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgMyQuestsCanComitS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgMyQuestsCanComitS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FMsgMyQuestsCanComitS2C));
  MovePos_descriptor_ = file->message_type(49);
  static const int MovePos_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MovePos, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MovePos, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MovePos, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MovePos, time_),
  };
  MovePos_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MovePos_descriptor_,
      MovePos::default_instance_,
      MovePos_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MovePos, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MovePos, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MovePos));
  MsgCharacterMoveS8C_descriptor_ = file->message_type(50);
  static const int MsgCharacterMoveS8C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveS8C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveS8C, objtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveS8C, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveS8C, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveS8C, gatetimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveS8C, stop_),
  };
  MsgCharacterMoveS8C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgCharacterMoveS8C_descriptor_,
      MsgCharacterMoveS8C::default_instance_,
      MsgCharacterMoveS8C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveS8C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveS8C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgCharacterMoveS8C));
  FMsgPropertyStateS2C_descriptor_ = file->message_type(51);
  static const int FMsgPropertyStateS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgPropertyStateS2C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgPropertyStateS2C, ownerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgPropertyStateS2C, ownertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgPropertyStateS2C, allstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgPropertyStateS2C, levelchange_),
  };
  FMsgPropertyStateS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FMsgPropertyStateS2C_descriptor_,
      FMsgPropertyStateS2C::default_instance_,
      FMsgPropertyStateS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgPropertyStateS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FMsgPropertyStateS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FMsgPropertyStateS2C));
  MessageMapScreenRefreshCharacterS2C_descriptor_ = file->message_type(52);
  static const int MessageMapScreenRefreshCharacterS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenRefreshCharacterS2C, forcerefresh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenRefreshCharacterS2C, data_),
  };
  MessageMapScreenRefreshCharacterS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageMapScreenRefreshCharacterS2C_descriptor_,
      MessageMapScreenRefreshCharacterS2C::default_instance_,
      MessageMapScreenRefreshCharacterS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenRefreshCharacterS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenRefreshCharacterS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageMapScreenRefreshCharacterS2C));
  MsgCharacterMoveFailS2C_descriptor_ = file->message_type(53);
  static const int MsgCharacterMoveFailS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveFailS2C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveFailS2C, objtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveFailS2C, blockpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveFailS2C, serverpos_),
  };
  MsgCharacterMoveFailS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgCharacterMoveFailS2C_descriptor_,
      MsgCharacterMoveFailS2C::default_instance_,
      MsgCharacterMoveFailS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveFailS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCharacterMoveFailS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgCharacterMoveFailS2C));
  MessageMapScreenNineScreenRefreshNpcS2C_descriptor_ = file->message_type(54);
  static const int MessageMapScreenNineScreenRefreshNpcS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenNineScreenRefreshNpcS2C, firstclear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenNineScreenRefreshNpcS2C, data_),
  };
  MessageMapScreenNineScreenRefreshNpcS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageMapScreenNineScreenRefreshNpcS2C_descriptor_,
      MessageMapScreenNineScreenRefreshNpcS2C::default_instance_,
      MessageMapScreenNineScreenRefreshNpcS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenNineScreenRefreshNpcS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenNineScreenRefreshNpcS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageMapScreenNineScreenRefreshNpcS2C));
  MessageNineScreenRefreshPlayerS2C_descriptor_ = file->message_type(55);
  static const int MessageNineScreenRefreshPlayerS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNineScreenRefreshPlayerS2C, firstclear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNineScreenRefreshPlayerS2C, data_),
  };
  MessageNineScreenRefreshPlayerS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageNineScreenRefreshPlayerS2C_descriptor_,
      MessageNineScreenRefreshPlayerS2C::default_instance_,
      MessageNineScreenRefreshPlayerS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNineScreenRefreshPlayerS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNineScreenRefreshPlayerS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageNineScreenRefreshPlayerS2C));
  MessageMapScreenNineScreenRefreshDeathNpcS2C_descriptor_ = file->message_type(56);
  static const int MessageMapScreenNineScreenRefreshDeathNpcS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenNineScreenRefreshDeathNpcS2C, data_),
  };
  MessageMapScreenNineScreenRefreshDeathNpcS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageMapScreenNineScreenRefreshDeathNpcS2C_descriptor_,
      MessageMapScreenNineScreenRefreshDeathNpcS2C::default_instance_,
      MessageMapScreenNineScreenRefreshDeathNpcS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenNineScreenRefreshDeathNpcS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenNineScreenRefreshDeathNpcS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageMapScreenNineScreenRefreshDeathNpcS2C));
  MessageMapScreenSummonNpcS2C_descriptor_ = file->message_type(57);
  static const int MessageMapScreenSummonNpcS2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenSummonNpcS2C, data_),
  };
  MessageMapScreenSummonNpcS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageMapScreenSummonNpcS2C_descriptor_,
      MessageMapScreenSummonNpcS2C::default_instance_,
      MessageMapScreenSummonNpcS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenSummonNpcS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageMapScreenSummonNpcS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageMapScreenSummonNpcS2C));
  OrderCell_descriptor_ = file->message_type(58);
  static const int OrderCell_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderCell, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderCell, str_),
  };
  OrderCell_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderCell_descriptor_,
      OrderCell::default_instance_,
      OrderCell_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderCell, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderCell, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderCell));
  OrderLine_descriptor_ = file->message_type(59);
  static const int OrderLine_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderLine, cell_),
  };
  OrderLine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderLine_descriptor_,
      OrderLine::default_instance_,
      OrderLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderLine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderLine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderLine));
  MessageOrderDataS2C_descriptor_ = file->message_type(60);
  static const int MessageOrderDataS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOrderDataS2C, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOrderDataS2C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOrderDataS2C, mydata_),
  };
  MessageOrderDataS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageOrderDataS2C_descriptor_,
      MessageOrderDataS2C::default_instance_,
      MessageOrderDataS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOrderDataS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOrderDataS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageOrderDataS2C));
  MessageOrderRequestC2S_descriptor_ = file->message_type(61);
  static const int MessageOrderRequestC2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOrderRequestC2S, orderid_),
  };
  MessageOrderRequestC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageOrderRequestC2S_descriptor_,
      MessageOrderRequestC2S::default_instance_,
      MessageOrderRequestC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOrderRequestC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOrderRequestC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageOrderRequestC2S));
  MsgProgressBarS2C_descriptor_ = file->message_type(62);
  static const int MsgProgressBarS2C_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, barid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, ownerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, desid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, destype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, desx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, desy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, targetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, targettype_),
  };
  MsgProgressBarS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProgressBarS2C_descriptor_,
      MsgProgressBarS2C::default_instance_,
      MsgProgressBarS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProgressBarS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProgressBarS2C));
  MsgProgressBarS2C_State_descriptor_ = MsgProgressBarS2C_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_fclientmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLoginVerifyC2S_descriptor_, &MsgLoginVerifyC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgReturnS2C_descriptor_, &MsgReturnS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLoginResGatewayInfoS2C_descriptor_, &MsgLoginResGatewayInfoS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBindAccountC2S_descriptor_, &MsgBindAccountC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBindAccountS2C_descriptor_, &MsgBindAccountS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLoginGameVerifyAccountC2S_descriptor_, &MsgLoginGameVerifyAccountC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgTimeGameTimer_descriptor_, &MsgTimeGameTimer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLoginGameResS2C_descriptor_, &MsgLoginGameResS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgCreateCharC2S_descriptor_, &MsgCreateCharC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgRquestEnterGameC2S_descriptor_, &MsgRquestEnterGameC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgEnterGameResS2C_descriptor_, &MsgEnterGameResS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMainDataS2C_descriptor_, &MsgMainDataS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgTimeSyncS2C_descriptor_, &MsgTimeSyncS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUpdateResS2C_descriptor_, &MsgUpdateResS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgChatSystemS2C_descriptor_, &MsgChatSystemS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMapScreenRemoveCharS2C_descriptor_, &MsgMapScreenRemoveCharS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMapScreenBatchRemoveCharS2C_descriptor_, &MsgMapScreenBatchRemoveCharS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMapScreenRemoveNpcS2C_descriptor_, &MsgMapScreenRemoveNpcS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMapScreenBatchRemoveNpcS2C_descriptor_, &MsgMapScreenBatchRemoveNpcS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMapScreenDeathNpcS2C_descriptor_, &MsgMapScreenDeathNpcS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgGMCommandC2S_descriptor_, &MsgGMCommandC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicAttackCSC_descriptor_, &MsgMagicAttackCSC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicAttackCSC_stpTarget_descriptor_, &MsgMagicAttackCSC_stpTarget::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicAttackFailedS2C_descriptor_, &MsgMagicAttackFailedS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicAttackResS2C_descriptor_, &MsgMagicAttackResS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicTargetDeathS2C_descriptor_, &MsgMagicTargetDeathS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgTipsS2C_descriptor_, &MsgTipsS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgRebornC2S_descriptor_, &MsgRebornC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNotifyRebornS2C_descriptor_, &MsgNotifyRebornS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNotifyBeAttackS2C_descriptor_, &MsgNotifyBeAttackS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageSendUserItemToClientS2C_descriptor_, &MessageSendUserItemToClientS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageSendChangeEquipS2C_descriptor_, &MessageSendChangeEquipS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageChangeEquipSaveC2S_descriptor_, &MessageChangeEquipSaveC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgExtendBagC2S_descriptor_, &MsgExtendBagC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageStObjectUserApplyC2S_descriptor_, &MessageStObjectUserApplyC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageStObjectUserApplyOkS2C_descriptor_, &MessageStObjectUserApplyOkS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectItemMoveS2C_descriptor_, &MsgObjectItemMoveS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectExchangeBatchS2C_descriptor_, &MsgObjectExchangeBatchS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgObjectExchangeBatchS2C_exchangeNode_descriptor_, &MsgObjectExchangeBatchS2C_exchangeNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDataMoneyRefreshS2C_descriptor_, &MsgDataMoneyRefreshS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgFreshSkillS2C_descriptor_, &MsgFreshSkillS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgFreshSkillS2C_Skill_descriptor_, &MsgFreshSkillS2C_Skill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgRefreshHpMpS2C_descriptor_, &MsgRefreshHpMpS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FMsgVisitNpcC2S_descriptor_, &FMsgVisitNpcC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FMsgResponseDialogS2C_descriptor_, &FMsgResponseDialogS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FMsgDialogFunctionAckC2S_descriptor_, &FMsgDialogFunctionAckC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageVisitNpcS2C_descriptor_, &MessageVisitNpcS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FMsgAcceptQuestC2S_descriptor_, &FMsgAcceptQuestC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FMsgCompleteQuestC2S_descriptor_, &FMsgCompleteQuestC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FMsgQuestDataS2C_descriptor_, &FMsgQuestDataS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FMsgMyQuestsDataS2C_descriptor_, &FMsgMyQuestsDataS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FMsgMyQuestsCanComitS2C_descriptor_, &FMsgMyQuestsCanComitS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MovePos_descriptor_, &MovePos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgCharacterMoveS8C_descriptor_, &MsgCharacterMoveS8C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FMsgPropertyStateS2C_descriptor_, &FMsgPropertyStateS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageMapScreenRefreshCharacterS2C_descriptor_, &MessageMapScreenRefreshCharacterS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgCharacterMoveFailS2C_descriptor_, &MsgCharacterMoveFailS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageMapScreenNineScreenRefreshNpcS2C_descriptor_, &MessageMapScreenNineScreenRefreshNpcS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageNineScreenRefreshPlayerS2C_descriptor_, &MessageNineScreenRefreshPlayerS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageMapScreenNineScreenRefreshDeathNpcS2C_descriptor_, &MessageMapScreenNineScreenRefreshDeathNpcS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageMapScreenSummonNpcS2C_descriptor_, &MessageMapScreenSummonNpcS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderCell_descriptor_, &OrderCell::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderLine_descriptor_, &OrderLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageOrderDataS2C_descriptor_, &MessageOrderDataS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageOrderRequestC2S_descriptor_, &MessageOrderRequestC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProgressBarS2C_descriptor_, &MsgProgressBarS2C::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_fclientmsg_2eproto() {
  delete MsgLoginVerifyC2S::default_instance_;
  delete MsgLoginVerifyC2S_reflection_;
  delete MsgReturnS2C::default_instance_;
  delete MsgReturnS2C_reflection_;
  delete MsgLoginResGatewayInfoS2C::default_instance_;
  delete MsgLoginResGatewayInfoS2C_reflection_;
  delete MsgBindAccountC2S::default_instance_;
  delete MsgBindAccountC2S_reflection_;
  delete MsgBindAccountS2C::default_instance_;
  delete MsgBindAccountS2C_reflection_;
  delete MsgLoginGameVerifyAccountC2S::default_instance_;
  delete MsgLoginGameVerifyAccountC2S_reflection_;
  delete MsgTimeGameTimer::default_instance_;
  delete MsgTimeGameTimer_reflection_;
  delete MsgLoginGameResS2C::default_instance_;
  delete MsgLoginGameResS2C_reflection_;
  delete MsgCreateCharC2S::default_instance_;
  delete MsgCreateCharC2S_reflection_;
  delete MsgRquestEnterGameC2S::default_instance_;
  delete MsgRquestEnterGameC2S_reflection_;
  delete MsgEnterGameResS2C::default_instance_;
  delete MsgEnterGameResS2C_reflection_;
  delete MsgMainDataS2C::default_instance_;
  delete MsgMainDataS2C_reflection_;
  delete MsgTimeSyncS2C::default_instance_;
  delete MsgTimeSyncS2C_reflection_;
  delete MsgUpdateResS2C::default_instance_;
  delete MsgUpdateResS2C_reflection_;
  delete MsgChatSystemS2C::default_instance_;
  delete MsgChatSystemS2C_reflection_;
  delete MsgMapScreenRemoveCharS2C::default_instance_;
  delete MsgMapScreenRemoveCharS2C_reflection_;
  delete MsgMapScreenBatchRemoveCharS2C::default_instance_;
  delete MsgMapScreenBatchRemoveCharS2C_reflection_;
  delete MsgMapScreenRemoveNpcS2C::default_instance_;
  delete MsgMapScreenRemoveNpcS2C_reflection_;
  delete MsgMapScreenBatchRemoveNpcS2C::default_instance_;
  delete MsgMapScreenBatchRemoveNpcS2C_reflection_;
  delete MsgMapScreenDeathNpcS2C::default_instance_;
  delete MsgMapScreenDeathNpcS2C_reflection_;
  delete MsgGMCommandC2S::default_instance_;
  delete MsgGMCommandC2S_reflection_;
  delete MsgMagicAttackCSC::default_instance_;
  delete MsgMagicAttackCSC_reflection_;
  delete MsgMagicAttackCSC_stpTarget::default_instance_;
  delete MsgMagicAttackCSC_stpTarget_reflection_;
  delete MsgMagicAttackFailedS2C::default_instance_;
  delete MsgMagicAttackFailedS2C_reflection_;
  delete MsgMagicAttackResS2C::default_instance_;
  delete MsgMagicAttackResS2C_reflection_;
  delete MsgMagicTargetDeathS2C::default_instance_;
  delete MsgMagicTargetDeathS2C_reflection_;
  delete MsgTipsS2C::default_instance_;
  delete MsgTipsS2C_reflection_;
  delete MsgRebornC2S::default_instance_;
  delete MsgRebornC2S_reflection_;
  delete MsgNotifyRebornS2C::default_instance_;
  delete MsgNotifyRebornS2C_reflection_;
  delete MsgNotifyBeAttackS2C::default_instance_;
  delete MsgNotifyBeAttackS2C_reflection_;
  delete MessageSendUserItemToClientS2C::default_instance_;
  delete MessageSendUserItemToClientS2C_reflection_;
  delete MessageSendChangeEquipS2C::default_instance_;
  delete MessageSendChangeEquipS2C_reflection_;
  delete MessageChangeEquipSaveC2S::default_instance_;
  delete MessageChangeEquipSaveC2S_reflection_;
  delete MsgExtendBagC2S::default_instance_;
  delete MsgExtendBagC2S_reflection_;
  delete MessageStObjectUserApplyC2S::default_instance_;
  delete MessageStObjectUserApplyC2S_reflection_;
  delete MessageStObjectUserApplyOkS2C::default_instance_;
  delete MessageStObjectUserApplyOkS2C_reflection_;
  delete MsgObjectItemMoveS2C::default_instance_;
  delete MsgObjectItemMoveS2C_reflection_;
  delete MsgObjectExchangeBatchS2C::default_instance_;
  delete MsgObjectExchangeBatchS2C_reflection_;
  delete MsgObjectExchangeBatchS2C_exchangeNode::default_instance_;
  delete MsgObjectExchangeBatchS2C_exchangeNode_reflection_;
  delete MsgDataMoneyRefreshS2C::default_instance_;
  delete MsgDataMoneyRefreshS2C_reflection_;
  delete MsgFreshSkillS2C::default_instance_;
  delete MsgFreshSkillS2C_reflection_;
  delete MsgFreshSkillS2C_Skill::default_instance_;
  delete MsgFreshSkillS2C_Skill_reflection_;
  delete MsgRefreshHpMpS2C::default_instance_;
  delete MsgRefreshHpMpS2C_reflection_;
  delete FMsgVisitNpcC2S::default_instance_;
  delete FMsgVisitNpcC2S_reflection_;
  delete FMsgResponseDialogS2C::default_instance_;
  delete FMsgResponseDialogS2C_reflection_;
  delete FMsgDialogFunctionAckC2S::default_instance_;
  delete FMsgDialogFunctionAckC2S_reflection_;
  delete MessageVisitNpcS2C::default_instance_;
  delete MessageVisitNpcS2C_reflection_;
  delete FMsgAcceptQuestC2S::default_instance_;
  delete FMsgAcceptQuestC2S_reflection_;
  delete FMsgCompleteQuestC2S::default_instance_;
  delete FMsgCompleteQuestC2S_reflection_;
  delete FMsgQuestDataS2C::default_instance_;
  delete FMsgQuestDataS2C_reflection_;
  delete FMsgMyQuestsDataS2C::default_instance_;
  delete FMsgMyQuestsDataS2C_reflection_;
  delete FMsgMyQuestsCanComitS2C::default_instance_;
  delete FMsgMyQuestsCanComitS2C_reflection_;
  delete MovePos::default_instance_;
  delete MovePos_reflection_;
  delete MsgCharacterMoveS8C::default_instance_;
  delete MsgCharacterMoveS8C_reflection_;
  delete FMsgPropertyStateS2C::default_instance_;
  delete FMsgPropertyStateS2C_reflection_;
  delete MessageMapScreenRefreshCharacterS2C::default_instance_;
  delete MessageMapScreenRefreshCharacterS2C_reflection_;
  delete MsgCharacterMoveFailS2C::default_instance_;
  delete MsgCharacterMoveFailS2C_reflection_;
  delete MessageMapScreenNineScreenRefreshNpcS2C::default_instance_;
  delete MessageMapScreenNineScreenRefreshNpcS2C_reflection_;
  delete MessageNineScreenRefreshPlayerS2C::default_instance_;
  delete MessageNineScreenRefreshPlayerS2C_reflection_;
  delete MessageMapScreenNineScreenRefreshDeathNpcS2C::default_instance_;
  delete MessageMapScreenNineScreenRefreshDeathNpcS2C_reflection_;
  delete MessageMapScreenSummonNpcS2C::default_instance_;
  delete MessageMapScreenSummonNpcS2C_reflection_;
  delete OrderCell::default_instance_;
  delete OrderCell_reflection_;
  delete OrderLine::default_instance_;
  delete OrderLine_reflection_;
  delete MessageOrderDataS2C::default_instance_;
  delete MessageOrderDataS2C_reflection_;
  delete MessageOrderRequestC2S::default_instance_;
  delete MessageOrderRequestC2S_reflection_;
  delete MsgProgressBarS2C::default_instance_;
  delete MsgProgressBarS2C_reflection_;
}

void protobuf_AddDesc_fclientmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020fclientmsg.proto\022\014FProtoClient\032\014common"
    ".proto\"\204\001\n\021MsgLoginVerifyC2S\022\017\n\007account\030"
    "\001 \001(\t\022\017\n\007version\030\002 \001(\t\022\016\n\006zoneid\030\003 \001(\r\022\020"
    "\n\010gatetype\030\004 \001(\r\022\016\n\006passwd\030\005 \001(\t\022\014\n\004time"
    "\030\006 \001(\r\022\r\n\005accid\030\007 \001(\r\"\?\n\014MsgReturnS2C\022/\n"
    "\003res\030\001 \001(\0162\016.empLoginError:\022empLoginErro"
    "r_None\"g\n\031MsgLoginResGatewayInfoS2C\022\r\n\005a"
    "ccid\030\001 \001(\r\022\023\n\013loginpasswd\030\002 \001(\r\022\n\n\002ip\030\003 "
    "\001(\t\022\014\n\004port\030\004 \001(\r\022\014\n\004ipv4\030\005 \001(\t\"P\n\021MsgBi"
    "ndAccountC2S\022\016\n\006passwd\030\001 \001(\t\022\014\n\004time\030\002 \001"
    "(\r\022\r\n\005accid\030\003 \001(\r\022\016\n\006charID\030\004 \001(\r\"$\n\021Msg"
    "BindAccountS2C\022\017\n\007success\030\001 \001(\r\"T\n\034MsgLo"
    "ginGameVerifyAccountC2S\022\r\n\005accid\030\001 \001(\r\022\023"
    "\n\013loginpasswd\030\002 \001(\r\022\020\n\010flattype\030\003 \001(\r\"$\n"
    "\020MsgTimeGameTimer\022\020\n\010gametime\030\001 \001(\004\"2\n\022M"
    "sgLoginGameResS2C\022\016\n\006charid\030\001 \001(\r\022\014\n\004nam"
    "e\030\002 \001(\t\"\?\n\020MsgCreateCharC2S\022\014\n\004name\030\001 \001("
    "\t\022\017\n\007country\030\002 \001(\r\022\014\n\004club\030\003 \001(\r\"\027\n\025MsgR"
    "questEnterGameC2S\"\024\n\022MsgEnterGameResS2C\""
    "\313\002\n\016MsgMainDataS2C\022\014\n\004face\030\001 \001(\r\022\016\n\006char"
    "id\030\002 \001(\r\022\r\n\005level\030\003 \001(\r\022\014\n\004name\030\004 \001(\t\022\013\n"
    "\003exp\030\006 \001(\004\022\020\n\010fcountry\030\013 \001(\r\022\023\n\013newbiegu"
    "ide\030\014 \003(\r\022\020\n\010viplevel\030\r \001(\r\022\r\n\005accid\030\016 \001"
    "(\r\022\t\n\001x\030\017 \001(\r\022\t\n\001y\030\020 \001(\r\022\t\n\001z\030\021 \001(\r\022\013\n\003m"
    "ap\030\022 \001(\r\022\013\n\003dir\030\023 \001(\r\022\014\n\004mapw\030\024 \001(\r\022\014\n\004m"
    "aph\030\025 \001(\r\022\r\n\005speed\030\026 \001(\r\022\r\n\005login\030\027 \001(\010\022"
    "\n\n\002mp\030\030 \001(\r\022\r\n\005maxmp\030\031 \001(\r\022\n\n\002hp\030\032 \001(\r\022\r"
    "\n\005maxhp\030\033 \001(\r\"6\n\016MsgTimeSyncS2C\022\022\n\nserve"
    "rtime\030\001 \001(\r\022\020\n\010timezone\030\002 \001(\005\",\n\017MsgUpda"
    "teResS2C\022\014\n\004type\030\001 \001(\r\022\013\n\003num\030\002 \001(\004\"<\n\020M"
    "sgChatSystemS2C\022\014\n\004type\030\001 \001(\r\022\r\n\005color\030\002"
    " \001(\r\022\013\n\003msg\030\003 \001(\t\";\n\031MsgMapScreenRemoveC"
    "harS2C\022\016\n\006charid\030\001 \001(\r\022\016\n\006gohome\030\002 \001(\010\"0"
    "\n\036MsgMapScreenBatchRemoveCharS2C\022\016\n\006char"
    "id\030\001 \003(\r\"*\n\030MsgMapScreenRemoveNpcS2C\022\016\n\006"
    "tempid\030\001 \001(\r\".\n\035MsgMapScreenBatchRemoveN"
    "pcS2C\022\r\n\005npcid\030\001 \003(\r\"_\n\027MsgMapScreenDeat"
    "hNpcS2C\022\020\n\010targetid\030\001 \001(\r\022\013\n\003dir\030\002 \001(\r\022\025"
    "\n\rdisappeartime\030\003 \001(\r\022\016\n\006killer\030\004 \001(\r\"\036\n"
    "\017MsgGMCommandC2S\022\013\n\003str\030\001 \001(\t\"\200\002\n\021MsgMag"
    "icAttackCSC\022\017\n\007srctype\030\001 \001(\r\022\r\n\005srcid\030\002 "
    "\001(\r\022\017\n\007skillid\030\003 \001(\r\022\017\n\007destype\030\004 \001(\r\022\r\n"
    "\005desid\030\005 \001(\r\022\t\n\001x\030\006 \001(\r\022\t\n\001y\030\007 \001(\r\022\013\n\003di"
    "r\030\010 \001(\r\0229\n\006target\030\t \003(\0132).FProtoClient.M"
    "sgMagicAttackCSC.stpTarget\022\t\n\001z\030\n \001(\r\0321\n"
    "\tstpTarget\022\022\n\ntargettype\030\001 \001(\r\022\020\n\010target"
    "id\030\002 \001(\r\":\n\027MsgMagicAttackFailedS2C\022\017\n\007s"
    "killid\030\001 \001(\r\022\016\n\006failed\030\002 \001(\r\"\207\001\n\024MsgMagi"
    "cAttackResS2C\022\r\n\005srcid\030\001 \001(\r\022\017\n\007srctype\030"
    "\002 \001(\r\022\r\n\005desid\030\003 \001(\r\022\017\n\007destype\030\004 \001(\r\022\022\n"
    "\nattacktype\030\005 \001(\r\022\n\n\002hp\030\006 \001(\005\022\017\n\007skillid"
    "\030\007 \001(\r\"$\n\026MsgMagicTargetDeathS2C\022\n\n\002id\030\001"
    " \001(\r\"(\n\nMsgTipsS2C\022\014\n\004type\030\001 \001(\r\022\014\n\004tips"
    "\030\002 \001(\t\".\n\014MsgRebornC2S\022\014\n\004mode\030\001 \001(\r\022\020\n\010"
    "costtype\030\002 \001(\r\"<\n\022MsgNotifyRebornS2C\022\020\n\010"
    "targetid\030\001 \001(\r\022\t\n\001x\030\002 \001(\r\022\t\n\001y\030\003 \001(\r\"<\n\024"
    "MsgNotifyBeAttackS2C\022\020\n\010targetid\030\001 \001(\r\022\022"
    "\n\ntargettype\030\002 \001(\r\":\n\036MessageSendUserIte"
    "mToClientS2C\022\030\n\005items\030\001 \003(\0132\t.t_Object\"9"
    "\n\031MessageSendChangeEquipS2C\022\034\n\004data\030\001 \003("
    "\0132\016.stChangeEquip\"f\n\031MessageChangeEquipS"
    "aveC2S\022\r\n\005index\030\001 \001(\r\022\023\n\007equipID\030\002 \003(\rB\002"
    "\020\001\022%\n\010accKeyID\030\003 \003(\0132\023.ChangeEquipAccTyp"
    "e\"\036\n\017MsgExtendBagC2S\022\013\n\003pos\030\001 \001(\r\"c\n\033Mes"
    "sageStObjectUserApplyC2S\022\016\n\006tempid\030\001 \001(\r"
    "\022\r\n\005desId\030\002 \001(\r\022\017\n\007desType\030\003 \001(\r\022\t\n\001x\030\004 "
    "\001(\r\022\t\n\001y\030\005 \001(\r\"M\n\035MessageStObjectUserApp"
    "lyOkS2C\022\016\n\006baseid\030\001 \001(\r\022\016\n\006thisid\030\002 \001(\r\022"
    "\014\n\004fail\030\003 \001(\010\"4\n\024MsgObjectItemMoveS2C\022\034\n"
    "\004objs\030\001 \003(\0132\016.StpObjectNode\"\213\001\n\031MsgObjec"
    "tExchangeBatchS2C\022@\n\002en\030\002 \003(\01324.FProtoCl"
    "ient.MsgObjectExchangeBatchS2C.exchangeN"
    "ode\032,\n\014exchangeNode\022\016\n\006source\030\001 \001(\r\022\014\n\004d"
    "est\030\002 \001(\r\"5\n\026MsgDataMoneyRefreshS2C\022\014\n\004t"
    "ype\030\001 \001(\r\022\r\n\005value\030\002 \001(\r\"\225\001\n\020MsgFreshSki"
    "llS2C\0224\n\006skills\030\001 \003(\0132$.FProtoClient.Msg"
    "FreshSkillS2C.Skill\032K\n\005Skill\022\r\n\005skill\030\001 "
    "\001(\r\022\r\n\005level\030\002 \001(\r\022\023\n\013appendlevel\030\003 \001(\r\022"
    "\017\n\007levelup\030\004 \001(\010\"s\n\021MsgRefreshHpMpS2C\022\n\n"
    "\002id\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\022\r\n\005maxhp\030\003 \001(\r\022\n"
    "\n\002hp\030\004 \001(\r\022\r\n\005maxmp\030\005 \001(\r\022\n\n\002mp\030\006 \001(\r\022\016\n"
    "\006select\030\007 \001(\010\" \n\017FMsgVisitNpcC2S\022\r\n\005npci"
    "d\030\001 \001(\r\"x\n\025FMsgResponseDialogS2C\022\016\n\006npc_"
    "id\030\001 \001(\r\022\021\n\tnpc_tmpid\030\002 \001(\r\022\020\n\010function\030"
    "\003 \003(\r\022\023\n\013acceptquest\030\004 \003(\r\022\025\n\rcompletequ"
    "est\030\005 \003(\r\"U\n\030FMsgDialogFunctionAckC2S\022\021\n"
    "\tnpc_tmpid\030\001 \001(\r\022\023\n\013function_id\030\002 \001(\r\022\021\n"
    "\tinput_str\030\003 \001(\014\"\246\001\n\022MessageVisitNpcS2C\022"
    "\r\n\005npcid\030\001 \001(\r\022\023\n\013acceptquest\030\002 \003(\r\022\025\n\rc"
    "ompletequest\030\003 \003(\r\022!\n\007npcfunc\030\004 \003(\0132\020.FM"
    "sgNpcFunction\022!\n\013dlgparalist\030\005 \003(\0132\014.FNp"
    "cDlgPara\022\017\n\007dlgdesc\030\006 \001(\t\"4\n\022FMsgAcceptQ"
    "uestC2S\022\017\n\007questid\030\001 \001(\r\022\r\n\005npcid\030\002 \001(\r\""
    "j\n\024FMsgCompleteQuestC2S\022\017\n\007questid\030\001 \001(\r"
    "\022\021\n\tnpctempid\030\002 \001(\r\022\030\n\020optionitembaseid\030"
    "\003 \001(\r\022\024\n\014commititemid\030\004 \003(\r\"\255\001\n\020FMsgQues"
    "tDataS2C\022\017\n\007questid\030\001 \001(\r\022/\n\005state\030\002 \001(\016"
    "2\017.QuestStateType:\017QUESTSTATE_NONE\022\027\n\004va"
    "rs\030\003 \003(\0132\t.QuestVar\022\022\n\nacceptTime\030\004 \001(\r\022"
    "\026\n\016completeSubNum\030\005 \001(\r\022\022\n\nsubquestid\030\006 "
    "\003(\r\"I\n\023FMsgMyQuestsDataS2C\0222\n\nquestsdata"
    "\030\001 \003(\0132\036.FProtoClient.FMsgQuestDataS2C\"9"
    "\n\027FMsgMyQuestsCanComitS2C\022\017\n\007questid\030\001 \001"
    "(\r\022\r\n\005npcid\030\002 \001(\r\"8\n\007MovePos\022\t\n\001x\030\001 \001(\r\022"
    "\t\n\001y\030\002 \001(\r\022\t\n\001z\030\003 \001(\r\022\014\n\004time\030\004 \001(\r\"\221\001\n\023"
    "MsgCharacterMoveS8C\022\r\n\005objid\030\001 \001(\r\022\017\n\007ob"
    "jtype\030\002 \001(\r\022\"\n\003pos\030\003 \003(\0132\025.FProtoClient."
    "MovePos\022\021\n\ttimestamp\030\004 \001(\r\022\025\n\rgatetimest"
    "amp\030\005 \001(\004\022\014\n\004stop\030\006 \001(\010\"|\n\024FMsgPropertyS"
    "tateS2C\022\031\n\004data\030\001 \003(\0132\013.FStateData\022\017\n\007ow"
    "nerid\030\002 \001(\r\022\021\n\townertype\030\003 \001(\r\022\020\n\010allsta"
    "te\030\004 \001(\010\022\023\n\013levelchange\030\005 \001(\010\"d\n#Message"
    "MapScreenRefreshCharacterS2C\022\033\n\014forceref"
    "resh\030\002 \001(\010:\005false\022 \n\004data\030\003 \001(\0132\022.FChara"
    "cterMapData\"\214\001\n\027MsgCharacterMoveFailS2C\022"
    "\r\n\005objid\030\001 \001(\r\022\017\n\007objtype\030\002 \001(\r\022\'\n\010block"
    "pos\030\003 \003(\0132\025.FProtoClient.MovePos\022(\n\tserv"
    "erpos\030\004 \001(\0132\025.FProtoClient.MovePos\"Y\n\'Me"
    "ssageMapScreenNineScreenRefreshNpcS2C\022\022\n"
    "\nfirstClear\030\001 \001(\r\022\032\n\004data\030\002 \003(\0132\014.FNpcMa"
    "pData\"Y\n!MessageNineScreenRefreshPlayerS"
    "2C\022\022\n\nfirstClear\030\001 \001(\r\022 \n\004data\030\002 \003(\0132\022.F"
    "CharacterMapData\"O\n,MessageMapScreenNine"
    "ScreenRefreshDeathNpcS2C\022\037\n\004data\030\001 \003(\0132\021"
    ".FNpcDeathMapData\":\n\034MessageMapScreenSum"
    "monNpcS2C\022\032\n\004data\030\001 \001(\0132\014.FNpcMapData\"\'\n"
    "\tOrderCell\022\r\n\005value\030\001 \001(\r\022\013\n\003str\030\002 \001(\t\"2"
    "\n\tOrderLine\022%\n\004cell\030\001 \003(\0132\027.FProtoClient"
    ".OrderCell\"]\n\023MessageOrderDataS2C\022\017\n\007ord"
    "erid\030\001 \001(\r\022%\n\004data\030\002 \003(\0132\027.FProtoClient."
    "OrderLine\022\016\n\006mydata\030\003 \001(\r\")\n\026MessageOrde"
    "rRequestC2S\022\017\n\007orderid\030\001 \001(\r\"\243\002\n\021MsgProg"
    "ressBarS2C\022\r\n\005barid\030\001 \001(\r\022\017\n\007ownerid\030\002 \001"
    "(\r\0224\n\005state\030\003 \001(\0162%.FProtoClient.MsgProg"
    "ressBarS2C.State\022\014\n\004time\030\004 \001(\r\022\r\n\005desId\030"
    "\005 \001(\r\022\017\n\007desType\030\006 \001(\r\022\014\n\004desX\030\007 \001(\r\022\014\n\004"
    "desY\030\010 \001(\r\022\020\n\010targetid\030\t \001(\r\022\022\n\ntargetty"
    "pe\030\n \001(\r\"H\n\005State\022\010\n\004None\020\000\022\t\n\005Start\020\001\022\010"
    "\n\004Tick\020\002\022\007\n\003End\020\003\022\013\n\007Beatoff\020\004\022\n\n\006Cancel"
    "\020\005", 5562);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fclientmsg.proto", &protobuf_RegisterTypes);
  MsgLoginVerifyC2S::default_instance_ = new MsgLoginVerifyC2S();
  MsgReturnS2C::default_instance_ = new MsgReturnS2C();
  MsgLoginResGatewayInfoS2C::default_instance_ = new MsgLoginResGatewayInfoS2C();
  MsgBindAccountC2S::default_instance_ = new MsgBindAccountC2S();
  MsgBindAccountS2C::default_instance_ = new MsgBindAccountS2C();
  MsgLoginGameVerifyAccountC2S::default_instance_ = new MsgLoginGameVerifyAccountC2S();
  MsgTimeGameTimer::default_instance_ = new MsgTimeGameTimer();
  MsgLoginGameResS2C::default_instance_ = new MsgLoginGameResS2C();
  MsgCreateCharC2S::default_instance_ = new MsgCreateCharC2S();
  MsgRquestEnterGameC2S::default_instance_ = new MsgRquestEnterGameC2S();
  MsgEnterGameResS2C::default_instance_ = new MsgEnterGameResS2C();
  MsgMainDataS2C::default_instance_ = new MsgMainDataS2C();
  MsgTimeSyncS2C::default_instance_ = new MsgTimeSyncS2C();
  MsgUpdateResS2C::default_instance_ = new MsgUpdateResS2C();
  MsgChatSystemS2C::default_instance_ = new MsgChatSystemS2C();
  MsgMapScreenRemoveCharS2C::default_instance_ = new MsgMapScreenRemoveCharS2C();
  MsgMapScreenBatchRemoveCharS2C::default_instance_ = new MsgMapScreenBatchRemoveCharS2C();
  MsgMapScreenRemoveNpcS2C::default_instance_ = new MsgMapScreenRemoveNpcS2C();
  MsgMapScreenBatchRemoveNpcS2C::default_instance_ = new MsgMapScreenBatchRemoveNpcS2C();
  MsgMapScreenDeathNpcS2C::default_instance_ = new MsgMapScreenDeathNpcS2C();
  MsgGMCommandC2S::default_instance_ = new MsgGMCommandC2S();
  MsgMagicAttackCSC::default_instance_ = new MsgMagicAttackCSC();
  MsgMagicAttackCSC_stpTarget::default_instance_ = new MsgMagicAttackCSC_stpTarget();
  MsgMagicAttackFailedS2C::default_instance_ = new MsgMagicAttackFailedS2C();
  MsgMagicAttackResS2C::default_instance_ = new MsgMagicAttackResS2C();
  MsgMagicTargetDeathS2C::default_instance_ = new MsgMagicTargetDeathS2C();
  MsgTipsS2C::default_instance_ = new MsgTipsS2C();
  MsgRebornC2S::default_instance_ = new MsgRebornC2S();
  MsgNotifyRebornS2C::default_instance_ = new MsgNotifyRebornS2C();
  MsgNotifyBeAttackS2C::default_instance_ = new MsgNotifyBeAttackS2C();
  MessageSendUserItemToClientS2C::default_instance_ = new MessageSendUserItemToClientS2C();
  MessageSendChangeEquipS2C::default_instance_ = new MessageSendChangeEquipS2C();
  MessageChangeEquipSaveC2S::default_instance_ = new MessageChangeEquipSaveC2S();
  MsgExtendBagC2S::default_instance_ = new MsgExtendBagC2S();
  MessageStObjectUserApplyC2S::default_instance_ = new MessageStObjectUserApplyC2S();
  MessageStObjectUserApplyOkS2C::default_instance_ = new MessageStObjectUserApplyOkS2C();
  MsgObjectItemMoveS2C::default_instance_ = new MsgObjectItemMoveS2C();
  MsgObjectExchangeBatchS2C::default_instance_ = new MsgObjectExchangeBatchS2C();
  MsgObjectExchangeBatchS2C_exchangeNode::default_instance_ = new MsgObjectExchangeBatchS2C_exchangeNode();
  MsgDataMoneyRefreshS2C::default_instance_ = new MsgDataMoneyRefreshS2C();
  MsgFreshSkillS2C::default_instance_ = new MsgFreshSkillS2C();
  MsgFreshSkillS2C_Skill::default_instance_ = new MsgFreshSkillS2C_Skill();
  MsgRefreshHpMpS2C::default_instance_ = new MsgRefreshHpMpS2C();
  FMsgVisitNpcC2S::default_instance_ = new FMsgVisitNpcC2S();
  FMsgResponseDialogS2C::default_instance_ = new FMsgResponseDialogS2C();
  FMsgDialogFunctionAckC2S::default_instance_ = new FMsgDialogFunctionAckC2S();
  MessageVisitNpcS2C::default_instance_ = new MessageVisitNpcS2C();
  FMsgAcceptQuestC2S::default_instance_ = new FMsgAcceptQuestC2S();
  FMsgCompleteQuestC2S::default_instance_ = new FMsgCompleteQuestC2S();
  FMsgQuestDataS2C::default_instance_ = new FMsgQuestDataS2C();
  FMsgMyQuestsDataS2C::default_instance_ = new FMsgMyQuestsDataS2C();
  FMsgMyQuestsCanComitS2C::default_instance_ = new FMsgMyQuestsCanComitS2C();
  MovePos::default_instance_ = new MovePos();
  MsgCharacterMoveS8C::default_instance_ = new MsgCharacterMoveS8C();
  FMsgPropertyStateS2C::default_instance_ = new FMsgPropertyStateS2C();
  MessageMapScreenRefreshCharacterS2C::default_instance_ = new MessageMapScreenRefreshCharacterS2C();
  MsgCharacterMoveFailS2C::default_instance_ = new MsgCharacterMoveFailS2C();
  MessageMapScreenNineScreenRefreshNpcS2C::default_instance_ = new MessageMapScreenNineScreenRefreshNpcS2C();
  MessageNineScreenRefreshPlayerS2C::default_instance_ = new MessageNineScreenRefreshPlayerS2C();
  MessageMapScreenNineScreenRefreshDeathNpcS2C::default_instance_ = new MessageMapScreenNineScreenRefreshDeathNpcS2C();
  MessageMapScreenSummonNpcS2C::default_instance_ = new MessageMapScreenSummonNpcS2C();
  OrderCell::default_instance_ = new OrderCell();
  OrderLine::default_instance_ = new OrderLine();
  MessageOrderDataS2C::default_instance_ = new MessageOrderDataS2C();
  MessageOrderRequestC2S::default_instance_ = new MessageOrderRequestC2S();
  MsgProgressBarS2C::default_instance_ = new MsgProgressBarS2C();
  MsgLoginVerifyC2S::default_instance_->InitAsDefaultInstance();
  MsgReturnS2C::default_instance_->InitAsDefaultInstance();
  MsgLoginResGatewayInfoS2C::default_instance_->InitAsDefaultInstance();
  MsgBindAccountC2S::default_instance_->InitAsDefaultInstance();
  MsgBindAccountS2C::default_instance_->InitAsDefaultInstance();
  MsgLoginGameVerifyAccountC2S::default_instance_->InitAsDefaultInstance();
  MsgTimeGameTimer::default_instance_->InitAsDefaultInstance();
  MsgLoginGameResS2C::default_instance_->InitAsDefaultInstance();
  MsgCreateCharC2S::default_instance_->InitAsDefaultInstance();
  MsgRquestEnterGameC2S::default_instance_->InitAsDefaultInstance();
  MsgEnterGameResS2C::default_instance_->InitAsDefaultInstance();
  MsgMainDataS2C::default_instance_->InitAsDefaultInstance();
  MsgTimeSyncS2C::default_instance_->InitAsDefaultInstance();
  MsgUpdateResS2C::default_instance_->InitAsDefaultInstance();
  MsgChatSystemS2C::default_instance_->InitAsDefaultInstance();
  MsgMapScreenRemoveCharS2C::default_instance_->InitAsDefaultInstance();
  MsgMapScreenBatchRemoveCharS2C::default_instance_->InitAsDefaultInstance();
  MsgMapScreenRemoveNpcS2C::default_instance_->InitAsDefaultInstance();
  MsgMapScreenBatchRemoveNpcS2C::default_instance_->InitAsDefaultInstance();
  MsgMapScreenDeathNpcS2C::default_instance_->InitAsDefaultInstance();
  MsgGMCommandC2S::default_instance_->InitAsDefaultInstance();
  MsgMagicAttackCSC::default_instance_->InitAsDefaultInstance();
  MsgMagicAttackCSC_stpTarget::default_instance_->InitAsDefaultInstance();
  MsgMagicAttackFailedS2C::default_instance_->InitAsDefaultInstance();
  MsgMagicAttackResS2C::default_instance_->InitAsDefaultInstance();
  MsgMagicTargetDeathS2C::default_instance_->InitAsDefaultInstance();
  MsgTipsS2C::default_instance_->InitAsDefaultInstance();
  MsgRebornC2S::default_instance_->InitAsDefaultInstance();
  MsgNotifyRebornS2C::default_instance_->InitAsDefaultInstance();
  MsgNotifyBeAttackS2C::default_instance_->InitAsDefaultInstance();
  MessageSendUserItemToClientS2C::default_instance_->InitAsDefaultInstance();
  MessageSendChangeEquipS2C::default_instance_->InitAsDefaultInstance();
  MessageChangeEquipSaveC2S::default_instance_->InitAsDefaultInstance();
  MsgExtendBagC2S::default_instance_->InitAsDefaultInstance();
  MessageStObjectUserApplyC2S::default_instance_->InitAsDefaultInstance();
  MessageStObjectUserApplyOkS2C::default_instance_->InitAsDefaultInstance();
  MsgObjectItemMoveS2C::default_instance_->InitAsDefaultInstance();
  MsgObjectExchangeBatchS2C::default_instance_->InitAsDefaultInstance();
  MsgObjectExchangeBatchS2C_exchangeNode::default_instance_->InitAsDefaultInstance();
  MsgDataMoneyRefreshS2C::default_instance_->InitAsDefaultInstance();
  MsgFreshSkillS2C::default_instance_->InitAsDefaultInstance();
  MsgFreshSkillS2C_Skill::default_instance_->InitAsDefaultInstance();
  MsgRefreshHpMpS2C::default_instance_->InitAsDefaultInstance();
  FMsgVisitNpcC2S::default_instance_->InitAsDefaultInstance();
  FMsgResponseDialogS2C::default_instance_->InitAsDefaultInstance();
  FMsgDialogFunctionAckC2S::default_instance_->InitAsDefaultInstance();
  MessageVisitNpcS2C::default_instance_->InitAsDefaultInstance();
  FMsgAcceptQuestC2S::default_instance_->InitAsDefaultInstance();
  FMsgCompleteQuestC2S::default_instance_->InitAsDefaultInstance();
  FMsgQuestDataS2C::default_instance_->InitAsDefaultInstance();
  FMsgMyQuestsDataS2C::default_instance_->InitAsDefaultInstance();
  FMsgMyQuestsCanComitS2C::default_instance_->InitAsDefaultInstance();
  MovePos::default_instance_->InitAsDefaultInstance();
  MsgCharacterMoveS8C::default_instance_->InitAsDefaultInstance();
  FMsgPropertyStateS2C::default_instance_->InitAsDefaultInstance();
  MessageMapScreenRefreshCharacterS2C::default_instance_->InitAsDefaultInstance();
  MsgCharacterMoveFailS2C::default_instance_->InitAsDefaultInstance();
  MessageMapScreenNineScreenRefreshNpcS2C::default_instance_->InitAsDefaultInstance();
  MessageNineScreenRefreshPlayerS2C::default_instance_->InitAsDefaultInstance();
  MessageMapScreenNineScreenRefreshDeathNpcS2C::default_instance_->InitAsDefaultInstance();
  MessageMapScreenSummonNpcS2C::default_instance_->InitAsDefaultInstance();
  OrderCell::default_instance_->InitAsDefaultInstance();
  OrderLine::default_instance_->InitAsDefaultInstance();
  MessageOrderDataS2C::default_instance_->InitAsDefaultInstance();
  MessageOrderRequestC2S::default_instance_->InitAsDefaultInstance();
  MsgProgressBarS2C::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_fclientmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_fclientmsg_2eproto {
  StaticDescriptorInitializer_fclientmsg_2eproto() {
    protobuf_AddDesc_fclientmsg_2eproto();
  }
} static_descriptor_initializer_fclientmsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgLoginVerifyC2S::kAccountFieldNumber;
const int MsgLoginVerifyC2S::kVersionFieldNumber;
const int MsgLoginVerifyC2S::kZoneidFieldNumber;
const int MsgLoginVerifyC2S::kGatetypeFieldNumber;
const int MsgLoginVerifyC2S::kPasswdFieldNumber;
const int MsgLoginVerifyC2S::kTimeFieldNumber;
const int MsgLoginVerifyC2S::kAccidFieldNumber;
#endif  // !_MSC_VER

MsgLoginVerifyC2S::MsgLoginVerifyC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgLoginVerifyC2S)
}

void MsgLoginVerifyC2S::InitAsDefaultInstance() {
}

MsgLoginVerifyC2S::MsgLoginVerifyC2S(const MsgLoginVerifyC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgLoginVerifyC2S)
}

void MsgLoginVerifyC2S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zoneid_ = 0u;
  gatetype_ = 0u;
  passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0u;
  accid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLoginVerifyC2S::~MsgLoginVerifyC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgLoginVerifyC2S)
  SharedDtor();
}

void MsgLoginVerifyC2S::SharedDtor() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_;
  }
  if (passwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete passwd_;
  }
  if (this != default_instance_) {
  }
}

void MsgLoginVerifyC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLoginVerifyC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLoginVerifyC2S_descriptor_;
}

const MsgLoginVerifyC2S& MsgLoginVerifyC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgLoginVerifyC2S* MsgLoginVerifyC2S::default_instance_ = NULL;

MsgLoginVerifyC2S* MsgLoginVerifyC2S::New() const {
  return new MsgLoginVerifyC2S;
}

void MsgLoginVerifyC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgLoginVerifyC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(zoneid_, gatetype_);
    ZR_(time_, accid_);
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        account_->clear();
      }
    }
    if (has_version()) {
      if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        version_->clear();
      }
    }
    if (has_passwd()) {
      if (passwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        passwd_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLoginVerifyC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgLoginVerifyC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // optional string version = 2;
      case 2: {
        if (tag == 18) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_zoneid;
        break;
      }

      // optional uint32 zoneid = 3;
      case 3: {
        if (tag == 24) {
         parse_zoneid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
          set_has_zoneid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gatetype;
        break;
      }

      // optional uint32 gatetype = 4;
      case 4: {
        if (tag == 32) {
         parse_gatetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gatetype_)));
          set_has_gatetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_passwd;
        break;
      }

      // optional string passwd = 5;
      case 5: {
        if (tag == 42) {
         parse_passwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "passwd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_time;
        break;
      }

      // optional uint32 time = 6;
      case 6: {
        if (tag == 48) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_accid;
        break;
      }

      // optional uint32 accid = 7;
      case 7: {
        if (tag == 56) {
         parse_accid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accid_)));
          set_has_accid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgLoginVerifyC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgLoginVerifyC2S)
  return false;
#undef DO_
}

void MsgLoginVerifyC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgLoginVerifyC2S)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // optional uint32 zoneid = 3;
  if (has_zoneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->zoneid(), output);
  }

  // optional uint32 gatetype = 4;
  if (has_gatetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gatetype(), output);
  }

  // optional string passwd = 5;
  if (has_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->passwd(), output);
  }

  // optional uint32 time = 6;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->time(), output);
  }

  // optional uint32 accid = 7;
  if (has_accid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->accid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgLoginVerifyC2S)
}

::google::protobuf::uint8* MsgLoginVerifyC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgLoginVerifyC2S)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // optional uint32 zoneid = 3;
  if (has_zoneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->zoneid(), target);
  }

  // optional uint32 gatetype = 4;
  if (has_gatetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gatetype(), target);
  }

  // optional string passwd = 5;
  if (has_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->passwd(), target);
  }

  // optional uint32 time = 6;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->time(), target);
  }

  // optional uint32 accid = 7;
  if (has_accid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->accid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgLoginVerifyC2S)
  return target;
}

int MsgLoginVerifyC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional uint32 zoneid = 3;
    if (has_zoneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->zoneid());
    }

    // optional uint32 gatetype = 4;
    if (has_gatetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gatetype());
    }

    // optional string passwd = 5;
    if (has_passwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->passwd());
    }

    // optional uint32 time = 6;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint32 accid = 7;
    if (has_accid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLoginVerifyC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLoginVerifyC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLoginVerifyC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLoginVerifyC2S::MergeFrom(const MsgLoginVerifyC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_zoneid()) {
      set_zoneid(from.zoneid());
    }
    if (from.has_gatetype()) {
      set_gatetype(from.gatetype());
    }
    if (from.has_passwd()) {
      set_passwd(from.passwd());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_accid()) {
      set_accid(from.accid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLoginVerifyC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLoginVerifyC2S::CopyFrom(const MsgLoginVerifyC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLoginVerifyC2S::IsInitialized() const {

  return true;
}

void MsgLoginVerifyC2S::Swap(MsgLoginVerifyC2S* other) {
  if (other != this) {
    std::swap(account_, other->account_);
    std::swap(version_, other->version_);
    std::swap(zoneid_, other->zoneid_);
    std::swap(gatetype_, other->gatetype_);
    std::swap(passwd_, other->passwd_);
    std::swap(time_, other->time_);
    std::swap(accid_, other->accid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLoginVerifyC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLoginVerifyC2S_descriptor_;
  metadata.reflection = MsgLoginVerifyC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgReturnS2C::kResFieldNumber;
#endif  // !_MSC_VER

MsgReturnS2C::MsgReturnS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgReturnS2C)
}

void MsgReturnS2C::InitAsDefaultInstance() {
}

MsgReturnS2C::MsgReturnS2C(const MsgReturnS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgReturnS2C)
}

void MsgReturnS2C::SharedCtor() {
  _cached_size_ = 0;
  res_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgReturnS2C::~MsgReturnS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgReturnS2C)
  SharedDtor();
}

void MsgReturnS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgReturnS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReturnS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReturnS2C_descriptor_;
}

const MsgReturnS2C& MsgReturnS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgReturnS2C* MsgReturnS2C::default_instance_ = NULL;

MsgReturnS2C* MsgReturnS2C::New() const {
  return new MsgReturnS2C;
}

void MsgReturnS2C::Clear() {
  res_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgReturnS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgReturnS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .empLoginError res = 1 [default = empLoginError_None];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::empLoginError_IsValid(value)) {
            set_res(static_cast< ::empLoginError >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgReturnS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgReturnS2C)
  return false;
#undef DO_
}

void MsgReturnS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgReturnS2C)
  // optional .empLoginError res = 1 [default = empLoginError_None];
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->res(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgReturnS2C)
}

::google::protobuf::uint8* MsgReturnS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgReturnS2C)
  // optional .empLoginError res = 1 [default = empLoginError_None];
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->res(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgReturnS2C)
  return target;
}

int MsgReturnS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .empLoginError res = 1 [default = empLoginError_None];
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReturnS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgReturnS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgReturnS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgReturnS2C::MergeFrom(const MsgReturnS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_res()) {
      set_res(from.res());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgReturnS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReturnS2C::CopyFrom(const MsgReturnS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReturnS2C::IsInitialized() const {

  return true;
}

void MsgReturnS2C::Swap(MsgReturnS2C* other) {
  if (other != this) {
    std::swap(res_, other->res_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgReturnS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReturnS2C_descriptor_;
  metadata.reflection = MsgReturnS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLoginResGatewayInfoS2C::kAccidFieldNumber;
const int MsgLoginResGatewayInfoS2C::kLoginpasswdFieldNumber;
const int MsgLoginResGatewayInfoS2C::kIpFieldNumber;
const int MsgLoginResGatewayInfoS2C::kPortFieldNumber;
const int MsgLoginResGatewayInfoS2C::kIpv4FieldNumber;
#endif  // !_MSC_VER

MsgLoginResGatewayInfoS2C::MsgLoginResGatewayInfoS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgLoginResGatewayInfoS2C)
}

void MsgLoginResGatewayInfoS2C::InitAsDefaultInstance() {
}

MsgLoginResGatewayInfoS2C::MsgLoginResGatewayInfoS2C(const MsgLoginResGatewayInfoS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgLoginResGatewayInfoS2C)
}

void MsgLoginResGatewayInfoS2C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accid_ = 0u;
  loginpasswd_ = 0u;
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  ipv4_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLoginResGatewayInfoS2C::~MsgLoginResGatewayInfoS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgLoginResGatewayInfoS2C)
  SharedDtor();
}

void MsgLoginResGatewayInfoS2C::SharedDtor() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ipv4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ipv4_;
  }
  if (this != default_instance_) {
  }
}

void MsgLoginResGatewayInfoS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLoginResGatewayInfoS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLoginResGatewayInfoS2C_descriptor_;
}

const MsgLoginResGatewayInfoS2C& MsgLoginResGatewayInfoS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgLoginResGatewayInfoS2C* MsgLoginResGatewayInfoS2C::default_instance_ = NULL;

MsgLoginResGatewayInfoS2C* MsgLoginResGatewayInfoS2C::New() const {
  return new MsgLoginResGatewayInfoS2C;
}

void MsgLoginResGatewayInfoS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgLoginResGatewayInfoS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(accid_, loginpasswd_);
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ip_->clear();
      }
    }
    port_ = 0u;
    if (has_ipv4()) {
      if (ipv4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ipv4_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLoginResGatewayInfoS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgLoginResGatewayInfoS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accid_)));
          set_has_accid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_loginpasswd;
        break;
      }

      // optional uint32 loginpasswd = 2;
      case 2: {
        if (tag == 16) {
         parse_loginpasswd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loginpasswd_)));
          set_has_loginpasswd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ip;
        break;
      }

      // optional string ip = 3;
      case 3: {
        if (tag == 26) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_port;
        break;
      }

      // optional uint32 port = 4;
      case 4: {
        if (tag == 32) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ipv4;
        break;
      }

      // optional string ipv4 = 5;
      case 5: {
        if (tag == 42) {
         parse_ipv4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipv4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ipv4().data(), this->ipv4().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ipv4");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgLoginResGatewayInfoS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgLoginResGatewayInfoS2C)
  return false;
#undef DO_
}

void MsgLoginResGatewayInfoS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgLoginResGatewayInfoS2C)
  // optional uint32 accid = 1;
  if (has_accid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accid(), output);
  }

  // optional uint32 loginpasswd = 2;
  if (has_loginpasswd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->loginpasswd(), output);
  }

  // optional string ip = 3;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip(), output);
  }

  // optional uint32 port = 4;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->port(), output);
  }

  // optional string ipv4 = 5;
  if (has_ipv4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ipv4().data(), this->ipv4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ipv4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ipv4(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgLoginResGatewayInfoS2C)
}

::google::protobuf::uint8* MsgLoginResGatewayInfoS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgLoginResGatewayInfoS2C)
  // optional uint32 accid = 1;
  if (has_accid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accid(), target);
  }

  // optional uint32 loginpasswd = 2;
  if (has_loginpasswd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->loginpasswd(), target);
  }

  // optional string ip = 3;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip(), target);
  }

  // optional uint32 port = 4;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->port(), target);
  }

  // optional string ipv4 = 5;
  if (has_ipv4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ipv4().data(), this->ipv4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ipv4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ipv4(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgLoginResGatewayInfoS2C)
  return target;
}

int MsgLoginResGatewayInfoS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 accid = 1;
    if (has_accid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accid());
    }

    // optional uint32 loginpasswd = 2;
    if (has_loginpasswd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->loginpasswd());
    }

    // optional string ip = 3;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional uint32 port = 4;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

    // optional string ipv4 = 5;
    if (has_ipv4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ipv4());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLoginResGatewayInfoS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLoginResGatewayInfoS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLoginResGatewayInfoS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLoginResGatewayInfoS2C::MergeFrom(const MsgLoginResGatewayInfoS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accid()) {
      set_accid(from.accid());
    }
    if (from.has_loginpasswd()) {
      set_loginpasswd(from.loginpasswd());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_port()) {
      set_port(from.port());
    }
    if (from.has_ipv4()) {
      set_ipv4(from.ipv4());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLoginResGatewayInfoS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLoginResGatewayInfoS2C::CopyFrom(const MsgLoginResGatewayInfoS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLoginResGatewayInfoS2C::IsInitialized() const {

  return true;
}

void MsgLoginResGatewayInfoS2C::Swap(MsgLoginResGatewayInfoS2C* other) {
  if (other != this) {
    std::swap(accid_, other->accid_);
    std::swap(loginpasswd_, other->loginpasswd_);
    std::swap(ip_, other->ip_);
    std::swap(port_, other->port_);
    std::swap(ipv4_, other->ipv4_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLoginResGatewayInfoS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLoginResGatewayInfoS2C_descriptor_;
  metadata.reflection = MsgLoginResGatewayInfoS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBindAccountC2S::kPasswdFieldNumber;
const int MsgBindAccountC2S::kTimeFieldNumber;
const int MsgBindAccountC2S::kAccidFieldNumber;
const int MsgBindAccountC2S::kCharIDFieldNumber;
#endif  // !_MSC_VER

MsgBindAccountC2S::MsgBindAccountC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgBindAccountC2S)
}

void MsgBindAccountC2S::InitAsDefaultInstance() {
}

MsgBindAccountC2S::MsgBindAccountC2S(const MsgBindAccountC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgBindAccountC2S)
}

void MsgBindAccountC2S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0u;
  accid_ = 0u;
  charid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBindAccountC2S::~MsgBindAccountC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgBindAccountC2S)
  SharedDtor();
}

void MsgBindAccountC2S::SharedDtor() {
  if (passwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete passwd_;
  }
  if (this != default_instance_) {
  }
}

void MsgBindAccountC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBindAccountC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBindAccountC2S_descriptor_;
}

const MsgBindAccountC2S& MsgBindAccountC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgBindAccountC2S* MsgBindAccountC2S::default_instance_ = NULL;

MsgBindAccountC2S* MsgBindAccountC2S::New() const {
  return new MsgBindAccountC2S;
}

void MsgBindAccountC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBindAccountC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(time_, charid_);
    if (has_passwd()) {
      if (passwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        passwd_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBindAccountC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgBindAccountC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string passwd = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "passwd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // optional uint32 time = 2;
      case 2: {
        if (tag == 16) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_accid;
        break;
      }

      // optional uint32 accid = 3;
      case 3: {
        if (tag == 24) {
         parse_accid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accid_)));
          set_has_accid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_charID;
        break;
      }

      // optional uint32 charID = 4;
      case 4: {
        if (tag == 32) {
         parse_charID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgBindAccountC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgBindAccountC2S)
  return false;
#undef DO_
}

void MsgBindAccountC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgBindAccountC2S)
  // optional string passwd = 1;
  if (has_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->passwd(), output);
  }

  // optional uint32 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time(), output);
  }

  // optional uint32 accid = 3;
  if (has_accid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->accid(), output);
  }

  // optional uint32 charID = 4;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->charid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgBindAccountC2S)
}

::google::protobuf::uint8* MsgBindAccountC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgBindAccountC2S)
  // optional string passwd = 1;
  if (has_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->passwd(), target);
  }

  // optional uint32 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time(), target);
  }

  // optional uint32 accid = 3;
  if (has_accid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->accid(), target);
  }

  // optional uint32 charID = 4;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->charid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgBindAccountC2S)
  return target;
}

int MsgBindAccountC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string passwd = 1;
    if (has_passwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->passwd());
    }

    // optional uint32 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint32 accid = 3;
    if (has_accid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accid());
    }

    // optional uint32 charID = 4;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->charid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBindAccountC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBindAccountC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBindAccountC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBindAccountC2S::MergeFrom(const MsgBindAccountC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_passwd()) {
      set_passwd(from.passwd());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_accid()) {
      set_accid(from.accid());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBindAccountC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBindAccountC2S::CopyFrom(const MsgBindAccountC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBindAccountC2S::IsInitialized() const {

  return true;
}

void MsgBindAccountC2S::Swap(MsgBindAccountC2S* other) {
  if (other != this) {
    std::swap(passwd_, other->passwd_);
    std::swap(time_, other->time_);
    std::swap(accid_, other->accid_);
    std::swap(charid_, other->charid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBindAccountC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBindAccountC2S_descriptor_;
  metadata.reflection = MsgBindAccountC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBindAccountS2C::kSuccessFieldNumber;
#endif  // !_MSC_VER

MsgBindAccountS2C::MsgBindAccountS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgBindAccountS2C)
}

void MsgBindAccountS2C::InitAsDefaultInstance() {
}

MsgBindAccountS2C::MsgBindAccountS2C(const MsgBindAccountS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgBindAccountS2C)
}

void MsgBindAccountS2C::SharedCtor() {
  _cached_size_ = 0;
  success_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBindAccountS2C::~MsgBindAccountS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgBindAccountS2C)
  SharedDtor();
}

void MsgBindAccountS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBindAccountS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBindAccountS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBindAccountS2C_descriptor_;
}

const MsgBindAccountS2C& MsgBindAccountS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgBindAccountS2C* MsgBindAccountS2C::default_instance_ = NULL;

MsgBindAccountS2C* MsgBindAccountS2C::New() const {
  return new MsgBindAccountS2C;
}

void MsgBindAccountS2C::Clear() {
  success_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBindAccountS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgBindAccountS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgBindAccountS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgBindAccountS2C)
  return false;
#undef DO_
}

void MsgBindAccountS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgBindAccountS2C)
  // optional uint32 success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgBindAccountS2C)
}

::google::protobuf::uint8* MsgBindAccountS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgBindAccountS2C)
  // optional uint32 success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgBindAccountS2C)
  return target;
}

int MsgBindAccountS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 success = 1;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBindAccountS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBindAccountS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBindAccountS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBindAccountS2C::MergeFrom(const MsgBindAccountS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBindAccountS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBindAccountS2C::CopyFrom(const MsgBindAccountS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBindAccountS2C::IsInitialized() const {

  return true;
}

void MsgBindAccountS2C::Swap(MsgBindAccountS2C* other) {
  if (other != this) {
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBindAccountS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBindAccountS2C_descriptor_;
  metadata.reflection = MsgBindAccountS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLoginGameVerifyAccountC2S::kAccidFieldNumber;
const int MsgLoginGameVerifyAccountC2S::kLoginpasswdFieldNumber;
const int MsgLoginGameVerifyAccountC2S::kFlattypeFieldNumber;
#endif  // !_MSC_VER

MsgLoginGameVerifyAccountC2S::MsgLoginGameVerifyAccountC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgLoginGameVerifyAccountC2S)
}

void MsgLoginGameVerifyAccountC2S::InitAsDefaultInstance() {
}

MsgLoginGameVerifyAccountC2S::MsgLoginGameVerifyAccountC2S(const MsgLoginGameVerifyAccountC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgLoginGameVerifyAccountC2S)
}

void MsgLoginGameVerifyAccountC2S::SharedCtor() {
  _cached_size_ = 0;
  accid_ = 0u;
  loginpasswd_ = 0u;
  flattype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLoginGameVerifyAccountC2S::~MsgLoginGameVerifyAccountC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgLoginGameVerifyAccountC2S)
  SharedDtor();
}

void MsgLoginGameVerifyAccountC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgLoginGameVerifyAccountC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLoginGameVerifyAccountC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLoginGameVerifyAccountC2S_descriptor_;
}

const MsgLoginGameVerifyAccountC2S& MsgLoginGameVerifyAccountC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgLoginGameVerifyAccountC2S* MsgLoginGameVerifyAccountC2S::default_instance_ = NULL;

MsgLoginGameVerifyAccountC2S* MsgLoginGameVerifyAccountC2S::New() const {
  return new MsgLoginGameVerifyAccountC2S;
}

void MsgLoginGameVerifyAccountC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgLoginGameVerifyAccountC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(accid_, flattype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLoginGameVerifyAccountC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgLoginGameVerifyAccountC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accid_)));
          set_has_accid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_loginpasswd;
        break;
      }

      // optional uint32 loginpasswd = 2;
      case 2: {
        if (tag == 16) {
         parse_loginpasswd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loginpasswd_)));
          set_has_loginpasswd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_flattype;
        break;
      }

      // optional uint32 flattype = 3;
      case 3: {
        if (tag == 24) {
         parse_flattype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flattype_)));
          set_has_flattype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgLoginGameVerifyAccountC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgLoginGameVerifyAccountC2S)
  return false;
#undef DO_
}

void MsgLoginGameVerifyAccountC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgLoginGameVerifyAccountC2S)
  // optional uint32 accid = 1;
  if (has_accid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accid(), output);
  }

  // optional uint32 loginpasswd = 2;
  if (has_loginpasswd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->loginpasswd(), output);
  }

  // optional uint32 flattype = 3;
  if (has_flattype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flattype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgLoginGameVerifyAccountC2S)
}

::google::protobuf::uint8* MsgLoginGameVerifyAccountC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgLoginGameVerifyAccountC2S)
  // optional uint32 accid = 1;
  if (has_accid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accid(), target);
  }

  // optional uint32 loginpasswd = 2;
  if (has_loginpasswd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->loginpasswd(), target);
  }

  // optional uint32 flattype = 3;
  if (has_flattype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flattype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgLoginGameVerifyAccountC2S)
  return target;
}

int MsgLoginGameVerifyAccountC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 accid = 1;
    if (has_accid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accid());
    }

    // optional uint32 loginpasswd = 2;
    if (has_loginpasswd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->loginpasswd());
    }

    // optional uint32 flattype = 3;
    if (has_flattype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flattype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLoginGameVerifyAccountC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLoginGameVerifyAccountC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLoginGameVerifyAccountC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLoginGameVerifyAccountC2S::MergeFrom(const MsgLoginGameVerifyAccountC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accid()) {
      set_accid(from.accid());
    }
    if (from.has_loginpasswd()) {
      set_loginpasswd(from.loginpasswd());
    }
    if (from.has_flattype()) {
      set_flattype(from.flattype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLoginGameVerifyAccountC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLoginGameVerifyAccountC2S::CopyFrom(const MsgLoginGameVerifyAccountC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLoginGameVerifyAccountC2S::IsInitialized() const {

  return true;
}

void MsgLoginGameVerifyAccountC2S::Swap(MsgLoginGameVerifyAccountC2S* other) {
  if (other != this) {
    std::swap(accid_, other->accid_);
    std::swap(loginpasswd_, other->loginpasswd_);
    std::swap(flattype_, other->flattype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLoginGameVerifyAccountC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLoginGameVerifyAccountC2S_descriptor_;
  metadata.reflection = MsgLoginGameVerifyAccountC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgTimeGameTimer::kGametimeFieldNumber;
#endif  // !_MSC_VER

MsgTimeGameTimer::MsgTimeGameTimer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgTimeGameTimer)
}

void MsgTimeGameTimer::InitAsDefaultInstance() {
}

MsgTimeGameTimer::MsgTimeGameTimer(const MsgTimeGameTimer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgTimeGameTimer)
}

void MsgTimeGameTimer::SharedCtor() {
  _cached_size_ = 0;
  gametime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTimeGameTimer::~MsgTimeGameTimer() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgTimeGameTimer)
  SharedDtor();
}

void MsgTimeGameTimer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgTimeGameTimer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTimeGameTimer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTimeGameTimer_descriptor_;
}

const MsgTimeGameTimer& MsgTimeGameTimer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgTimeGameTimer* MsgTimeGameTimer::default_instance_ = NULL;

MsgTimeGameTimer* MsgTimeGameTimer::New() const {
  return new MsgTimeGameTimer;
}

void MsgTimeGameTimer::Clear() {
  gametime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgTimeGameTimer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgTimeGameTimer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 gametime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gametime_)));
          set_has_gametime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgTimeGameTimer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgTimeGameTimer)
  return false;
#undef DO_
}

void MsgTimeGameTimer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgTimeGameTimer)
  // optional uint64 gametime = 1;
  if (has_gametime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gametime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgTimeGameTimer)
}

::google::protobuf::uint8* MsgTimeGameTimer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgTimeGameTimer)
  // optional uint64 gametime = 1;
  if (has_gametime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gametime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgTimeGameTimer)
  return target;
}

int MsgTimeGameTimer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 gametime = 1;
    if (has_gametime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gametime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTimeGameTimer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgTimeGameTimer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTimeGameTimer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTimeGameTimer::MergeFrom(const MsgTimeGameTimer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gametime()) {
      set_gametime(from.gametime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgTimeGameTimer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTimeGameTimer::CopyFrom(const MsgTimeGameTimer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTimeGameTimer::IsInitialized() const {

  return true;
}

void MsgTimeGameTimer::Swap(MsgTimeGameTimer* other) {
  if (other != this) {
    std::swap(gametime_, other->gametime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgTimeGameTimer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTimeGameTimer_descriptor_;
  metadata.reflection = MsgTimeGameTimer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLoginGameResS2C::kCharidFieldNumber;
const int MsgLoginGameResS2C::kNameFieldNumber;
#endif  // !_MSC_VER

MsgLoginGameResS2C::MsgLoginGameResS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgLoginGameResS2C)
}

void MsgLoginGameResS2C::InitAsDefaultInstance() {
}

MsgLoginGameResS2C::MsgLoginGameResS2C(const MsgLoginGameResS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgLoginGameResS2C)
}

void MsgLoginGameResS2C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  charid_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLoginGameResS2C::~MsgLoginGameResS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgLoginGameResS2C)
  SharedDtor();
}

void MsgLoginGameResS2C::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void MsgLoginGameResS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLoginGameResS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLoginGameResS2C_descriptor_;
}

const MsgLoginGameResS2C& MsgLoginGameResS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgLoginGameResS2C* MsgLoginGameResS2C::default_instance_ = NULL;

MsgLoginGameResS2C* MsgLoginGameResS2C::New() const {
  return new MsgLoginGameResS2C;
}

void MsgLoginGameResS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    charid_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLoginGameResS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgLoginGameResS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 charid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgLoginGameResS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgLoginGameResS2C)
  return false;
#undef DO_
}

void MsgLoginGameResS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgLoginGameResS2C)
  // optional uint32 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->charid(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgLoginGameResS2C)
}

::google::protobuf::uint8* MsgLoginGameResS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgLoginGameResS2C)
  // optional uint32 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->charid(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgLoginGameResS2C)
  return target;
}

int MsgLoginGameResS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->charid());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLoginGameResS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLoginGameResS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLoginGameResS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLoginGameResS2C::MergeFrom(const MsgLoginGameResS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLoginGameResS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLoginGameResS2C::CopyFrom(const MsgLoginGameResS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLoginGameResS2C::IsInitialized() const {

  return true;
}

void MsgLoginGameResS2C::Swap(MsgLoginGameResS2C* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLoginGameResS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLoginGameResS2C_descriptor_;
  metadata.reflection = MsgLoginGameResS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgCreateCharC2S::kNameFieldNumber;
const int MsgCreateCharC2S::kCountryFieldNumber;
const int MsgCreateCharC2S::kClubFieldNumber;
#endif  // !_MSC_VER

MsgCreateCharC2S::MsgCreateCharC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgCreateCharC2S)
}

void MsgCreateCharC2S::InitAsDefaultInstance() {
}

MsgCreateCharC2S::MsgCreateCharC2S(const MsgCreateCharC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgCreateCharC2S)
}

void MsgCreateCharC2S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_ = 0u;
  club_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgCreateCharC2S::~MsgCreateCharC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgCreateCharC2S)
  SharedDtor();
}

void MsgCreateCharC2S::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void MsgCreateCharC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCreateCharC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgCreateCharC2S_descriptor_;
}

const MsgCreateCharC2S& MsgCreateCharC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgCreateCharC2S* MsgCreateCharC2S::default_instance_ = NULL;

MsgCreateCharC2S* MsgCreateCharC2S::New() const {
  return new MsgCreateCharC2S;
}

void MsgCreateCharC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgCreateCharC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(country_, club_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgCreateCharC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgCreateCharC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_country;
        break;
      }

      // optional uint32 country = 2;
      case 2: {
        if (tag == 16) {
         parse_country:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &country_)));
          set_has_country();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_club;
        break;
      }

      // optional uint32 club = 3;
      case 3: {
        if (tag == 24) {
         parse_club:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &club_)));
          set_has_club();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgCreateCharC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgCreateCharC2S)
  return false;
#undef DO_
}

void MsgCreateCharC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgCreateCharC2S)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 country = 2;
  if (has_country()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->country(), output);
  }

  // optional uint32 club = 3;
  if (has_club()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->club(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgCreateCharC2S)
}

::google::protobuf::uint8* MsgCreateCharC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgCreateCharC2S)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 country = 2;
  if (has_country()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->country(), target);
  }

  // optional uint32 club = 3;
  if (has_club()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->club(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgCreateCharC2S)
  return target;
}

int MsgCreateCharC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 country = 2;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->country());
    }

    // optional uint32 club = 3;
    if (has_club()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->club());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCreateCharC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgCreateCharC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgCreateCharC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgCreateCharC2S::MergeFrom(const MsgCreateCharC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_country()) {
      set_country(from.country());
    }
    if (from.has_club()) {
      set_club(from.club());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgCreateCharC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCreateCharC2S::CopyFrom(const MsgCreateCharC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateCharC2S::IsInitialized() const {

  return true;
}

void MsgCreateCharC2S::Swap(MsgCreateCharC2S* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(country_, other->country_);
    std::swap(club_, other->club_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgCreateCharC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgCreateCharC2S_descriptor_;
  metadata.reflection = MsgCreateCharC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgRquestEnterGameC2S::MsgRquestEnterGameC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgRquestEnterGameC2S)
}

void MsgRquestEnterGameC2S::InitAsDefaultInstance() {
}

MsgRquestEnterGameC2S::MsgRquestEnterGameC2S(const MsgRquestEnterGameC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgRquestEnterGameC2S)
}

void MsgRquestEnterGameC2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgRquestEnterGameC2S::~MsgRquestEnterGameC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgRquestEnterGameC2S)
  SharedDtor();
}

void MsgRquestEnterGameC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgRquestEnterGameC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRquestEnterGameC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRquestEnterGameC2S_descriptor_;
}

const MsgRquestEnterGameC2S& MsgRquestEnterGameC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgRquestEnterGameC2S* MsgRquestEnterGameC2S::default_instance_ = NULL;

MsgRquestEnterGameC2S* MsgRquestEnterGameC2S::New() const {
  return new MsgRquestEnterGameC2S;
}

void MsgRquestEnterGameC2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgRquestEnterGameC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgRquestEnterGameC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgRquestEnterGameC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgRquestEnterGameC2S)
  return false;
#undef DO_
}

void MsgRquestEnterGameC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgRquestEnterGameC2S)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgRquestEnterGameC2S)
}

::google::protobuf::uint8* MsgRquestEnterGameC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgRquestEnterGameC2S)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgRquestEnterGameC2S)
  return target;
}

int MsgRquestEnterGameC2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRquestEnterGameC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgRquestEnterGameC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgRquestEnterGameC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgRquestEnterGameC2S::MergeFrom(const MsgRquestEnterGameC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgRquestEnterGameC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRquestEnterGameC2S::CopyFrom(const MsgRquestEnterGameC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRquestEnterGameC2S::IsInitialized() const {

  return true;
}

void MsgRquestEnterGameC2S::Swap(MsgRquestEnterGameC2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgRquestEnterGameC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRquestEnterGameC2S_descriptor_;
  metadata.reflection = MsgRquestEnterGameC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgEnterGameResS2C::MsgEnterGameResS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgEnterGameResS2C)
}

void MsgEnterGameResS2C::InitAsDefaultInstance() {
}

MsgEnterGameResS2C::MsgEnterGameResS2C(const MsgEnterGameResS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgEnterGameResS2C)
}

void MsgEnterGameResS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgEnterGameResS2C::~MsgEnterGameResS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgEnterGameResS2C)
  SharedDtor();
}

void MsgEnterGameResS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgEnterGameResS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEnterGameResS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEnterGameResS2C_descriptor_;
}

const MsgEnterGameResS2C& MsgEnterGameResS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgEnterGameResS2C* MsgEnterGameResS2C::default_instance_ = NULL;

MsgEnterGameResS2C* MsgEnterGameResS2C::New() const {
  return new MsgEnterGameResS2C;
}

void MsgEnterGameResS2C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgEnterGameResS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgEnterGameResS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgEnterGameResS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgEnterGameResS2C)
  return false;
#undef DO_
}

void MsgEnterGameResS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgEnterGameResS2C)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgEnterGameResS2C)
}

::google::protobuf::uint8* MsgEnterGameResS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgEnterGameResS2C)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgEnterGameResS2C)
  return target;
}

int MsgEnterGameResS2C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEnterGameResS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgEnterGameResS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgEnterGameResS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgEnterGameResS2C::MergeFrom(const MsgEnterGameResS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgEnterGameResS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEnterGameResS2C::CopyFrom(const MsgEnterGameResS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEnterGameResS2C::IsInitialized() const {

  return true;
}

void MsgEnterGameResS2C::Swap(MsgEnterGameResS2C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgEnterGameResS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEnterGameResS2C_descriptor_;
  metadata.reflection = MsgEnterGameResS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMainDataS2C::kFaceFieldNumber;
const int MsgMainDataS2C::kCharidFieldNumber;
const int MsgMainDataS2C::kLevelFieldNumber;
const int MsgMainDataS2C::kNameFieldNumber;
const int MsgMainDataS2C::kExpFieldNumber;
const int MsgMainDataS2C::kFcountryFieldNumber;
const int MsgMainDataS2C::kNewbieguideFieldNumber;
const int MsgMainDataS2C::kViplevelFieldNumber;
const int MsgMainDataS2C::kAccidFieldNumber;
const int MsgMainDataS2C::kXFieldNumber;
const int MsgMainDataS2C::kYFieldNumber;
const int MsgMainDataS2C::kZFieldNumber;
const int MsgMainDataS2C::kMapFieldNumber;
const int MsgMainDataS2C::kDirFieldNumber;
const int MsgMainDataS2C::kMapwFieldNumber;
const int MsgMainDataS2C::kMaphFieldNumber;
const int MsgMainDataS2C::kSpeedFieldNumber;
const int MsgMainDataS2C::kLoginFieldNumber;
const int MsgMainDataS2C::kMpFieldNumber;
const int MsgMainDataS2C::kMaxmpFieldNumber;
const int MsgMainDataS2C::kHpFieldNumber;
const int MsgMainDataS2C::kMaxhpFieldNumber;
#endif  // !_MSC_VER

MsgMainDataS2C::MsgMainDataS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMainDataS2C)
}

void MsgMainDataS2C::InitAsDefaultInstance() {
}

MsgMainDataS2C::MsgMainDataS2C(const MsgMainDataS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMainDataS2C)
}

void MsgMainDataS2C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  face_ = 0u;
  charid_ = 0u;
  level_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_ = GOOGLE_ULONGLONG(0);
  fcountry_ = 0u;
  viplevel_ = 0u;
  accid_ = 0u;
  x_ = 0u;
  y_ = 0u;
  z_ = 0u;
  map_ = 0u;
  dir_ = 0u;
  mapw_ = 0u;
  maph_ = 0u;
  speed_ = 0u;
  login_ = false;
  mp_ = 0u;
  maxmp_ = 0u;
  hp_ = 0u;
  maxhp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMainDataS2C::~MsgMainDataS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMainDataS2C)
  SharedDtor();
}

void MsgMainDataS2C::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void MsgMainDataS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMainDataS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMainDataS2C_descriptor_;
}

const MsgMainDataS2C& MsgMainDataS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMainDataS2C* MsgMainDataS2C::default_instance_ = NULL;

MsgMainDataS2C* MsgMainDataS2C::New() const {
  return new MsgMainDataS2C;
}

void MsgMainDataS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMainDataS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 191) {
    ZR_(face_, charid_);
    ZR_(level_, exp_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    viplevel_ = 0u;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(accid_, maph_);
  }
  if (_has_bits_[16 / 32] & 4128768) {
    ZR_(speed_, maxhp_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  newbieguide_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMainDataS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMainDataS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 face = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &face_)));
          set_has_face();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_charid;
        break;
      }

      // optional uint32 charid = 2;
      case 2: {
        if (tag == 16) {
         parse_charid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // optional uint32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_exp;
        break;
      }

      // optional uint64 exp = 6;
      case 6: {
        if (tag == 48) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_fcountry;
        break;
      }

      // optional uint32 fcountry = 11;
      case 11: {
        if (tag == 88) {
         parse_fcountry:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fcountry_)));
          set_has_fcountry();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_newbieguide;
        break;
      }

      // repeated uint32 newbieguide = 12;
      case 12: {
        if (tag == 96) {
         parse_newbieguide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 96, input, this->mutable_newbieguide())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_newbieguide())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_newbieguide;
        if (input->ExpectTag(104)) goto parse_viplevel;
        break;
      }

      // optional uint32 viplevel = 13;
      case 13: {
        if (tag == 104) {
         parse_viplevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viplevel_)));
          set_has_viplevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_accid;
        break;
      }

      // optional uint32 accid = 14;
      case 14: {
        if (tag == 112) {
         parse_accid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accid_)));
          set_has_accid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_x;
        break;
      }

      // optional uint32 x = 15;
      case 15: {
        if (tag == 120) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_y;
        break;
      }

      // optional uint32 y = 16;
      case 16: {
        if (tag == 128) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_z;
        break;
      }

      // optional uint32 z = 17;
      case 17: {
        if (tag == 136) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_map;
        break;
      }

      // optional uint32 map = 18;
      case 18: {
        if (tag == 144) {
         parse_map:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_)));
          set_has_map();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_dir;
        break;
      }

      // optional uint32 dir = 19;
      case 19: {
        if (tag == 152) {
         parse_dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_mapw;
        break;
      }

      // optional uint32 mapw = 20;
      case 20: {
        if (tag == 160) {
         parse_mapw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapw_)));
          set_has_mapw();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_maph;
        break;
      }

      // optional uint32 maph = 21;
      case 21: {
        if (tag == 168) {
         parse_maph:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maph_)));
          set_has_maph();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_speed;
        break;
      }

      // optional uint32 speed = 22;
      case 22: {
        if (tag == 176) {
         parse_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_login;
        break;
      }

      // optional bool login = 23;
      case 23: {
        if (tag == 184) {
         parse_login:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &login_)));
          set_has_login();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_mp;
        break;
      }

      // optional uint32 mp = 24;
      case 24: {
        if (tag == 192) {
         parse_mp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_)));
          set_has_mp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_maxmp;
        break;
      }

      // optional uint32 maxmp = 25;
      case 25: {
        if (tag == 200) {
         parse_maxmp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxmp_)));
          set_has_maxmp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_hp;
        break;
      }

      // optional uint32 hp = 26;
      case 26: {
        if (tag == 208) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_maxhp;
        break;
      }

      // optional uint32 maxhp = 27;
      case 27: {
        if (tag == 216) {
         parse_maxhp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxhp_)));
          set_has_maxhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMainDataS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMainDataS2C)
  return false;
#undef DO_
}

void MsgMainDataS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMainDataS2C)
  // optional uint32 face = 1;
  if (has_face()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->face(), output);
  }

  // optional uint32 charid = 2;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->charid(), output);
  }

  // optional uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // optional string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional uint64 exp = 6;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->exp(), output);
  }

  // optional uint32 fcountry = 11;
  if (has_fcountry()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->fcountry(), output);
  }

  // repeated uint32 newbieguide = 12;
  for (int i = 0; i < this->newbieguide_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      12, this->newbieguide(i), output);
  }

  // optional uint32 viplevel = 13;
  if (has_viplevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->viplevel(), output);
  }

  // optional uint32 accid = 14;
  if (has_accid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->accid(), output);
  }

  // optional uint32 x = 15;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->x(), output);
  }

  // optional uint32 y = 16;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->y(), output);
  }

  // optional uint32 z = 17;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->z(), output);
  }

  // optional uint32 map = 18;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->map(), output);
  }

  // optional uint32 dir = 19;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->dir(), output);
  }

  // optional uint32 mapw = 20;
  if (has_mapw()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->mapw(), output);
  }

  // optional uint32 maph = 21;
  if (has_maph()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->maph(), output);
  }

  // optional uint32 speed = 22;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->speed(), output);
  }

  // optional bool login = 23;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->login(), output);
  }

  // optional uint32 mp = 24;
  if (has_mp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->mp(), output);
  }

  // optional uint32 maxmp = 25;
  if (has_maxmp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->maxmp(), output);
  }

  // optional uint32 hp = 26;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->hp(), output);
  }

  // optional uint32 maxhp = 27;
  if (has_maxhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->maxhp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMainDataS2C)
}

::google::protobuf::uint8* MsgMainDataS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMainDataS2C)
  // optional uint32 face = 1;
  if (has_face()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->face(), target);
  }

  // optional uint32 charid = 2;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->charid(), target);
  }

  // optional uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // optional string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional uint64 exp = 6;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->exp(), target);
  }

  // optional uint32 fcountry = 11;
  if (has_fcountry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->fcountry(), target);
  }

  // repeated uint32 newbieguide = 12;
  for (int i = 0; i < this->newbieguide_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(12, this->newbieguide(i), target);
  }

  // optional uint32 viplevel = 13;
  if (has_viplevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->viplevel(), target);
  }

  // optional uint32 accid = 14;
  if (has_accid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->accid(), target);
  }

  // optional uint32 x = 15;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->x(), target);
  }

  // optional uint32 y = 16;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->y(), target);
  }

  // optional uint32 z = 17;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->z(), target);
  }

  // optional uint32 map = 18;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->map(), target);
  }

  // optional uint32 dir = 19;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->dir(), target);
  }

  // optional uint32 mapw = 20;
  if (has_mapw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->mapw(), target);
  }

  // optional uint32 maph = 21;
  if (has_maph()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->maph(), target);
  }

  // optional uint32 speed = 22;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->speed(), target);
  }

  // optional bool login = 23;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->login(), target);
  }

  // optional uint32 mp = 24;
  if (has_mp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->mp(), target);
  }

  // optional uint32 maxmp = 25;
  if (has_maxmp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->maxmp(), target);
  }

  // optional uint32 hp = 26;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->hp(), target);
  }

  // optional uint32 maxhp = 27;
  if (has_maxhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->maxhp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMainDataS2C)
  return target;
}

int MsgMainDataS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 face = 1;
    if (has_face()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->face());
    }

    // optional uint32 charid = 2;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->charid());
    }

    // optional uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 exp = 6;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exp());
    }

    // optional uint32 fcountry = 11;
    if (has_fcountry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fcountry());
    }

    // optional uint32 viplevel = 13;
    if (has_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->viplevel());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 accid = 14;
    if (has_accid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accid());
    }

    // optional uint32 x = 15;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 16;
    if (has_y()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

    // optional uint32 z = 17;
    if (has_z()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z());
    }

    // optional uint32 map = 18;
    if (has_map()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->map());
    }

    // optional uint32 dir = 19;
    if (has_dir()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dir());
    }

    // optional uint32 mapw = 20;
    if (has_mapw()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapw());
    }

    // optional uint32 maph = 21;
    if (has_maph()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maph());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional uint32 speed = 22;
    if (has_speed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->speed());
    }

    // optional bool login = 23;
    if (has_login()) {
      total_size += 2 + 1;
    }

    // optional uint32 mp = 24;
    if (has_mp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mp());
    }

    // optional uint32 maxmp = 25;
    if (has_maxmp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxmp());
    }

    // optional uint32 hp = 26;
    if (has_hp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hp());
    }

    // optional uint32 maxhp = 27;
    if (has_maxhp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxhp());
    }

  }
  // repeated uint32 newbieguide = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->newbieguide_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->newbieguide(i));
    }
    total_size += 1 * this->newbieguide_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMainDataS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMainDataS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMainDataS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMainDataS2C::MergeFrom(const MsgMainDataS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  newbieguide_.MergeFrom(from.newbieguide_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_face()) {
      set_face(from.face());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_fcountry()) {
      set_fcountry(from.fcountry());
    }
    if (from.has_viplevel()) {
      set_viplevel(from.viplevel());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_accid()) {
      set_accid(from.accid());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_map()) {
      set_map(from.map());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
    if (from.has_mapw()) {
      set_mapw(from.mapw());
    }
    if (from.has_maph()) {
      set_maph(from.maph());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_speed()) {
      set_speed(from.speed());
    }
    if (from.has_login()) {
      set_login(from.login());
    }
    if (from.has_mp()) {
      set_mp(from.mp());
    }
    if (from.has_maxmp()) {
      set_maxmp(from.maxmp());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_maxhp()) {
      set_maxhp(from.maxhp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMainDataS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMainDataS2C::CopyFrom(const MsgMainDataS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMainDataS2C::IsInitialized() const {

  return true;
}

void MsgMainDataS2C::Swap(MsgMainDataS2C* other) {
  if (other != this) {
    std::swap(face_, other->face_);
    std::swap(charid_, other->charid_);
    std::swap(level_, other->level_);
    std::swap(name_, other->name_);
    std::swap(exp_, other->exp_);
    std::swap(fcountry_, other->fcountry_);
    newbieguide_.Swap(&other->newbieguide_);
    std::swap(viplevel_, other->viplevel_);
    std::swap(accid_, other->accid_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(map_, other->map_);
    std::swap(dir_, other->dir_);
    std::swap(mapw_, other->mapw_);
    std::swap(maph_, other->maph_);
    std::swap(speed_, other->speed_);
    std::swap(login_, other->login_);
    std::swap(mp_, other->mp_);
    std::swap(maxmp_, other->maxmp_);
    std::swap(hp_, other->hp_);
    std::swap(maxhp_, other->maxhp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMainDataS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMainDataS2C_descriptor_;
  metadata.reflection = MsgMainDataS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgTimeSyncS2C::kServertimeFieldNumber;
const int MsgTimeSyncS2C::kTimezoneFieldNumber;
#endif  // !_MSC_VER

MsgTimeSyncS2C::MsgTimeSyncS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgTimeSyncS2C)
}

void MsgTimeSyncS2C::InitAsDefaultInstance() {
}

MsgTimeSyncS2C::MsgTimeSyncS2C(const MsgTimeSyncS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgTimeSyncS2C)
}

void MsgTimeSyncS2C::SharedCtor() {
  _cached_size_ = 0;
  servertime_ = 0u;
  timezone_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTimeSyncS2C::~MsgTimeSyncS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgTimeSyncS2C)
  SharedDtor();
}

void MsgTimeSyncS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgTimeSyncS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTimeSyncS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTimeSyncS2C_descriptor_;
}

const MsgTimeSyncS2C& MsgTimeSyncS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgTimeSyncS2C* MsgTimeSyncS2C::default_instance_ = NULL;

MsgTimeSyncS2C* MsgTimeSyncS2C::New() const {
  return new MsgTimeSyncS2C;
}

void MsgTimeSyncS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgTimeSyncS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(servertime_, timezone_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgTimeSyncS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgTimeSyncS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 servertime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servertime_)));
          set_has_servertime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timezone;
        break;
      }

      // optional int32 timezone = 2;
      case 2: {
        if (tag == 16) {
         parse_timezone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timezone_)));
          set_has_timezone();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgTimeSyncS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgTimeSyncS2C)
  return false;
#undef DO_
}

void MsgTimeSyncS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgTimeSyncS2C)
  // optional uint32 servertime = 1;
  if (has_servertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->servertime(), output);
  }

  // optional int32 timezone = 2;
  if (has_timezone()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timezone(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgTimeSyncS2C)
}

::google::protobuf::uint8* MsgTimeSyncS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgTimeSyncS2C)
  // optional uint32 servertime = 1;
  if (has_servertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->servertime(), target);
  }

  // optional int32 timezone = 2;
  if (has_timezone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timezone(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgTimeSyncS2C)
  return target;
}

int MsgTimeSyncS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 servertime = 1;
    if (has_servertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->servertime());
    }

    // optional int32 timezone = 2;
    if (has_timezone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timezone());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTimeSyncS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgTimeSyncS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTimeSyncS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTimeSyncS2C::MergeFrom(const MsgTimeSyncS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_servertime()) {
      set_servertime(from.servertime());
    }
    if (from.has_timezone()) {
      set_timezone(from.timezone());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgTimeSyncS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTimeSyncS2C::CopyFrom(const MsgTimeSyncS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTimeSyncS2C::IsInitialized() const {

  return true;
}

void MsgTimeSyncS2C::Swap(MsgTimeSyncS2C* other) {
  if (other != this) {
    std::swap(servertime_, other->servertime_);
    std::swap(timezone_, other->timezone_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgTimeSyncS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTimeSyncS2C_descriptor_;
  metadata.reflection = MsgTimeSyncS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUpdateResS2C::kTypeFieldNumber;
const int MsgUpdateResS2C::kNumFieldNumber;
#endif  // !_MSC_VER

MsgUpdateResS2C::MsgUpdateResS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgUpdateResS2C)
}

void MsgUpdateResS2C::InitAsDefaultInstance() {
}

MsgUpdateResS2C::MsgUpdateResS2C(const MsgUpdateResS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgUpdateResS2C)
}

void MsgUpdateResS2C::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  num_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUpdateResS2C::~MsgUpdateResS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgUpdateResS2C)
  SharedDtor();
}

void MsgUpdateResS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgUpdateResS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgUpdateResS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUpdateResS2C_descriptor_;
}

const MsgUpdateResS2C& MsgUpdateResS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgUpdateResS2C* MsgUpdateResS2C::default_instance_ = NULL;

MsgUpdateResS2C* MsgUpdateResS2C::New() const {
  return new MsgUpdateResS2C;
}

void MsgUpdateResS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgUpdateResS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(num_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUpdateResS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgUpdateResS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional uint64 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgUpdateResS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgUpdateResS2C)
  return false;
#undef DO_
}

void MsgUpdateResS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgUpdateResS2C)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint64 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgUpdateResS2C)
}

::google::protobuf::uint8* MsgUpdateResS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgUpdateResS2C)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint64 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgUpdateResS2C)
  return target;
}

int MsgUpdateResS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint64 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgUpdateResS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUpdateResS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUpdateResS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUpdateResS2C::MergeFrom(const MsgUpdateResS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUpdateResS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUpdateResS2C::CopyFrom(const MsgUpdateResS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateResS2C::IsInitialized() const {

  return true;
}

void MsgUpdateResS2C::Swap(MsgUpdateResS2C* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUpdateResS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUpdateResS2C_descriptor_;
  metadata.reflection = MsgUpdateResS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgChatSystemS2C::kTypeFieldNumber;
const int MsgChatSystemS2C::kColorFieldNumber;
const int MsgChatSystemS2C::kMsgFieldNumber;
#endif  // !_MSC_VER

MsgChatSystemS2C::MsgChatSystemS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgChatSystemS2C)
}

void MsgChatSystemS2C::InitAsDefaultInstance() {
}

MsgChatSystemS2C::MsgChatSystemS2C(const MsgChatSystemS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgChatSystemS2C)
}

void MsgChatSystemS2C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0u;
  color_ = 0u;
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgChatSystemS2C::~MsgChatSystemS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgChatSystemS2C)
  SharedDtor();
}

void MsgChatSystemS2C::SharedDtor() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void MsgChatSystemS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgChatSystemS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgChatSystemS2C_descriptor_;
}

const MsgChatSystemS2C& MsgChatSystemS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgChatSystemS2C* MsgChatSystemS2C::default_instance_ = NULL;

MsgChatSystemS2C* MsgChatSystemS2C::New() const {
  return new MsgChatSystemS2C;
}

void MsgChatSystemS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgChatSystemS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(type_, color_);
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgChatSystemS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgChatSystemS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_color;
        break;
      }

      // optional uint32 color = 2;
      case 2: {
        if (tag == 16) {
         parse_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg;
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (tag == 26) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgChatSystemS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgChatSystemS2C)
  return false;
#undef DO_
}

void MsgChatSystemS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgChatSystemS2C)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 color = 2;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->color(), output);
  }

  // optional string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgChatSystemS2C)
}

::google::protobuf::uint8* MsgChatSystemS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgChatSystemS2C)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 color = 2;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->color(), target);
  }

  // optional string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgChatSystemS2C)
  return target;
}

int MsgChatSystemS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 color = 2;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->color());
    }

    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgChatSystemS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgChatSystemS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgChatSystemS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgChatSystemS2C::MergeFrom(const MsgChatSystemS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_color()) {
      set_color(from.color());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgChatSystemS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgChatSystemS2C::CopyFrom(const MsgChatSystemS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgChatSystemS2C::IsInitialized() const {

  return true;
}

void MsgChatSystemS2C::Swap(MsgChatSystemS2C* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(color_, other->color_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgChatSystemS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgChatSystemS2C_descriptor_;
  metadata.reflection = MsgChatSystemS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMapScreenRemoveCharS2C::kCharidFieldNumber;
const int MsgMapScreenRemoveCharS2C::kGohomeFieldNumber;
#endif  // !_MSC_VER

MsgMapScreenRemoveCharS2C::MsgMapScreenRemoveCharS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMapScreenRemoveCharS2C)
}

void MsgMapScreenRemoveCharS2C::InitAsDefaultInstance() {
}

MsgMapScreenRemoveCharS2C::MsgMapScreenRemoveCharS2C(const MsgMapScreenRemoveCharS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMapScreenRemoveCharS2C)
}

void MsgMapScreenRemoveCharS2C::SharedCtor() {
  _cached_size_ = 0;
  charid_ = 0u;
  gohome_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMapScreenRemoveCharS2C::~MsgMapScreenRemoveCharS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMapScreenRemoveCharS2C)
  SharedDtor();
}

void MsgMapScreenRemoveCharS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMapScreenRemoveCharS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMapScreenRemoveCharS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMapScreenRemoveCharS2C_descriptor_;
}

const MsgMapScreenRemoveCharS2C& MsgMapScreenRemoveCharS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMapScreenRemoveCharS2C* MsgMapScreenRemoveCharS2C::default_instance_ = NULL;

MsgMapScreenRemoveCharS2C* MsgMapScreenRemoveCharS2C::New() const {
  return new MsgMapScreenRemoveCharS2C;
}

void MsgMapScreenRemoveCharS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMapScreenRemoveCharS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(charid_, gohome_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMapScreenRemoveCharS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMapScreenRemoveCharS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 charid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gohome;
        break;
      }

      // optional bool gohome = 2;
      case 2: {
        if (tag == 16) {
         parse_gohome:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gohome_)));
          set_has_gohome();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMapScreenRemoveCharS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMapScreenRemoveCharS2C)
  return false;
#undef DO_
}

void MsgMapScreenRemoveCharS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMapScreenRemoveCharS2C)
  // optional uint32 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->charid(), output);
  }

  // optional bool gohome = 2;
  if (has_gohome()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->gohome(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMapScreenRemoveCharS2C)
}

::google::protobuf::uint8* MsgMapScreenRemoveCharS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMapScreenRemoveCharS2C)
  // optional uint32 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->charid(), target);
  }

  // optional bool gohome = 2;
  if (has_gohome()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->gohome(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMapScreenRemoveCharS2C)
  return target;
}

int MsgMapScreenRemoveCharS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->charid());
    }

    // optional bool gohome = 2;
    if (has_gohome()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMapScreenRemoveCharS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMapScreenRemoveCharS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMapScreenRemoveCharS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMapScreenRemoveCharS2C::MergeFrom(const MsgMapScreenRemoveCharS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_gohome()) {
      set_gohome(from.gohome());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMapScreenRemoveCharS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMapScreenRemoveCharS2C::CopyFrom(const MsgMapScreenRemoveCharS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMapScreenRemoveCharS2C::IsInitialized() const {

  return true;
}

void MsgMapScreenRemoveCharS2C::Swap(MsgMapScreenRemoveCharS2C* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(gohome_, other->gohome_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMapScreenRemoveCharS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMapScreenRemoveCharS2C_descriptor_;
  metadata.reflection = MsgMapScreenRemoveCharS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMapScreenBatchRemoveCharS2C::kCharidFieldNumber;
#endif  // !_MSC_VER

MsgMapScreenBatchRemoveCharS2C::MsgMapScreenBatchRemoveCharS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
}

void MsgMapScreenBatchRemoveCharS2C::InitAsDefaultInstance() {
}

MsgMapScreenBatchRemoveCharS2C::MsgMapScreenBatchRemoveCharS2C(const MsgMapScreenBatchRemoveCharS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
}

void MsgMapScreenBatchRemoveCharS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMapScreenBatchRemoveCharS2C::~MsgMapScreenBatchRemoveCharS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
  SharedDtor();
}

void MsgMapScreenBatchRemoveCharS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMapScreenBatchRemoveCharS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMapScreenBatchRemoveCharS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMapScreenBatchRemoveCharS2C_descriptor_;
}

const MsgMapScreenBatchRemoveCharS2C& MsgMapScreenBatchRemoveCharS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMapScreenBatchRemoveCharS2C* MsgMapScreenBatchRemoveCharS2C::default_instance_ = NULL;

MsgMapScreenBatchRemoveCharS2C* MsgMapScreenBatchRemoveCharS2C::New() const {
  return new MsgMapScreenBatchRemoveCharS2C;
}

void MsgMapScreenBatchRemoveCharS2C::Clear() {
  charid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMapScreenBatchRemoveCharS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 charid = 1;
      case 1: {
        if (tag == 8) {
         parse_charid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_charid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_charid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_charid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
  return false;
#undef DO_
}

void MsgMapScreenBatchRemoveCharS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
  // repeated uint32 charid = 1;
  for (int i = 0; i < this->charid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->charid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
}

::google::protobuf::uint8* MsgMapScreenBatchRemoveCharS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
  // repeated uint32 charid = 1;
  for (int i = 0; i < this->charid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->charid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMapScreenBatchRemoveCharS2C)
  return target;
}

int MsgMapScreenBatchRemoveCharS2C::ByteSize() const {
  int total_size = 0;

  // repeated uint32 charid = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->charid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->charid(i));
    }
    total_size += 1 * this->charid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMapScreenBatchRemoveCharS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMapScreenBatchRemoveCharS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMapScreenBatchRemoveCharS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMapScreenBatchRemoveCharS2C::MergeFrom(const MsgMapScreenBatchRemoveCharS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  charid_.MergeFrom(from.charid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMapScreenBatchRemoveCharS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMapScreenBatchRemoveCharS2C::CopyFrom(const MsgMapScreenBatchRemoveCharS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMapScreenBatchRemoveCharS2C::IsInitialized() const {

  return true;
}

void MsgMapScreenBatchRemoveCharS2C::Swap(MsgMapScreenBatchRemoveCharS2C* other) {
  if (other != this) {
    charid_.Swap(&other->charid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMapScreenBatchRemoveCharS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMapScreenBatchRemoveCharS2C_descriptor_;
  metadata.reflection = MsgMapScreenBatchRemoveCharS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMapScreenRemoveNpcS2C::kTempidFieldNumber;
#endif  // !_MSC_VER

MsgMapScreenRemoveNpcS2C::MsgMapScreenRemoveNpcS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMapScreenRemoveNpcS2C)
}

void MsgMapScreenRemoveNpcS2C::InitAsDefaultInstance() {
}

MsgMapScreenRemoveNpcS2C::MsgMapScreenRemoveNpcS2C(const MsgMapScreenRemoveNpcS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMapScreenRemoveNpcS2C)
}

void MsgMapScreenRemoveNpcS2C::SharedCtor() {
  _cached_size_ = 0;
  tempid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMapScreenRemoveNpcS2C::~MsgMapScreenRemoveNpcS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMapScreenRemoveNpcS2C)
  SharedDtor();
}

void MsgMapScreenRemoveNpcS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMapScreenRemoveNpcS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMapScreenRemoveNpcS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMapScreenRemoveNpcS2C_descriptor_;
}

const MsgMapScreenRemoveNpcS2C& MsgMapScreenRemoveNpcS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMapScreenRemoveNpcS2C* MsgMapScreenRemoveNpcS2C::default_instance_ = NULL;

MsgMapScreenRemoveNpcS2C* MsgMapScreenRemoveNpcS2C::New() const {
  return new MsgMapScreenRemoveNpcS2C;
}

void MsgMapScreenRemoveNpcS2C::Clear() {
  tempid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMapScreenRemoveNpcS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMapScreenRemoveNpcS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tempid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tempid_)));
          set_has_tempid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMapScreenRemoveNpcS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMapScreenRemoveNpcS2C)
  return false;
#undef DO_
}

void MsgMapScreenRemoveNpcS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMapScreenRemoveNpcS2C)
  // optional uint32 tempid = 1;
  if (has_tempid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tempid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMapScreenRemoveNpcS2C)
}

::google::protobuf::uint8* MsgMapScreenRemoveNpcS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMapScreenRemoveNpcS2C)
  // optional uint32 tempid = 1;
  if (has_tempid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tempid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMapScreenRemoveNpcS2C)
  return target;
}

int MsgMapScreenRemoveNpcS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 tempid = 1;
    if (has_tempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tempid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMapScreenRemoveNpcS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMapScreenRemoveNpcS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMapScreenRemoveNpcS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMapScreenRemoveNpcS2C::MergeFrom(const MsgMapScreenRemoveNpcS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tempid()) {
      set_tempid(from.tempid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMapScreenRemoveNpcS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMapScreenRemoveNpcS2C::CopyFrom(const MsgMapScreenRemoveNpcS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMapScreenRemoveNpcS2C::IsInitialized() const {

  return true;
}

void MsgMapScreenRemoveNpcS2C::Swap(MsgMapScreenRemoveNpcS2C* other) {
  if (other != this) {
    std::swap(tempid_, other->tempid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMapScreenRemoveNpcS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMapScreenRemoveNpcS2C_descriptor_;
  metadata.reflection = MsgMapScreenRemoveNpcS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMapScreenBatchRemoveNpcS2C::kNpcidFieldNumber;
#endif  // !_MSC_VER

MsgMapScreenBatchRemoveNpcS2C::MsgMapScreenBatchRemoveNpcS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
}

void MsgMapScreenBatchRemoveNpcS2C::InitAsDefaultInstance() {
}

MsgMapScreenBatchRemoveNpcS2C::MsgMapScreenBatchRemoveNpcS2C(const MsgMapScreenBatchRemoveNpcS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
}

void MsgMapScreenBatchRemoveNpcS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMapScreenBatchRemoveNpcS2C::~MsgMapScreenBatchRemoveNpcS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
  SharedDtor();
}

void MsgMapScreenBatchRemoveNpcS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMapScreenBatchRemoveNpcS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMapScreenBatchRemoveNpcS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMapScreenBatchRemoveNpcS2C_descriptor_;
}

const MsgMapScreenBatchRemoveNpcS2C& MsgMapScreenBatchRemoveNpcS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMapScreenBatchRemoveNpcS2C* MsgMapScreenBatchRemoveNpcS2C::default_instance_ = NULL;

MsgMapScreenBatchRemoveNpcS2C* MsgMapScreenBatchRemoveNpcS2C::New() const {
  return new MsgMapScreenBatchRemoveNpcS2C;
}

void MsgMapScreenBatchRemoveNpcS2C::Clear() {
  npcid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMapScreenBatchRemoveNpcS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 npcid = 1;
      case 1: {
        if (tag == 8) {
         parse_npcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_npcid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_npcid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_npcid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
  return false;
#undef DO_
}

void MsgMapScreenBatchRemoveNpcS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
  // repeated uint32 npcid = 1;
  for (int i = 0; i < this->npcid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->npcid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
}

::google::protobuf::uint8* MsgMapScreenBatchRemoveNpcS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
  // repeated uint32 npcid = 1;
  for (int i = 0; i < this->npcid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->npcid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMapScreenBatchRemoveNpcS2C)
  return target;
}

int MsgMapScreenBatchRemoveNpcS2C::ByteSize() const {
  int total_size = 0;

  // repeated uint32 npcid = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->npcid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->npcid(i));
    }
    total_size += 1 * this->npcid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMapScreenBatchRemoveNpcS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMapScreenBatchRemoveNpcS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMapScreenBatchRemoveNpcS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMapScreenBatchRemoveNpcS2C::MergeFrom(const MsgMapScreenBatchRemoveNpcS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  npcid_.MergeFrom(from.npcid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMapScreenBatchRemoveNpcS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMapScreenBatchRemoveNpcS2C::CopyFrom(const MsgMapScreenBatchRemoveNpcS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMapScreenBatchRemoveNpcS2C::IsInitialized() const {

  return true;
}

void MsgMapScreenBatchRemoveNpcS2C::Swap(MsgMapScreenBatchRemoveNpcS2C* other) {
  if (other != this) {
    npcid_.Swap(&other->npcid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMapScreenBatchRemoveNpcS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMapScreenBatchRemoveNpcS2C_descriptor_;
  metadata.reflection = MsgMapScreenBatchRemoveNpcS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMapScreenDeathNpcS2C::kTargetidFieldNumber;
const int MsgMapScreenDeathNpcS2C::kDirFieldNumber;
const int MsgMapScreenDeathNpcS2C::kDisappeartimeFieldNumber;
const int MsgMapScreenDeathNpcS2C::kKillerFieldNumber;
#endif  // !_MSC_VER

MsgMapScreenDeathNpcS2C::MsgMapScreenDeathNpcS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMapScreenDeathNpcS2C)
}

void MsgMapScreenDeathNpcS2C::InitAsDefaultInstance() {
}

MsgMapScreenDeathNpcS2C::MsgMapScreenDeathNpcS2C(const MsgMapScreenDeathNpcS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMapScreenDeathNpcS2C)
}

void MsgMapScreenDeathNpcS2C::SharedCtor() {
  _cached_size_ = 0;
  targetid_ = 0u;
  dir_ = 0u;
  disappeartime_ = 0u;
  killer_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMapScreenDeathNpcS2C::~MsgMapScreenDeathNpcS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMapScreenDeathNpcS2C)
  SharedDtor();
}

void MsgMapScreenDeathNpcS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMapScreenDeathNpcS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMapScreenDeathNpcS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMapScreenDeathNpcS2C_descriptor_;
}

const MsgMapScreenDeathNpcS2C& MsgMapScreenDeathNpcS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMapScreenDeathNpcS2C* MsgMapScreenDeathNpcS2C::default_instance_ = NULL;

MsgMapScreenDeathNpcS2C* MsgMapScreenDeathNpcS2C::New() const {
  return new MsgMapScreenDeathNpcS2C;
}

void MsgMapScreenDeathNpcS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMapScreenDeathNpcS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(targetid_, killer_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMapScreenDeathNpcS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMapScreenDeathNpcS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 targetid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetid_)));
          set_has_targetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dir;
        break;
      }

      // optional uint32 dir = 2;
      case 2: {
        if (tag == 16) {
         parse_dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_disappeartime;
        break;
      }

      // optional uint32 disappeartime = 3;
      case 3: {
        if (tag == 24) {
         parse_disappeartime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &disappeartime_)));
          set_has_disappeartime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_killer;
        break;
      }

      // optional uint32 killer = 4;
      case 4: {
        if (tag == 32) {
         parse_killer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killer_)));
          set_has_killer();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMapScreenDeathNpcS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMapScreenDeathNpcS2C)
  return false;
#undef DO_
}

void MsgMapScreenDeathNpcS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMapScreenDeathNpcS2C)
  // optional uint32 targetid = 1;
  if (has_targetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->targetid(), output);
  }

  // optional uint32 dir = 2;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dir(), output);
  }

  // optional uint32 disappeartime = 3;
  if (has_disappeartime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->disappeartime(), output);
  }

  // optional uint32 killer = 4;
  if (has_killer()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->killer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMapScreenDeathNpcS2C)
}

::google::protobuf::uint8* MsgMapScreenDeathNpcS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMapScreenDeathNpcS2C)
  // optional uint32 targetid = 1;
  if (has_targetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->targetid(), target);
  }

  // optional uint32 dir = 2;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dir(), target);
  }

  // optional uint32 disappeartime = 3;
  if (has_disappeartime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->disappeartime(), target);
  }

  // optional uint32 killer = 4;
  if (has_killer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->killer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMapScreenDeathNpcS2C)
  return target;
}

int MsgMapScreenDeathNpcS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 targetid = 1;
    if (has_targetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetid());
    }

    // optional uint32 dir = 2;
    if (has_dir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dir());
    }

    // optional uint32 disappeartime = 3;
    if (has_disappeartime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->disappeartime());
    }

    // optional uint32 killer = 4;
    if (has_killer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->killer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMapScreenDeathNpcS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMapScreenDeathNpcS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMapScreenDeathNpcS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMapScreenDeathNpcS2C::MergeFrom(const MsgMapScreenDeathNpcS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_targetid()) {
      set_targetid(from.targetid());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
    if (from.has_disappeartime()) {
      set_disappeartime(from.disappeartime());
    }
    if (from.has_killer()) {
      set_killer(from.killer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMapScreenDeathNpcS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMapScreenDeathNpcS2C::CopyFrom(const MsgMapScreenDeathNpcS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMapScreenDeathNpcS2C::IsInitialized() const {

  return true;
}

void MsgMapScreenDeathNpcS2C::Swap(MsgMapScreenDeathNpcS2C* other) {
  if (other != this) {
    std::swap(targetid_, other->targetid_);
    std::swap(dir_, other->dir_);
    std::swap(disappeartime_, other->disappeartime_);
    std::swap(killer_, other->killer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMapScreenDeathNpcS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMapScreenDeathNpcS2C_descriptor_;
  metadata.reflection = MsgMapScreenDeathNpcS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgGMCommandC2S::kStrFieldNumber;
#endif  // !_MSC_VER

MsgGMCommandC2S::MsgGMCommandC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgGMCommandC2S)
}

void MsgGMCommandC2S::InitAsDefaultInstance() {
}

MsgGMCommandC2S::MsgGMCommandC2S(const MsgGMCommandC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgGMCommandC2S)
}

void MsgGMCommandC2S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgGMCommandC2S::~MsgGMCommandC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgGMCommandC2S)
  SharedDtor();
}

void MsgGMCommandC2S::SharedDtor() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void MsgGMCommandC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGMCommandC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgGMCommandC2S_descriptor_;
}

const MsgGMCommandC2S& MsgGMCommandC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgGMCommandC2S* MsgGMCommandC2S::default_instance_ = NULL;

MsgGMCommandC2S* MsgGMCommandC2S::New() const {
  return new MsgGMCommandC2S;
}

void MsgGMCommandC2S::Clear() {
  if (has_str()) {
    if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      str_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgGMCommandC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgGMCommandC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "str");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgGMCommandC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgGMCommandC2S)
  return false;
#undef DO_
}

void MsgGMCommandC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgGMCommandC2S)
  // optional string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgGMCommandC2S)
}

::google::protobuf::uint8* MsgGMCommandC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgGMCommandC2S)
  // optional string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgGMCommandC2S)
  return target;
}

int MsgGMCommandC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string str = 1;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGMCommandC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgGMCommandC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgGMCommandC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgGMCommandC2S::MergeFrom(const MsgGMCommandC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_str()) {
      set_str(from.str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgGMCommandC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGMCommandC2S::CopyFrom(const MsgGMCommandC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGMCommandC2S::IsInitialized() const {

  return true;
}

void MsgGMCommandC2S::Swap(MsgGMCommandC2S* other) {
  if (other != this) {
    std::swap(str_, other->str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgGMCommandC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgGMCommandC2S_descriptor_;
  metadata.reflection = MsgGMCommandC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicAttackCSC_stpTarget::kTargettypeFieldNumber;
const int MsgMagicAttackCSC_stpTarget::kTargetidFieldNumber;
#endif  // !_MSC_VER

MsgMagicAttackCSC_stpTarget::MsgMagicAttackCSC_stpTarget()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMagicAttackCSC.stpTarget)
}

void MsgMagicAttackCSC_stpTarget::InitAsDefaultInstance() {
}

MsgMagicAttackCSC_stpTarget::MsgMagicAttackCSC_stpTarget(const MsgMagicAttackCSC_stpTarget& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMagicAttackCSC.stpTarget)
}

void MsgMagicAttackCSC_stpTarget::SharedCtor() {
  _cached_size_ = 0;
  targettype_ = 0u;
  targetid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicAttackCSC_stpTarget::~MsgMagicAttackCSC_stpTarget() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMagicAttackCSC.stpTarget)
  SharedDtor();
}

void MsgMagicAttackCSC_stpTarget::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMagicAttackCSC_stpTarget::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMagicAttackCSC_stpTarget::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicAttackCSC_stpTarget_descriptor_;
}

const MsgMagicAttackCSC_stpTarget& MsgMagicAttackCSC_stpTarget::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMagicAttackCSC_stpTarget* MsgMagicAttackCSC_stpTarget::default_instance_ = NULL;

MsgMagicAttackCSC_stpTarget* MsgMagicAttackCSC_stpTarget::New() const {
  return new MsgMagicAttackCSC_stpTarget;
}

void MsgMagicAttackCSC_stpTarget::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMagicAttackCSC_stpTarget*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(targettype_, targetid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicAttackCSC_stpTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMagicAttackCSC.stpTarget)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 targettype = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targettype_)));
          set_has_targettype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_targetid;
        break;
      }

      // optional uint32 targetid = 2;
      case 2: {
        if (tag == 16) {
         parse_targetid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetid_)));
          set_has_targetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMagicAttackCSC.stpTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMagicAttackCSC.stpTarget)
  return false;
#undef DO_
}

void MsgMagicAttackCSC_stpTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMagicAttackCSC.stpTarget)
  // optional uint32 targettype = 1;
  if (has_targettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->targettype(), output);
  }

  // optional uint32 targetid = 2;
  if (has_targetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->targetid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMagicAttackCSC.stpTarget)
}

::google::protobuf::uint8* MsgMagicAttackCSC_stpTarget::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMagicAttackCSC.stpTarget)
  // optional uint32 targettype = 1;
  if (has_targettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->targettype(), target);
  }

  // optional uint32 targetid = 2;
  if (has_targetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->targetid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMagicAttackCSC.stpTarget)
  return target;
}

int MsgMagicAttackCSC_stpTarget::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 targettype = 1;
    if (has_targettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targettype());
    }

    // optional uint32 targetid = 2;
    if (has_targetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMagicAttackCSC_stpTarget::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicAttackCSC_stpTarget* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicAttackCSC_stpTarget*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicAttackCSC_stpTarget::MergeFrom(const MsgMagicAttackCSC_stpTarget& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_targettype()) {
      set_targettype(from.targettype());
    }
    if (from.has_targetid()) {
      set_targetid(from.targetid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicAttackCSC_stpTarget::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicAttackCSC_stpTarget::CopyFrom(const MsgMagicAttackCSC_stpTarget& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicAttackCSC_stpTarget::IsInitialized() const {

  return true;
}

void MsgMagicAttackCSC_stpTarget::Swap(MsgMagicAttackCSC_stpTarget* other) {
  if (other != this) {
    std::swap(targettype_, other->targettype_);
    std::swap(targetid_, other->targetid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicAttackCSC_stpTarget::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicAttackCSC_stpTarget_descriptor_;
  metadata.reflection = MsgMagicAttackCSC_stpTarget_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgMagicAttackCSC::kSrctypeFieldNumber;
const int MsgMagicAttackCSC::kSrcidFieldNumber;
const int MsgMagicAttackCSC::kSkillidFieldNumber;
const int MsgMagicAttackCSC::kDestypeFieldNumber;
const int MsgMagicAttackCSC::kDesidFieldNumber;
const int MsgMagicAttackCSC::kXFieldNumber;
const int MsgMagicAttackCSC::kYFieldNumber;
const int MsgMagicAttackCSC::kDirFieldNumber;
const int MsgMagicAttackCSC::kTargetFieldNumber;
const int MsgMagicAttackCSC::kZFieldNumber;
#endif  // !_MSC_VER

MsgMagicAttackCSC::MsgMagicAttackCSC()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMagicAttackCSC)
}

void MsgMagicAttackCSC::InitAsDefaultInstance() {
}

MsgMagicAttackCSC::MsgMagicAttackCSC(const MsgMagicAttackCSC& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMagicAttackCSC)
}

void MsgMagicAttackCSC::SharedCtor() {
  _cached_size_ = 0;
  srctype_ = 0u;
  srcid_ = 0u;
  skillid_ = 0u;
  destype_ = 0u;
  desid_ = 0u;
  x_ = 0u;
  y_ = 0u;
  dir_ = 0u;
  z_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicAttackCSC::~MsgMagicAttackCSC() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMagicAttackCSC)
  SharedDtor();
}

void MsgMagicAttackCSC::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMagicAttackCSC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMagicAttackCSC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicAttackCSC_descriptor_;
}

const MsgMagicAttackCSC& MsgMagicAttackCSC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMagicAttackCSC* MsgMagicAttackCSC::default_instance_ = NULL;

MsgMagicAttackCSC* MsgMagicAttackCSC::New() const {
  return new MsgMagicAttackCSC;
}

void MsgMagicAttackCSC::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMagicAttackCSC*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(srctype_, dir_);
  }
  z_ = 0u;

#undef OFFSET_OF_FIELD_
#undef ZR_

  target_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicAttackCSC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMagicAttackCSC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 srctype = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &srctype_)));
          set_has_srctype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_srcid;
        break;
      }

      // optional uint32 srcid = 2;
      case 2: {
        if (tag == 16) {
         parse_srcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &srcid_)));
          set_has_srcid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_skillid;
        break;
      }

      // optional uint32 skillid = 3;
      case 3: {
        if (tag == 24) {
         parse_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_destype;
        break;
      }

      // optional uint32 destype = 4;
      case 4: {
        if (tag == 32) {
         parse_destype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destype_)));
          set_has_destype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_desid;
        break;
      }

      // optional uint32 desid = 5;
      case 5: {
        if (tag == 40) {
         parse_desid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desid_)));
          set_has_desid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_x;
        break;
      }

      // optional uint32 x = 6;
      case 6: {
        if (tag == 48) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_y;
        break;
      }

      // optional uint32 y = 7;
      case 7: {
        if (tag == 56) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_dir;
        break;
      }

      // optional uint32 dir = 8;
      case 8: {
        if (tag == 64) {
         parse_dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_target;
        break;
      }

      // repeated .FProtoClient.MsgMagicAttackCSC.stpTarget target = 9;
      case 9: {
        if (tag == 74) {
         parse_target:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_target()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_target;
        if (input->ExpectTag(80)) goto parse_z;
        break;
      }

      // optional uint32 z = 10;
      case 10: {
        if (tag == 80) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMagicAttackCSC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMagicAttackCSC)
  return false;
#undef DO_
}

void MsgMagicAttackCSC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMagicAttackCSC)
  // optional uint32 srctype = 1;
  if (has_srctype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->srctype(), output);
  }

  // optional uint32 srcid = 2;
  if (has_srcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->srcid(), output);
  }

  // optional uint32 skillid = 3;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->skillid(), output);
  }

  // optional uint32 destype = 4;
  if (has_destype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->destype(), output);
  }

  // optional uint32 desid = 5;
  if (has_desid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->desid(), output);
  }

  // optional uint32 x = 6;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->x(), output);
  }

  // optional uint32 y = 7;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->y(), output);
  }

  // optional uint32 dir = 8;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->dir(), output);
  }

  // repeated .FProtoClient.MsgMagicAttackCSC.stpTarget target = 9;
  for (int i = 0; i < this->target_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->target(i), output);
  }

  // optional uint32 z = 10;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMagicAttackCSC)
}

::google::protobuf::uint8* MsgMagicAttackCSC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMagicAttackCSC)
  // optional uint32 srctype = 1;
  if (has_srctype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->srctype(), target);
  }

  // optional uint32 srcid = 2;
  if (has_srcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->srcid(), target);
  }

  // optional uint32 skillid = 3;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->skillid(), target);
  }

  // optional uint32 destype = 4;
  if (has_destype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->destype(), target);
  }

  // optional uint32 desid = 5;
  if (has_desid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->desid(), target);
  }

  // optional uint32 x = 6;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->x(), target);
  }

  // optional uint32 y = 7;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->y(), target);
  }

  // optional uint32 dir = 8;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->dir(), target);
  }

  // repeated .FProtoClient.MsgMagicAttackCSC.stpTarget target = 9;
  for (int i = 0; i < this->target_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->target(i), target);
  }

  // optional uint32 z = 10;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMagicAttackCSC)
  return target;
}

int MsgMagicAttackCSC::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 srctype = 1;
    if (has_srctype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->srctype());
    }

    // optional uint32 srcid = 2;
    if (has_srcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->srcid());
    }

    // optional uint32 skillid = 3;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

    // optional uint32 destype = 4;
    if (has_destype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->destype());
    }

    // optional uint32 desid = 5;
    if (has_desid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->desid());
    }

    // optional uint32 x = 6;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 7;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

    // optional uint32 dir = 8;
    if (has_dir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dir());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional uint32 z = 10;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z());
    }

  }
  // repeated .FProtoClient.MsgMagicAttackCSC.stpTarget target = 9;
  total_size += 1 * this->target_size();
  for (int i = 0; i < this->target_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->target(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMagicAttackCSC::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicAttackCSC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicAttackCSC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicAttackCSC::MergeFrom(const MsgMagicAttackCSC& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_.MergeFrom(from.target_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srctype()) {
      set_srctype(from.srctype());
    }
    if (from.has_srcid()) {
      set_srcid(from.srcid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_destype()) {
      set_destype(from.destype());
    }
    if (from.has_desid()) {
      set_desid(from.desid());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicAttackCSC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicAttackCSC::CopyFrom(const MsgMagicAttackCSC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicAttackCSC::IsInitialized() const {

  return true;
}

void MsgMagicAttackCSC::Swap(MsgMagicAttackCSC* other) {
  if (other != this) {
    std::swap(srctype_, other->srctype_);
    std::swap(srcid_, other->srcid_);
    std::swap(skillid_, other->skillid_);
    std::swap(destype_, other->destype_);
    std::swap(desid_, other->desid_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(dir_, other->dir_);
    target_.Swap(&other->target_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicAttackCSC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicAttackCSC_descriptor_;
  metadata.reflection = MsgMagicAttackCSC_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicAttackFailedS2C::kSkillidFieldNumber;
const int MsgMagicAttackFailedS2C::kFailedFieldNumber;
#endif  // !_MSC_VER

MsgMagicAttackFailedS2C::MsgMagicAttackFailedS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMagicAttackFailedS2C)
}

void MsgMagicAttackFailedS2C::InitAsDefaultInstance() {
}

MsgMagicAttackFailedS2C::MsgMagicAttackFailedS2C(const MsgMagicAttackFailedS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMagicAttackFailedS2C)
}

void MsgMagicAttackFailedS2C::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = 0u;
  failed_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicAttackFailedS2C::~MsgMagicAttackFailedS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMagicAttackFailedS2C)
  SharedDtor();
}

void MsgMagicAttackFailedS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMagicAttackFailedS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMagicAttackFailedS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicAttackFailedS2C_descriptor_;
}

const MsgMagicAttackFailedS2C& MsgMagicAttackFailedS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMagicAttackFailedS2C* MsgMagicAttackFailedS2C::default_instance_ = NULL;

MsgMagicAttackFailedS2C* MsgMagicAttackFailedS2C::New() const {
  return new MsgMagicAttackFailedS2C;
}

void MsgMagicAttackFailedS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMagicAttackFailedS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(skillid_, failed_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicAttackFailedS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMagicAttackFailedS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 skillid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_failed;
        break;
      }

      // optional uint32 failed = 2;
      case 2: {
        if (tag == 16) {
         parse_failed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &failed_)));
          set_has_failed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMagicAttackFailedS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMagicAttackFailedS2C)
  return false;
#undef DO_
}

void MsgMagicAttackFailedS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMagicAttackFailedS2C)
  // optional uint32 skillid = 1;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->skillid(), output);
  }

  // optional uint32 failed = 2;
  if (has_failed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->failed(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMagicAttackFailedS2C)
}

::google::protobuf::uint8* MsgMagicAttackFailedS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMagicAttackFailedS2C)
  // optional uint32 skillid = 1;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->skillid(), target);
  }

  // optional uint32 failed = 2;
  if (has_failed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->failed(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMagicAttackFailedS2C)
  return target;
}

int MsgMagicAttackFailedS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 skillid = 1;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

    // optional uint32 failed = 2;
    if (has_failed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->failed());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMagicAttackFailedS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicAttackFailedS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicAttackFailedS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicAttackFailedS2C::MergeFrom(const MsgMagicAttackFailedS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_failed()) {
      set_failed(from.failed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicAttackFailedS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicAttackFailedS2C::CopyFrom(const MsgMagicAttackFailedS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicAttackFailedS2C::IsInitialized() const {

  return true;
}

void MsgMagicAttackFailedS2C::Swap(MsgMagicAttackFailedS2C* other) {
  if (other != this) {
    std::swap(skillid_, other->skillid_);
    std::swap(failed_, other->failed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicAttackFailedS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicAttackFailedS2C_descriptor_;
  metadata.reflection = MsgMagicAttackFailedS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicAttackResS2C::kSrcidFieldNumber;
const int MsgMagicAttackResS2C::kSrctypeFieldNumber;
const int MsgMagicAttackResS2C::kDesidFieldNumber;
const int MsgMagicAttackResS2C::kDestypeFieldNumber;
const int MsgMagicAttackResS2C::kAttacktypeFieldNumber;
const int MsgMagicAttackResS2C::kHpFieldNumber;
const int MsgMagicAttackResS2C::kSkillidFieldNumber;
#endif  // !_MSC_VER

MsgMagicAttackResS2C::MsgMagicAttackResS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMagicAttackResS2C)
}

void MsgMagicAttackResS2C::InitAsDefaultInstance() {
}

MsgMagicAttackResS2C::MsgMagicAttackResS2C(const MsgMagicAttackResS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMagicAttackResS2C)
}

void MsgMagicAttackResS2C::SharedCtor() {
  _cached_size_ = 0;
  srcid_ = 0u;
  srctype_ = 0u;
  desid_ = 0u;
  destype_ = 0u;
  attacktype_ = 0u;
  hp_ = 0;
  skillid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicAttackResS2C::~MsgMagicAttackResS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMagicAttackResS2C)
  SharedDtor();
}

void MsgMagicAttackResS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMagicAttackResS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMagicAttackResS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicAttackResS2C_descriptor_;
}

const MsgMagicAttackResS2C& MsgMagicAttackResS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMagicAttackResS2C* MsgMagicAttackResS2C::default_instance_ = NULL;

MsgMagicAttackResS2C* MsgMagicAttackResS2C::New() const {
  return new MsgMagicAttackResS2C;
}

void MsgMagicAttackResS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMagicAttackResS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(srcid_, skillid_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicAttackResS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMagicAttackResS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 srcid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &srcid_)));
          set_has_srcid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_srctype;
        break;
      }

      // optional uint32 srctype = 2;
      case 2: {
        if (tag == 16) {
         parse_srctype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &srctype_)));
          set_has_srctype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_desid;
        break;
      }

      // optional uint32 desid = 3;
      case 3: {
        if (tag == 24) {
         parse_desid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desid_)));
          set_has_desid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_destype;
        break;
      }

      // optional uint32 destype = 4;
      case 4: {
        if (tag == 32) {
         parse_destype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destype_)));
          set_has_destype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_attacktype;
        break;
      }

      // optional uint32 attacktype = 5;
      case 5: {
        if (tag == 40) {
         parse_attacktype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attacktype_)));
          set_has_attacktype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hp;
        break;
      }

      // optional int32 hp = 6;
      case 6: {
        if (tag == 48) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_skillid;
        break;
      }

      // optional uint32 skillid = 7;
      case 7: {
        if (tag == 56) {
         parse_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMagicAttackResS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMagicAttackResS2C)
  return false;
#undef DO_
}

void MsgMagicAttackResS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMagicAttackResS2C)
  // optional uint32 srcid = 1;
  if (has_srcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->srcid(), output);
  }

  // optional uint32 srctype = 2;
  if (has_srctype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->srctype(), output);
  }

  // optional uint32 desid = 3;
  if (has_desid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->desid(), output);
  }

  // optional uint32 destype = 4;
  if (has_destype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->destype(), output);
  }

  // optional uint32 attacktype = 5;
  if (has_attacktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->attacktype(), output);
  }

  // optional int32 hp = 6;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->hp(), output);
  }

  // optional uint32 skillid = 7;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMagicAttackResS2C)
}

::google::protobuf::uint8* MsgMagicAttackResS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMagicAttackResS2C)
  // optional uint32 srcid = 1;
  if (has_srcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->srcid(), target);
  }

  // optional uint32 srctype = 2;
  if (has_srctype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->srctype(), target);
  }

  // optional uint32 desid = 3;
  if (has_desid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->desid(), target);
  }

  // optional uint32 destype = 4;
  if (has_destype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->destype(), target);
  }

  // optional uint32 attacktype = 5;
  if (has_attacktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->attacktype(), target);
  }

  // optional int32 hp = 6;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->hp(), target);
  }

  // optional uint32 skillid = 7;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMagicAttackResS2C)
  return target;
}

int MsgMagicAttackResS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 srcid = 1;
    if (has_srcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->srcid());
    }

    // optional uint32 srctype = 2;
    if (has_srctype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->srctype());
    }

    // optional uint32 desid = 3;
    if (has_desid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->desid());
    }

    // optional uint32 destype = 4;
    if (has_destype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->destype());
    }

    // optional uint32 attacktype = 5;
    if (has_attacktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attacktype());
    }

    // optional int32 hp = 6;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

    // optional uint32 skillid = 7;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMagicAttackResS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicAttackResS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicAttackResS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicAttackResS2C::MergeFrom(const MsgMagicAttackResS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srcid()) {
      set_srcid(from.srcid());
    }
    if (from.has_srctype()) {
      set_srctype(from.srctype());
    }
    if (from.has_desid()) {
      set_desid(from.desid());
    }
    if (from.has_destype()) {
      set_destype(from.destype());
    }
    if (from.has_attacktype()) {
      set_attacktype(from.attacktype());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicAttackResS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicAttackResS2C::CopyFrom(const MsgMagicAttackResS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicAttackResS2C::IsInitialized() const {

  return true;
}

void MsgMagicAttackResS2C::Swap(MsgMagicAttackResS2C* other) {
  if (other != this) {
    std::swap(srcid_, other->srcid_);
    std::swap(srctype_, other->srctype_);
    std::swap(desid_, other->desid_);
    std::swap(destype_, other->destype_);
    std::swap(attacktype_, other->attacktype_);
    std::swap(hp_, other->hp_);
    std::swap(skillid_, other->skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicAttackResS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicAttackResS2C_descriptor_;
  metadata.reflection = MsgMagicAttackResS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicTargetDeathS2C::kIdFieldNumber;
#endif  // !_MSC_VER

MsgMagicTargetDeathS2C::MsgMagicTargetDeathS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgMagicTargetDeathS2C)
}

void MsgMagicTargetDeathS2C::InitAsDefaultInstance() {
}

MsgMagicTargetDeathS2C::MsgMagicTargetDeathS2C(const MsgMagicTargetDeathS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgMagicTargetDeathS2C)
}

void MsgMagicTargetDeathS2C::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicTargetDeathS2C::~MsgMagicTargetDeathS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgMagicTargetDeathS2C)
  SharedDtor();
}

void MsgMagicTargetDeathS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMagicTargetDeathS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMagicTargetDeathS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicTargetDeathS2C_descriptor_;
}

const MsgMagicTargetDeathS2C& MsgMagicTargetDeathS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgMagicTargetDeathS2C* MsgMagicTargetDeathS2C::default_instance_ = NULL;

MsgMagicTargetDeathS2C* MsgMagicTargetDeathS2C::New() const {
  return new MsgMagicTargetDeathS2C;
}

void MsgMagicTargetDeathS2C::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicTargetDeathS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgMagicTargetDeathS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgMagicTargetDeathS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgMagicTargetDeathS2C)
  return false;
#undef DO_
}

void MsgMagicTargetDeathS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgMagicTargetDeathS2C)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgMagicTargetDeathS2C)
}

::google::protobuf::uint8* MsgMagicTargetDeathS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgMagicTargetDeathS2C)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgMagicTargetDeathS2C)
  return target;
}

int MsgMagicTargetDeathS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMagicTargetDeathS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicTargetDeathS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicTargetDeathS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicTargetDeathS2C::MergeFrom(const MsgMagicTargetDeathS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicTargetDeathS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicTargetDeathS2C::CopyFrom(const MsgMagicTargetDeathS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicTargetDeathS2C::IsInitialized() const {

  return true;
}

void MsgMagicTargetDeathS2C::Swap(MsgMagicTargetDeathS2C* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicTargetDeathS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicTargetDeathS2C_descriptor_;
  metadata.reflection = MsgMagicTargetDeathS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgTipsS2C::kTypeFieldNumber;
const int MsgTipsS2C::kTipsFieldNumber;
#endif  // !_MSC_VER

MsgTipsS2C::MsgTipsS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgTipsS2C)
}

void MsgTipsS2C::InitAsDefaultInstance() {
}

MsgTipsS2C::MsgTipsS2C(const MsgTipsS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgTipsS2C)
}

void MsgTipsS2C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0u;
  tips_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTipsS2C::~MsgTipsS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgTipsS2C)
  SharedDtor();
}

void MsgTipsS2C::SharedDtor() {
  if (tips_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tips_;
  }
  if (this != default_instance_) {
  }
}

void MsgTipsS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTipsS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTipsS2C_descriptor_;
}

const MsgTipsS2C& MsgTipsS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgTipsS2C* MsgTipsS2C::default_instance_ = NULL;

MsgTipsS2C* MsgTipsS2C::New() const {
  return new MsgTipsS2C;
}

void MsgTipsS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0u;
    if (has_tips()) {
      if (tips_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tips_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgTipsS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgTipsS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tips;
        break;
      }

      // optional string tips = 2;
      case 2: {
        if (tag == 18) {
         parse_tips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tips()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tips().data(), this->tips().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tips");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgTipsS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgTipsS2C)
  return false;
#undef DO_
}

void MsgTipsS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgTipsS2C)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional string tips = 2;
  if (has_tips()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tips().data(), this->tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tips");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tips(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgTipsS2C)
}

::google::protobuf::uint8* MsgTipsS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgTipsS2C)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional string tips = 2;
  if (has_tips()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tips().data(), this->tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tips");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tips(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgTipsS2C)
  return target;
}

int MsgTipsS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional string tips = 2;
    if (has_tips()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tips());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTipsS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgTipsS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTipsS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTipsS2C::MergeFrom(const MsgTipsS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_tips()) {
      set_tips(from.tips());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgTipsS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTipsS2C::CopyFrom(const MsgTipsS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTipsS2C::IsInitialized() const {

  return true;
}

void MsgTipsS2C::Swap(MsgTipsS2C* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(tips_, other->tips_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgTipsS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTipsS2C_descriptor_;
  metadata.reflection = MsgTipsS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgRebornC2S::kModeFieldNumber;
const int MsgRebornC2S::kCosttypeFieldNumber;
#endif  // !_MSC_VER

MsgRebornC2S::MsgRebornC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgRebornC2S)
}

void MsgRebornC2S::InitAsDefaultInstance() {
}

MsgRebornC2S::MsgRebornC2S(const MsgRebornC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgRebornC2S)
}

void MsgRebornC2S::SharedCtor() {
  _cached_size_ = 0;
  mode_ = 0u;
  costtype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgRebornC2S::~MsgRebornC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgRebornC2S)
  SharedDtor();
}

void MsgRebornC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgRebornC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRebornC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRebornC2S_descriptor_;
}

const MsgRebornC2S& MsgRebornC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgRebornC2S* MsgRebornC2S::default_instance_ = NULL;

MsgRebornC2S* MsgRebornC2S::New() const {
  return new MsgRebornC2S;
}

void MsgRebornC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgRebornC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(mode_, costtype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgRebornC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgRebornC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 mode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));
          set_has_mode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_costtype;
        break;
      }

      // optional uint32 costtype = 2;
      case 2: {
        if (tag == 16) {
         parse_costtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costtype_)));
          set_has_costtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgRebornC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgRebornC2S)
  return false;
#undef DO_
}

void MsgRebornC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgRebornC2S)
  // optional uint32 mode = 1;
  if (has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mode(), output);
  }

  // optional uint32 costtype = 2;
  if (has_costtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->costtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgRebornC2S)
}

::google::protobuf::uint8* MsgRebornC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgRebornC2S)
  // optional uint32 mode = 1;
  if (has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mode(), target);
  }

  // optional uint32 costtype = 2;
  if (has_costtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->costtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgRebornC2S)
  return target;
}

int MsgRebornC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 mode = 1;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mode());
    }

    // optional uint32 costtype = 2;
    if (has_costtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->costtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRebornC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgRebornC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgRebornC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgRebornC2S::MergeFrom(const MsgRebornC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mode()) {
      set_mode(from.mode());
    }
    if (from.has_costtype()) {
      set_costtype(from.costtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgRebornC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRebornC2S::CopyFrom(const MsgRebornC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRebornC2S::IsInitialized() const {

  return true;
}

void MsgRebornC2S::Swap(MsgRebornC2S* other) {
  if (other != this) {
    std::swap(mode_, other->mode_);
    std::swap(costtype_, other->costtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgRebornC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRebornC2S_descriptor_;
  metadata.reflection = MsgRebornC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgNotifyRebornS2C::kTargetidFieldNumber;
const int MsgNotifyRebornS2C::kXFieldNumber;
const int MsgNotifyRebornS2C::kYFieldNumber;
#endif  // !_MSC_VER

MsgNotifyRebornS2C::MsgNotifyRebornS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgNotifyRebornS2C)
}

void MsgNotifyRebornS2C::InitAsDefaultInstance() {
}

MsgNotifyRebornS2C::MsgNotifyRebornS2C(const MsgNotifyRebornS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgNotifyRebornS2C)
}

void MsgNotifyRebornS2C::SharedCtor() {
  _cached_size_ = 0;
  targetid_ = 0u;
  x_ = 0u;
  y_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNotifyRebornS2C::~MsgNotifyRebornS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgNotifyRebornS2C)
  SharedDtor();
}

void MsgNotifyRebornS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNotifyRebornS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNotifyRebornS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNotifyRebornS2C_descriptor_;
}

const MsgNotifyRebornS2C& MsgNotifyRebornS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgNotifyRebornS2C* MsgNotifyRebornS2C::default_instance_ = NULL;

MsgNotifyRebornS2C* MsgNotifyRebornS2C::New() const {
  return new MsgNotifyRebornS2C;
}

void MsgNotifyRebornS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgNotifyRebornS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(targetid_, y_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNotifyRebornS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgNotifyRebornS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 targetid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetid_)));
          set_has_targetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_x;
        break;
      }

      // optional uint32 x = 2;
      case 2: {
        if (tag == 16) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_y;
        break;
      }

      // optional uint32 y = 3;
      case 3: {
        if (tag == 24) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgNotifyRebornS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgNotifyRebornS2C)
  return false;
#undef DO_
}

void MsgNotifyRebornS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgNotifyRebornS2C)
  // optional uint32 targetid = 1;
  if (has_targetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->targetid(), output);
  }

  // optional uint32 x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x(), output);
  }

  // optional uint32 y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgNotifyRebornS2C)
}

::google::protobuf::uint8* MsgNotifyRebornS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgNotifyRebornS2C)
  // optional uint32 targetid = 1;
  if (has_targetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->targetid(), target);
  }

  // optional uint32 x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x(), target);
  }

  // optional uint32 y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgNotifyRebornS2C)
  return target;
}

int MsgNotifyRebornS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 targetid = 1;
    if (has_targetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetid());
    }

    // optional uint32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNotifyRebornS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNotifyRebornS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNotifyRebornS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNotifyRebornS2C::MergeFrom(const MsgNotifyRebornS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_targetid()) {
      set_targetid(from.targetid());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNotifyRebornS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNotifyRebornS2C::CopyFrom(const MsgNotifyRebornS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNotifyRebornS2C::IsInitialized() const {

  return true;
}

void MsgNotifyRebornS2C::Swap(MsgNotifyRebornS2C* other) {
  if (other != this) {
    std::swap(targetid_, other->targetid_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNotifyRebornS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNotifyRebornS2C_descriptor_;
  metadata.reflection = MsgNotifyRebornS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgNotifyBeAttackS2C::kTargetidFieldNumber;
const int MsgNotifyBeAttackS2C::kTargettypeFieldNumber;
#endif  // !_MSC_VER

MsgNotifyBeAttackS2C::MsgNotifyBeAttackS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgNotifyBeAttackS2C)
}

void MsgNotifyBeAttackS2C::InitAsDefaultInstance() {
}

MsgNotifyBeAttackS2C::MsgNotifyBeAttackS2C(const MsgNotifyBeAttackS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgNotifyBeAttackS2C)
}

void MsgNotifyBeAttackS2C::SharedCtor() {
  _cached_size_ = 0;
  targetid_ = 0u;
  targettype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNotifyBeAttackS2C::~MsgNotifyBeAttackS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgNotifyBeAttackS2C)
  SharedDtor();
}

void MsgNotifyBeAttackS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNotifyBeAttackS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNotifyBeAttackS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNotifyBeAttackS2C_descriptor_;
}

const MsgNotifyBeAttackS2C& MsgNotifyBeAttackS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgNotifyBeAttackS2C* MsgNotifyBeAttackS2C::default_instance_ = NULL;

MsgNotifyBeAttackS2C* MsgNotifyBeAttackS2C::New() const {
  return new MsgNotifyBeAttackS2C;
}

void MsgNotifyBeAttackS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgNotifyBeAttackS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(targetid_, targettype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNotifyBeAttackS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgNotifyBeAttackS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 targetid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetid_)));
          set_has_targetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_targettype;
        break;
      }

      // optional uint32 targettype = 2;
      case 2: {
        if (tag == 16) {
         parse_targettype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targettype_)));
          set_has_targettype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgNotifyBeAttackS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgNotifyBeAttackS2C)
  return false;
#undef DO_
}

void MsgNotifyBeAttackS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgNotifyBeAttackS2C)
  // optional uint32 targetid = 1;
  if (has_targetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->targetid(), output);
  }

  // optional uint32 targettype = 2;
  if (has_targettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->targettype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgNotifyBeAttackS2C)
}

::google::protobuf::uint8* MsgNotifyBeAttackS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgNotifyBeAttackS2C)
  // optional uint32 targetid = 1;
  if (has_targetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->targetid(), target);
  }

  // optional uint32 targettype = 2;
  if (has_targettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->targettype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgNotifyBeAttackS2C)
  return target;
}

int MsgNotifyBeAttackS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 targetid = 1;
    if (has_targetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetid());
    }

    // optional uint32 targettype = 2;
    if (has_targettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targettype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNotifyBeAttackS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNotifyBeAttackS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNotifyBeAttackS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNotifyBeAttackS2C::MergeFrom(const MsgNotifyBeAttackS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_targetid()) {
      set_targetid(from.targetid());
    }
    if (from.has_targettype()) {
      set_targettype(from.targettype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNotifyBeAttackS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNotifyBeAttackS2C::CopyFrom(const MsgNotifyBeAttackS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNotifyBeAttackS2C::IsInitialized() const {

  return true;
}

void MsgNotifyBeAttackS2C::Swap(MsgNotifyBeAttackS2C* other) {
  if (other != this) {
    std::swap(targetid_, other->targetid_);
    std::swap(targettype_, other->targettype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNotifyBeAttackS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNotifyBeAttackS2C_descriptor_;
  metadata.reflection = MsgNotifyBeAttackS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageSendUserItemToClientS2C::kItemsFieldNumber;
#endif  // !_MSC_VER

MessageSendUserItemToClientS2C::MessageSendUserItemToClientS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageSendUserItemToClientS2C)
}

void MessageSendUserItemToClientS2C::InitAsDefaultInstance() {
}

MessageSendUserItemToClientS2C::MessageSendUserItemToClientS2C(const MessageSendUserItemToClientS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageSendUserItemToClientS2C)
}

void MessageSendUserItemToClientS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageSendUserItemToClientS2C::~MessageSendUserItemToClientS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageSendUserItemToClientS2C)
  SharedDtor();
}

void MessageSendUserItemToClientS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageSendUserItemToClientS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageSendUserItemToClientS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageSendUserItemToClientS2C_descriptor_;
}

const MessageSendUserItemToClientS2C& MessageSendUserItemToClientS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageSendUserItemToClientS2C* MessageSendUserItemToClientS2C::default_instance_ = NULL;

MessageSendUserItemToClientS2C* MessageSendUserItemToClientS2C::New() const {
  return new MessageSendUserItemToClientS2C;
}

void MessageSendUserItemToClientS2C::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageSendUserItemToClientS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageSendUserItemToClientS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .t_Object items = 1;
      case 1: {
        if (tag == 10) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageSendUserItemToClientS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageSendUserItemToClientS2C)
  return false;
#undef DO_
}

void MessageSendUserItemToClientS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageSendUserItemToClientS2C)
  // repeated .t_Object items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageSendUserItemToClientS2C)
}

::google::protobuf::uint8* MessageSendUserItemToClientS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageSendUserItemToClientS2C)
  // repeated .t_Object items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageSendUserItemToClientS2C)
  return target;
}

int MessageSendUserItemToClientS2C::ByteSize() const {
  int total_size = 0;

  // repeated .t_Object items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageSendUserItemToClientS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageSendUserItemToClientS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageSendUserItemToClientS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageSendUserItemToClientS2C::MergeFrom(const MessageSendUserItemToClientS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageSendUserItemToClientS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageSendUserItemToClientS2C::CopyFrom(const MessageSendUserItemToClientS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageSendUserItemToClientS2C::IsInitialized() const {

  return true;
}

void MessageSendUserItemToClientS2C::Swap(MessageSendUserItemToClientS2C* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageSendUserItemToClientS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageSendUserItemToClientS2C_descriptor_;
  metadata.reflection = MessageSendUserItemToClientS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageSendChangeEquipS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MessageSendChangeEquipS2C::MessageSendChangeEquipS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageSendChangeEquipS2C)
}

void MessageSendChangeEquipS2C::InitAsDefaultInstance() {
}

MessageSendChangeEquipS2C::MessageSendChangeEquipS2C(const MessageSendChangeEquipS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageSendChangeEquipS2C)
}

void MessageSendChangeEquipS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageSendChangeEquipS2C::~MessageSendChangeEquipS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageSendChangeEquipS2C)
  SharedDtor();
}

void MessageSendChangeEquipS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageSendChangeEquipS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageSendChangeEquipS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageSendChangeEquipS2C_descriptor_;
}

const MessageSendChangeEquipS2C& MessageSendChangeEquipS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageSendChangeEquipS2C* MessageSendChangeEquipS2C::default_instance_ = NULL;

MessageSendChangeEquipS2C* MessageSendChangeEquipS2C::New() const {
  return new MessageSendChangeEquipS2C;
}

void MessageSendChangeEquipS2C::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageSendChangeEquipS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageSendChangeEquipS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .stChangeEquip data = 1;
      case 1: {
        if (tag == 10) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageSendChangeEquipS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageSendChangeEquipS2C)
  return false;
#undef DO_
}

void MessageSendChangeEquipS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageSendChangeEquipS2C)
  // repeated .stChangeEquip data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageSendChangeEquipS2C)
}

::google::protobuf::uint8* MessageSendChangeEquipS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageSendChangeEquipS2C)
  // repeated .stChangeEquip data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageSendChangeEquipS2C)
  return target;
}

int MessageSendChangeEquipS2C::ByteSize() const {
  int total_size = 0;

  // repeated .stChangeEquip data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageSendChangeEquipS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageSendChangeEquipS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageSendChangeEquipS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageSendChangeEquipS2C::MergeFrom(const MessageSendChangeEquipS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageSendChangeEquipS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageSendChangeEquipS2C::CopyFrom(const MessageSendChangeEquipS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageSendChangeEquipS2C::IsInitialized() const {

  return true;
}

void MessageSendChangeEquipS2C::Swap(MessageSendChangeEquipS2C* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageSendChangeEquipS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageSendChangeEquipS2C_descriptor_;
  metadata.reflection = MessageSendChangeEquipS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageChangeEquipSaveC2S::kIndexFieldNumber;
const int MessageChangeEquipSaveC2S::kEquipIDFieldNumber;
const int MessageChangeEquipSaveC2S::kAccKeyIDFieldNumber;
#endif  // !_MSC_VER

MessageChangeEquipSaveC2S::MessageChangeEquipSaveC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageChangeEquipSaveC2S)
}

void MessageChangeEquipSaveC2S::InitAsDefaultInstance() {
}

MessageChangeEquipSaveC2S::MessageChangeEquipSaveC2S(const MessageChangeEquipSaveC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageChangeEquipSaveC2S)
}

void MessageChangeEquipSaveC2S::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageChangeEquipSaveC2S::~MessageChangeEquipSaveC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageChangeEquipSaveC2S)
  SharedDtor();
}

void MessageChangeEquipSaveC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageChangeEquipSaveC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageChangeEquipSaveC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageChangeEquipSaveC2S_descriptor_;
}

const MessageChangeEquipSaveC2S& MessageChangeEquipSaveC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageChangeEquipSaveC2S* MessageChangeEquipSaveC2S::default_instance_ = NULL;

MessageChangeEquipSaveC2S* MessageChangeEquipSaveC2S::New() const {
  return new MessageChangeEquipSaveC2S;
}

void MessageChangeEquipSaveC2S::Clear() {
  index_ = 0u;
  equipid_.Clear();
  acckeyid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageChangeEquipSaveC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageChangeEquipSaveC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_equipID;
        break;
      }

      // repeated uint32 equipID = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_equipID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_equipid())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_equipid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_accKeyID;
        break;
      }

      // repeated .ChangeEquipAccType accKeyID = 3;
      case 3: {
        if (tag == 26) {
         parse_accKeyID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_acckeyid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_accKeyID;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageChangeEquipSaveC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageChangeEquipSaveC2S)
  return false;
#undef DO_
}

void MessageChangeEquipSaveC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageChangeEquipSaveC2S)
  // optional uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // repeated uint32 equipID = 2 [packed = true];
  if (this->equipid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_equipid_cached_byte_size_);
  }
  for (int i = 0; i < this->equipid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->equipid(i), output);
  }

  // repeated .ChangeEquipAccType accKeyID = 3;
  for (int i = 0; i < this->acckeyid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->acckeyid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageChangeEquipSaveC2S)
}

::google::protobuf::uint8* MessageChangeEquipSaveC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageChangeEquipSaveC2S)
  // optional uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // repeated uint32 equipID = 2 [packed = true];
  if (this->equipid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _equipid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->equipid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->equipid(i), target);
  }

  // repeated .ChangeEquipAccType accKeyID = 3;
  for (int i = 0; i < this->acckeyid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->acckeyid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageChangeEquipSaveC2S)
  return target;
}

int MessageChangeEquipSaveC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  // repeated uint32 equipID = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->equipid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->equipid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equipid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .ChangeEquipAccType accKeyID = 3;
  total_size += 1 * this->acckeyid_size();
  for (int i = 0; i < this->acckeyid_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->acckeyid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageChangeEquipSaveC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageChangeEquipSaveC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageChangeEquipSaveC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageChangeEquipSaveC2S::MergeFrom(const MessageChangeEquipSaveC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipid_.MergeFrom(from.equipid_);
  acckeyid_.MergeFrom(from.acckeyid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageChangeEquipSaveC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageChangeEquipSaveC2S::CopyFrom(const MessageChangeEquipSaveC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageChangeEquipSaveC2S::IsInitialized() const {

  return true;
}

void MessageChangeEquipSaveC2S::Swap(MessageChangeEquipSaveC2S* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    equipid_.Swap(&other->equipid_);
    acckeyid_.Swap(&other->acckeyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageChangeEquipSaveC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageChangeEquipSaveC2S_descriptor_;
  metadata.reflection = MessageChangeEquipSaveC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgExtendBagC2S::kPosFieldNumber;
#endif  // !_MSC_VER

MsgExtendBagC2S::MsgExtendBagC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgExtendBagC2S)
}

void MsgExtendBagC2S::InitAsDefaultInstance() {
}

MsgExtendBagC2S::MsgExtendBagC2S(const MsgExtendBagC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgExtendBagC2S)
}

void MsgExtendBagC2S::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgExtendBagC2S::~MsgExtendBagC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgExtendBagC2S)
  SharedDtor();
}

void MsgExtendBagC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgExtendBagC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgExtendBagC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgExtendBagC2S_descriptor_;
}

const MsgExtendBagC2S& MsgExtendBagC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgExtendBagC2S* MsgExtendBagC2S::default_instance_ = NULL;

MsgExtendBagC2S* MsgExtendBagC2S::New() const {
  return new MsgExtendBagC2S;
}

void MsgExtendBagC2S::Clear() {
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgExtendBagC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgExtendBagC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgExtendBagC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgExtendBagC2S)
  return false;
#undef DO_
}

void MsgExtendBagC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgExtendBagC2S)
  // optional uint32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgExtendBagC2S)
}

::google::protobuf::uint8* MsgExtendBagC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgExtendBagC2S)
  // optional uint32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgExtendBagC2S)
  return target;
}

int MsgExtendBagC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgExtendBagC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgExtendBagC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgExtendBagC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgExtendBagC2S::MergeFrom(const MsgExtendBagC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgExtendBagC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgExtendBagC2S::CopyFrom(const MsgExtendBagC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExtendBagC2S::IsInitialized() const {

  return true;
}

void MsgExtendBagC2S::Swap(MsgExtendBagC2S* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgExtendBagC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgExtendBagC2S_descriptor_;
  metadata.reflection = MsgExtendBagC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageStObjectUserApplyC2S::kTempidFieldNumber;
const int MessageStObjectUserApplyC2S::kDesIdFieldNumber;
const int MessageStObjectUserApplyC2S::kDesTypeFieldNumber;
const int MessageStObjectUserApplyC2S::kXFieldNumber;
const int MessageStObjectUserApplyC2S::kYFieldNumber;
#endif  // !_MSC_VER

MessageStObjectUserApplyC2S::MessageStObjectUserApplyC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageStObjectUserApplyC2S)
}

void MessageStObjectUserApplyC2S::InitAsDefaultInstance() {
}

MessageStObjectUserApplyC2S::MessageStObjectUserApplyC2S(const MessageStObjectUserApplyC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageStObjectUserApplyC2S)
}

void MessageStObjectUserApplyC2S::SharedCtor() {
  _cached_size_ = 0;
  tempid_ = 0u;
  desid_ = 0u;
  destype_ = 0u;
  x_ = 0u;
  y_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageStObjectUserApplyC2S::~MessageStObjectUserApplyC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageStObjectUserApplyC2S)
  SharedDtor();
}

void MessageStObjectUserApplyC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageStObjectUserApplyC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageStObjectUserApplyC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageStObjectUserApplyC2S_descriptor_;
}

const MessageStObjectUserApplyC2S& MessageStObjectUserApplyC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageStObjectUserApplyC2S* MessageStObjectUserApplyC2S::default_instance_ = NULL;

MessageStObjectUserApplyC2S* MessageStObjectUserApplyC2S::New() const {
  return new MessageStObjectUserApplyC2S;
}

void MessageStObjectUserApplyC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MessageStObjectUserApplyC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(tempid_, y_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageStObjectUserApplyC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageStObjectUserApplyC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tempid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tempid_)));
          set_has_tempid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_desId;
        break;
      }

      // optional uint32 desId = 2;
      case 2: {
        if (tag == 16) {
         parse_desId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desid_)));
          set_has_desid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_desType;
        break;
      }

      // optional uint32 desType = 3;
      case 3: {
        if (tag == 24) {
         parse_desType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destype_)));
          set_has_destype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_x;
        break;
      }

      // optional uint32 x = 4;
      case 4: {
        if (tag == 32) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_y;
        break;
      }

      // optional uint32 y = 5;
      case 5: {
        if (tag == 40) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageStObjectUserApplyC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageStObjectUserApplyC2S)
  return false;
#undef DO_
}

void MessageStObjectUserApplyC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageStObjectUserApplyC2S)
  // optional uint32 tempid = 1;
  if (has_tempid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tempid(), output);
  }

  // optional uint32 desId = 2;
  if (has_desid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->desid(), output);
  }

  // optional uint32 desType = 3;
  if (has_destype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->destype(), output);
  }

  // optional uint32 x = 4;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->x(), output);
  }

  // optional uint32 y = 5;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageStObjectUserApplyC2S)
}

::google::protobuf::uint8* MessageStObjectUserApplyC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageStObjectUserApplyC2S)
  // optional uint32 tempid = 1;
  if (has_tempid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tempid(), target);
  }

  // optional uint32 desId = 2;
  if (has_desid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->desid(), target);
  }

  // optional uint32 desType = 3;
  if (has_destype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->destype(), target);
  }

  // optional uint32 x = 4;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->x(), target);
  }

  // optional uint32 y = 5;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageStObjectUserApplyC2S)
  return target;
}

int MessageStObjectUserApplyC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 tempid = 1;
    if (has_tempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tempid());
    }

    // optional uint32 desId = 2;
    if (has_desid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->desid());
    }

    // optional uint32 desType = 3;
    if (has_destype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->destype());
    }

    // optional uint32 x = 4;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 5;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageStObjectUserApplyC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageStObjectUserApplyC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageStObjectUserApplyC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageStObjectUserApplyC2S::MergeFrom(const MessageStObjectUserApplyC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tempid()) {
      set_tempid(from.tempid());
    }
    if (from.has_desid()) {
      set_desid(from.desid());
    }
    if (from.has_destype()) {
      set_destype(from.destype());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageStObjectUserApplyC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageStObjectUserApplyC2S::CopyFrom(const MessageStObjectUserApplyC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageStObjectUserApplyC2S::IsInitialized() const {

  return true;
}

void MessageStObjectUserApplyC2S::Swap(MessageStObjectUserApplyC2S* other) {
  if (other != this) {
    std::swap(tempid_, other->tempid_);
    std::swap(desid_, other->desid_);
    std::swap(destype_, other->destype_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageStObjectUserApplyC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageStObjectUserApplyC2S_descriptor_;
  metadata.reflection = MessageStObjectUserApplyC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageStObjectUserApplyOkS2C::kBaseidFieldNumber;
const int MessageStObjectUserApplyOkS2C::kThisidFieldNumber;
const int MessageStObjectUserApplyOkS2C::kFailFieldNumber;
#endif  // !_MSC_VER

MessageStObjectUserApplyOkS2C::MessageStObjectUserApplyOkS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageStObjectUserApplyOkS2C)
}

void MessageStObjectUserApplyOkS2C::InitAsDefaultInstance() {
}

MessageStObjectUserApplyOkS2C::MessageStObjectUserApplyOkS2C(const MessageStObjectUserApplyOkS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageStObjectUserApplyOkS2C)
}

void MessageStObjectUserApplyOkS2C::SharedCtor() {
  _cached_size_ = 0;
  baseid_ = 0u;
  thisid_ = 0u;
  fail_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageStObjectUserApplyOkS2C::~MessageStObjectUserApplyOkS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageStObjectUserApplyOkS2C)
  SharedDtor();
}

void MessageStObjectUserApplyOkS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageStObjectUserApplyOkS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageStObjectUserApplyOkS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageStObjectUserApplyOkS2C_descriptor_;
}

const MessageStObjectUserApplyOkS2C& MessageStObjectUserApplyOkS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageStObjectUserApplyOkS2C* MessageStObjectUserApplyOkS2C::default_instance_ = NULL;

MessageStObjectUserApplyOkS2C* MessageStObjectUserApplyOkS2C::New() const {
  return new MessageStObjectUserApplyOkS2C;
}

void MessageStObjectUserApplyOkS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MessageStObjectUserApplyOkS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(baseid_, fail_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageStObjectUserApplyOkS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageStObjectUserApplyOkS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 baseid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baseid_)));
          set_has_baseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_thisid;
        break;
      }

      // optional uint32 thisid = 2;
      case 2: {
        if (tag == 16) {
         parse_thisid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thisid_)));
          set_has_thisid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fail;
        break;
      }

      // optional bool fail = 3;
      case 3: {
        if (tag == 24) {
         parse_fail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fail_)));
          set_has_fail();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageStObjectUserApplyOkS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageStObjectUserApplyOkS2C)
  return false;
#undef DO_
}

void MessageStObjectUserApplyOkS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageStObjectUserApplyOkS2C)
  // optional uint32 baseid = 1;
  if (has_baseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->baseid(), output);
  }

  // optional uint32 thisid = 2;
  if (has_thisid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->thisid(), output);
  }

  // optional bool fail = 3;
  if (has_fail()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->fail(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageStObjectUserApplyOkS2C)
}

::google::protobuf::uint8* MessageStObjectUserApplyOkS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageStObjectUserApplyOkS2C)
  // optional uint32 baseid = 1;
  if (has_baseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->baseid(), target);
  }

  // optional uint32 thisid = 2;
  if (has_thisid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->thisid(), target);
  }

  // optional bool fail = 3;
  if (has_fail()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->fail(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageStObjectUserApplyOkS2C)
  return target;
}

int MessageStObjectUserApplyOkS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 baseid = 1;
    if (has_baseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baseid());
    }

    // optional uint32 thisid = 2;
    if (has_thisid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->thisid());
    }

    // optional bool fail = 3;
    if (has_fail()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageStObjectUserApplyOkS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageStObjectUserApplyOkS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageStObjectUserApplyOkS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageStObjectUserApplyOkS2C::MergeFrom(const MessageStObjectUserApplyOkS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_baseid()) {
      set_baseid(from.baseid());
    }
    if (from.has_thisid()) {
      set_thisid(from.thisid());
    }
    if (from.has_fail()) {
      set_fail(from.fail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageStObjectUserApplyOkS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageStObjectUserApplyOkS2C::CopyFrom(const MessageStObjectUserApplyOkS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageStObjectUserApplyOkS2C::IsInitialized() const {

  return true;
}

void MessageStObjectUserApplyOkS2C::Swap(MessageStObjectUserApplyOkS2C* other) {
  if (other != this) {
    std::swap(baseid_, other->baseid_);
    std::swap(thisid_, other->thisid_);
    std::swap(fail_, other->fail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageStObjectUserApplyOkS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageStObjectUserApplyOkS2C_descriptor_;
  metadata.reflection = MessageStObjectUserApplyOkS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectItemMoveS2C::kObjsFieldNumber;
#endif  // !_MSC_VER

MsgObjectItemMoveS2C::MsgObjectItemMoveS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgObjectItemMoveS2C)
}

void MsgObjectItemMoveS2C::InitAsDefaultInstance() {
}

MsgObjectItemMoveS2C::MsgObjectItemMoveS2C(const MsgObjectItemMoveS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgObjectItemMoveS2C)
}

void MsgObjectItemMoveS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectItemMoveS2C::~MsgObjectItemMoveS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgObjectItemMoveS2C)
  SharedDtor();
}

void MsgObjectItemMoveS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgObjectItemMoveS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgObjectItemMoveS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectItemMoveS2C_descriptor_;
}

const MsgObjectItemMoveS2C& MsgObjectItemMoveS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgObjectItemMoveS2C* MsgObjectItemMoveS2C::default_instance_ = NULL;

MsgObjectItemMoveS2C* MsgObjectItemMoveS2C::New() const {
  return new MsgObjectItemMoveS2C;
}

void MsgObjectItemMoveS2C::Clear() {
  objs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectItemMoveS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgObjectItemMoveS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StpObjectNode objs = 1;
      case 1: {
        if (tag == 10) {
         parse_objs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_objs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgObjectItemMoveS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgObjectItemMoveS2C)
  return false;
#undef DO_
}

void MsgObjectItemMoveS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgObjectItemMoveS2C)
  // repeated .StpObjectNode objs = 1;
  for (int i = 0; i < this->objs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->objs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgObjectItemMoveS2C)
}

::google::protobuf::uint8* MsgObjectItemMoveS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgObjectItemMoveS2C)
  // repeated .StpObjectNode objs = 1;
  for (int i = 0; i < this->objs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->objs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgObjectItemMoveS2C)
  return target;
}

int MsgObjectItemMoveS2C::ByteSize() const {
  int total_size = 0;

  // repeated .StpObjectNode objs = 1;
  total_size += 1 * this->objs_size();
  for (int i = 0; i < this->objs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjectItemMoveS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectItemMoveS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectItemMoveS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectItemMoveS2C::MergeFrom(const MsgObjectItemMoveS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  objs_.MergeFrom(from.objs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectItemMoveS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectItemMoveS2C::CopyFrom(const MsgObjectItemMoveS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectItemMoveS2C::IsInitialized() const {

  return true;
}

void MsgObjectItemMoveS2C::Swap(MsgObjectItemMoveS2C* other) {
  if (other != this) {
    objs_.Swap(&other->objs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectItemMoveS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectItemMoveS2C_descriptor_;
  metadata.reflection = MsgObjectItemMoveS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjectExchangeBatchS2C_exchangeNode::kSourceFieldNumber;
const int MsgObjectExchangeBatchS2C_exchangeNode::kDestFieldNumber;
#endif  // !_MSC_VER

MsgObjectExchangeBatchS2C_exchangeNode::MsgObjectExchangeBatchS2C_exchangeNode()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
}

void MsgObjectExchangeBatchS2C_exchangeNode::InitAsDefaultInstance() {
}

MsgObjectExchangeBatchS2C_exchangeNode::MsgObjectExchangeBatchS2C_exchangeNode(const MsgObjectExchangeBatchS2C_exchangeNode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
}

void MsgObjectExchangeBatchS2C_exchangeNode::SharedCtor() {
  _cached_size_ = 0;
  source_ = 0u;
  dest_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectExchangeBatchS2C_exchangeNode::~MsgObjectExchangeBatchS2C_exchangeNode() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
  SharedDtor();
}

void MsgObjectExchangeBatchS2C_exchangeNode::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgObjectExchangeBatchS2C_exchangeNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgObjectExchangeBatchS2C_exchangeNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectExchangeBatchS2C_exchangeNode_descriptor_;
}

const MsgObjectExchangeBatchS2C_exchangeNode& MsgObjectExchangeBatchS2C_exchangeNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgObjectExchangeBatchS2C_exchangeNode* MsgObjectExchangeBatchS2C_exchangeNode::default_instance_ = NULL;

MsgObjectExchangeBatchS2C_exchangeNode* MsgObjectExchangeBatchS2C_exchangeNode::New() const {
  return new MsgObjectExchangeBatchS2C_exchangeNode;
}

void MsgObjectExchangeBatchS2C_exchangeNode::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgObjectExchangeBatchS2C_exchangeNode*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(source_, dest_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectExchangeBatchS2C_exchangeNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 source = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));
          set_has_source();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dest;
        break;
      }

      // optional uint32 dest = 2;
      case 2: {
        if (tag == 16) {
         parse_dest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dest_)));
          set_has_dest();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
  return false;
#undef DO_
}

void MsgObjectExchangeBatchS2C_exchangeNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
  // optional uint32 source = 1;
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source(), output);
  }

  // optional uint32 dest = 2;
  if (has_dest()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dest(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
}

::google::protobuf::uint8* MsgObjectExchangeBatchS2C_exchangeNode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
  // optional uint32 source = 1;
  if (has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source(), target);
  }

  // optional uint32 dest = 2;
  if (has_dest()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dest(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode)
  return target;
}

int MsgObjectExchangeBatchS2C_exchangeNode::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source());
    }

    // optional uint32 dest = 2;
    if (has_dest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dest());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjectExchangeBatchS2C_exchangeNode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectExchangeBatchS2C_exchangeNode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectExchangeBatchS2C_exchangeNode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectExchangeBatchS2C_exchangeNode::MergeFrom(const MsgObjectExchangeBatchS2C_exchangeNode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_dest()) {
      set_dest(from.dest());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectExchangeBatchS2C_exchangeNode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectExchangeBatchS2C_exchangeNode::CopyFrom(const MsgObjectExchangeBatchS2C_exchangeNode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectExchangeBatchS2C_exchangeNode::IsInitialized() const {

  return true;
}

void MsgObjectExchangeBatchS2C_exchangeNode::Swap(MsgObjectExchangeBatchS2C_exchangeNode* other) {
  if (other != this) {
    std::swap(source_, other->source_);
    std::swap(dest_, other->dest_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectExchangeBatchS2C_exchangeNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectExchangeBatchS2C_exchangeNode_descriptor_;
  metadata.reflection = MsgObjectExchangeBatchS2C_exchangeNode_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgObjectExchangeBatchS2C::kEnFieldNumber;
#endif  // !_MSC_VER

MsgObjectExchangeBatchS2C::MsgObjectExchangeBatchS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgObjectExchangeBatchS2C)
}

void MsgObjectExchangeBatchS2C::InitAsDefaultInstance() {
}

MsgObjectExchangeBatchS2C::MsgObjectExchangeBatchS2C(const MsgObjectExchangeBatchS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgObjectExchangeBatchS2C)
}

void MsgObjectExchangeBatchS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjectExchangeBatchS2C::~MsgObjectExchangeBatchS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgObjectExchangeBatchS2C)
  SharedDtor();
}

void MsgObjectExchangeBatchS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgObjectExchangeBatchS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgObjectExchangeBatchS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgObjectExchangeBatchS2C_descriptor_;
}

const MsgObjectExchangeBatchS2C& MsgObjectExchangeBatchS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgObjectExchangeBatchS2C* MsgObjectExchangeBatchS2C::default_instance_ = NULL;

MsgObjectExchangeBatchS2C* MsgObjectExchangeBatchS2C::New() const {
  return new MsgObjectExchangeBatchS2C;
}

void MsgObjectExchangeBatchS2C::Clear() {
  en_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgObjectExchangeBatchS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgObjectExchangeBatchS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode en = 2;
      case 2: {
        if (tag == 18) {
         parse_en:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_en()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_en;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgObjectExchangeBatchS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgObjectExchangeBatchS2C)
  return false;
#undef DO_
}

void MsgObjectExchangeBatchS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgObjectExchangeBatchS2C)
  // repeated .FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode en = 2;
  for (int i = 0; i < this->en_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->en(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgObjectExchangeBatchS2C)
}

::google::protobuf::uint8* MsgObjectExchangeBatchS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgObjectExchangeBatchS2C)
  // repeated .FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode en = 2;
  for (int i = 0; i < this->en_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->en(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgObjectExchangeBatchS2C)
  return target;
}

int MsgObjectExchangeBatchS2C::ByteSize() const {
  int total_size = 0;

  // repeated .FProtoClient.MsgObjectExchangeBatchS2C.exchangeNode en = 2;
  total_size += 1 * this->en_size();
  for (int i = 0; i < this->en_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->en(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjectExchangeBatchS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgObjectExchangeBatchS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgObjectExchangeBatchS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgObjectExchangeBatchS2C::MergeFrom(const MsgObjectExchangeBatchS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  en_.MergeFrom(from.en_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgObjectExchangeBatchS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgObjectExchangeBatchS2C::CopyFrom(const MsgObjectExchangeBatchS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjectExchangeBatchS2C::IsInitialized() const {

  return true;
}

void MsgObjectExchangeBatchS2C::Swap(MsgObjectExchangeBatchS2C* other) {
  if (other != this) {
    en_.Swap(&other->en_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgObjectExchangeBatchS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgObjectExchangeBatchS2C_descriptor_;
  metadata.reflection = MsgObjectExchangeBatchS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDataMoneyRefreshS2C::kTypeFieldNumber;
const int MsgDataMoneyRefreshS2C::kValueFieldNumber;
#endif  // !_MSC_VER

MsgDataMoneyRefreshS2C::MsgDataMoneyRefreshS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgDataMoneyRefreshS2C)
}

void MsgDataMoneyRefreshS2C::InitAsDefaultInstance() {
}

MsgDataMoneyRefreshS2C::MsgDataMoneyRefreshS2C(const MsgDataMoneyRefreshS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgDataMoneyRefreshS2C)
}

void MsgDataMoneyRefreshS2C::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDataMoneyRefreshS2C::~MsgDataMoneyRefreshS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgDataMoneyRefreshS2C)
  SharedDtor();
}

void MsgDataMoneyRefreshS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDataMoneyRefreshS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDataMoneyRefreshS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDataMoneyRefreshS2C_descriptor_;
}

const MsgDataMoneyRefreshS2C& MsgDataMoneyRefreshS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgDataMoneyRefreshS2C* MsgDataMoneyRefreshS2C::default_instance_ = NULL;

MsgDataMoneyRefreshS2C* MsgDataMoneyRefreshS2C::New() const {
  return new MsgDataMoneyRefreshS2C;
}

void MsgDataMoneyRefreshS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDataMoneyRefreshS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(type_, value_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDataMoneyRefreshS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgDataMoneyRefreshS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional uint32 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgDataMoneyRefreshS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgDataMoneyRefreshS2C)
  return false;
#undef DO_
}

void MsgDataMoneyRefreshS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgDataMoneyRefreshS2C)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgDataMoneyRefreshS2C)
}

::google::protobuf::uint8* MsgDataMoneyRefreshS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgDataMoneyRefreshS2C)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgDataMoneyRefreshS2C)
  return target;
}

int MsgDataMoneyRefreshS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDataMoneyRefreshS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDataMoneyRefreshS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDataMoneyRefreshS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDataMoneyRefreshS2C::MergeFrom(const MsgDataMoneyRefreshS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDataMoneyRefreshS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDataMoneyRefreshS2C::CopyFrom(const MsgDataMoneyRefreshS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDataMoneyRefreshS2C::IsInitialized() const {

  return true;
}

void MsgDataMoneyRefreshS2C::Swap(MsgDataMoneyRefreshS2C* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDataMoneyRefreshS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDataMoneyRefreshS2C_descriptor_;
  metadata.reflection = MsgDataMoneyRefreshS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgFreshSkillS2C_Skill::kSkillFieldNumber;
const int MsgFreshSkillS2C_Skill::kLevelFieldNumber;
const int MsgFreshSkillS2C_Skill::kAppendlevelFieldNumber;
const int MsgFreshSkillS2C_Skill::kLevelupFieldNumber;
#endif  // !_MSC_VER

MsgFreshSkillS2C_Skill::MsgFreshSkillS2C_Skill()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgFreshSkillS2C.Skill)
}

void MsgFreshSkillS2C_Skill::InitAsDefaultInstance() {
}

MsgFreshSkillS2C_Skill::MsgFreshSkillS2C_Skill(const MsgFreshSkillS2C_Skill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgFreshSkillS2C.Skill)
}

void MsgFreshSkillS2C_Skill::SharedCtor() {
  _cached_size_ = 0;
  skill_ = 0u;
  level_ = 0u;
  appendlevel_ = 0u;
  levelup_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgFreshSkillS2C_Skill::~MsgFreshSkillS2C_Skill() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgFreshSkillS2C.Skill)
  SharedDtor();
}

void MsgFreshSkillS2C_Skill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgFreshSkillS2C_Skill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgFreshSkillS2C_Skill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFreshSkillS2C_Skill_descriptor_;
}

const MsgFreshSkillS2C_Skill& MsgFreshSkillS2C_Skill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgFreshSkillS2C_Skill* MsgFreshSkillS2C_Skill::default_instance_ = NULL;

MsgFreshSkillS2C_Skill* MsgFreshSkillS2C_Skill::New() const {
  return new MsgFreshSkillS2C_Skill;
}

void MsgFreshSkillS2C_Skill::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgFreshSkillS2C_Skill*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(skill_, levelup_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgFreshSkillS2C_Skill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgFreshSkillS2C.Skill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 skill = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_)));
          set_has_skill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // optional uint32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_appendlevel;
        break;
      }

      // optional uint32 appendlevel = 3;
      case 3: {
        if (tag == 24) {
         parse_appendlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appendlevel_)));
          set_has_appendlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_levelup;
        break;
      }

      // optional bool levelup = 4;
      case 4: {
        if (tag == 32) {
         parse_levelup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &levelup_)));
          set_has_levelup();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgFreshSkillS2C.Skill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgFreshSkillS2C.Skill)
  return false;
#undef DO_
}

void MsgFreshSkillS2C_Skill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgFreshSkillS2C.Skill)
  // optional uint32 skill = 1;
  if (has_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->skill(), output);
  }

  // optional uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // optional uint32 appendlevel = 3;
  if (has_appendlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->appendlevel(), output);
  }

  // optional bool levelup = 4;
  if (has_levelup()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->levelup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgFreshSkillS2C.Skill)
}

::google::protobuf::uint8* MsgFreshSkillS2C_Skill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgFreshSkillS2C.Skill)
  // optional uint32 skill = 1;
  if (has_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->skill(), target);
  }

  // optional uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // optional uint32 appendlevel = 3;
  if (has_appendlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->appendlevel(), target);
  }

  // optional bool levelup = 4;
  if (has_levelup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->levelup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgFreshSkillS2C.Skill)
  return target;
}

int MsgFreshSkillS2C_Skill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 skill = 1;
    if (has_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skill());
    }

    // optional uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 appendlevel = 3;
    if (has_appendlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appendlevel());
    }

    // optional bool levelup = 4;
    if (has_levelup()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgFreshSkillS2C_Skill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgFreshSkillS2C_Skill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgFreshSkillS2C_Skill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgFreshSkillS2C_Skill::MergeFrom(const MsgFreshSkillS2C_Skill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill()) {
      set_skill(from.skill());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_appendlevel()) {
      set_appendlevel(from.appendlevel());
    }
    if (from.has_levelup()) {
      set_levelup(from.levelup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgFreshSkillS2C_Skill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFreshSkillS2C_Skill::CopyFrom(const MsgFreshSkillS2C_Skill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFreshSkillS2C_Skill::IsInitialized() const {

  return true;
}

void MsgFreshSkillS2C_Skill::Swap(MsgFreshSkillS2C_Skill* other) {
  if (other != this) {
    std::swap(skill_, other->skill_);
    std::swap(level_, other->level_);
    std::swap(appendlevel_, other->appendlevel_);
    std::swap(levelup_, other->levelup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgFreshSkillS2C_Skill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgFreshSkillS2C_Skill_descriptor_;
  metadata.reflection = MsgFreshSkillS2C_Skill_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgFreshSkillS2C::kSkillsFieldNumber;
#endif  // !_MSC_VER

MsgFreshSkillS2C::MsgFreshSkillS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgFreshSkillS2C)
}

void MsgFreshSkillS2C::InitAsDefaultInstance() {
}

MsgFreshSkillS2C::MsgFreshSkillS2C(const MsgFreshSkillS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgFreshSkillS2C)
}

void MsgFreshSkillS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgFreshSkillS2C::~MsgFreshSkillS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgFreshSkillS2C)
  SharedDtor();
}

void MsgFreshSkillS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgFreshSkillS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgFreshSkillS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFreshSkillS2C_descriptor_;
}

const MsgFreshSkillS2C& MsgFreshSkillS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgFreshSkillS2C* MsgFreshSkillS2C::default_instance_ = NULL;

MsgFreshSkillS2C* MsgFreshSkillS2C::New() const {
  return new MsgFreshSkillS2C;
}

void MsgFreshSkillS2C::Clear() {
  skills_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgFreshSkillS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgFreshSkillS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FProtoClient.MsgFreshSkillS2C.Skill skills = 1;
      case 1: {
        if (tag == 10) {
         parse_skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_skills;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgFreshSkillS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgFreshSkillS2C)
  return false;
#undef DO_
}

void MsgFreshSkillS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgFreshSkillS2C)
  // repeated .FProtoClient.MsgFreshSkillS2C.Skill skills = 1;
  for (int i = 0; i < this->skills_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skills(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgFreshSkillS2C)
}

::google::protobuf::uint8* MsgFreshSkillS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgFreshSkillS2C)
  // repeated .FProtoClient.MsgFreshSkillS2C.Skill skills = 1;
  for (int i = 0; i < this->skills_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skills(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgFreshSkillS2C)
  return target;
}

int MsgFreshSkillS2C::ByteSize() const {
  int total_size = 0;

  // repeated .FProtoClient.MsgFreshSkillS2C.Skill skills = 1;
  total_size += 1 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgFreshSkillS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgFreshSkillS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgFreshSkillS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgFreshSkillS2C::MergeFrom(const MsgFreshSkillS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  skills_.MergeFrom(from.skills_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgFreshSkillS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFreshSkillS2C::CopyFrom(const MsgFreshSkillS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFreshSkillS2C::IsInitialized() const {

  return true;
}

void MsgFreshSkillS2C::Swap(MsgFreshSkillS2C* other) {
  if (other != this) {
    skills_.Swap(&other->skills_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgFreshSkillS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgFreshSkillS2C_descriptor_;
  metadata.reflection = MsgFreshSkillS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgRefreshHpMpS2C::kIdFieldNumber;
const int MsgRefreshHpMpS2C::kTypeFieldNumber;
const int MsgRefreshHpMpS2C::kMaxhpFieldNumber;
const int MsgRefreshHpMpS2C::kHpFieldNumber;
const int MsgRefreshHpMpS2C::kMaxmpFieldNumber;
const int MsgRefreshHpMpS2C::kMpFieldNumber;
const int MsgRefreshHpMpS2C::kSelectFieldNumber;
#endif  // !_MSC_VER

MsgRefreshHpMpS2C::MsgRefreshHpMpS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgRefreshHpMpS2C)
}

void MsgRefreshHpMpS2C::InitAsDefaultInstance() {
}

MsgRefreshHpMpS2C::MsgRefreshHpMpS2C(const MsgRefreshHpMpS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgRefreshHpMpS2C)
}

void MsgRefreshHpMpS2C::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  type_ = 0u;
  maxhp_ = 0u;
  hp_ = 0u;
  maxmp_ = 0u;
  mp_ = 0u;
  select_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgRefreshHpMpS2C::~MsgRefreshHpMpS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgRefreshHpMpS2C)
  SharedDtor();
}

void MsgRefreshHpMpS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgRefreshHpMpS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRefreshHpMpS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRefreshHpMpS2C_descriptor_;
}

const MsgRefreshHpMpS2C& MsgRefreshHpMpS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgRefreshHpMpS2C* MsgRefreshHpMpS2C::default_instance_ = NULL;

MsgRefreshHpMpS2C* MsgRefreshHpMpS2C::New() const {
  return new MsgRefreshHpMpS2C;
}

void MsgRefreshHpMpS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgRefreshHpMpS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(id_, select_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgRefreshHpMpS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgRefreshHpMpS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_maxhp;
        break;
      }

      // optional uint32 maxhp = 3;
      case 3: {
        if (tag == 24) {
         parse_maxhp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxhp_)));
          set_has_maxhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hp;
        break;
      }

      // optional uint32 hp = 4;
      case 4: {
        if (tag == 32) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_maxmp;
        break;
      }

      // optional uint32 maxmp = 5;
      case 5: {
        if (tag == 40) {
         parse_maxmp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxmp_)));
          set_has_maxmp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mp;
        break;
      }

      // optional uint32 mp = 6;
      case 6: {
        if (tag == 48) {
         parse_mp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_)));
          set_has_mp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_select;
        break;
      }

      // optional bool select = 7;
      case 7: {
        if (tag == 56) {
         parse_select:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &select_)));
          set_has_select();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgRefreshHpMpS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgRefreshHpMpS2C)
  return false;
#undef DO_
}

void MsgRefreshHpMpS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgRefreshHpMpS2C)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional uint32 maxhp = 3;
  if (has_maxhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxhp(), output);
  }

  // optional uint32 hp = 4;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hp(), output);
  }

  // optional uint32 maxmp = 5;
  if (has_maxmp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->maxmp(), output);
  }

  // optional uint32 mp = 6;
  if (has_mp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mp(), output);
  }

  // optional bool select = 7;
  if (has_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->select(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgRefreshHpMpS2C)
}

::google::protobuf::uint8* MsgRefreshHpMpS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgRefreshHpMpS2C)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional uint32 maxhp = 3;
  if (has_maxhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxhp(), target);
  }

  // optional uint32 hp = 4;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hp(), target);
  }

  // optional uint32 maxmp = 5;
  if (has_maxmp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->maxmp(), target);
  }

  // optional uint32 mp = 6;
  if (has_mp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mp(), target);
  }

  // optional bool select = 7;
  if (has_select()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->select(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgRefreshHpMpS2C)
  return target;
}

int MsgRefreshHpMpS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 maxhp = 3;
    if (has_maxhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxhp());
    }

    // optional uint32 hp = 4;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hp());
    }

    // optional uint32 maxmp = 5;
    if (has_maxmp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxmp());
    }

    // optional uint32 mp = 6;
    if (has_mp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mp());
    }

    // optional bool select = 7;
    if (has_select()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRefreshHpMpS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgRefreshHpMpS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgRefreshHpMpS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgRefreshHpMpS2C::MergeFrom(const MsgRefreshHpMpS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_maxhp()) {
      set_maxhp(from.maxhp());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_maxmp()) {
      set_maxmp(from.maxmp());
    }
    if (from.has_mp()) {
      set_mp(from.mp());
    }
    if (from.has_select()) {
      set_select(from.select());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgRefreshHpMpS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRefreshHpMpS2C::CopyFrom(const MsgRefreshHpMpS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRefreshHpMpS2C::IsInitialized() const {

  return true;
}

void MsgRefreshHpMpS2C::Swap(MsgRefreshHpMpS2C* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(maxhp_, other->maxhp_);
    std::swap(hp_, other->hp_);
    std::swap(maxmp_, other->maxmp_);
    std::swap(mp_, other->mp_);
    std::swap(select_, other->select_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgRefreshHpMpS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRefreshHpMpS2C_descriptor_;
  metadata.reflection = MsgRefreshHpMpS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FMsgVisitNpcC2S::kNpcidFieldNumber;
#endif  // !_MSC_VER

FMsgVisitNpcC2S::FMsgVisitNpcC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.FMsgVisitNpcC2S)
}

void FMsgVisitNpcC2S::InitAsDefaultInstance() {
}

FMsgVisitNpcC2S::FMsgVisitNpcC2S(const FMsgVisitNpcC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.FMsgVisitNpcC2S)
}

void FMsgVisitNpcC2S::SharedCtor() {
  _cached_size_ = 0;
  npcid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FMsgVisitNpcC2S::~FMsgVisitNpcC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.FMsgVisitNpcC2S)
  SharedDtor();
}

void FMsgVisitNpcC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FMsgVisitNpcC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FMsgVisitNpcC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FMsgVisitNpcC2S_descriptor_;
}

const FMsgVisitNpcC2S& FMsgVisitNpcC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

FMsgVisitNpcC2S* FMsgVisitNpcC2S::default_instance_ = NULL;

FMsgVisitNpcC2S* FMsgVisitNpcC2S::New() const {
  return new FMsgVisitNpcC2S;
}

void FMsgVisitNpcC2S::Clear() {
  npcid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FMsgVisitNpcC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.FMsgVisitNpcC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 npcid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npcid_)));
          set_has_npcid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.FMsgVisitNpcC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.FMsgVisitNpcC2S)
  return false;
#undef DO_
}

void FMsgVisitNpcC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.FMsgVisitNpcC2S)
  // optional uint32 npcid = 1;
  if (has_npcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->npcid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.FMsgVisitNpcC2S)
}

::google::protobuf::uint8* FMsgVisitNpcC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.FMsgVisitNpcC2S)
  // optional uint32 npcid = 1;
  if (has_npcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->npcid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.FMsgVisitNpcC2S)
  return target;
}

int FMsgVisitNpcC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 npcid = 1;
    if (has_npcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npcid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FMsgVisitNpcC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FMsgVisitNpcC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FMsgVisitNpcC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FMsgVisitNpcC2S::MergeFrom(const FMsgVisitNpcC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_npcid()) {
      set_npcid(from.npcid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FMsgVisitNpcC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FMsgVisitNpcC2S::CopyFrom(const FMsgVisitNpcC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FMsgVisitNpcC2S::IsInitialized() const {

  return true;
}

void FMsgVisitNpcC2S::Swap(FMsgVisitNpcC2S* other) {
  if (other != this) {
    std::swap(npcid_, other->npcid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FMsgVisitNpcC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FMsgVisitNpcC2S_descriptor_;
  metadata.reflection = FMsgVisitNpcC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FMsgResponseDialogS2C::kNpcIdFieldNumber;
const int FMsgResponseDialogS2C::kNpcTmpidFieldNumber;
const int FMsgResponseDialogS2C::kFunctionFieldNumber;
const int FMsgResponseDialogS2C::kAcceptquestFieldNumber;
const int FMsgResponseDialogS2C::kCompletequestFieldNumber;
#endif  // !_MSC_VER

FMsgResponseDialogS2C::FMsgResponseDialogS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.FMsgResponseDialogS2C)
}

void FMsgResponseDialogS2C::InitAsDefaultInstance() {
}

FMsgResponseDialogS2C::FMsgResponseDialogS2C(const FMsgResponseDialogS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.FMsgResponseDialogS2C)
}

void FMsgResponseDialogS2C::SharedCtor() {
  _cached_size_ = 0;
  npc_id_ = 0u;
  npc_tmpid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FMsgResponseDialogS2C::~FMsgResponseDialogS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.FMsgResponseDialogS2C)
  SharedDtor();
}

void FMsgResponseDialogS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FMsgResponseDialogS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FMsgResponseDialogS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FMsgResponseDialogS2C_descriptor_;
}

const FMsgResponseDialogS2C& FMsgResponseDialogS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

FMsgResponseDialogS2C* FMsgResponseDialogS2C::default_instance_ = NULL;

FMsgResponseDialogS2C* FMsgResponseDialogS2C::New() const {
  return new FMsgResponseDialogS2C;
}

void FMsgResponseDialogS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FMsgResponseDialogS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(npc_id_, npc_tmpid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  function_.Clear();
  acceptquest_.Clear();
  completequest_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FMsgResponseDialogS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.FMsgResponseDialogS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 npc_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_id_)));
          set_has_npc_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npc_tmpid;
        break;
      }

      // optional uint32 npc_tmpid = 2;
      case 2: {
        if (tag == 16) {
         parse_npc_tmpid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_tmpid_)));
          set_has_npc_tmpid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_function;
        break;
      }

      // repeated uint32 function = 3;
      case 3: {
        if (tag == 24) {
         parse_function:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_function())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_function())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_function;
        if (input->ExpectTag(32)) goto parse_acceptquest;
        break;
      }

      // repeated uint32 acceptquest = 4;
      case 4: {
        if (tag == 32) {
         parse_acceptquest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_acceptquest())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_acceptquest())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_acceptquest;
        if (input->ExpectTag(40)) goto parse_completequest;
        break;
      }

      // repeated uint32 completequest = 5;
      case 5: {
        if (tag == 40) {
         parse_completequest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_completequest())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_completequest())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_completequest;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.FMsgResponseDialogS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.FMsgResponseDialogS2C)
  return false;
#undef DO_
}

void FMsgResponseDialogS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.FMsgResponseDialogS2C)
  // optional uint32 npc_id = 1;
  if (has_npc_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->npc_id(), output);
  }

  // optional uint32 npc_tmpid = 2;
  if (has_npc_tmpid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->npc_tmpid(), output);
  }

  // repeated uint32 function = 3;
  for (int i = 0; i < this->function_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->function(i), output);
  }

  // repeated uint32 acceptquest = 4;
  for (int i = 0; i < this->acceptquest_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->acceptquest(i), output);
  }

  // repeated uint32 completequest = 5;
  for (int i = 0; i < this->completequest_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->completequest(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.FMsgResponseDialogS2C)
}

::google::protobuf::uint8* FMsgResponseDialogS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.FMsgResponseDialogS2C)
  // optional uint32 npc_id = 1;
  if (has_npc_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->npc_id(), target);
  }

  // optional uint32 npc_tmpid = 2;
  if (has_npc_tmpid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->npc_tmpid(), target);
  }

  // repeated uint32 function = 3;
  for (int i = 0; i < this->function_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->function(i), target);
  }

  // repeated uint32 acceptquest = 4;
  for (int i = 0; i < this->acceptquest_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->acceptquest(i), target);
  }

  // repeated uint32 completequest = 5;
  for (int i = 0; i < this->completequest_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->completequest(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.FMsgResponseDialogS2C)
  return target;
}

int FMsgResponseDialogS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 npc_id = 1;
    if (has_npc_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npc_id());
    }

    // optional uint32 npc_tmpid = 2;
    if (has_npc_tmpid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npc_tmpid());
    }

  }
  // repeated uint32 function = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->function_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->function(i));
    }
    total_size += 1 * this->function_size() + data_size;
  }

  // repeated uint32 acceptquest = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->acceptquest_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->acceptquest(i));
    }
    total_size += 1 * this->acceptquest_size() + data_size;
  }

  // repeated uint32 completequest = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->completequest_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->completequest(i));
    }
    total_size += 1 * this->completequest_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FMsgResponseDialogS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FMsgResponseDialogS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FMsgResponseDialogS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FMsgResponseDialogS2C::MergeFrom(const FMsgResponseDialogS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  function_.MergeFrom(from.function_);
  acceptquest_.MergeFrom(from.acceptquest_);
  completequest_.MergeFrom(from.completequest_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_npc_id()) {
      set_npc_id(from.npc_id());
    }
    if (from.has_npc_tmpid()) {
      set_npc_tmpid(from.npc_tmpid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FMsgResponseDialogS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FMsgResponseDialogS2C::CopyFrom(const FMsgResponseDialogS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FMsgResponseDialogS2C::IsInitialized() const {

  return true;
}

void FMsgResponseDialogS2C::Swap(FMsgResponseDialogS2C* other) {
  if (other != this) {
    std::swap(npc_id_, other->npc_id_);
    std::swap(npc_tmpid_, other->npc_tmpid_);
    function_.Swap(&other->function_);
    acceptquest_.Swap(&other->acceptquest_);
    completequest_.Swap(&other->completequest_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FMsgResponseDialogS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FMsgResponseDialogS2C_descriptor_;
  metadata.reflection = FMsgResponseDialogS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FMsgDialogFunctionAckC2S::kNpcTmpidFieldNumber;
const int FMsgDialogFunctionAckC2S::kFunctionIdFieldNumber;
const int FMsgDialogFunctionAckC2S::kInputStrFieldNumber;
#endif  // !_MSC_VER

FMsgDialogFunctionAckC2S::FMsgDialogFunctionAckC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.FMsgDialogFunctionAckC2S)
}

void FMsgDialogFunctionAckC2S::InitAsDefaultInstance() {
}

FMsgDialogFunctionAckC2S::FMsgDialogFunctionAckC2S(const FMsgDialogFunctionAckC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.FMsgDialogFunctionAckC2S)
}

void FMsgDialogFunctionAckC2S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  npc_tmpid_ = 0u;
  function_id_ = 0u;
  input_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FMsgDialogFunctionAckC2S::~FMsgDialogFunctionAckC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.FMsgDialogFunctionAckC2S)
  SharedDtor();
}

void FMsgDialogFunctionAckC2S::SharedDtor() {
  if (input_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete input_str_;
  }
  if (this != default_instance_) {
  }
}

void FMsgDialogFunctionAckC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FMsgDialogFunctionAckC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FMsgDialogFunctionAckC2S_descriptor_;
}

const FMsgDialogFunctionAckC2S& FMsgDialogFunctionAckC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

FMsgDialogFunctionAckC2S* FMsgDialogFunctionAckC2S::default_instance_ = NULL;

FMsgDialogFunctionAckC2S* FMsgDialogFunctionAckC2S::New() const {
  return new FMsgDialogFunctionAckC2S;
}

void FMsgDialogFunctionAckC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FMsgDialogFunctionAckC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(npc_tmpid_, function_id_);
    if (has_input_str()) {
      if (input_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        input_str_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FMsgDialogFunctionAckC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.FMsgDialogFunctionAckC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 npc_tmpid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_tmpid_)));
          set_has_npc_tmpid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_function_id;
        break;
      }

      // optional uint32 function_id = 2;
      case 2: {
        if (tag == 16) {
         parse_function_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &function_id_)));
          set_has_function_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_input_str;
        break;
      }

      // optional bytes input_str = 3;
      case 3: {
        if (tag == 26) {
         parse_input_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input_str()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.FMsgDialogFunctionAckC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.FMsgDialogFunctionAckC2S)
  return false;
#undef DO_
}

void FMsgDialogFunctionAckC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.FMsgDialogFunctionAckC2S)
  // optional uint32 npc_tmpid = 1;
  if (has_npc_tmpid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->npc_tmpid(), output);
  }

  // optional uint32 function_id = 2;
  if (has_function_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->function_id(), output);
  }

  // optional bytes input_str = 3;
  if (has_input_str()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->input_str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.FMsgDialogFunctionAckC2S)
}

::google::protobuf::uint8* FMsgDialogFunctionAckC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.FMsgDialogFunctionAckC2S)
  // optional uint32 npc_tmpid = 1;
  if (has_npc_tmpid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->npc_tmpid(), target);
  }

  // optional uint32 function_id = 2;
  if (has_function_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->function_id(), target);
  }

  // optional bytes input_str = 3;
  if (has_input_str()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->input_str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.FMsgDialogFunctionAckC2S)
  return target;
}

int FMsgDialogFunctionAckC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 npc_tmpid = 1;
    if (has_npc_tmpid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npc_tmpid());
    }

    // optional uint32 function_id = 2;
    if (has_function_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->function_id());
    }

    // optional bytes input_str = 3;
    if (has_input_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->input_str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FMsgDialogFunctionAckC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FMsgDialogFunctionAckC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FMsgDialogFunctionAckC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FMsgDialogFunctionAckC2S::MergeFrom(const FMsgDialogFunctionAckC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_npc_tmpid()) {
      set_npc_tmpid(from.npc_tmpid());
    }
    if (from.has_function_id()) {
      set_function_id(from.function_id());
    }
    if (from.has_input_str()) {
      set_input_str(from.input_str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FMsgDialogFunctionAckC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FMsgDialogFunctionAckC2S::CopyFrom(const FMsgDialogFunctionAckC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FMsgDialogFunctionAckC2S::IsInitialized() const {

  return true;
}

void FMsgDialogFunctionAckC2S::Swap(FMsgDialogFunctionAckC2S* other) {
  if (other != this) {
    std::swap(npc_tmpid_, other->npc_tmpid_);
    std::swap(function_id_, other->function_id_);
    std::swap(input_str_, other->input_str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FMsgDialogFunctionAckC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FMsgDialogFunctionAckC2S_descriptor_;
  metadata.reflection = FMsgDialogFunctionAckC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageVisitNpcS2C::kNpcidFieldNumber;
const int MessageVisitNpcS2C::kAcceptquestFieldNumber;
const int MessageVisitNpcS2C::kCompletequestFieldNumber;
const int MessageVisitNpcS2C::kNpcfuncFieldNumber;
const int MessageVisitNpcS2C::kDlgparalistFieldNumber;
const int MessageVisitNpcS2C::kDlgdescFieldNumber;
#endif  // !_MSC_VER

MessageVisitNpcS2C::MessageVisitNpcS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageVisitNpcS2C)
}

void MessageVisitNpcS2C::InitAsDefaultInstance() {
}

MessageVisitNpcS2C::MessageVisitNpcS2C(const MessageVisitNpcS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageVisitNpcS2C)
}

void MessageVisitNpcS2C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  npcid_ = 0u;
  dlgdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageVisitNpcS2C::~MessageVisitNpcS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageVisitNpcS2C)
  SharedDtor();
}

void MessageVisitNpcS2C::SharedDtor() {
  if (dlgdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dlgdesc_;
  }
  if (this != default_instance_) {
  }
}

void MessageVisitNpcS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageVisitNpcS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageVisitNpcS2C_descriptor_;
}

const MessageVisitNpcS2C& MessageVisitNpcS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageVisitNpcS2C* MessageVisitNpcS2C::default_instance_ = NULL;

MessageVisitNpcS2C* MessageVisitNpcS2C::New() const {
  return new MessageVisitNpcS2C;
}

void MessageVisitNpcS2C::Clear() {
  if (_has_bits_[0 / 32] & 33) {
    npcid_ = 0u;
    if (has_dlgdesc()) {
      if (dlgdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        dlgdesc_->clear();
      }
    }
  }
  acceptquest_.Clear();
  completequest_.Clear();
  npcfunc_.Clear();
  dlgparalist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageVisitNpcS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageVisitNpcS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 npcid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npcid_)));
          set_has_npcid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_acceptquest;
        break;
      }

      // repeated uint32 acceptquest = 2;
      case 2: {
        if (tag == 16) {
         parse_acceptquest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_acceptquest())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_acceptquest())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_acceptquest;
        if (input->ExpectTag(24)) goto parse_completequest;
        break;
      }

      // repeated uint32 completequest = 3;
      case 3: {
        if (tag == 24) {
         parse_completequest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_completequest())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_completequest())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_completequest;
        if (input->ExpectTag(34)) goto parse_npcfunc;
        break;
      }

      // repeated .FMsgNpcFunction npcfunc = 4;
      case 4: {
        if (tag == 34) {
         parse_npcfunc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_npcfunc()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_npcfunc;
        if (input->ExpectTag(42)) goto parse_dlgparalist;
        break;
      }

      // repeated .FNpcDlgPara dlgparalist = 5;
      case 5: {
        if (tag == 42) {
         parse_dlgparalist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dlgparalist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dlgparalist;
        if (input->ExpectTag(50)) goto parse_dlgdesc;
        break;
      }

      // optional string dlgdesc = 6;
      case 6: {
        if (tag == 50) {
         parse_dlgdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dlgdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dlgdesc().data(), this->dlgdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dlgdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageVisitNpcS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageVisitNpcS2C)
  return false;
#undef DO_
}

void MessageVisitNpcS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageVisitNpcS2C)
  // optional uint32 npcid = 1;
  if (has_npcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->npcid(), output);
  }

  // repeated uint32 acceptquest = 2;
  for (int i = 0; i < this->acceptquest_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->acceptquest(i), output);
  }

  // repeated uint32 completequest = 3;
  for (int i = 0; i < this->completequest_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->completequest(i), output);
  }

  // repeated .FMsgNpcFunction npcfunc = 4;
  for (int i = 0; i < this->npcfunc_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->npcfunc(i), output);
  }

  // repeated .FNpcDlgPara dlgparalist = 5;
  for (int i = 0; i < this->dlgparalist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->dlgparalist(i), output);
  }

  // optional string dlgdesc = 6;
  if (has_dlgdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dlgdesc().data(), this->dlgdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dlgdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->dlgdesc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageVisitNpcS2C)
}

::google::protobuf::uint8* MessageVisitNpcS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageVisitNpcS2C)
  // optional uint32 npcid = 1;
  if (has_npcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->npcid(), target);
  }

  // repeated uint32 acceptquest = 2;
  for (int i = 0; i < this->acceptquest_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->acceptquest(i), target);
  }

  // repeated uint32 completequest = 3;
  for (int i = 0; i < this->completequest_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->completequest(i), target);
  }

  // repeated .FMsgNpcFunction npcfunc = 4;
  for (int i = 0; i < this->npcfunc_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->npcfunc(i), target);
  }

  // repeated .FNpcDlgPara dlgparalist = 5;
  for (int i = 0; i < this->dlgparalist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->dlgparalist(i), target);
  }

  // optional string dlgdesc = 6;
  if (has_dlgdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dlgdesc().data(), this->dlgdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dlgdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->dlgdesc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageVisitNpcS2C)
  return target;
}

int MessageVisitNpcS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 npcid = 1;
    if (has_npcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npcid());
    }

    // optional string dlgdesc = 6;
    if (has_dlgdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dlgdesc());
    }

  }
  // repeated uint32 acceptquest = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->acceptquest_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->acceptquest(i));
    }
    total_size += 1 * this->acceptquest_size() + data_size;
  }

  // repeated uint32 completequest = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->completequest_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->completequest(i));
    }
    total_size += 1 * this->completequest_size() + data_size;
  }

  // repeated .FMsgNpcFunction npcfunc = 4;
  total_size += 1 * this->npcfunc_size();
  for (int i = 0; i < this->npcfunc_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->npcfunc(i));
  }

  // repeated .FNpcDlgPara dlgparalist = 5;
  total_size += 1 * this->dlgparalist_size();
  for (int i = 0; i < this->dlgparalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dlgparalist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageVisitNpcS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageVisitNpcS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageVisitNpcS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageVisitNpcS2C::MergeFrom(const MessageVisitNpcS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  acceptquest_.MergeFrom(from.acceptquest_);
  completequest_.MergeFrom(from.completequest_);
  npcfunc_.MergeFrom(from.npcfunc_);
  dlgparalist_.MergeFrom(from.dlgparalist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_npcid()) {
      set_npcid(from.npcid());
    }
    if (from.has_dlgdesc()) {
      set_dlgdesc(from.dlgdesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageVisitNpcS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageVisitNpcS2C::CopyFrom(const MessageVisitNpcS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageVisitNpcS2C::IsInitialized() const {

  return true;
}

void MessageVisitNpcS2C::Swap(MessageVisitNpcS2C* other) {
  if (other != this) {
    std::swap(npcid_, other->npcid_);
    acceptquest_.Swap(&other->acceptquest_);
    completequest_.Swap(&other->completequest_);
    npcfunc_.Swap(&other->npcfunc_);
    dlgparalist_.Swap(&other->dlgparalist_);
    std::swap(dlgdesc_, other->dlgdesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageVisitNpcS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageVisitNpcS2C_descriptor_;
  metadata.reflection = MessageVisitNpcS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FMsgAcceptQuestC2S::kQuestidFieldNumber;
const int FMsgAcceptQuestC2S::kNpcidFieldNumber;
#endif  // !_MSC_VER

FMsgAcceptQuestC2S::FMsgAcceptQuestC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.FMsgAcceptQuestC2S)
}

void FMsgAcceptQuestC2S::InitAsDefaultInstance() {
}

FMsgAcceptQuestC2S::FMsgAcceptQuestC2S(const FMsgAcceptQuestC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.FMsgAcceptQuestC2S)
}

void FMsgAcceptQuestC2S::SharedCtor() {
  _cached_size_ = 0;
  questid_ = 0u;
  npcid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FMsgAcceptQuestC2S::~FMsgAcceptQuestC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.FMsgAcceptQuestC2S)
  SharedDtor();
}

void FMsgAcceptQuestC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FMsgAcceptQuestC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FMsgAcceptQuestC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FMsgAcceptQuestC2S_descriptor_;
}

const FMsgAcceptQuestC2S& FMsgAcceptQuestC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

FMsgAcceptQuestC2S* FMsgAcceptQuestC2S::default_instance_ = NULL;

FMsgAcceptQuestC2S* FMsgAcceptQuestC2S::New() const {
  return new FMsgAcceptQuestC2S;
}

void FMsgAcceptQuestC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FMsgAcceptQuestC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(questid_, npcid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FMsgAcceptQuestC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.FMsgAcceptQuestC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 questid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &questid_)));
          set_has_questid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npcid;
        break;
      }

      // optional uint32 npcid = 2;
      case 2: {
        if (tag == 16) {
         parse_npcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npcid_)));
          set_has_npcid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.FMsgAcceptQuestC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.FMsgAcceptQuestC2S)
  return false;
#undef DO_
}

void FMsgAcceptQuestC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.FMsgAcceptQuestC2S)
  // optional uint32 questid = 1;
  if (has_questid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->questid(), output);
  }

  // optional uint32 npcid = 2;
  if (has_npcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->npcid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.FMsgAcceptQuestC2S)
}

::google::protobuf::uint8* FMsgAcceptQuestC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.FMsgAcceptQuestC2S)
  // optional uint32 questid = 1;
  if (has_questid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->questid(), target);
  }

  // optional uint32 npcid = 2;
  if (has_npcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->npcid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.FMsgAcceptQuestC2S)
  return target;
}

int FMsgAcceptQuestC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 questid = 1;
    if (has_questid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->questid());
    }

    // optional uint32 npcid = 2;
    if (has_npcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npcid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FMsgAcceptQuestC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FMsgAcceptQuestC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FMsgAcceptQuestC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FMsgAcceptQuestC2S::MergeFrom(const FMsgAcceptQuestC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_questid()) {
      set_questid(from.questid());
    }
    if (from.has_npcid()) {
      set_npcid(from.npcid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FMsgAcceptQuestC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FMsgAcceptQuestC2S::CopyFrom(const FMsgAcceptQuestC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FMsgAcceptQuestC2S::IsInitialized() const {

  return true;
}

void FMsgAcceptQuestC2S::Swap(FMsgAcceptQuestC2S* other) {
  if (other != this) {
    std::swap(questid_, other->questid_);
    std::swap(npcid_, other->npcid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FMsgAcceptQuestC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FMsgAcceptQuestC2S_descriptor_;
  metadata.reflection = FMsgAcceptQuestC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FMsgCompleteQuestC2S::kQuestidFieldNumber;
const int FMsgCompleteQuestC2S::kNpctempidFieldNumber;
const int FMsgCompleteQuestC2S::kOptionitembaseidFieldNumber;
const int FMsgCompleteQuestC2S::kCommititemidFieldNumber;
#endif  // !_MSC_VER

FMsgCompleteQuestC2S::FMsgCompleteQuestC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.FMsgCompleteQuestC2S)
}

void FMsgCompleteQuestC2S::InitAsDefaultInstance() {
}

FMsgCompleteQuestC2S::FMsgCompleteQuestC2S(const FMsgCompleteQuestC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.FMsgCompleteQuestC2S)
}

void FMsgCompleteQuestC2S::SharedCtor() {
  _cached_size_ = 0;
  questid_ = 0u;
  npctempid_ = 0u;
  optionitembaseid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FMsgCompleteQuestC2S::~FMsgCompleteQuestC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.FMsgCompleteQuestC2S)
  SharedDtor();
}

void FMsgCompleteQuestC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FMsgCompleteQuestC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FMsgCompleteQuestC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FMsgCompleteQuestC2S_descriptor_;
}

const FMsgCompleteQuestC2S& FMsgCompleteQuestC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

FMsgCompleteQuestC2S* FMsgCompleteQuestC2S::default_instance_ = NULL;

FMsgCompleteQuestC2S* FMsgCompleteQuestC2S::New() const {
  return new FMsgCompleteQuestC2S;
}

void FMsgCompleteQuestC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FMsgCompleteQuestC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(questid_, npctempid_);
    optionitembaseid_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  commititemid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FMsgCompleteQuestC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.FMsgCompleteQuestC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 questid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &questid_)));
          set_has_questid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npctempid;
        break;
      }

      // optional uint32 npctempid = 2;
      case 2: {
        if (tag == 16) {
         parse_npctempid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npctempid_)));
          set_has_npctempid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_optionitembaseid;
        break;
      }

      // optional uint32 optionitembaseid = 3;
      case 3: {
        if (tag == 24) {
         parse_optionitembaseid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optionitembaseid_)));
          set_has_optionitembaseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_commititemid;
        break;
      }

      // repeated uint32 commititemid = 4;
      case 4: {
        if (tag == 32) {
         parse_commititemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_commititemid())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_commititemid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_commititemid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.FMsgCompleteQuestC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.FMsgCompleteQuestC2S)
  return false;
#undef DO_
}

void FMsgCompleteQuestC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.FMsgCompleteQuestC2S)
  // optional uint32 questid = 1;
  if (has_questid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->questid(), output);
  }

  // optional uint32 npctempid = 2;
  if (has_npctempid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->npctempid(), output);
  }

  // optional uint32 optionitembaseid = 3;
  if (has_optionitembaseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->optionitembaseid(), output);
  }

  // repeated uint32 commititemid = 4;
  for (int i = 0; i < this->commititemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->commititemid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.FMsgCompleteQuestC2S)
}

::google::protobuf::uint8* FMsgCompleteQuestC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.FMsgCompleteQuestC2S)
  // optional uint32 questid = 1;
  if (has_questid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->questid(), target);
  }

  // optional uint32 npctempid = 2;
  if (has_npctempid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->npctempid(), target);
  }

  // optional uint32 optionitembaseid = 3;
  if (has_optionitembaseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->optionitembaseid(), target);
  }

  // repeated uint32 commititemid = 4;
  for (int i = 0; i < this->commititemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->commititemid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.FMsgCompleteQuestC2S)
  return target;
}

int FMsgCompleteQuestC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 questid = 1;
    if (has_questid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->questid());
    }

    // optional uint32 npctempid = 2;
    if (has_npctempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npctempid());
    }

    // optional uint32 optionitembaseid = 3;
    if (has_optionitembaseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->optionitembaseid());
    }

  }
  // repeated uint32 commititemid = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->commititemid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->commititemid(i));
    }
    total_size += 1 * this->commititemid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FMsgCompleteQuestC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FMsgCompleteQuestC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FMsgCompleteQuestC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FMsgCompleteQuestC2S::MergeFrom(const FMsgCompleteQuestC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  commititemid_.MergeFrom(from.commititemid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_questid()) {
      set_questid(from.questid());
    }
    if (from.has_npctempid()) {
      set_npctempid(from.npctempid());
    }
    if (from.has_optionitembaseid()) {
      set_optionitembaseid(from.optionitembaseid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FMsgCompleteQuestC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FMsgCompleteQuestC2S::CopyFrom(const FMsgCompleteQuestC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FMsgCompleteQuestC2S::IsInitialized() const {

  return true;
}

void FMsgCompleteQuestC2S::Swap(FMsgCompleteQuestC2S* other) {
  if (other != this) {
    std::swap(questid_, other->questid_);
    std::swap(npctempid_, other->npctempid_);
    std::swap(optionitembaseid_, other->optionitembaseid_);
    commititemid_.Swap(&other->commititemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FMsgCompleteQuestC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FMsgCompleteQuestC2S_descriptor_;
  metadata.reflection = FMsgCompleteQuestC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FMsgQuestDataS2C::kQuestidFieldNumber;
const int FMsgQuestDataS2C::kStateFieldNumber;
const int FMsgQuestDataS2C::kVarsFieldNumber;
const int FMsgQuestDataS2C::kAcceptTimeFieldNumber;
const int FMsgQuestDataS2C::kCompleteSubNumFieldNumber;
const int FMsgQuestDataS2C::kSubquestidFieldNumber;
#endif  // !_MSC_VER

FMsgQuestDataS2C::FMsgQuestDataS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.FMsgQuestDataS2C)
}

void FMsgQuestDataS2C::InitAsDefaultInstance() {
}

FMsgQuestDataS2C::FMsgQuestDataS2C(const FMsgQuestDataS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.FMsgQuestDataS2C)
}

void FMsgQuestDataS2C::SharedCtor() {
  _cached_size_ = 0;
  questid_ = 0u;
  state_ = 0;
  accepttime_ = 0u;
  completesubnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FMsgQuestDataS2C::~FMsgQuestDataS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.FMsgQuestDataS2C)
  SharedDtor();
}

void FMsgQuestDataS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FMsgQuestDataS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FMsgQuestDataS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FMsgQuestDataS2C_descriptor_;
}

const FMsgQuestDataS2C& FMsgQuestDataS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

FMsgQuestDataS2C* FMsgQuestDataS2C::default_instance_ = NULL;

FMsgQuestDataS2C* FMsgQuestDataS2C::New() const {
  return new FMsgQuestDataS2C;
}

void FMsgQuestDataS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FMsgQuestDataS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(questid_, state_);
  ZR_(accepttime_, completesubnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  vars_.Clear();
  subquestid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FMsgQuestDataS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.FMsgQuestDataS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 questid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &questid_)));
          set_has_questid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional .QuestStateType state = 2 [default = QUESTSTATE_NONE];
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::QuestStateType_IsValid(value)) {
            set_state(static_cast< ::QuestStateType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_vars;
        break;
      }

      // repeated .QuestVar vars = 3;
      case 3: {
        if (tag == 26) {
         parse_vars:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vars()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_vars;
        if (input->ExpectTag(32)) goto parse_acceptTime;
        break;
      }

      // optional uint32 acceptTime = 4;
      case 4: {
        if (tag == 32) {
         parse_acceptTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accepttime_)));
          set_has_accepttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_completeSubNum;
        break;
      }

      // optional uint32 completeSubNum = 5;
      case 5: {
        if (tag == 40) {
         parse_completeSubNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &completesubnum_)));
          set_has_completesubnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_subquestid;
        break;
      }

      // repeated uint32 subquestid = 6;
      case 6: {
        if (tag == 48) {
         parse_subquestid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_subquestid())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_subquestid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_subquestid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.FMsgQuestDataS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.FMsgQuestDataS2C)
  return false;
#undef DO_
}

void FMsgQuestDataS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.FMsgQuestDataS2C)
  // optional uint32 questid = 1;
  if (has_questid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->questid(), output);
  }

  // optional .QuestStateType state = 2 [default = QUESTSTATE_NONE];
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // repeated .QuestVar vars = 3;
  for (int i = 0; i < this->vars_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->vars(i), output);
  }

  // optional uint32 acceptTime = 4;
  if (has_accepttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->accepttime(), output);
  }

  // optional uint32 completeSubNum = 5;
  if (has_completesubnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->completesubnum(), output);
  }

  // repeated uint32 subquestid = 6;
  for (int i = 0; i < this->subquestid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->subquestid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.FMsgQuestDataS2C)
}

::google::protobuf::uint8* FMsgQuestDataS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.FMsgQuestDataS2C)
  // optional uint32 questid = 1;
  if (has_questid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->questid(), target);
  }

  // optional .QuestStateType state = 2 [default = QUESTSTATE_NONE];
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // repeated .QuestVar vars = 3;
  for (int i = 0; i < this->vars_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->vars(i), target);
  }

  // optional uint32 acceptTime = 4;
  if (has_accepttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->accepttime(), target);
  }

  // optional uint32 completeSubNum = 5;
  if (has_completesubnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->completesubnum(), target);
  }

  // repeated uint32 subquestid = 6;
  for (int i = 0; i < this->subquestid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->subquestid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.FMsgQuestDataS2C)
  return target;
}

int FMsgQuestDataS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 questid = 1;
    if (has_questid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->questid());
    }

    // optional .QuestStateType state = 2 [default = QUESTSTATE_NONE];
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

    // optional uint32 acceptTime = 4;
    if (has_accepttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accepttime());
    }

    // optional uint32 completeSubNum = 5;
    if (has_completesubnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->completesubnum());
    }

  }
  // repeated .QuestVar vars = 3;
  total_size += 1 * this->vars_size();
  for (int i = 0; i < this->vars_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vars(i));
  }

  // repeated uint32 subquestid = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->subquestid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->subquestid(i));
    }
    total_size += 1 * this->subquestid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FMsgQuestDataS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FMsgQuestDataS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FMsgQuestDataS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FMsgQuestDataS2C::MergeFrom(const FMsgQuestDataS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  vars_.MergeFrom(from.vars_);
  subquestid_.MergeFrom(from.subquestid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_questid()) {
      set_questid(from.questid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_accepttime()) {
      set_accepttime(from.accepttime());
    }
    if (from.has_completesubnum()) {
      set_completesubnum(from.completesubnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FMsgQuestDataS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FMsgQuestDataS2C::CopyFrom(const FMsgQuestDataS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FMsgQuestDataS2C::IsInitialized() const {

  return true;
}

void FMsgQuestDataS2C::Swap(FMsgQuestDataS2C* other) {
  if (other != this) {
    std::swap(questid_, other->questid_);
    std::swap(state_, other->state_);
    vars_.Swap(&other->vars_);
    std::swap(accepttime_, other->accepttime_);
    std::swap(completesubnum_, other->completesubnum_);
    subquestid_.Swap(&other->subquestid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FMsgQuestDataS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FMsgQuestDataS2C_descriptor_;
  metadata.reflection = FMsgQuestDataS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FMsgMyQuestsDataS2C::kQuestsdataFieldNumber;
#endif  // !_MSC_VER

FMsgMyQuestsDataS2C::FMsgMyQuestsDataS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.FMsgMyQuestsDataS2C)
}

void FMsgMyQuestsDataS2C::InitAsDefaultInstance() {
}

FMsgMyQuestsDataS2C::FMsgMyQuestsDataS2C(const FMsgMyQuestsDataS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.FMsgMyQuestsDataS2C)
}

void FMsgMyQuestsDataS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FMsgMyQuestsDataS2C::~FMsgMyQuestsDataS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.FMsgMyQuestsDataS2C)
  SharedDtor();
}

void FMsgMyQuestsDataS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FMsgMyQuestsDataS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FMsgMyQuestsDataS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FMsgMyQuestsDataS2C_descriptor_;
}

const FMsgMyQuestsDataS2C& FMsgMyQuestsDataS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

FMsgMyQuestsDataS2C* FMsgMyQuestsDataS2C::default_instance_ = NULL;

FMsgMyQuestsDataS2C* FMsgMyQuestsDataS2C::New() const {
  return new FMsgMyQuestsDataS2C;
}

void FMsgMyQuestsDataS2C::Clear() {
  questsdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FMsgMyQuestsDataS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.FMsgMyQuestsDataS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FProtoClient.FMsgQuestDataS2C questsdata = 1;
      case 1: {
        if (tag == 10) {
         parse_questsdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_questsdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_questsdata;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.FMsgMyQuestsDataS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.FMsgMyQuestsDataS2C)
  return false;
#undef DO_
}

void FMsgMyQuestsDataS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.FMsgMyQuestsDataS2C)
  // repeated .FProtoClient.FMsgQuestDataS2C questsdata = 1;
  for (int i = 0; i < this->questsdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->questsdata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.FMsgMyQuestsDataS2C)
}

::google::protobuf::uint8* FMsgMyQuestsDataS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.FMsgMyQuestsDataS2C)
  // repeated .FProtoClient.FMsgQuestDataS2C questsdata = 1;
  for (int i = 0; i < this->questsdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->questsdata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.FMsgMyQuestsDataS2C)
  return target;
}

int FMsgMyQuestsDataS2C::ByteSize() const {
  int total_size = 0;

  // repeated .FProtoClient.FMsgQuestDataS2C questsdata = 1;
  total_size += 1 * this->questsdata_size();
  for (int i = 0; i < this->questsdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->questsdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FMsgMyQuestsDataS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FMsgMyQuestsDataS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FMsgMyQuestsDataS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FMsgMyQuestsDataS2C::MergeFrom(const FMsgMyQuestsDataS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  questsdata_.MergeFrom(from.questsdata_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FMsgMyQuestsDataS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FMsgMyQuestsDataS2C::CopyFrom(const FMsgMyQuestsDataS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FMsgMyQuestsDataS2C::IsInitialized() const {

  return true;
}

void FMsgMyQuestsDataS2C::Swap(FMsgMyQuestsDataS2C* other) {
  if (other != this) {
    questsdata_.Swap(&other->questsdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FMsgMyQuestsDataS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FMsgMyQuestsDataS2C_descriptor_;
  metadata.reflection = FMsgMyQuestsDataS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FMsgMyQuestsCanComitS2C::kQuestidFieldNumber;
const int FMsgMyQuestsCanComitS2C::kNpcidFieldNumber;
#endif  // !_MSC_VER

FMsgMyQuestsCanComitS2C::FMsgMyQuestsCanComitS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.FMsgMyQuestsCanComitS2C)
}

void FMsgMyQuestsCanComitS2C::InitAsDefaultInstance() {
}

FMsgMyQuestsCanComitS2C::FMsgMyQuestsCanComitS2C(const FMsgMyQuestsCanComitS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.FMsgMyQuestsCanComitS2C)
}

void FMsgMyQuestsCanComitS2C::SharedCtor() {
  _cached_size_ = 0;
  questid_ = 0u;
  npcid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FMsgMyQuestsCanComitS2C::~FMsgMyQuestsCanComitS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.FMsgMyQuestsCanComitS2C)
  SharedDtor();
}

void FMsgMyQuestsCanComitS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FMsgMyQuestsCanComitS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FMsgMyQuestsCanComitS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FMsgMyQuestsCanComitS2C_descriptor_;
}

const FMsgMyQuestsCanComitS2C& FMsgMyQuestsCanComitS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

FMsgMyQuestsCanComitS2C* FMsgMyQuestsCanComitS2C::default_instance_ = NULL;

FMsgMyQuestsCanComitS2C* FMsgMyQuestsCanComitS2C::New() const {
  return new FMsgMyQuestsCanComitS2C;
}

void FMsgMyQuestsCanComitS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FMsgMyQuestsCanComitS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(questid_, npcid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FMsgMyQuestsCanComitS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.FMsgMyQuestsCanComitS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 questid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &questid_)));
          set_has_questid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npcid;
        break;
      }

      // optional uint32 npcid = 2;
      case 2: {
        if (tag == 16) {
         parse_npcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npcid_)));
          set_has_npcid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.FMsgMyQuestsCanComitS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.FMsgMyQuestsCanComitS2C)
  return false;
#undef DO_
}

void FMsgMyQuestsCanComitS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.FMsgMyQuestsCanComitS2C)
  // optional uint32 questid = 1;
  if (has_questid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->questid(), output);
  }

  // optional uint32 npcid = 2;
  if (has_npcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->npcid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.FMsgMyQuestsCanComitS2C)
}

::google::protobuf::uint8* FMsgMyQuestsCanComitS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.FMsgMyQuestsCanComitS2C)
  // optional uint32 questid = 1;
  if (has_questid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->questid(), target);
  }

  // optional uint32 npcid = 2;
  if (has_npcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->npcid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.FMsgMyQuestsCanComitS2C)
  return target;
}

int FMsgMyQuestsCanComitS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 questid = 1;
    if (has_questid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->questid());
    }

    // optional uint32 npcid = 2;
    if (has_npcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npcid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FMsgMyQuestsCanComitS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FMsgMyQuestsCanComitS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FMsgMyQuestsCanComitS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FMsgMyQuestsCanComitS2C::MergeFrom(const FMsgMyQuestsCanComitS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_questid()) {
      set_questid(from.questid());
    }
    if (from.has_npcid()) {
      set_npcid(from.npcid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FMsgMyQuestsCanComitS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FMsgMyQuestsCanComitS2C::CopyFrom(const FMsgMyQuestsCanComitS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FMsgMyQuestsCanComitS2C::IsInitialized() const {

  return true;
}

void FMsgMyQuestsCanComitS2C::Swap(FMsgMyQuestsCanComitS2C* other) {
  if (other != this) {
    std::swap(questid_, other->questid_);
    std::swap(npcid_, other->npcid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FMsgMyQuestsCanComitS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FMsgMyQuestsCanComitS2C_descriptor_;
  metadata.reflection = FMsgMyQuestsCanComitS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MovePos::kXFieldNumber;
const int MovePos::kYFieldNumber;
const int MovePos::kZFieldNumber;
const int MovePos::kTimeFieldNumber;
#endif  // !_MSC_VER

MovePos::MovePos()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MovePos)
}

void MovePos::InitAsDefaultInstance() {
}

MovePos::MovePos(const MovePos& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MovePos)
}

void MovePos::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0u;
  y_ = 0u;
  z_ = 0u;
  time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MovePos::~MovePos() {
  // @@protoc_insertion_point(destructor:FProtoClient.MovePos)
  SharedDtor();
}

void MovePos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MovePos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MovePos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MovePos_descriptor_;
}

const MovePos& MovePos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MovePos* MovePos::default_instance_ = NULL;

MovePos* MovePos::New() const {
  return new MovePos;
}

void MovePos::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MovePos*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, time_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MovePos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MovePos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional uint32 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_z;
        break;
      }

      // optional uint32 z = 3;
      case 3: {
        if (tag == 24) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_time;
        break;
      }

      // optional uint32 time = 4;
      case 4: {
        if (tag == 32) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MovePos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MovePos)
  return false;
#undef DO_
}

void MovePos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MovePos)
  // optional uint32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  // optional uint32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y(), output);
  }

  // optional uint32 z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->z(), output);
  }

  // optional uint32 time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MovePos)
}

::google::protobuf::uint8* MovePos::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MovePos)
  // optional uint32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x(), target);
  }

  // optional uint32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->y(), target);
  }

  // optional uint32 z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->z(), target);
  }

  // optional uint32 time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MovePos)
  return target;
}

int MovePos::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

    // optional uint32 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z());
    }

    // optional uint32 time = 4;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MovePos::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MovePos* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MovePos*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MovePos::MergeFrom(const MovePos& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MovePos::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MovePos::CopyFrom(const MovePos& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MovePos::IsInitialized() const {

  return true;
}

void MovePos::Swap(MovePos* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MovePos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MovePos_descriptor_;
  metadata.reflection = MovePos_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgCharacterMoveS8C::kObjidFieldNumber;
const int MsgCharacterMoveS8C::kObjtypeFieldNumber;
const int MsgCharacterMoveS8C::kPosFieldNumber;
const int MsgCharacterMoveS8C::kTimestampFieldNumber;
const int MsgCharacterMoveS8C::kGatetimestampFieldNumber;
const int MsgCharacterMoveS8C::kStopFieldNumber;
#endif  // !_MSC_VER

MsgCharacterMoveS8C::MsgCharacterMoveS8C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgCharacterMoveS8C)
}

void MsgCharacterMoveS8C::InitAsDefaultInstance() {
}

MsgCharacterMoveS8C::MsgCharacterMoveS8C(const MsgCharacterMoveS8C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgCharacterMoveS8C)
}

void MsgCharacterMoveS8C::SharedCtor() {
  _cached_size_ = 0;
  objid_ = 0u;
  objtype_ = 0u;
  timestamp_ = 0u;
  gatetimestamp_ = GOOGLE_ULONGLONG(0);
  stop_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgCharacterMoveS8C::~MsgCharacterMoveS8C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgCharacterMoveS8C)
  SharedDtor();
}

void MsgCharacterMoveS8C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgCharacterMoveS8C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCharacterMoveS8C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgCharacterMoveS8C_descriptor_;
}

const MsgCharacterMoveS8C& MsgCharacterMoveS8C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgCharacterMoveS8C* MsgCharacterMoveS8C::default_instance_ = NULL;

MsgCharacterMoveS8C* MsgCharacterMoveS8C::New() const {
  return new MsgCharacterMoveS8C;
}

void MsgCharacterMoveS8C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgCharacterMoveS8C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 59) {
    ZR_(objid_, objtype_);
    ZR_(gatetimestamp_, stop_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  pos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgCharacterMoveS8C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgCharacterMoveS8C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 objid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objtype;
        break;
      }

      // optional uint32 objtype = 2;
      case 2: {
        if (tag == 16) {
         parse_objtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objtype_)));
          set_has_objtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pos;
        break;
      }

      // repeated .FProtoClient.MovePos pos = 3;
      case 3: {
        if (tag == 26) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pos;
        if (input->ExpectTag(32)) goto parse_timestamp;
        break;
      }

      // optional uint32 timestamp = 4;
      case 4: {
        if (tag == 32) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gatetimestamp;
        break;
      }

      // optional uint64 gatetimestamp = 5;
      case 5: {
        if (tag == 40) {
         parse_gatetimestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gatetimestamp_)));
          set_has_gatetimestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_stop;
        break;
      }

      // optional bool stop = 6;
      case 6: {
        if (tag == 48) {
         parse_stop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
          set_has_stop();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgCharacterMoveS8C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgCharacterMoveS8C)
  return false;
#undef DO_
}

void MsgCharacterMoveS8C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgCharacterMoveS8C)
  // optional uint32 objid = 1;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->objid(), output);
  }

  // optional uint32 objtype = 2;
  if (has_objtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->objtype(), output);
  }

  // repeated .FProtoClient.MovePos pos = 3;
  for (int i = 0; i < this->pos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pos(i), output);
  }

  // optional uint32 timestamp = 4;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->timestamp(), output);
  }

  // optional uint64 gatetimestamp = 5;
  if (has_gatetimestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gatetimestamp(), output);
  }

  // optional bool stop = 6;
  if (has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->stop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgCharacterMoveS8C)
}

::google::protobuf::uint8* MsgCharacterMoveS8C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgCharacterMoveS8C)
  // optional uint32 objid = 1;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->objid(), target);
  }

  // optional uint32 objtype = 2;
  if (has_objtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->objtype(), target);
  }

  // repeated .FProtoClient.MovePos pos = 3;
  for (int i = 0; i < this->pos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->pos(i), target);
  }

  // optional uint32 timestamp = 4;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->timestamp(), target);
  }

  // optional uint64 gatetimestamp = 5;
  if (has_gatetimestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gatetimestamp(), target);
  }

  // optional bool stop = 6;
  if (has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->stop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgCharacterMoveS8C)
  return target;
}

int MsgCharacterMoveS8C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 objid = 1;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->objid());
    }

    // optional uint32 objtype = 2;
    if (has_objtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->objtype());
    }

    // optional uint32 timestamp = 4;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

    // optional uint64 gatetimestamp = 5;
    if (has_gatetimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gatetimestamp());
    }

    // optional bool stop = 6;
    if (has_stop()) {
      total_size += 1 + 1;
    }

  }
  // repeated .FProtoClient.MovePos pos = 3;
  total_size += 1 * this->pos_size();
  for (int i = 0; i < this->pos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCharacterMoveS8C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgCharacterMoveS8C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgCharacterMoveS8C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgCharacterMoveS8C::MergeFrom(const MsgCharacterMoveS8C& from) {
  GOOGLE_CHECK_NE(&from, this);
  pos_.MergeFrom(from.pos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_objtype()) {
      set_objtype(from.objtype());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_gatetimestamp()) {
      set_gatetimestamp(from.gatetimestamp());
    }
    if (from.has_stop()) {
      set_stop(from.stop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgCharacterMoveS8C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCharacterMoveS8C::CopyFrom(const MsgCharacterMoveS8C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCharacterMoveS8C::IsInitialized() const {

  return true;
}

void MsgCharacterMoveS8C::Swap(MsgCharacterMoveS8C* other) {
  if (other != this) {
    std::swap(objid_, other->objid_);
    std::swap(objtype_, other->objtype_);
    pos_.Swap(&other->pos_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(gatetimestamp_, other->gatetimestamp_);
    std::swap(stop_, other->stop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgCharacterMoveS8C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgCharacterMoveS8C_descriptor_;
  metadata.reflection = MsgCharacterMoveS8C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FMsgPropertyStateS2C::kDataFieldNumber;
const int FMsgPropertyStateS2C::kOwneridFieldNumber;
const int FMsgPropertyStateS2C::kOwnertypeFieldNumber;
const int FMsgPropertyStateS2C::kAllstateFieldNumber;
const int FMsgPropertyStateS2C::kLevelchangeFieldNumber;
#endif  // !_MSC_VER

FMsgPropertyStateS2C::FMsgPropertyStateS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.FMsgPropertyStateS2C)
}

void FMsgPropertyStateS2C::InitAsDefaultInstance() {
}

FMsgPropertyStateS2C::FMsgPropertyStateS2C(const FMsgPropertyStateS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.FMsgPropertyStateS2C)
}

void FMsgPropertyStateS2C::SharedCtor() {
  _cached_size_ = 0;
  ownerid_ = 0u;
  ownertype_ = 0u;
  allstate_ = false;
  levelchange_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FMsgPropertyStateS2C::~FMsgPropertyStateS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.FMsgPropertyStateS2C)
  SharedDtor();
}

void FMsgPropertyStateS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FMsgPropertyStateS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FMsgPropertyStateS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FMsgPropertyStateS2C_descriptor_;
}

const FMsgPropertyStateS2C& FMsgPropertyStateS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

FMsgPropertyStateS2C* FMsgPropertyStateS2C::default_instance_ = NULL;

FMsgPropertyStateS2C* FMsgPropertyStateS2C::New() const {
  return new FMsgPropertyStateS2C;
}

void FMsgPropertyStateS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FMsgPropertyStateS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ownerid_, levelchange_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FMsgPropertyStateS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.FMsgPropertyStateS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FStateData data = 1;
      case 1: {
        if (tag == 10) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectTag(16)) goto parse_ownerid;
        break;
      }

      // optional uint32 ownerid = 2;
      case 2: {
        if (tag == 16) {
         parse_ownerid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ownerid_)));
          set_has_ownerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ownertype;
        break;
      }

      // optional uint32 ownertype = 3;
      case 3: {
        if (tag == 24) {
         parse_ownertype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ownertype_)));
          set_has_ownertype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_allstate;
        break;
      }

      // optional bool allstate = 4;
      case 4: {
        if (tag == 32) {
         parse_allstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allstate_)));
          set_has_allstate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_levelchange;
        break;
      }

      // optional bool levelchange = 5;
      case 5: {
        if (tag == 40) {
         parse_levelchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &levelchange_)));
          set_has_levelchange();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.FMsgPropertyStateS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.FMsgPropertyStateS2C)
  return false;
#undef DO_
}

void FMsgPropertyStateS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.FMsgPropertyStateS2C)
  // repeated .FStateData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  // optional uint32 ownerid = 2;
  if (has_ownerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ownerid(), output);
  }

  // optional uint32 ownertype = 3;
  if (has_ownertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ownertype(), output);
  }

  // optional bool allstate = 4;
  if (has_allstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->allstate(), output);
  }

  // optional bool levelchange = 5;
  if (has_levelchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->levelchange(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.FMsgPropertyStateS2C)
}

::google::protobuf::uint8* FMsgPropertyStateS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.FMsgPropertyStateS2C)
  // repeated .FStateData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }

  // optional uint32 ownerid = 2;
  if (has_ownerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ownerid(), target);
  }

  // optional uint32 ownertype = 3;
  if (has_ownertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ownertype(), target);
  }

  // optional bool allstate = 4;
  if (has_allstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->allstate(), target);
  }

  // optional bool levelchange = 5;
  if (has_levelchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->levelchange(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.FMsgPropertyStateS2C)
  return target;
}

int FMsgPropertyStateS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 ownerid = 2;
    if (has_ownerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ownerid());
    }

    // optional uint32 ownertype = 3;
    if (has_ownertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ownertype());
    }

    // optional bool allstate = 4;
    if (has_allstate()) {
      total_size += 1 + 1;
    }

    // optional bool levelchange = 5;
    if (has_levelchange()) {
      total_size += 1 + 1;
    }

  }
  // repeated .FStateData data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FMsgPropertyStateS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FMsgPropertyStateS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FMsgPropertyStateS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FMsgPropertyStateS2C::MergeFrom(const FMsgPropertyStateS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_ownerid()) {
      set_ownerid(from.ownerid());
    }
    if (from.has_ownertype()) {
      set_ownertype(from.ownertype());
    }
    if (from.has_allstate()) {
      set_allstate(from.allstate());
    }
    if (from.has_levelchange()) {
      set_levelchange(from.levelchange());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FMsgPropertyStateS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FMsgPropertyStateS2C::CopyFrom(const FMsgPropertyStateS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FMsgPropertyStateS2C::IsInitialized() const {

  return true;
}

void FMsgPropertyStateS2C::Swap(FMsgPropertyStateS2C* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(ownerid_, other->ownerid_);
    std::swap(ownertype_, other->ownertype_);
    std::swap(allstate_, other->allstate_);
    std::swap(levelchange_, other->levelchange_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FMsgPropertyStateS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FMsgPropertyStateS2C_descriptor_;
  metadata.reflection = FMsgPropertyStateS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageMapScreenRefreshCharacterS2C::kForcerefreshFieldNumber;
const int MessageMapScreenRefreshCharacterS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MessageMapScreenRefreshCharacterS2C::MessageMapScreenRefreshCharacterS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageMapScreenRefreshCharacterS2C)
}

void MessageMapScreenRefreshCharacterS2C::InitAsDefaultInstance() {
  data_ = const_cast< ::FCharacterMapData*>(&::FCharacterMapData::default_instance());
}

MessageMapScreenRefreshCharacterS2C::MessageMapScreenRefreshCharacterS2C(const MessageMapScreenRefreshCharacterS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageMapScreenRefreshCharacterS2C)
}

void MessageMapScreenRefreshCharacterS2C::SharedCtor() {
  _cached_size_ = 0;
  forcerefresh_ = false;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageMapScreenRefreshCharacterS2C::~MessageMapScreenRefreshCharacterS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageMapScreenRefreshCharacterS2C)
  SharedDtor();
}

void MessageMapScreenRefreshCharacterS2C::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void MessageMapScreenRefreshCharacterS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageMapScreenRefreshCharacterS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageMapScreenRefreshCharacterS2C_descriptor_;
}

const MessageMapScreenRefreshCharacterS2C& MessageMapScreenRefreshCharacterS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageMapScreenRefreshCharacterS2C* MessageMapScreenRefreshCharacterS2C::default_instance_ = NULL;

MessageMapScreenRefreshCharacterS2C* MessageMapScreenRefreshCharacterS2C::New() const {
  return new MessageMapScreenRefreshCharacterS2C;
}

void MessageMapScreenRefreshCharacterS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    forcerefresh_ = false;
    if (has_data()) {
      if (data_ != NULL) data_->::FCharacterMapData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageMapScreenRefreshCharacterS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageMapScreenRefreshCharacterS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool forcerefresh = 2 [default = false];
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forcerefresh_)));
          set_has_forcerefresh();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional .FCharacterMapData data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageMapScreenRefreshCharacterS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageMapScreenRefreshCharacterS2C)
  return false;
#undef DO_
}

void MessageMapScreenRefreshCharacterS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageMapScreenRefreshCharacterS2C)
  // optional bool forcerefresh = 2 [default = false];
  if (has_forcerefresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->forcerefresh(), output);
  }

  // optional .FCharacterMapData data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageMapScreenRefreshCharacterS2C)
}

::google::protobuf::uint8* MessageMapScreenRefreshCharacterS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageMapScreenRefreshCharacterS2C)
  // optional bool forcerefresh = 2 [default = false];
  if (has_forcerefresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->forcerefresh(), target);
  }

  // optional .FCharacterMapData data = 3;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageMapScreenRefreshCharacterS2C)
  return target;
}

int MessageMapScreenRefreshCharacterS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool forcerefresh = 2 [default = false];
    if (has_forcerefresh()) {
      total_size += 1 + 1;
    }

    // optional .FCharacterMapData data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageMapScreenRefreshCharacterS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageMapScreenRefreshCharacterS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageMapScreenRefreshCharacterS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageMapScreenRefreshCharacterS2C::MergeFrom(const MessageMapScreenRefreshCharacterS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_forcerefresh()) {
      set_forcerefresh(from.forcerefresh());
    }
    if (from.has_data()) {
      mutable_data()->::FCharacterMapData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageMapScreenRefreshCharacterS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageMapScreenRefreshCharacterS2C::CopyFrom(const MessageMapScreenRefreshCharacterS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageMapScreenRefreshCharacterS2C::IsInitialized() const {

  return true;
}

void MessageMapScreenRefreshCharacterS2C::Swap(MessageMapScreenRefreshCharacterS2C* other) {
  if (other != this) {
    std::swap(forcerefresh_, other->forcerefresh_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageMapScreenRefreshCharacterS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageMapScreenRefreshCharacterS2C_descriptor_;
  metadata.reflection = MessageMapScreenRefreshCharacterS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgCharacterMoveFailS2C::kObjidFieldNumber;
const int MsgCharacterMoveFailS2C::kObjtypeFieldNumber;
const int MsgCharacterMoveFailS2C::kBlockposFieldNumber;
const int MsgCharacterMoveFailS2C::kServerposFieldNumber;
#endif  // !_MSC_VER

MsgCharacterMoveFailS2C::MsgCharacterMoveFailS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgCharacterMoveFailS2C)
}

void MsgCharacterMoveFailS2C::InitAsDefaultInstance() {
  serverpos_ = const_cast< ::FProtoClient::MovePos*>(&::FProtoClient::MovePos::default_instance());
}

MsgCharacterMoveFailS2C::MsgCharacterMoveFailS2C(const MsgCharacterMoveFailS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgCharacterMoveFailS2C)
}

void MsgCharacterMoveFailS2C::SharedCtor() {
  _cached_size_ = 0;
  objid_ = 0u;
  objtype_ = 0u;
  serverpos_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgCharacterMoveFailS2C::~MsgCharacterMoveFailS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgCharacterMoveFailS2C)
  SharedDtor();
}

void MsgCharacterMoveFailS2C::SharedDtor() {
  if (this != default_instance_) {
    delete serverpos_;
  }
}

void MsgCharacterMoveFailS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCharacterMoveFailS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgCharacterMoveFailS2C_descriptor_;
}

const MsgCharacterMoveFailS2C& MsgCharacterMoveFailS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgCharacterMoveFailS2C* MsgCharacterMoveFailS2C::default_instance_ = NULL;

MsgCharacterMoveFailS2C* MsgCharacterMoveFailS2C::New() const {
  return new MsgCharacterMoveFailS2C;
}

void MsgCharacterMoveFailS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgCharacterMoveFailS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(objid_, objtype_);
    if (has_serverpos()) {
      if (serverpos_ != NULL) serverpos_->::FProtoClient::MovePos::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  blockpos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgCharacterMoveFailS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgCharacterMoveFailS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 objid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objtype;
        break;
      }

      // optional uint32 objtype = 2;
      case 2: {
        if (tag == 16) {
         parse_objtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objtype_)));
          set_has_objtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_blockpos;
        break;
      }

      // repeated .FProtoClient.MovePos blockpos = 3;
      case 3: {
        if (tag == 26) {
         parse_blockpos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blockpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_blockpos;
        if (input->ExpectTag(34)) goto parse_serverpos;
        break;
      }

      // optional .FProtoClient.MovePos serverpos = 4;
      case 4: {
        if (tag == 34) {
         parse_serverpos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serverpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgCharacterMoveFailS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgCharacterMoveFailS2C)
  return false;
#undef DO_
}

void MsgCharacterMoveFailS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgCharacterMoveFailS2C)
  // optional uint32 objid = 1;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->objid(), output);
  }

  // optional uint32 objtype = 2;
  if (has_objtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->objtype(), output);
  }

  // repeated .FProtoClient.MovePos blockpos = 3;
  for (int i = 0; i < this->blockpos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->blockpos(i), output);
  }

  // optional .FProtoClient.MovePos serverpos = 4;
  if (has_serverpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->serverpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgCharacterMoveFailS2C)
}

::google::protobuf::uint8* MsgCharacterMoveFailS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgCharacterMoveFailS2C)
  // optional uint32 objid = 1;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->objid(), target);
  }

  // optional uint32 objtype = 2;
  if (has_objtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->objtype(), target);
  }

  // repeated .FProtoClient.MovePos blockpos = 3;
  for (int i = 0; i < this->blockpos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->blockpos(i), target);
  }

  // optional .FProtoClient.MovePos serverpos = 4;
  if (has_serverpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->serverpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgCharacterMoveFailS2C)
  return target;
}

int MsgCharacterMoveFailS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 objid = 1;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->objid());
    }

    // optional uint32 objtype = 2;
    if (has_objtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->objtype());
    }

    // optional .FProtoClient.MovePos serverpos = 4;
    if (has_serverpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serverpos());
    }

  }
  // repeated .FProtoClient.MovePos blockpos = 3;
  total_size += 1 * this->blockpos_size();
  for (int i = 0; i < this->blockpos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blockpos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCharacterMoveFailS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgCharacterMoveFailS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgCharacterMoveFailS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgCharacterMoveFailS2C::MergeFrom(const MsgCharacterMoveFailS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  blockpos_.MergeFrom(from.blockpos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_objtype()) {
      set_objtype(from.objtype());
    }
    if (from.has_serverpos()) {
      mutable_serverpos()->::FProtoClient::MovePos::MergeFrom(from.serverpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgCharacterMoveFailS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCharacterMoveFailS2C::CopyFrom(const MsgCharacterMoveFailS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCharacterMoveFailS2C::IsInitialized() const {

  return true;
}

void MsgCharacterMoveFailS2C::Swap(MsgCharacterMoveFailS2C* other) {
  if (other != this) {
    std::swap(objid_, other->objid_);
    std::swap(objtype_, other->objtype_);
    blockpos_.Swap(&other->blockpos_);
    std::swap(serverpos_, other->serverpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgCharacterMoveFailS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgCharacterMoveFailS2C_descriptor_;
  metadata.reflection = MsgCharacterMoveFailS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageMapScreenNineScreenRefreshNpcS2C::kFirstClearFieldNumber;
const int MessageMapScreenNineScreenRefreshNpcS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MessageMapScreenNineScreenRefreshNpcS2C::MessageMapScreenNineScreenRefreshNpcS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
}

void MessageMapScreenNineScreenRefreshNpcS2C::InitAsDefaultInstance() {
}

MessageMapScreenNineScreenRefreshNpcS2C::MessageMapScreenNineScreenRefreshNpcS2C(const MessageMapScreenNineScreenRefreshNpcS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
}

void MessageMapScreenNineScreenRefreshNpcS2C::SharedCtor() {
  _cached_size_ = 0;
  firstclear_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageMapScreenNineScreenRefreshNpcS2C::~MessageMapScreenNineScreenRefreshNpcS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
  SharedDtor();
}

void MessageMapScreenNineScreenRefreshNpcS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageMapScreenNineScreenRefreshNpcS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageMapScreenNineScreenRefreshNpcS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageMapScreenNineScreenRefreshNpcS2C_descriptor_;
}

const MessageMapScreenNineScreenRefreshNpcS2C& MessageMapScreenNineScreenRefreshNpcS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageMapScreenNineScreenRefreshNpcS2C* MessageMapScreenNineScreenRefreshNpcS2C::default_instance_ = NULL;

MessageMapScreenNineScreenRefreshNpcS2C* MessageMapScreenNineScreenRefreshNpcS2C::New() const {
  return new MessageMapScreenNineScreenRefreshNpcS2C;
}

void MessageMapScreenNineScreenRefreshNpcS2C::Clear() {
  firstclear_ = 0u;
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageMapScreenNineScreenRefreshNpcS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 firstClear = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &firstclear_)));
          set_has_firstclear();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .FNpcMapData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
  return false;
#undef DO_
}

void MessageMapScreenNineScreenRefreshNpcS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
  // optional uint32 firstClear = 1;
  if (has_firstclear()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->firstclear(), output);
  }

  // repeated .FNpcMapData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
}

::google::protobuf::uint8* MessageMapScreenNineScreenRefreshNpcS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
  // optional uint32 firstClear = 1;
  if (has_firstclear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->firstclear(), target);
  }

  // repeated .FNpcMapData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageMapScreenNineScreenRefreshNpcS2C)
  return target;
}

int MessageMapScreenNineScreenRefreshNpcS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 firstClear = 1;
    if (has_firstclear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->firstclear());
    }

  }
  // repeated .FNpcMapData data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageMapScreenNineScreenRefreshNpcS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageMapScreenNineScreenRefreshNpcS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageMapScreenNineScreenRefreshNpcS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageMapScreenNineScreenRefreshNpcS2C::MergeFrom(const MessageMapScreenNineScreenRefreshNpcS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_firstclear()) {
      set_firstclear(from.firstclear());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageMapScreenNineScreenRefreshNpcS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageMapScreenNineScreenRefreshNpcS2C::CopyFrom(const MessageMapScreenNineScreenRefreshNpcS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageMapScreenNineScreenRefreshNpcS2C::IsInitialized() const {

  return true;
}

void MessageMapScreenNineScreenRefreshNpcS2C::Swap(MessageMapScreenNineScreenRefreshNpcS2C* other) {
  if (other != this) {
    std::swap(firstclear_, other->firstclear_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageMapScreenNineScreenRefreshNpcS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageMapScreenNineScreenRefreshNpcS2C_descriptor_;
  metadata.reflection = MessageMapScreenNineScreenRefreshNpcS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageNineScreenRefreshPlayerS2C::kFirstClearFieldNumber;
const int MessageNineScreenRefreshPlayerS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MessageNineScreenRefreshPlayerS2C::MessageNineScreenRefreshPlayerS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageNineScreenRefreshPlayerS2C)
}

void MessageNineScreenRefreshPlayerS2C::InitAsDefaultInstance() {
}

MessageNineScreenRefreshPlayerS2C::MessageNineScreenRefreshPlayerS2C(const MessageNineScreenRefreshPlayerS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageNineScreenRefreshPlayerS2C)
}

void MessageNineScreenRefreshPlayerS2C::SharedCtor() {
  _cached_size_ = 0;
  firstclear_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageNineScreenRefreshPlayerS2C::~MessageNineScreenRefreshPlayerS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageNineScreenRefreshPlayerS2C)
  SharedDtor();
}

void MessageNineScreenRefreshPlayerS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageNineScreenRefreshPlayerS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageNineScreenRefreshPlayerS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageNineScreenRefreshPlayerS2C_descriptor_;
}

const MessageNineScreenRefreshPlayerS2C& MessageNineScreenRefreshPlayerS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageNineScreenRefreshPlayerS2C* MessageNineScreenRefreshPlayerS2C::default_instance_ = NULL;

MessageNineScreenRefreshPlayerS2C* MessageNineScreenRefreshPlayerS2C::New() const {
  return new MessageNineScreenRefreshPlayerS2C;
}

void MessageNineScreenRefreshPlayerS2C::Clear() {
  firstclear_ = 0u;
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageNineScreenRefreshPlayerS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageNineScreenRefreshPlayerS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 firstClear = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &firstclear_)));
          set_has_firstclear();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .FCharacterMapData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageNineScreenRefreshPlayerS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageNineScreenRefreshPlayerS2C)
  return false;
#undef DO_
}

void MessageNineScreenRefreshPlayerS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageNineScreenRefreshPlayerS2C)
  // optional uint32 firstClear = 1;
  if (has_firstclear()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->firstclear(), output);
  }

  // repeated .FCharacterMapData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageNineScreenRefreshPlayerS2C)
}

::google::protobuf::uint8* MessageNineScreenRefreshPlayerS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageNineScreenRefreshPlayerS2C)
  // optional uint32 firstClear = 1;
  if (has_firstclear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->firstclear(), target);
  }

  // repeated .FCharacterMapData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageNineScreenRefreshPlayerS2C)
  return target;
}

int MessageNineScreenRefreshPlayerS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 firstClear = 1;
    if (has_firstclear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->firstclear());
    }

  }
  // repeated .FCharacterMapData data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageNineScreenRefreshPlayerS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageNineScreenRefreshPlayerS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageNineScreenRefreshPlayerS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageNineScreenRefreshPlayerS2C::MergeFrom(const MessageNineScreenRefreshPlayerS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_firstclear()) {
      set_firstclear(from.firstclear());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageNineScreenRefreshPlayerS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageNineScreenRefreshPlayerS2C::CopyFrom(const MessageNineScreenRefreshPlayerS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageNineScreenRefreshPlayerS2C::IsInitialized() const {

  return true;
}

void MessageNineScreenRefreshPlayerS2C::Swap(MessageNineScreenRefreshPlayerS2C* other) {
  if (other != this) {
    std::swap(firstclear_, other->firstclear_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageNineScreenRefreshPlayerS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageNineScreenRefreshPlayerS2C_descriptor_;
  metadata.reflection = MessageNineScreenRefreshPlayerS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageMapScreenNineScreenRefreshDeathNpcS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MessageMapScreenNineScreenRefreshDeathNpcS2C::MessageMapScreenNineScreenRefreshDeathNpcS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::InitAsDefaultInstance() {
}

MessageMapScreenNineScreenRefreshDeathNpcS2C::MessageMapScreenNineScreenRefreshDeathNpcS2C(const MessageMapScreenNineScreenRefreshDeathNpcS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageMapScreenNineScreenRefreshDeathNpcS2C::~MessageMapScreenNineScreenRefreshDeathNpcS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
  SharedDtor();
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageMapScreenNineScreenRefreshDeathNpcS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageMapScreenNineScreenRefreshDeathNpcS2C_descriptor_;
}

const MessageMapScreenNineScreenRefreshDeathNpcS2C& MessageMapScreenNineScreenRefreshDeathNpcS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageMapScreenNineScreenRefreshDeathNpcS2C* MessageMapScreenNineScreenRefreshDeathNpcS2C::default_instance_ = NULL;

MessageMapScreenNineScreenRefreshDeathNpcS2C* MessageMapScreenNineScreenRefreshDeathNpcS2C::New() const {
  return new MessageMapScreenNineScreenRefreshDeathNpcS2C;
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageMapScreenNineScreenRefreshDeathNpcS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FNpcDeathMapData data = 1;
      case 1: {
        if (tag == 10) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
  return false;
#undef DO_
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
  // repeated .FNpcDeathMapData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
}

::google::protobuf::uint8* MessageMapScreenNineScreenRefreshDeathNpcS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
  // repeated .FNpcDeathMapData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageMapScreenNineScreenRefreshDeathNpcS2C)
  return target;
}

int MessageMapScreenNineScreenRefreshDeathNpcS2C::ByteSize() const {
  int total_size = 0;

  // repeated .FNpcDeathMapData data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageMapScreenNineScreenRefreshDeathNpcS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageMapScreenNineScreenRefreshDeathNpcS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::MergeFrom(const MessageMapScreenNineScreenRefreshDeathNpcS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::CopyFrom(const MessageMapScreenNineScreenRefreshDeathNpcS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageMapScreenNineScreenRefreshDeathNpcS2C::IsInitialized() const {

  return true;
}

void MessageMapScreenNineScreenRefreshDeathNpcS2C::Swap(MessageMapScreenNineScreenRefreshDeathNpcS2C* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageMapScreenNineScreenRefreshDeathNpcS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageMapScreenNineScreenRefreshDeathNpcS2C_descriptor_;
  metadata.reflection = MessageMapScreenNineScreenRefreshDeathNpcS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageMapScreenSummonNpcS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MessageMapScreenSummonNpcS2C::MessageMapScreenSummonNpcS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageMapScreenSummonNpcS2C)
}

void MessageMapScreenSummonNpcS2C::InitAsDefaultInstance() {
  data_ = const_cast< ::FNpcMapData*>(&::FNpcMapData::default_instance());
}

MessageMapScreenSummonNpcS2C::MessageMapScreenSummonNpcS2C(const MessageMapScreenSummonNpcS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageMapScreenSummonNpcS2C)
}

void MessageMapScreenSummonNpcS2C::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageMapScreenSummonNpcS2C::~MessageMapScreenSummonNpcS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageMapScreenSummonNpcS2C)
  SharedDtor();
}

void MessageMapScreenSummonNpcS2C::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void MessageMapScreenSummonNpcS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageMapScreenSummonNpcS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageMapScreenSummonNpcS2C_descriptor_;
}

const MessageMapScreenSummonNpcS2C& MessageMapScreenSummonNpcS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageMapScreenSummonNpcS2C* MessageMapScreenSummonNpcS2C::default_instance_ = NULL;

MessageMapScreenSummonNpcS2C* MessageMapScreenSummonNpcS2C::New() const {
  return new MessageMapScreenSummonNpcS2C;
}

void MessageMapScreenSummonNpcS2C::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::FNpcMapData::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageMapScreenSummonNpcS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageMapScreenSummonNpcS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .FNpcMapData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageMapScreenSummonNpcS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageMapScreenSummonNpcS2C)
  return false;
#undef DO_
}

void MessageMapScreenSummonNpcS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageMapScreenSummonNpcS2C)
  // optional .FNpcMapData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageMapScreenSummonNpcS2C)
}

::google::protobuf::uint8* MessageMapScreenSummonNpcS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageMapScreenSummonNpcS2C)
  // optional .FNpcMapData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageMapScreenSummonNpcS2C)
  return target;
}

int MessageMapScreenSummonNpcS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .FNpcMapData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageMapScreenSummonNpcS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageMapScreenSummonNpcS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageMapScreenSummonNpcS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageMapScreenSummonNpcS2C::MergeFrom(const MessageMapScreenSummonNpcS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::FNpcMapData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageMapScreenSummonNpcS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageMapScreenSummonNpcS2C::CopyFrom(const MessageMapScreenSummonNpcS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageMapScreenSummonNpcS2C::IsInitialized() const {

  return true;
}

void MessageMapScreenSummonNpcS2C::Swap(MessageMapScreenSummonNpcS2C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageMapScreenSummonNpcS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageMapScreenSummonNpcS2C_descriptor_;
  metadata.reflection = MessageMapScreenSummonNpcS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrderCell::kValueFieldNumber;
const int OrderCell::kStrFieldNumber;
#endif  // !_MSC_VER

OrderCell::OrderCell()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.OrderCell)
}

void OrderCell::InitAsDefaultInstance() {
}

OrderCell::OrderCell(const OrderCell& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.OrderCell)
}

void OrderCell::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_ = 0u;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderCell::~OrderCell() {
  // @@protoc_insertion_point(destructor:FProtoClient.OrderCell)
  SharedDtor();
}

void OrderCell::SharedDtor() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void OrderCell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderCell::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderCell_descriptor_;
}

const OrderCell& OrderCell::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

OrderCell* OrderCell::default_instance_ = NULL;

OrderCell* OrderCell::New() const {
  return new OrderCell;
}

void OrderCell::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    value_ = 0u;
    if (has_str()) {
      if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderCell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.OrderCell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 value = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_str;
        break;
      }

      // optional string str = 2;
      case 2: {
        if (tag == 18) {
         parse_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "str");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.OrderCell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.OrderCell)
  return false;
#undef DO_
}

void OrderCell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.OrderCell)
  // optional uint32 value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  // optional string str = 2;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.OrderCell)
}

::google::protobuf::uint8* OrderCell::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.OrderCell)
  // optional uint32 value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  // optional string str = 2;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.OrderCell)
  return target;
}

int OrderCell::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

    // optional string str = 2;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderCell::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderCell* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderCell*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderCell::MergeFrom(const OrderCell& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_str()) {
      set_str(from.str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderCell::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderCell::CopyFrom(const OrderCell& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderCell::IsInitialized() const {

  return true;
}

void OrderCell::Swap(OrderCell* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(str_, other->str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderCell::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderCell_descriptor_;
  metadata.reflection = OrderCell_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrderLine::kCellFieldNumber;
#endif  // !_MSC_VER

OrderLine::OrderLine()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.OrderLine)
}

void OrderLine::InitAsDefaultInstance() {
}

OrderLine::OrderLine(const OrderLine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.OrderLine)
}

void OrderLine::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderLine::~OrderLine() {
  // @@protoc_insertion_point(destructor:FProtoClient.OrderLine)
  SharedDtor();
}

void OrderLine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OrderLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderLine_descriptor_;
}

const OrderLine& OrderLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

OrderLine* OrderLine::default_instance_ = NULL;

OrderLine* OrderLine::New() const {
  return new OrderLine;
}

void OrderLine::Clear() {
  cell_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.OrderLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FProtoClient.OrderCell cell = 1;
      case 1: {
        if (tag == 10) {
         parse_cell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cell()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_cell;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.OrderLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.OrderLine)
  return false;
#undef DO_
}

void OrderLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.OrderLine)
  // repeated .FProtoClient.OrderCell cell = 1;
  for (int i = 0; i < this->cell_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cell(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.OrderLine)
}

::google::protobuf::uint8* OrderLine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.OrderLine)
  // repeated .FProtoClient.OrderCell cell = 1;
  for (int i = 0; i < this->cell_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cell(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.OrderLine)
  return target;
}

int OrderLine::ByteSize() const {
  int total_size = 0;

  // repeated .FProtoClient.OrderCell cell = 1;
  total_size += 1 * this->cell_size();
  for (int i = 0; i < this->cell_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cell(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderLine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderLine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderLine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderLine::MergeFrom(const OrderLine& from) {
  GOOGLE_CHECK_NE(&from, this);
  cell_.MergeFrom(from.cell_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderLine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderLine::CopyFrom(const OrderLine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderLine::IsInitialized() const {

  return true;
}

void OrderLine::Swap(OrderLine* other) {
  if (other != this) {
    cell_.Swap(&other->cell_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderLine_descriptor_;
  metadata.reflection = OrderLine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageOrderDataS2C::kOrderidFieldNumber;
const int MessageOrderDataS2C::kDataFieldNumber;
const int MessageOrderDataS2C::kMydataFieldNumber;
#endif  // !_MSC_VER

MessageOrderDataS2C::MessageOrderDataS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageOrderDataS2C)
}

void MessageOrderDataS2C::InitAsDefaultInstance() {
}

MessageOrderDataS2C::MessageOrderDataS2C(const MessageOrderDataS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageOrderDataS2C)
}

void MessageOrderDataS2C::SharedCtor() {
  _cached_size_ = 0;
  orderid_ = 0u;
  mydata_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageOrderDataS2C::~MessageOrderDataS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageOrderDataS2C)
  SharedDtor();
}

void MessageOrderDataS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageOrderDataS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageOrderDataS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageOrderDataS2C_descriptor_;
}

const MessageOrderDataS2C& MessageOrderDataS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageOrderDataS2C* MessageOrderDataS2C::default_instance_ = NULL;

MessageOrderDataS2C* MessageOrderDataS2C::New() const {
  return new MessageOrderDataS2C;
}

void MessageOrderDataS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MessageOrderDataS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(orderid_, mydata_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageOrderDataS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageOrderDataS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 orderid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .FProtoClient.OrderLine data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectTag(24)) goto parse_mydata;
        break;
      }

      // optional uint32 mydata = 3;
      case 3: {
        if (tag == 24) {
         parse_mydata:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mydata_)));
          set_has_mydata();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageOrderDataS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageOrderDataS2C)
  return false;
#undef DO_
}

void MessageOrderDataS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageOrderDataS2C)
  // optional uint32 orderid = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->orderid(), output);
  }

  // repeated .FProtoClient.OrderLine data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // optional uint32 mydata = 3;
  if (has_mydata()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mydata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageOrderDataS2C)
}

::google::protobuf::uint8* MessageOrderDataS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageOrderDataS2C)
  // optional uint32 orderid = 1;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->orderid(), target);
  }

  // repeated .FProtoClient.OrderLine data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // optional uint32 mydata = 3;
  if (has_mydata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mydata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageOrderDataS2C)
  return target;
}

int MessageOrderDataS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 orderid = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->orderid());
    }

    // optional uint32 mydata = 3;
    if (has_mydata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mydata());
    }

  }
  // repeated .FProtoClient.OrderLine data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageOrderDataS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageOrderDataS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageOrderDataS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageOrderDataS2C::MergeFrom(const MessageOrderDataS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_mydata()) {
      set_mydata(from.mydata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageOrderDataS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageOrderDataS2C::CopyFrom(const MessageOrderDataS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageOrderDataS2C::IsInitialized() const {

  return true;
}

void MessageOrderDataS2C::Swap(MessageOrderDataS2C* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    data_.Swap(&other->data_);
    std::swap(mydata_, other->mydata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageOrderDataS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageOrderDataS2C_descriptor_;
  metadata.reflection = MessageOrderDataS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageOrderRequestC2S::kOrderidFieldNumber;
#endif  // !_MSC_VER

MessageOrderRequestC2S::MessageOrderRequestC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MessageOrderRequestC2S)
}

void MessageOrderRequestC2S::InitAsDefaultInstance() {
}

MessageOrderRequestC2S::MessageOrderRequestC2S(const MessageOrderRequestC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MessageOrderRequestC2S)
}

void MessageOrderRequestC2S::SharedCtor() {
  _cached_size_ = 0;
  orderid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageOrderRequestC2S::~MessageOrderRequestC2S() {
  // @@protoc_insertion_point(destructor:FProtoClient.MessageOrderRequestC2S)
  SharedDtor();
}

void MessageOrderRequestC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageOrderRequestC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageOrderRequestC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageOrderRequestC2S_descriptor_;
}

const MessageOrderRequestC2S& MessageOrderRequestC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MessageOrderRequestC2S* MessageOrderRequestC2S::default_instance_ = NULL;

MessageOrderRequestC2S* MessageOrderRequestC2S::New() const {
  return new MessageOrderRequestC2S;
}

void MessageOrderRequestC2S::Clear() {
  orderid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageOrderRequestC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MessageOrderRequestC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 orderid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MessageOrderRequestC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MessageOrderRequestC2S)
  return false;
#undef DO_
}

void MessageOrderRequestC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MessageOrderRequestC2S)
  // optional uint32 orderid = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->orderid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MessageOrderRequestC2S)
}

::google::protobuf::uint8* MessageOrderRequestC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MessageOrderRequestC2S)
  // optional uint32 orderid = 1;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->orderid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MessageOrderRequestC2S)
  return target;
}

int MessageOrderRequestC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 orderid = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->orderid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageOrderRequestC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageOrderRequestC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageOrderRequestC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageOrderRequestC2S::MergeFrom(const MessageOrderRequestC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageOrderRequestC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageOrderRequestC2S::CopyFrom(const MessageOrderRequestC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageOrderRequestC2S::IsInitialized() const {

  return true;
}

void MessageOrderRequestC2S::Swap(MessageOrderRequestC2S* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageOrderRequestC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageOrderRequestC2S_descriptor_;
  metadata.reflection = MessageOrderRequestC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProgressBarS2C_State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProgressBarS2C_State_descriptor_;
}
bool MsgProgressBarS2C_State_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProgressBarS2C_State MsgProgressBarS2C::None;
const MsgProgressBarS2C_State MsgProgressBarS2C::Start;
const MsgProgressBarS2C_State MsgProgressBarS2C::Tick;
const MsgProgressBarS2C_State MsgProgressBarS2C::End;
const MsgProgressBarS2C_State MsgProgressBarS2C::Beatoff;
const MsgProgressBarS2C_State MsgProgressBarS2C::Cancel;
const MsgProgressBarS2C_State MsgProgressBarS2C::State_MIN;
const MsgProgressBarS2C_State MsgProgressBarS2C::State_MAX;
const int MsgProgressBarS2C::State_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProgressBarS2C::kBaridFieldNumber;
const int MsgProgressBarS2C::kOwneridFieldNumber;
const int MsgProgressBarS2C::kStateFieldNumber;
const int MsgProgressBarS2C::kTimeFieldNumber;
const int MsgProgressBarS2C::kDesIdFieldNumber;
const int MsgProgressBarS2C::kDesTypeFieldNumber;
const int MsgProgressBarS2C::kDesXFieldNumber;
const int MsgProgressBarS2C::kDesYFieldNumber;
const int MsgProgressBarS2C::kTargetidFieldNumber;
const int MsgProgressBarS2C::kTargettypeFieldNumber;
#endif  // !_MSC_VER

MsgProgressBarS2C::MsgProgressBarS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FProtoClient.MsgProgressBarS2C)
}

void MsgProgressBarS2C::InitAsDefaultInstance() {
}

MsgProgressBarS2C::MsgProgressBarS2C(const MsgProgressBarS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FProtoClient.MsgProgressBarS2C)
}

void MsgProgressBarS2C::SharedCtor() {
  _cached_size_ = 0;
  barid_ = 0u;
  ownerid_ = 0u;
  state_ = 0;
  time_ = 0u;
  desid_ = 0u;
  destype_ = 0u;
  desx_ = 0u;
  desy_ = 0u;
  targetid_ = 0u;
  targettype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProgressBarS2C::~MsgProgressBarS2C() {
  // @@protoc_insertion_point(destructor:FProtoClient.MsgProgressBarS2C)
  SharedDtor();
}

void MsgProgressBarS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProgressBarS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProgressBarS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProgressBarS2C_descriptor_;
}

const MsgProgressBarS2C& MsgProgressBarS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fclientmsg_2eproto();
  return *default_instance_;
}

MsgProgressBarS2C* MsgProgressBarS2C::default_instance_ = NULL;

MsgProgressBarS2C* MsgProgressBarS2C::New() const {
  return new MsgProgressBarS2C;
}

void MsgProgressBarS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProgressBarS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(barid_, desy_);
  }
  ZR_(targetid_, targettype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProgressBarS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FProtoClient.MsgProgressBarS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 barid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &barid_)));
          set_has_barid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ownerid;
        break;
      }

      // optional uint32 ownerid = 2;
      case 2: {
        if (tag == 16) {
         parse_ownerid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ownerid_)));
          set_has_ownerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // optional .FProtoClient.MsgProgressBarS2C.State state = 3;
      case 3: {
        if (tag == 24) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::FProtoClient::MsgProgressBarS2C_State_IsValid(value)) {
            set_state(static_cast< ::FProtoClient::MsgProgressBarS2C_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_time;
        break;
      }

      // optional uint32 time = 4;
      case 4: {
        if (tag == 32) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_desId;
        break;
      }

      // optional uint32 desId = 5;
      case 5: {
        if (tag == 40) {
         parse_desId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desid_)));
          set_has_desid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_desType;
        break;
      }

      // optional uint32 desType = 6;
      case 6: {
        if (tag == 48) {
         parse_desType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destype_)));
          set_has_destype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_desX;
        break;
      }

      // optional uint32 desX = 7;
      case 7: {
        if (tag == 56) {
         parse_desX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desx_)));
          set_has_desx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_desY;
        break;
      }

      // optional uint32 desY = 8;
      case 8: {
        if (tag == 64) {
         parse_desY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desy_)));
          set_has_desy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_targetid;
        break;
      }

      // optional uint32 targetid = 9;
      case 9: {
        if (tag == 72) {
         parse_targetid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetid_)));
          set_has_targetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_targettype;
        break;
      }

      // optional uint32 targettype = 10;
      case 10: {
        if (tag == 80) {
         parse_targettype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targettype_)));
          set_has_targettype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FProtoClient.MsgProgressBarS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FProtoClient.MsgProgressBarS2C)
  return false;
#undef DO_
}

void MsgProgressBarS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FProtoClient.MsgProgressBarS2C)
  // optional uint32 barid = 1;
  if (has_barid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->barid(), output);
  }

  // optional uint32 ownerid = 2;
  if (has_ownerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ownerid(), output);
  }

  // optional .FProtoClient.MsgProgressBarS2C.State state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // optional uint32 time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->time(), output);
  }

  // optional uint32 desId = 5;
  if (has_desid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->desid(), output);
  }

  // optional uint32 desType = 6;
  if (has_destype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->destype(), output);
  }

  // optional uint32 desX = 7;
  if (has_desx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->desx(), output);
  }

  // optional uint32 desY = 8;
  if (has_desy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->desy(), output);
  }

  // optional uint32 targetid = 9;
  if (has_targetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->targetid(), output);
  }

  // optional uint32 targettype = 10;
  if (has_targettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->targettype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FProtoClient.MsgProgressBarS2C)
}

::google::protobuf::uint8* MsgProgressBarS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FProtoClient.MsgProgressBarS2C)
  // optional uint32 barid = 1;
  if (has_barid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->barid(), target);
  }

  // optional uint32 ownerid = 2;
  if (has_ownerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ownerid(), target);
  }

  // optional .FProtoClient.MsgProgressBarS2C.State state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // optional uint32 time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->time(), target);
  }

  // optional uint32 desId = 5;
  if (has_desid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->desid(), target);
  }

  // optional uint32 desType = 6;
  if (has_destype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->destype(), target);
  }

  // optional uint32 desX = 7;
  if (has_desx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->desx(), target);
  }

  // optional uint32 desY = 8;
  if (has_desy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->desy(), target);
  }

  // optional uint32 targetid = 9;
  if (has_targetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->targetid(), target);
  }

  // optional uint32 targettype = 10;
  if (has_targettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->targettype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FProtoClient.MsgProgressBarS2C)
  return target;
}

int MsgProgressBarS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 barid = 1;
    if (has_barid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->barid());
    }

    // optional uint32 ownerid = 2;
    if (has_ownerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ownerid());
    }

    // optional .FProtoClient.MsgProgressBarS2C.State state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

    // optional uint32 time = 4;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint32 desId = 5;
    if (has_desid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->desid());
    }

    // optional uint32 desType = 6;
    if (has_destype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->destype());
    }

    // optional uint32 desX = 7;
    if (has_desx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->desx());
    }

    // optional uint32 desY = 8;
    if (has_desy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->desy());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 targetid = 9;
    if (has_targetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetid());
    }

    // optional uint32 targettype = 10;
    if (has_targettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targettype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProgressBarS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProgressBarS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProgressBarS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProgressBarS2C::MergeFrom(const MsgProgressBarS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_barid()) {
      set_barid(from.barid());
    }
    if (from.has_ownerid()) {
      set_ownerid(from.ownerid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_desid()) {
      set_desid(from.desid());
    }
    if (from.has_destype()) {
      set_destype(from.destype());
    }
    if (from.has_desx()) {
      set_desx(from.desx());
    }
    if (from.has_desy()) {
      set_desy(from.desy());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_targetid()) {
      set_targetid(from.targetid());
    }
    if (from.has_targettype()) {
      set_targettype(from.targettype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProgressBarS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProgressBarS2C::CopyFrom(const MsgProgressBarS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProgressBarS2C::IsInitialized() const {

  return true;
}

void MsgProgressBarS2C::Swap(MsgProgressBarS2C* other) {
  if (other != this) {
    std::swap(barid_, other->barid_);
    std::swap(ownerid_, other->ownerid_);
    std::swap(state_, other->state_);
    std::swap(time_, other->time_);
    std::swap(desid_, other->desid_);
    std::swap(destype_, other->destype_);
    std::swap(desx_, other->desx_);
    std::swap(desy_, other->desy_);
    std::swap(targetid_, other->targetid_);
    std::swap(targettype_, other->targettype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProgressBarS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProgressBarS2C_descriptor_;
  metadata.reflection = MsgProgressBarS2C_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace FProtoClient

// @@protoc_insertion_point(global_scope)
