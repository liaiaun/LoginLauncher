// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class II_PairData;
class QuestVar;
class PairDataDWORD;
class TripleDataDWORD;
class QuestData;
class DoingQuestData;
class QuestCompleteData;
class QuestPairData;
class QuestId;
class BinarySaveQuest;
class ChangeEquipAccType;
class ChangeEquip;
class ChangeEquip_stCE;
class stChangeEquip;
class TalismanStar;
class TalismanStar_Prop;
class TalismanData;
class TalismanData_Skill;
class ScenePetAutoFun;
class ScenePetSkillData;
class ScenePetDoSkill;
class ScenePetData;
class ScenePetServerData;
class optionBaseAutoTeamMember;
class stOptionBase;
class stDayHonor;
class stHonorKill;
class stHonorData;
class stHonorLimit;
class stAddPointLimit;
class SaveGuard;
class SaveDropIncreaseTime;
class stAccelKey;
class stMapTermData;
class OrderSysPresent;
class UserCopyID;
class UserCopyTimes;
class UserCopyScore;
class UserCopySceneTimes;
class SaveSkill;
class BinarySaveSkill;
class NoPropertyIconState;
class SkillStatusElement;
class SkillStatusElement_Pos;
class ObjectLocation;
class stoneSocket;
class diamondSoket;
class diamondSoket_Diamond;
class wingData;
class wingData_Diamond;
class wingData_ActiveSkill;
class flyPos;
class flyMessage;
class PropertyValues;
class PropertyValues_Value;
class PropertyValuesEx;
class PropertyValuesEx_Value;
class EquipBaseValue;
class EquipSplitData;
class t_Object;
class ObjectMapData;
class stChatChannel;
class stUserShopItemView;
class LockItem;
class CounterNum;
class CounterSave;
class TimeExpItem;
class TimeExpSave;
class ObjectArray;
class MailOneObject;
class MailObjects;
class SceneShowFuncNpcData;
class MapFuncNpcList;
class MusterCount;
class septCartHelpBack;
class septCartHelpSave;
class BinaryGangData;
class GangServerSyncData;
class StockAccountData;
class OneStockItem;
class SelfOneStockItem;
class StockTypeList;
class SeptBuildingData;
class SceneChariotSkill;
class SceneChariotBaseData;
class SceneChariotBinaryData;
class UserTempPosition;
class BiGuanXiuXianData;
class ObjectDrop;
class ObjectDropSave;
class CopyUserMember;
class DBCopySceneBinaryData;
class HorseExtraData;
class CharacterMapShow;
class StateData;
class CharacterMapData;
class CharacterMainData;
class NpcMapData;
class NpcDeathMapData;
class EquipChangeMaterial;
class AddMaxCount;
class AddMaxCount_Count;
class BossReliveInfo;
class ChangeZoneInfo;
class UserScore;
class OneYaoQianItem;
class YaoQianSaveData;
class DungeonSaveData;
class VarInfo;
class BuildInfo;
class MakeEquipInfo;
class CastleExploreInfo;
class BinaryCastle;
class BinaryMakeEquip;
class CastlePetInfo;
class CastleWorkPet;
class BinaryCastlePet;
class CastlePetState;
class CastleStatueInfo;
class BinaryCastleStatue;
class ReplaceSkill;
class RelicUserPos;
class RiskTaskInfo;
class BinaryRiskTaskInfo;
class LifeSkillInfo;
class BinaryLifeSkill;
class DayGuideInfo;
class TitleData;
class MonthCardData;
class WingSystemData;
class StatHurtData;
class TitleInfo;
class ItemInfo;
class LimitShopData;
class FundData;
class TotalReSpData;
class RechargeSpendData;
class DeclareWarData;
class PropValues;
class FPairDataDWORD;
class FPairDataStrDW;
class FTripleDataDWORD;
class StpObjectNode;
class FMsgNpcFunction;
class FNpcDlgPara;
class FValueCell;
class FPropertyValues;
class FPropertyValues_FValue;
class FNpcMapData;
class FStateData;
class FCharacterMapShow;
class FCharacterMapData;
class FNpcDeathMapData;
class FCharacterMainData;

enum stUserShopItemView_PriceTypes {
  stUserShopItemView_PriceTypes_Silver = 0,
  stUserShopItemView_PriceTypes_Gold = 1
};
bool stUserShopItemView_PriceTypes_IsValid(int value);
const stUserShopItemView_PriceTypes stUserShopItemView_PriceTypes_PriceTypes_MIN = stUserShopItemView_PriceTypes_Silver;
const stUserShopItemView_PriceTypes stUserShopItemView_PriceTypes_PriceTypes_MAX = stUserShopItemView_PriceTypes_Gold;
const int stUserShopItemView_PriceTypes_PriceTypes_ARRAYSIZE = stUserShopItemView_PriceTypes_PriceTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* stUserShopItemView_PriceTypes_descriptor();
inline const ::std::string& stUserShopItemView_PriceTypes_Name(stUserShopItemView_PriceTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    stUserShopItemView_PriceTypes_descriptor(), value);
}
inline bool stUserShopItemView_PriceTypes_Parse(
    const ::std::string& name, stUserShopItemView_PriceTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<stUserShopItemView_PriceTypes>(
    stUserShopItemView_PriceTypes_descriptor(), name, value);
}
enum CountryType {
  QuestCountryType_All = 0,
  QuestCountryType_MotherCountry = 1,
  QuestCountryType_UnionCountry = 2,
  QuestCountryType_EnemyCountry = 3,
  QuestCountryType_Middle = 4,
  QuestCountryType_CountryNone = 10,
  QuestCountryType_Country1 = 11,
  QuestCountryType_Country2 = 12,
  QuestCountryType_Country3 = 13,
  QuestCountryType_Country4 = 14,
  QuestCountryType_Country5 = 15,
  QuestCountryType_Country6 = 16,
  QuestCountryType_Country7 = 17,
  QuestCountryType_Country8 = 18,
  QuestCountryType_Country9 = 19,
  QuestCountryType_Country10 = 20,
  QuestCountryType_CountryMax = 21,
  QuestCountryType_Max = 30
};
bool CountryType_IsValid(int value);
const CountryType CountryType_MIN = QuestCountryType_All;
const CountryType CountryType_MAX = QuestCountryType_Max;
const int CountryType_ARRAYSIZE = CountryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CountryType_descriptor();
inline const ::std::string& CountryType_Name(CountryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CountryType_descriptor(), value);
}
inline bool CountryType_Parse(
    const ::std::string& name, CountryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CountryType>(
    CountryType_descriptor(), name, value);
}
enum QuestStateType {
  QUESTSTATE_NONE = 0,
  QUESTSTATE_ACCEPTABLE = 1,
  QUESTSTATE_DOING = 2,
  QUESTSTATE_FAIL = 3,
  QUESTSTATE_CANGIVE = 4,
  QUESTSTATE_COMPLETE = 5,
  QUESTSTATE_ABAN = 6,
  QUESTSTATE_ERROR = 7
};
bool QuestStateType_IsValid(int value);
const QuestStateType QuestStateType_MIN = QUESTSTATE_NONE;
const QuestStateType QuestStateType_MAX = QUESTSTATE_ERROR;
const int QuestStateType_ARRAYSIZE = QuestStateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestStateType_descriptor();
inline const ::std::string& QuestStateType_Name(QuestStateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestStateType_descriptor(), value);
}
inline bool QuestStateType_Parse(
    const ::std::string& name, QuestStateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestStateType>(
    QuestStateType_descriptor(), name, value);
}
enum enumQuestDoubleTimeLimit {
  enumQDTL_None = 0,
  enumQDTL_CountryDoubleExp = 1,
  enumQDTL_GangDoubleExp = 2,
  enumQDTL_Max = 3
};
bool enumQuestDoubleTimeLimit_IsValid(int value);
const enumQuestDoubleTimeLimit enumQuestDoubleTimeLimit_MIN = enumQDTL_None;
const enumQuestDoubleTimeLimit enumQuestDoubleTimeLimit_MAX = enumQDTL_Max;
const int enumQuestDoubleTimeLimit_ARRAYSIZE = enumQuestDoubleTimeLimit_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumQuestDoubleTimeLimit_descriptor();
inline const ::std::string& enumQuestDoubleTimeLimit_Name(enumQuestDoubleTimeLimit value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumQuestDoubleTimeLimit_descriptor(), value);
}
inline bool enumQuestDoubleTimeLimit_Parse(
    const ::std::string& name, enumQuestDoubleTimeLimit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumQuestDoubleTimeLimit>(
    enumQuestDoubleTimeLimit_descriptor(), name, value);
}
enum TimeCycle {
  TimeCycle_None = 0,
  TimeCycle_Daily = 1,
  TimeCycle_Week = 2,
  TimeCycle_Month = 3,
  TimeCycle_Year = 4,
  TimeCycle_Max = 5
};
bool TimeCycle_IsValid(int value);
const TimeCycle TimeCycle_MIN = TimeCycle_None;
const TimeCycle TimeCycle_MAX = TimeCycle_Max;
const int TimeCycle_ARRAYSIZE = TimeCycle_MAX + 1;

const ::google::protobuf::EnumDescriptor* TimeCycle_descriptor();
inline const ::std::string& TimeCycle_Name(TimeCycle value) {
  return ::google::protobuf::internal::NameOfEnum(
    TimeCycle_descriptor(), value);
}
inline bool TimeCycle_Parse(
    const ::std::string& name, TimeCycle* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TimeCycle>(
    TimeCycle_descriptor(), name, value);
}
enum CostType {
  CostType_None = 0,
  CostType_Money = 1,
  CostType_Money_BindMoney = 2,
  CostType_BindGold = 3,
  CostType_Gold = 4,
  CostType_FirstBindOrMoney = 5
};
bool CostType_IsValid(int value);
const CostType CostType_MIN = CostType_None;
const CostType CostType_MAX = CostType_FirstBindOrMoney;
const int CostType_ARRAYSIZE = CostType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CostType_descriptor();
inline const ::std::string& CostType_Name(CostType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CostType_descriptor(), value);
}
inline bool CostType_Parse(
    const ::std::string& name, CostType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CostType>(
    CostType_descriptor(), name, value);
}
enum PlayerTitleType {
  TitleType_None = 0,
  StepTitle_YBY = 1,
  StepTitle_MASTER = 2,
  StepTitle_DEPUTY = 3,
  StepTitle_ZHF = 4,
  StepTitle_YHF = 5,
  StepTitle_XFY = 6,
  StepTitle_BQY = 7,
  StepTitle_FHY = 8,
  StepTitle_Max = 15,
  MoveBrickTitle_First = 16,
  MoveBrickTitle_Second = 17,
  MoveBrickTitle_Third = 18,
  MoveBrickTitle_Max = 25,
  ExamTitle_First = 26,
  ExamTitle_Second = 27,
  ExamTitle_Third = 28,
  ExamTitle_Max = 30
};
bool PlayerTitleType_IsValid(int value);
const PlayerTitleType PlayerTitleType_MIN = TitleType_None;
const PlayerTitleType PlayerTitleType_MAX = ExamTitle_Max;
const int PlayerTitleType_ARRAYSIZE = PlayerTitleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerTitleType_descriptor();
inline const ::std::string& PlayerTitleType_Name(PlayerTitleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerTitleType_descriptor(), value);
}
inline bool PlayerTitleType_Parse(
    const ::std::string& name, PlayerTitleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerTitleType>(
    PlayerTitleType_descriptor(), name, value);
}
enum CountryOfficerType {
  CountryOfficer_None = 0,
  CountryOfficer_King = 1,
  CountryOfficer_ChengX = 2,
  CountryOfficer_TaiW = 3,
  CountryOfficer_YuSDF = 4,
  CountryOfficer_TingW = 5,
  CountryOfficer_LangZL = 6,
  CountryOfficer_ZhongW = 7,
  CountryOfficer_Max = 8
};
bool CountryOfficerType_IsValid(int value);
const CountryOfficerType CountryOfficerType_MIN = CountryOfficer_None;
const CountryOfficerType CountryOfficerType_MAX = CountryOfficer_Max;
const int CountryOfficerType_ARRAYSIZE = CountryOfficerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CountryOfficerType_descriptor();
inline const ::std::string& CountryOfficerType_Name(CountryOfficerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CountryOfficerType_descriptor(), value);
}
inline bool CountryOfficerType_Parse(
    const ::std::string& name, CountryOfficerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CountryOfficerType>(
    CountryOfficerType_descriptor(), name, value);
}
enum ProfessionType {
  Profession_None = 0,
  Profession_Fighter = 1,
  Profession_Mage = 2,
  Profession_Doctor = 3,
  Profession_Archer = 4,
  Profession_Max = 5
};
bool ProfessionType_IsValid(int value);
const ProfessionType ProfessionType_MIN = Profession_None;
const ProfessionType ProfessionType_MAX = Profession_Max;
const int ProfessionType_ARRAYSIZE = ProfessionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProfessionType_descriptor();
inline const ::std::string& ProfessionType_Name(ProfessionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProfessionType_descriptor(), value);
}
inline bool ProfessionType_Parse(
    const ::std::string& name, ProfessionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProfessionType>(
    ProfessionType_descriptor(), name, value);
}
enum PropGroupType {
  PropGroup_None = 0,
  PropGroup_Base = 1,
  PropGroup_2 = 2,
  PropGroup_3 = 3,
  PropGroup_4 = 4,
  PropGroup_5 = 5,
  PropGroup_6 = 6,
  PropGroup_7 = 7,
  PropGroup_8 = 8,
  PropGroup_Skill = 11,
  PropGroup_Star = 12
};
bool PropGroupType_IsValid(int value);
const PropGroupType PropGroupType_MIN = PropGroup_None;
const PropGroupType PropGroupType_MAX = PropGroup_Star;
const int PropGroupType_ARRAYSIZE = PropGroupType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PropGroupType_descriptor();
inline const ::std::string& PropGroupType_Name(PropGroupType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PropGroupType_descriptor(), value);
}
inline bool PropGroupType_Parse(
    const ::std::string& name, PropGroupType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PropGroupType>(
    PropGroupType_descriptor(), name, value);
}
enum PropValueType {
  ValueType_none = 0,
  ValueType_maxhp = 1,
  ValueType_maxmp = 2,
  ValueType_minpdamage = 3,
  ValueType_maxpdamage = 4,
  ValueType_minmdamage = 5,
  ValueType_maxmdamage = 6,
  ValueType_pdefence = 7,
  ValueType_mdefence = 8,
  ValueType_maxhpr = 9,
  ValueType_maxmpr = 10,
  ValueType_minpdamager = 11,
  ValueType_maxpdamager = 12,
  ValueType_minmdamager = 13,
  ValueType_maxmdamager = 14,
  ValueType_pdefencer = 15,
  ValueType_mdefencer = 16,
  ValueType_damage = 17,
  ValueType_defence = 18,
  ValueType_allattr = 19,
  ValueType_strength = 20,
  ValueType_dexterity = 21,
  ValueType_mentality = 22,
  ValueType_constitution = 23,
  ValueType_mvspeed = 31,
  ValueType_luckRate = 32,
  ValueType_hitRate = 33,
  ValueType_missRate = 34,
  ValueType_smiteRate = 35,
  ValueType_reSmiteRate = 36,
  ValueType_beatRate = 37,
  ValueType_reBeatRate = 38,
  ValueType_smiteAdd = 39,
  ValueType_fixedHurtAdd = 40,
  ValueType_fixedHurtSub = 41,
  ValueType_pdamagep = 51,
  ValueType_mdamagep = 52,
  ValueType_pdefencep = 53,
  ValueType_mdefencep = 54,
  ValueType_attlevel = 61,
  ValueType_deflevel = 62,
  ValueType_hplevel = 63,
  ValueType_paralysisRate = 71,
  ValueType_reParalysisRate = 72,
  ValueType_coldRate = 73,
  ValueType_reColdRate = 74,
  ValueType_reAllRate = 75,
  ValueType_neglectRate = 76,
  ValueType_damageInc = 77,
  ValueType_hpsucker = 78,
  ValueType_mpsucker = 79,
  ValueType_hpsuckerRate = 80,
  ValueType_mpsuckerRate = 81,
  ValueType_addHp = 82,
  ValueType_addMp = 83,
  ValueType_reflect = 84,
  ValueType_shield = 85,
  ValueType_resist = 86,
  ValueType_butterfly = 87,
  ValueType_reNeglectRate = 88,
  ValueType_moneyLostRate = 90,
  ValueType_equipLostRate = 91,
  ValueType_phyresist = 92,
  ValueType_magresist = 93,
  ValueType_skill = 101,
  ValueType_star = 102
};
bool PropValueType_IsValid(int value);
const PropValueType PropValueType_MIN = ValueType_none;
const PropValueType PropValueType_MAX = ValueType_star;
const int PropValueType_ARRAYSIZE = PropValueType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PropValueType_descriptor();
inline const ::std::string& PropValueType_Name(PropValueType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PropValueType_descriptor(), value);
}
inline bool PropValueType_Parse(
    const ::std::string& name, PropValueType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PropValueType>(
    PropValueType_descriptor(), name, value);
}
enum ElementAttrType {
  ElementAttrType_soil = 0,
  ElementAttrType_wind = 1,
  ElementAttrType_water = 2,
  ElementAttrType_fire = 3
};
bool ElementAttrType_IsValid(int value);
const ElementAttrType ElementAttrType_MIN = ElementAttrType_soil;
const ElementAttrType ElementAttrType_MAX = ElementAttrType_fire;
const int ElementAttrType_ARRAYSIZE = ElementAttrType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ElementAttrType_descriptor();
inline const ::std::string& ElementAttrType_Name(ElementAttrType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ElementAttrType_descriptor(), value);
}
inline bool ElementAttrType_Parse(
    const ::std::string& name, ElementAttrType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ElementAttrType>(
    ElementAttrType_descriptor(), name, value);
}
enum CHANNEL {
  CHANNEL_SOFT = 0,
  CHANNEL_TEAM = 1,
  CHANNEL_FRIEND = 2,
  CHANNEL_SEPT = 3,
  CHANNEL_COUNTRY = 4,
  CHANNEL_WORLD = 5,
  CHANNEL_SECRET = 6,
  CHANNEL_BOX = 7,
  CHANNEL_SYS = 8
};
bool CHANNEL_IsValid(int value);
const CHANNEL CHANNEL_MIN = CHANNEL_SOFT;
const CHANNEL CHANNEL_MAX = CHANNEL_SYS;
const int CHANNEL_ARRAYSIZE = CHANNEL_MAX + 1;

const ::google::protobuf::EnumDescriptor* CHANNEL_descriptor();
inline const ::std::string& CHANNEL_Name(CHANNEL value) {
  return ::google::protobuf::internal::NameOfEnum(
    CHANNEL_descriptor(), value);
}
inline bool CHANNEL_Parse(
    const ::std::string& name, CHANNEL* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CHANNEL>(
    CHANNEL_descriptor(), name, value);
}
enum CounterType {
  COUNTERT_NONE = 0,
  COUNTERT_COPYSCENE = 1,
  COUNTER_QUEST = 2,
  COUNTERT_SCRIPT_FUNCTION = 3,
  COUNTERT_FUNCTION = 4,
  COUNTERT_GIFTBAG = 5,
  COUNTERT_ZoneActivity = 6,
  COUNTERT_VoteCountryOffice = 7
};
bool CounterType_IsValid(int value);
const CounterType CounterType_MIN = COUNTERT_NONE;
const CounterType CounterType_MAX = COUNTERT_VoteCountryOffice;
const int CounterType_ARRAYSIZE = CounterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CounterType_descriptor();
inline const ::std::string& CounterType_Name(CounterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CounterType_descriptor(), value);
}
inline bool CounterType_Parse(
    const ::std::string& name, CounterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CounterType>(
    CounterType_descriptor(), name, value);
}
enum CounterFuncType {
  Count_Fun_Challenge_Win = 1,
  Count_Fun_Challenge_SerialWin = 2,
  Count_Fun_Exam = 3,
  Count_Fun_MiGong = 4,
  Count_Fun_TalismanRefresh = 5,
  Count_Fun_WingDiamondUpdate = 6,
  Count_Fun_TimeExpWeek = 7
};
bool CounterFuncType_IsValid(int value);
const CounterFuncType CounterFuncType_MIN = Count_Fun_Challenge_Win;
const CounterFuncType CounterFuncType_MAX = Count_Fun_TimeExpWeek;
const int CounterFuncType_ARRAYSIZE = CounterFuncType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CounterFuncType_descriptor();
inline const ::std::string& CounterFuncType_Name(CounterFuncType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CounterFuncType_descriptor(), value);
}
inline bool CounterFuncType_Parse(
    const ::std::string& name, CounterFuncType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CounterFuncType>(
    CounterFuncType_descriptor(), name, value);
}
enum MusterID {
  MusterID_Citywar_Master = 1,
  MusterID_Citywar_Apply = 2,
  MusterID_MusterPos = 3,
  MusterID_Citywar_ApplyHelp = 4,
  MusterID_Countrywar_Att = 5,
  MusterID_Countrywar_Def = 6,
  MusterID_CountryBuilding = 11,
  MusterID_SeptShiLianQuest = 12,
  MusterID_Gang_CountryDoubleExp = 13
};
bool MusterID_IsValid(int value);
const MusterID MusterID_MIN = MusterID_Citywar_Master;
const MusterID MusterID_MAX = MusterID_Gang_CountryDoubleExp;
const int MusterID_ARRAYSIZE = MusterID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MusterID_descriptor();
inline const ::std::string& MusterID_Name(MusterID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MusterID_descriptor(), value);
}
inline bool MusterID_Parse(
    const ::std::string& name, MusterID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MusterID>(
    MusterID_descriptor(), name, value);
}
enum MusterType {
  Muster_Country = 1,
  Muster_Sept = 2,
  Muster_Team = 3,
  Muster_All = 4
};
bool MusterType_IsValid(int value);
const MusterType MusterType_MIN = Muster_Country;
const MusterType MusterType_MAX = Muster_All;
const int MusterType_ARRAYSIZE = MusterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MusterType_descriptor();
inline const ::std::string& MusterType_Name(MusterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MusterType_descriptor(), value);
}
inline bool MusterType_Parse(
    const ::std::string& name, MusterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MusterType>(
    MusterType_descriptor(), name, value);
}
enum enumUserPresentType {
  enumPresent_None = 0,
  enumPresent_BillBack = 1,
  enumPresent_JiHuoMa = 4,
  enumPresent_NewZoneLevelRace = 5,
  enumPresent_SysOrder = 6,
  enumPresent_CBSPresent = 7,
  enumPresent_AssumePresent = 8,
  enumPresent_Max = 9
};
bool enumUserPresentType_IsValid(int value);
const enumUserPresentType enumUserPresentType_MIN = enumPresent_None;
const enumUserPresentType enumUserPresentType_MAX = enumPresent_Max;
const int enumUserPresentType_ARRAYSIZE = enumUserPresentType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumUserPresentType_descriptor();
inline const ::std::string& enumUserPresentType_Name(enumUserPresentType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumUserPresentType_descriptor(), value);
}
inline bool enumUserPresentType_Parse(
    const ::std::string& name, enumUserPresentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumUserPresentType>(
    enumUserPresentType_descriptor(), name, value);
}
enum septCartButtonAvailable {
  sept_cart_help_available = 1,
  sept_cart_back_available = 2
};
bool septCartButtonAvailable_IsValid(int value);
const septCartButtonAvailable septCartButtonAvailable_MIN = sept_cart_help_available;
const septCartButtonAvailable septCartButtonAvailable_MAX = sept_cart_back_available;
const int septCartButtonAvailable_ARRAYSIZE = septCartButtonAvailable_MAX + 1;

const ::google::protobuf::EnumDescriptor* septCartButtonAvailable_descriptor();
inline const ::std::string& septCartButtonAvailable_Name(septCartButtonAvailable value) {
  return ::google::protobuf::internal::NameOfEnum(
    septCartButtonAvailable_descriptor(), value);
}
inline bool septCartButtonAvailable_Parse(
    const ::std::string& name, septCartButtonAvailable* value) {
  return ::google::protobuf::internal::ParseNamedEnum<septCartButtonAvailable>(
    septCartButtonAvailable_descriptor(), name, value);
}
enum septCartHelpFunctionType {
  sept_cart_help_close = 0,
  sept_cart_help_show = 1
};
bool septCartHelpFunctionType_IsValid(int value);
const septCartHelpFunctionType septCartHelpFunctionType_MIN = sept_cart_help_close;
const septCartHelpFunctionType septCartHelpFunctionType_MAX = sept_cart_help_show;
const int septCartHelpFunctionType_ARRAYSIZE = septCartHelpFunctionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* septCartHelpFunctionType_descriptor();
inline const ::std::string& septCartHelpFunctionType_Name(septCartHelpFunctionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    septCartHelpFunctionType_descriptor(), value);
}
inline bool septCartHelpFunctionType_Parse(
    const ::std::string& name, septCartHelpFunctionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<septCartHelpFunctionType>(
    septCartHelpFunctionType_descriptor(), name, value);
}
enum enumStockAuctionType {
  enumStock_SellGold = 1,
  enumStock_BuyGold = 2
};
bool enumStockAuctionType_IsValid(int value);
const enumStockAuctionType enumStockAuctionType_MIN = enumStock_SellGold;
const enumStockAuctionType enumStockAuctionType_MAX = enumStock_BuyGold;
const int enumStockAuctionType_ARRAYSIZE = enumStockAuctionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumStockAuctionType_descriptor();
inline const ::std::string& enumStockAuctionType_Name(enumStockAuctionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumStockAuctionType_descriptor(), value);
}
inline bool enumStockAuctionType_Parse(
    const ::std::string& name, enumStockAuctionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumStockAuctionType>(
    enumStockAuctionType_descriptor(), name, value);
}
enum enumCopySceneType {
  enumCopyScene_None = 0,
  enumCopyScene_PrivyBase = 1,
  enumCopyScene_Daily1v1 = 2,
  enumCopyScene_TeamMonster = 3,
  enumCopyScene_SeptShilian = 4,
  enumCopyScene_SeptMap = 5,
  enumCopyScene_Challenge = 6,
  enumCopyScene_MultiUngroup = 7,
  enumCopyScene_Sept = 8,
  enumCopyScene_Dungeon = 9,
  enumCopyScene_Battle = 10,
  enumCopyScene_Hunger = 11,
  enumCopyScene_Max = 12
};
bool enumCopySceneType_IsValid(int value);
const enumCopySceneType enumCopySceneType_MIN = enumCopyScene_None;
const enumCopySceneType enumCopySceneType_MAX = enumCopyScene_Max;
const int enumCopySceneType_ARRAYSIZE = enumCopySceneType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumCopySceneType_descriptor();
inline const ::std::string& enumCopySceneType_Name(enumCopySceneType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumCopySceneType_descriptor(), value);
}
inline bool enumCopySceneType_Parse(
    const ::std::string& name, enumCopySceneType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumCopySceneType>(
    enumCopySceneType_descriptor(), name, value);
}
enum enumSceneType {
  SceneType_Normal = 0,
  SceneType_Instance = 1,
  SceneType_Dynamic = 2,
  SceneType_MAX = 3
};
bool enumSceneType_IsValid(int value);
const enumSceneType enumSceneType_MIN = SceneType_Normal;
const enumSceneType enumSceneType_MAX = SceneType_MAX;
const int enumSceneType_ARRAYSIZE = enumSceneType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumSceneType_descriptor();
inline const ::std::string& enumSceneType_Name(enumSceneType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumSceneType_descriptor(), value);
}
inline bool enumSceneType_Parse(
    const ::std::string& name, enumSceneType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumSceneType>(
    enumSceneType_descriptor(), name, value);
}
enum enumSeptBuildingType {
  enumSeptBuildingType_None = 0,
  enumSeptBuildingType_ZhongYi = 1,
  enumSeptBuildingType_JingKu = 2,
  enumSeptBuildingType_WuGuan = 3,
  enumSeptBuildingType_LianWuChang = 4,
  enumSeptBuildingType_FangWo = 5,
  enumSeptBuildingType_Max = 6
};
bool enumSeptBuildingType_IsValid(int value);
const enumSeptBuildingType enumSeptBuildingType_MIN = enumSeptBuildingType_None;
const enumSeptBuildingType enumSeptBuildingType_MAX = enumSeptBuildingType_Max;
const int enumSeptBuildingType_ARRAYSIZE = enumSeptBuildingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumSeptBuildingType_descriptor();
inline const ::std::string& enumSeptBuildingType_Name(enumSeptBuildingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumSeptBuildingType_descriptor(), value);
}
inline bool enumSeptBuildingType_Parse(
    const ::std::string& name, enumSeptBuildingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumSeptBuildingType>(
    enumSeptBuildingType_descriptor(), name, value);
}
enum enumMatchQueueType {
  enumMatchQueue_SeptBattle = 1
};
bool enumMatchQueueType_IsValid(int value);
const enumMatchQueueType enumMatchQueueType_MIN = enumMatchQueue_SeptBattle;
const enumMatchQueueType enumMatchQueueType_MAX = enumMatchQueue_SeptBattle;
const int enumMatchQueueType_ARRAYSIZE = enumMatchQueueType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumMatchQueueType_descriptor();
inline const ::std::string& enumMatchQueueType_Name(enumMatchQueueType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumMatchQueueType_descriptor(), value);
}
inline bool enumMatchQueueType_Parse(
    const ::std::string& name, enumMatchQueueType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumMatchQueueType>(
    enumMatchQueueType_descriptor(), name, value);
}
enum enumUserInfluence {
  enumUserInfluence_None = 0,
  enumUserInfluence_Red = 1,
  enumUserInfluence_Blue = 2,
  enumUserInfluence_Max = 3
};
bool enumUserInfluence_IsValid(int value);
const enumUserInfluence enumUserInfluence_MIN = enumUserInfluence_None;
const enumUserInfluence enumUserInfluence_MAX = enumUserInfluence_Max;
const int enumUserInfluence_ARRAYSIZE = enumUserInfluence_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumUserInfluence_descriptor();
inline const ::std::string& enumUserInfluence_Name(enumUserInfluence value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumUserInfluence_descriptor(), value);
}
inline bool enumUserInfluence_Parse(
    const ::std::string& name, enumUserInfluence* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumUserInfluence>(
    enumUserInfluence_descriptor(), name, value);
}
enum enumCountryPower {
  enumCountryPower_None = 0,
  enumCountryPower_Weak = 1,
  enumCountryPower_Normal = 2,
  enumCountryPower_Strength = 3,
  enumCountryPower_Max = 4
};
bool enumCountryPower_IsValid(int value);
const enumCountryPower enumCountryPower_MIN = enumCountryPower_None;
const enumCountryPower enumCountryPower_MAX = enumCountryPower_Max;
const int enumCountryPower_ARRAYSIZE = enumCountryPower_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumCountryPower_descriptor();
inline const ::std::string& enumCountryPower_Name(enumCountryPower value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumCountryPower_descriptor(), value);
}
inline bool enumCountryPower_Parse(
    const ::std::string& name, enumCountryPower* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumCountryPower>(
    enumCountryPower_descriptor(), name, value);
}
enum enumGlobalVar {
  enumGlobalVar_StartServer = 1,
  enumGlobalVar_DoubleAttenuation = 2,
  enumGlobalVar_ObjectDropLimit = 3,
  enumGlobalVar_HotBloodBaby = 4,
  enumGlobalVar_FreshmanAddExp = 5,
  enumGlobalVar_CopySceneAddExp = 6,
  enumGlobalVar_KillWorldTimes = 7,
  enumGlobalVar_AddExpAll = 10
};
bool enumGlobalVar_IsValid(int value);
const enumGlobalVar enumGlobalVar_MIN = enumGlobalVar_StartServer;
const enumGlobalVar enumGlobalVar_MAX = enumGlobalVar_AddExpAll;
const int enumGlobalVar_ARRAYSIZE = enumGlobalVar_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumGlobalVar_descriptor();
inline const ::std::string& enumGlobalVar_Name(enumGlobalVar value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumGlobalVar_descriptor(), value);
}
inline bool enumGlobalVar_Parse(
    const ::std::string& name, enumGlobalVar* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumGlobalVar>(
    enumGlobalVar_descriptor(), name, value);
}
enum enumBiGuanXiuXianType {
  enumBiGuanXiuXian_None = 0,
  enumBiGuanXiuXian_Common = 1,
  enumBiGuanXiuXian_15Rate = 2,
  enumBiGuanXiuXian_125Rate = 3,
  enumBiGuanXiuXian_Max = 4
};
bool enumBiGuanXiuXianType_IsValid(int value);
const enumBiGuanXiuXianType enumBiGuanXiuXianType_MIN = enumBiGuanXiuXian_None;
const enumBiGuanXiuXianType enumBiGuanXiuXianType_MAX = enumBiGuanXiuXian_Max;
const int enumBiGuanXiuXianType_ARRAYSIZE = enumBiGuanXiuXianType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumBiGuanXiuXianType_descriptor();
inline const ::std::string& enumBiGuanXiuXianType_Name(enumBiGuanXiuXianType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumBiGuanXiuXianType_descriptor(), value);
}
inline bool enumBiGuanXiuXianType_Parse(
    const ::std::string& name, enumBiGuanXiuXianType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumBiGuanXiuXianType>(
    enumBiGuanXiuXianType_descriptor(), name, value);
}
enum enumObjectDropType {
  enumObjectDropType_Set = 1,
  enumObjectDropType_NotSet = 2
};
bool enumObjectDropType_IsValid(int value);
const enumObjectDropType enumObjectDropType_MIN = enumObjectDropType_Set;
const enumObjectDropType enumObjectDropType_MAX = enumObjectDropType_NotSet;
const int enumObjectDropType_ARRAYSIZE = enumObjectDropType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumObjectDropType_descriptor();
inline const ::std::string& enumObjectDropType_Name(enumObjectDropType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumObjectDropType_descriptor(), value);
}
inline bool enumObjectDropType_Parse(
    const ::std::string& name, enumObjectDropType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumObjectDropType>(
    enumObjectDropType_descriptor(), name, value);
}
enum CountryOfficeType {
  Country_None = 0,
  Country_King = 1,
  Country_OfficeMax = 2
};
bool CountryOfficeType_IsValid(int value);
const CountryOfficeType CountryOfficeType_MIN = Country_None;
const CountryOfficeType CountryOfficeType_MAX = Country_OfficeMax;
const int CountryOfficeType_ARRAYSIZE = CountryOfficeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CountryOfficeType_descriptor();
inline const ::std::string& CountryOfficeType_Name(CountryOfficeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CountryOfficeType_descriptor(), value);
}
inline bool CountryOfficeType_Parse(
    const ::std::string& name, CountryOfficeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CountryOfficeType>(
    CountryOfficeType_descriptor(), name, value);
}
enum ScoreType {
  Score_None = 0,
  Score_Countrywar = 1,
  Score_GoldScore = 2,
  Score_SeptContribute = 3,
  Score_Citywar = 4,
  Score_Max = 5
};
bool ScoreType_IsValid(int value);
const ScoreType ScoreType_MIN = Score_None;
const ScoreType ScoreType_MAX = Score_Max;
const int ScoreType_ARRAYSIZE = ScoreType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScoreType_descriptor();
inline const ::std::string& ScoreType_Name(ScoreType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScoreType_descriptor(), value);
}
inline bool ScoreType_Parse(
    const ::std::string& name, ScoreType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScoreType>(
    ScoreType_descriptor(), name, value);
}
enum SpeakerType {
  Speaker_Country = 1,
  Speaker_AllZone = 2
};
bool SpeakerType_IsValid(int value);
const SpeakerType SpeakerType_MIN = Speaker_Country;
const SpeakerType SpeakerType_MAX = Speaker_AllZone;
const int SpeakerType_ARRAYSIZE = SpeakerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SpeakerType_descriptor();
inline const ::std::string& SpeakerType_Name(SpeakerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SpeakerType_descriptor(), value);
}
inline bool SpeakerType_Parse(
    const ::std::string& name, SpeakerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpeakerType>(
    SpeakerType_descriptor(), name, value);
}
enum SpreaderGoldState {
  SpreaderGold_None = 0,
  SpreaderGold_Add = 1,
  SpreaderGold_GMAdd = 2,
  SpreaderGold_Gived = 5,
  SpreaderGold_ColdDwon = 6
};
bool SpreaderGoldState_IsValid(int value);
const SpreaderGoldState SpreaderGoldState_MIN = SpreaderGold_None;
const SpreaderGoldState SpreaderGoldState_MAX = SpreaderGold_ColdDwon;
const int SpreaderGoldState_ARRAYSIZE = SpreaderGoldState_MAX + 1;

const ::google::protobuf::EnumDescriptor* SpreaderGoldState_descriptor();
inline const ::std::string& SpreaderGoldState_Name(SpreaderGoldState value) {
  return ::google::protobuf::internal::NameOfEnum(
    SpreaderGoldState_descriptor(), value);
}
inline bool SpreaderGoldState_Parse(
    const ::std::string& name, SpreaderGoldState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpreaderGoldState>(
    SpreaderGoldState_descriptor(), name, value);
}
enum empLoginError {
  empLoginError_None = 0,
  empLoginError_NoService = 1,
  empLoginError_NoGateway = 2,
  empLoginError_VerifyFail = 3,
  empLoginError_CharNameHaveSpace = 4,
  empLoginError_CharNameInvalid = 5,
  empLoginError_CharNameRepeat = 6,
  empLoginError_IdInUse = 7,
  empLoginError_LengthError = 8
};
bool empLoginError_IsValid(int value);
const empLoginError empLoginError_MIN = empLoginError_None;
const empLoginError empLoginError_MAX = empLoginError_LengthError;
const int empLoginError_ARRAYSIZE = empLoginError_MAX + 1;

const ::google::protobuf::EnumDescriptor* empLoginError_descriptor();
inline const ::std::string& empLoginError_Name(empLoginError value) {
  return ::google::protobuf::internal::NameOfEnum(
    empLoginError_descriptor(), value);
}
inline bool empLoginError_Parse(
    const ::std::string& name, empLoginError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<empLoginError>(
    empLoginError_descriptor(), name, value);
}
enum empTipsType {
  empTipsType_Tips = 0,
  empTipsType_MsgBox = 1,
  empTipsType_Gm = 2
};
bool empTipsType_IsValid(int value);
const empTipsType empTipsType_MIN = empTipsType_Tips;
const empTipsType empTipsType_MAX = empTipsType_Gm;
const int empTipsType_ARRAYSIZE = empTipsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* empTipsType_descriptor();
inline const ::std::string& empTipsType_Name(empTipsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    empTipsType_descriptor(), value);
}
inline bool empTipsType_Parse(
    const ::std::string& name, empTipsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<empTipsType>(
    empTipsType_descriptor(), name, value);
}
enum empMagicAttackRetType {
  empMagicAttackRetType_None = 0,
  empMagicAttackRetType_Fail = 1,
  empMagicAttackRetType_Miss = 2,
  empMagicAttackRetType_Luck = 4,
  empMagicAttackRetType_Heavy = 8
};
bool empMagicAttackRetType_IsValid(int value);
const empMagicAttackRetType empMagicAttackRetType_MIN = empMagicAttackRetType_None;
const empMagicAttackRetType empMagicAttackRetType_MAX = empMagicAttackRetType_Heavy;
const int empMagicAttackRetType_ARRAYSIZE = empMagicAttackRetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* empMagicAttackRetType_descriptor();
inline const ::std::string& empMagicAttackRetType_Name(empMagicAttackRetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    empMagicAttackRetType_descriptor(), value);
}
inline bool empMagicAttackRetType_Parse(
    const ::std::string& name, empMagicAttackRetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<empMagicAttackRetType>(
    empMagicAttackRetType_descriptor(), name, value);
}
enum MsgBoxServerType {
  MsgBoxServerType_None = 1,
  MsgBoxServerType_Scene = 2,
  MsgBoxServerType_Session = 3,
  MsgBoxServerType_Gateway = 4
};
bool MsgBoxServerType_IsValid(int value);
const MsgBoxServerType MsgBoxServerType_MIN = MsgBoxServerType_None;
const MsgBoxServerType MsgBoxServerType_MAX = MsgBoxServerType_Gateway;
const int MsgBoxServerType_ARRAYSIZE = MsgBoxServerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgBoxServerType_descriptor();
inline const ::std::string& MsgBoxServerType_Name(MsgBoxServerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgBoxServerType_descriptor(), value);
}
inline bool MsgBoxServerType_Parse(
    const ::std::string& name, MsgBoxServerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgBoxServerType>(
    MsgBoxServerType_descriptor(), name, value);
}
enum empSceneEntryType {
  empSceneEntryType_Player = 0,
  empSceneEntryType_NPC = 1
};
bool empSceneEntryType_IsValid(int value);
const empSceneEntryType empSceneEntryType_MIN = empSceneEntryType_Player;
const empSceneEntryType empSceneEntryType_MAX = empSceneEntryType_NPC;
const int empSceneEntryType_ARRAYSIZE = empSceneEntryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* empSceneEntryType_descriptor();
inline const ::std::string& empSceneEntryType_Name(empSceneEntryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    empSceneEntryType_descriptor(), value);
}
inline bool empSceneEntryType_Parse(
    const ::std::string& name, empSceneEntryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<empSceneEntryType>(
    empSceneEntryType_descriptor(), name, value);
}
enum empAttrType {
  empAttrType_Strength = 0,
  empAttrType_Intelligence = 1,
  empAttrType_Dexterity = 2,
  empAttrType_Constitution = 3,
  empAttrType_Pdamage = 4,
  empAttrType_Mdamage = 5,
  empAttrType_AttackSpeed = 6,
  empAttrType_Pdefence = 7,
  empAttrType_Mdefence = 8,
  empAttrType_HitRate = 9,
  empAttrType_Dodge = 10,
  empAttrType_HpMax = 11,
  empAttrType_MpMax = 12,
  empAttrType_SpMax = 13,
  empAttrType_Pdamagep = 15,
  empAttrType_Mdamagep = 16,
  empAttrType_Pdefencep = 17,
  empAttrType_PdamageFree = 19,
  empAttrType_MdamageFree = 20,
  empAttrType_SmiteRate = 21,
  empAttrType_SmiteDamage = 22,
  empAttrType_Break = 23,
  empAttrType_Block = 24,
  empAttrType_Parry = 25,
  empAttrType_ReSmite = 26,
  empAttrType_Speed = 28,
  empAttrYpte_Resist = 29,
  empAttrType_GlodAtt = 30,
  empAttrType_WoodAtt = 31,
  empAttrType_WaterAtt = 32,
  empAttrType_FireAtt = 33,
  empAttrType_EarthAtt = 34,
  empAttrType_ReGlodAtt = 40,
  empAttrType_ReWoodAtt = 41,
  empAttrType_ReWaterAtt = 42,
  empAttrType_ReFireAtt = 43,
  empAttrType_ReEarthAtt = 44,
  empAttrType_FixDamage = 50,
  empAttrType_Max = 51,
  empAttrType_Percent = 200
};
bool empAttrType_IsValid(int value);
const empAttrType empAttrType_MIN = empAttrType_Strength;
const empAttrType empAttrType_MAX = empAttrType_Percent;
const int empAttrType_ARRAYSIZE = empAttrType_MAX + 1;

const ::google::protobuf::EnumDescriptor* empAttrType_descriptor();
inline const ::std::string& empAttrType_Name(empAttrType value) {
  return ::google::protobuf::internal::NameOfEnum(
    empAttrType_descriptor(), value);
}
inline bool empAttrType_Parse(
    const ::std::string& name, empAttrType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<empAttrType>(
    empAttrType_descriptor(), name, value);
}
enum FQuestCompleteCondType {
  FQuestCompleteType_None = 0,
  FQuestCompleteType_KillMonster = 1,
  FQuestCompleteType_VisitArea = 2,
  FQuestCompleteType_ManualItem = 3,
  FQuestCompleteType_FinishDungeon = 4,
  FQuestCompleteType_CollectItem = 5,
  FQuestCompleteType_MakeObject = 6,
  FQuestCompleteType_Property = 7,
  FQuestCompleteType_VisitNpc = 8,
  FQuestCompleteType_Fishing = 8,
  FQuestCompleteType_Max = 25
};
bool FQuestCompleteCondType_IsValid(int value);
const FQuestCompleteCondType FQuestCompleteCondType_MIN = FQuestCompleteType_None;
const FQuestCompleteCondType FQuestCompleteCondType_MAX = FQuestCompleteType_Max;
const int FQuestCompleteCondType_ARRAYSIZE = FQuestCompleteCondType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FQuestCompleteCondType_descriptor();
inline const ::std::string& FQuestCompleteCondType_Name(FQuestCompleteCondType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FQuestCompleteCondType_descriptor(), value);
}
inline bool FQuestCompleteCondType_Parse(
    const ::std::string& name, FQuestCompleteCondType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FQuestCompleteCondType>(
    FQuestCompleteCondType_descriptor(), name, value);
}
enum empPackType {
  empPack_Self = 1,
  empPack_Main = 2,
  empPack_Arm = 3,
  empPack_Warehouse = 4
};
bool empPackType_IsValid(int value);
const empPackType empPackType_MIN = empPack_Self;
const empPackType empPackType_MAX = empPack_Warehouse;
const int empPackType_ARRAYSIZE = empPackType_MAX + 1;

const ::google::protobuf::EnumDescriptor* empPackType_descriptor();
inline const ::std::string& empPackType_Name(empPackType value) {
  return ::google::protobuf::internal::NameOfEnum(
    empPackType_descriptor(), value);
}
inline bool empPackType_Parse(
    const ::std::string& name, empPackType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<empPackType>(
    empPackType_descriptor(), name, value);
}
enum FPropValueType {
  FValueType_none = 0,
  FValueType_maxhp = 1,
  FValueType_maxmp = 2,
  FValueType_minpdamage = 3,
  FValueType_maxpdamage = 4,
  FValueType_minmdamage = 5,
  FValueType_maxmdamage = 6,
  FValueType_pdefence = 7,
  FValueType_mdefence = 8,
  FValueType_maxhpr = 9,
  FValueType_maxmpr = 10,
  FValueType_minpdamager = 11,
  FValueType_maxpdamager = 12,
  FValueType_minmdamager = 13,
  FValueType_maxmdamager = 14,
  FValueType_pdefencer = 15,
  FValueType_mdefencer = 16,
  FValueType_damage = 17,
  FValueType_defence = 18,
  FValueType_allattr = 19,
  FValueType_strength = 20,
  FValueType_dexterity = 21,
  FValueType_mentality = 22,
  FValueType_constitution = 23,
  FValueType_mvspeed = 31,
  FValueType_luckRate = 32,
  FValueType_hitRate = 33,
  FValueType_missRate = 34,
  FValueType_smiteRate = 35,
  FValueType_reSmiteRate = 36,
  FValueType_beatRate = 37,
  FValueType_reBeatRate = 38,
  FValueType_smiteAdd = 39,
  FValueType_fixedHurtAdd = 40,
  FValueType_fixedHurtSub = 41,
  FValueType_pdamagep = 51,
  FValueType_mdamagep = 52,
  FValueType_pdefencep = 53,
  FValueType_mdefencep = 54,
  FValueType_attlevel = 61,
  FValueType_deflevel = 62,
  FValueType_hplevel = 63,
  FValueType_paralysisRate = 71,
  FValueType_reParalysisRate = 72,
  FValueType_coldRate = 73,
  FValueType_reColdRate = 74,
  FValueType_reAllRate = 75,
  FValueType_neglectRate = 76,
  FValueType_damageInc = 77,
  FValueType_hpsucker = 78,
  FValueType_mpsucker = 79,
  FValueType_hpsuckerRate = 80,
  FValueType_mpsuckerRate = 81,
  FValueType_addHp = 82,
  FValueType_addMp = 83,
  FValueType_reflect = 84,
  FValueType_shield = 85,
  FValueType_resist = 86,
  FValueType_butterfly = 87,
  FValueType_reNeglectRate = 88,
  FValueType_moneyLostRate = 90,
  FValueType_equipLostRate = 91,
  FValueType_phyresist = 92,
  FValueType_magresist = 93,
  FValueType_skill = 101,
  FValueType_star = 102
};
bool FPropValueType_IsValid(int value);
const FPropValueType FPropValueType_MIN = FValueType_none;
const FPropValueType FPropValueType_MAX = FValueType_star;
const int FPropValueType_ARRAYSIZE = FPropValueType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FPropValueType_descriptor();
inline const ::std::string& FPropValueType_Name(FPropValueType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FPropValueType_descriptor(), value);
}
inline bool FPropValueType_Parse(
    const ::std::string& name, FPropValueType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FPropValueType>(
    FPropValueType_descriptor(), name, value);
}
enum FProfessionType {
  FProfession_None = 0,
  FProfession_Fighter = 1,
  FProfession_Mage = 2,
  FProfession_Doctor = 3,
  FProfession_Archer = 4,
  FProfession_Max = 5
};
bool FProfessionType_IsValid(int value);
const FProfessionType FProfessionType_MIN = FProfession_None;
const FProfessionType FProfessionType_MAX = FProfession_Max;
const int FProfessionType_ARRAYSIZE = FProfessionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FProfessionType_descriptor();
inline const ::std::string& FProfessionType_Name(FProfessionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FProfessionType_descriptor(), value);
}
inline bool FProfessionType_Parse(
    const ::std::string& name, FProfessionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FProfessionType>(
    FProfessionType_descriptor(), name, value);
}
enum ObjectType {
  OBJECTCELLTYPE_NONE = 0
};
bool ObjectType_IsValid(int value);
const ObjectType ObjectType_MIN = OBJECTCELLTYPE_NONE;
const ObjectType ObjectType_MAX = OBJECTCELLTYPE_NONE;
const int ObjectType_ARRAYSIZE = ObjectType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObjectType_descriptor();
inline const ::std::string& ObjectType_Name(ObjectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObjectType_descriptor(), value);
}
inline bool ObjectType_Parse(
    const ::std::string& name, ObjectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObjectType>(
    ObjectType_descriptor(), name, value);
}
// ===================================================================

class II_PairData : public ::google::protobuf::Message {
 public:
  II_PairData();
  virtual ~II_PairData();

  II_PairData(const II_PairData& from);

  inline II_PairData& operator=(const II_PairData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const II_PairData& default_instance();

  void Swap(II_PairData* other);

  // implements Message ----------------------------------------------

  II_PairData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const II_PairData& from);
  void MergeFrom(const II_PairData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 first = 1 [default = 0];
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);

  // optional uint32 second = 2 [default = 0];
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::uint32 second() const;
  inline void set_second(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:II_PairData)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 first_;
  ::google::protobuf::uint32 second_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static II_PairData* default_instance_;
};
// -------------------------------------------------------------------

class QuestVar : public ::google::protobuf::Message {
 public:
  QuestVar();
  virtual ~QuestVar();

  QuestVar(const QuestVar& from);

  inline QuestVar& operator=(const QuestVar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestVar& default_instance();

  void Swap(QuestVar* other);

  // implements Message ----------------------------------------------

  QuestVar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestVar& from);
  void MergeFrom(const QuestVar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 subid = 1;
  inline bool has_subid() const;
  inline void clear_subid();
  static const int kSubidFieldNumber = 1;
  inline ::google::protobuf::uint32 subid() const;
  inline void set_subid(::google::protobuf::uint32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestVar)
 private:
  inline void set_has_subid();
  inline void clear_has_subid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 subid_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static QuestVar* default_instance_;
};
// -------------------------------------------------------------------

class PairDataDWORD : public ::google::protobuf::Message {
 public:
  PairDataDWORD();
  virtual ~PairDataDWORD();

  PairDataDWORD(const PairDataDWORD& from);

  inline PairDataDWORD& operator=(const PairDataDWORD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PairDataDWORD& default_instance();

  void Swap(PairDataDWORD* other);

  // implements Message ----------------------------------------------

  PairDataDWORD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PairDataDWORD& from);
  void MergeFrom(const PairDataDWORD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 para1 = 1;
  inline bool has_para1() const;
  inline void clear_para1();
  static const int kPara1FieldNumber = 1;
  inline ::google::protobuf::uint32 para1() const;
  inline void set_para1(::google::protobuf::uint32 value);

  // optional uint32 para2 = 2;
  inline bool has_para2() const;
  inline void clear_para2();
  static const int kPara2FieldNumber = 2;
  inline ::google::protobuf::uint32 para2() const;
  inline void set_para2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PairDataDWORD)
 private:
  inline void set_has_para1();
  inline void clear_has_para1();
  inline void set_has_para2();
  inline void clear_has_para2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 para1_;
  ::google::protobuf::uint32 para2_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static PairDataDWORD* default_instance_;
};
// -------------------------------------------------------------------

class TripleDataDWORD : public ::google::protobuf::Message {
 public:
  TripleDataDWORD();
  virtual ~TripleDataDWORD();

  TripleDataDWORD(const TripleDataDWORD& from);

  inline TripleDataDWORD& operator=(const TripleDataDWORD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TripleDataDWORD& default_instance();

  void Swap(TripleDataDWORD* other);

  // implements Message ----------------------------------------------

  TripleDataDWORD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TripleDataDWORD& from);
  void MergeFrom(const TripleDataDWORD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 para1 = 1;
  inline bool has_para1() const;
  inline void clear_para1();
  static const int kPara1FieldNumber = 1;
  inline ::google::protobuf::uint32 para1() const;
  inline void set_para1(::google::protobuf::uint32 value);

  // optional uint32 para2 = 2;
  inline bool has_para2() const;
  inline void clear_para2();
  static const int kPara2FieldNumber = 2;
  inline ::google::protobuf::uint32 para2() const;
  inline void set_para2(::google::protobuf::uint32 value);

  // optional uint32 para3 = 3;
  inline bool has_para3() const;
  inline void clear_para3();
  static const int kPara3FieldNumber = 3;
  inline ::google::protobuf::uint32 para3() const;
  inline void set_para3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TripleDataDWORD)
 private:
  inline void set_has_para1();
  inline void clear_has_para1();
  inline void set_has_para2();
  inline void clear_has_para2();
  inline void set_has_para3();
  inline void clear_has_para3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 para1_;
  ::google::protobuf::uint32 para2_;
  ::google::protobuf::uint32 para3_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TripleDataDWORD* default_instance_;
};
// -------------------------------------------------------------------

class QuestData : public ::google::protobuf::Message {
 public:
  QuestData();
  virtual ~QuestData();

  QuestData(const QuestData& from);

  inline QuestData& operator=(const QuestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestData& default_instance();

  void Swap(QuestData* other);

  // implements Message ----------------------------------------------

  QuestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestData& from);
  void MergeFrom(const QuestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);

  // optional .QuestStateType state = 2 [default = QUESTSTATE_NONE];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::QuestStateType state() const;
  inline void set_state(::QuestStateType value);

  // optional bool addvar = 3 [default = true];
  inline bool has_addvar() const;
  inline void clear_addvar();
  static const int kAddvarFieldNumber = 3;
  inline bool addvar() const;
  inline void set_addvar(bool value);

  // repeated .QuestVar vars = 4;
  inline int vars_size() const;
  inline void clear_vars();
  static const int kVarsFieldNumber = 4;
  inline const ::QuestVar& vars(int index) const;
  inline ::QuestVar* mutable_vars(int index);
  inline ::QuestVar* add_vars();
  inline const ::google::protobuf::RepeatedPtrField< ::QuestVar >&
      vars() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuestVar >*
      mutable_vars();

  // optional uint32 acceptTime = 5;
  inline bool has_accepttime() const;
  inline void clear_accepttime();
  static const int kAcceptTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 accepttime() const;
  inline void set_accepttime(::google::protobuf::uint32 value);

  // optional uint32 completeSubNum = 6 [default = 0];
  inline bool has_completesubnum() const;
  inline void clear_completesubnum();
  static const int kCompleteSubNumFieldNumber = 6;
  inline ::google::protobuf::uint32 completesubnum() const;
  inline void set_completesubnum(::google::protobuf::uint32 value);

  // repeated uint32 subquestid = 7 [packed = true];
  inline int subquestid_size() const;
  inline void clear_subquestid();
  static const int kSubquestidFieldNumber = 7;
  inline ::google::protobuf::uint32 subquestid(int index) const;
  inline void set_subquestid(int index, ::google::protobuf::uint32 value);
  inline void add_subquestid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      subquestid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_subquestid();

  // optional uint32 questdataid = 8;
  inline bool has_questdataid() const;
  inline void clear_questdataid();
  static const int kQuestdataidFieldNumber = 8;
  inline ::google::protobuf::uint32 questdataid() const;
  inline void set_questdataid(::google::protobuf::uint32 value);

  // optional float cartceof = 9;
  inline bool has_cartceof() const;
  inline void clear_cartceof();
  static const int kCartceofFieldNumber = 9;
  inline float cartceof() const;
  inline void set_cartceof(float value);

  // optional bool is_accept_double = 10;
  inline bool has_is_accept_double() const;
  inline void clear_is_accept_double();
  static const int kIsAcceptDoubleFieldNumber = 10;
  inline bool is_accept_double() const;
  inline void set_is_accept_double(bool value);

  // @@protoc_insertion_point(class_scope:QuestData)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_addvar();
  inline void clear_has_addvar();
  inline void set_has_accepttime();
  inline void clear_has_accepttime();
  inline void set_has_completesubnum();
  inline void clear_has_completesubnum();
  inline void set_has_questdataid();
  inline void clear_has_questdataid();
  inline void set_has_cartceof();
  inline void clear_has_cartceof();
  inline void set_has_is_accept_double();
  inline void clear_has_is_accept_double();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 questid_;
  int state_;
  ::google::protobuf::RepeatedPtrField< ::QuestVar > vars_;
  ::google::protobuf::uint32 accepttime_;
  ::google::protobuf::uint32 completesubnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > subquestid_;
  mutable int _subquestid_cached_byte_size_;
  bool addvar_;
  bool is_accept_double_;
  ::google::protobuf::uint32 questdataid_;
  float cartceof_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static QuestData* default_instance_;
};
// -------------------------------------------------------------------

class DoingQuestData : public ::google::protobuf::Message {
 public:
  DoingQuestData();
  virtual ~DoingQuestData();

  DoingQuestData(const DoingQuestData& from);

  inline DoingQuestData& operator=(const DoingQuestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoingQuestData& default_instance();

  void Swap(DoingQuestData* other);

  // implements Message ----------------------------------------------

  DoingQuestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoingQuestData& from);
  void MergeFrom(const DoingQuestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool dirty = 1;
  inline bool has_dirty() const;
  inline void clear_dirty();
  static const int kDirtyFieldNumber = 1;
  inline bool dirty() const;
  inline void set_dirty(bool value);

  // repeated .QuestData quest = 2;
  inline int quest_size() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 2;
  inline const ::QuestData& quest(int index) const;
  inline ::QuestData* mutable_quest(int index);
  inline ::QuestData* add_quest();
  inline const ::google::protobuf::RepeatedPtrField< ::QuestData >&
      quest() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuestData >*
      mutable_quest();

  // @@protoc_insertion_point(class_scope:DoingQuestData)
 private:
  inline void set_has_dirty();
  inline void clear_has_dirty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::QuestData > quest_;
  bool dirty_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static DoingQuestData* default_instance_;
};
// -------------------------------------------------------------------

class QuestCompleteData : public ::google::protobuf::Message {
 public:
  QuestCompleteData();
  virtual ~QuestCompleteData();

  QuestCompleteData(const QuestCompleteData& from);

  inline QuestCompleteData& operator=(const QuestCompleteData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestCompleteData& default_instance();

  void Swap(QuestCompleteData* other);

  // implements Message ----------------------------------------------

  QuestCompleteData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestCompleteData& from);
  void MergeFrom(const QuestCompleteData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool dirty = 1;
  inline bool has_dirty() const;
  inline void clear_dirty();
  static const int kDirtyFieldNumber = 1;
  inline bool dirty() const;
  inline void set_dirty(bool value);

  // repeated uint32 quest = 2 [packed = true];
  inline int quest_size() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 2;
  inline ::google::protobuf::uint32 quest(int index) const;
  inline void set_quest(int index, ::google::protobuf::uint32 value);
  inline void add_quest(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      quest() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_quest();

  // @@protoc_insertion_point(class_scope:QuestCompleteData)
 private:
  inline void set_has_dirty();
  inline void clear_has_dirty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > quest_;
  mutable int _quest_cached_byte_size_;
  bool dirty_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static QuestCompleteData* default_instance_;
};
// -------------------------------------------------------------------

class QuestPairData : public ::google::protobuf::Message {
 public:
  QuestPairData();
  virtual ~QuestPairData();

  QuestPairData(const QuestPairData& from);

  inline QuestPairData& operator=(const QuestPairData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestPairData& default_instance();

  void Swap(QuestPairData* other);

  // implements Message ----------------------------------------------

  QuestPairData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestPairData& from);
  void MergeFrom(const QuestPairData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool dirty = 1;
  inline bool has_dirty() const;
  inline void clear_dirty();
  static const int kDirtyFieldNumber = 1;
  inline bool dirty() const;
  inline void set_dirty(bool value);

  // repeated .II_PairData data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::II_PairData& data(int index) const;
  inline ::II_PairData* mutable_data(int index);
  inline ::II_PairData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::II_PairData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::II_PairData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:QuestPairData)
 private:
  inline void set_has_dirty();
  inline void clear_has_dirty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::II_PairData > data_;
  bool dirty_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static QuestPairData* default_instance_;
};
// -------------------------------------------------------------------

class QuestId : public ::google::protobuf::Message {
 public:
  QuestId();
  virtual ~QuestId();

  QuestId(const QuestId& from);

  inline QuestId& operator=(const QuestId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestId& default_instance();

  void Swap(QuestId* other);

  // implements Message ----------------------------------------------

  QuestId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestId& from);
  void MergeFrom(const QuestId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);

  // repeated uint32 subid = 2 [packed = true];
  inline int subid_size() const;
  inline void clear_subid();
  static const int kSubidFieldNumber = 2;
  inline ::google::protobuf::uint32 subid(int index) const;
  inline void set_subid(int index, ::google::protobuf::uint32 value);
  inline void add_subid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      subid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_subid();

  // @@protoc_insertion_point(class_scope:QuestId)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > subid_;
  mutable int _subid_cached_byte_size_;
  ::google::protobuf::uint32 questid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static QuestId* default_instance_;
};
// -------------------------------------------------------------------

class BinarySaveQuest : public ::google::protobuf::Message {
 public:
  BinarySaveQuest();
  virtual ~BinarySaveQuest();

  BinarySaveQuest(const BinarySaveQuest& from);

  inline BinarySaveQuest& operator=(const BinarySaveQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinarySaveQuest& default_instance();

  void Swap(BinarySaveQuest* other);

  // implements Message ----------------------------------------------

  BinarySaveQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinarySaveQuest& from);
  void MergeFrom(const BinarySaveQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DoingQuestData questsdata = 1;
  inline bool has_questsdata() const;
  inline void clear_questsdata();
  static const int kQuestsdataFieldNumber = 1;
  inline const ::DoingQuestData& questsdata() const;
  inline ::DoingQuestData* mutable_questsdata();
  inline ::DoingQuestData* release_questsdata();
  inline void set_allocated_questsdata(::DoingQuestData* questsdata);

  // optional .QuestCompleteData completedquests = 2;
  inline bool has_completedquests() const;
  inline void clear_completedquests();
  static const int kCompletedquestsFieldNumber = 2;
  inline const ::QuestCompleteData& completedquests() const;
  inline ::QuestCompleteData* mutable_completedquests();
  inline ::QuestCompleteData* release_completedquests();
  inline void set_allocated_completedquests(::QuestCompleteData* completedquests);

  // optional .QuestPairData globleQuestVars = 3;
  inline bool has_globlequestvars() const;
  inline void clear_globlequestvars();
  static const int kGlobleQuestVarsFieldNumber = 3;
  inline const ::QuestPairData& globlequestvars() const;
  inline ::QuestPairData* mutable_globlequestvars();
  inline ::QuestPairData* release_globlequestvars();
  inline void set_allocated_globlequestvars(::QuestPairData* globlequestvars);

  // optional .QuestPairData dailyQuestsCompleted = 4;
  inline bool has_dailyquestscompleted() const;
  inline void clear_dailyquestscompleted();
  static const int kDailyQuestsCompletedFieldNumber = 4;
  inline const ::QuestPairData& dailyquestscompleted() const;
  inline ::QuestPairData* mutable_dailyquestscompleted();
  inline ::QuestPairData* release_dailyquestscompleted();
  inline void set_allocated_dailyquestscompleted(::QuestPairData* dailyquestscompleted);

  // optional .QuestPairData cycleQuestsCompleted = 5;
  inline bool has_cyclequestscompleted() const;
  inline void clear_cyclequestscompleted();
  static const int kCycleQuestsCompletedFieldNumber = 5;
  inline const ::QuestPairData& cyclequestscompleted() const;
  inline ::QuestPairData* mutable_cyclequestscompleted();
  inline ::QuestPairData* release_cyclequestscompleted();
  inline void set_allocated_cyclequestscompleted(::QuestPairData* cyclequestscompleted);

  // repeated .QuestId cancelquestid = 6;
  inline int cancelquestid_size() const;
  inline void clear_cancelquestid();
  static const int kCancelquestidFieldNumber = 6;
  inline const ::QuestId& cancelquestid(int index) const;
  inline ::QuestId* mutable_cancelquestid(int index);
  inline ::QuestId* add_cancelquestid();
  inline const ::google::protobuf::RepeatedPtrField< ::QuestId >&
      cancelquestid() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuestId >*
      mutable_cancelquestid();

  // @@protoc_insertion_point(class_scope:BinarySaveQuest)
 private:
  inline void set_has_questsdata();
  inline void clear_has_questsdata();
  inline void set_has_completedquests();
  inline void clear_has_completedquests();
  inline void set_has_globlequestvars();
  inline void clear_has_globlequestvars();
  inline void set_has_dailyquestscompleted();
  inline void clear_has_dailyquestscompleted();
  inline void set_has_cyclequestscompleted();
  inline void clear_has_cyclequestscompleted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DoingQuestData* questsdata_;
  ::QuestCompleteData* completedquests_;
  ::QuestPairData* globlequestvars_;
  ::QuestPairData* dailyquestscompleted_;
  ::QuestPairData* cyclequestscompleted_;
  ::google::protobuf::RepeatedPtrField< ::QuestId > cancelquestid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BinarySaveQuest* default_instance_;
};
// -------------------------------------------------------------------

class ChangeEquipAccType : public ::google::protobuf::Message {
 public:
  ChangeEquipAccType();
  virtual ~ChangeEquipAccType();

  ChangeEquipAccType(const ChangeEquipAccType& from);

  inline ChangeEquipAccType& operator=(const ChangeEquipAccType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeEquipAccType& default_instance();

  void Swap(ChangeEquipAccType* other);

  // implements Message ----------------------------------------------

  ChangeEquipAccType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeEquipAccType& from);
  void MergeFrom(const ChangeEquipAccType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ChangeEquipAccType)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ChangeEquipAccType* default_instance_;
};
// -------------------------------------------------------------------

class ChangeEquip_stCE : public ::google::protobuf::Message {
 public:
  ChangeEquip_stCE();
  virtual ~ChangeEquip_stCE();

  ChangeEquip_stCE(const ChangeEquip_stCE& from);

  inline ChangeEquip_stCE& operator=(const ChangeEquip_stCE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeEquip_stCE& default_instance();

  void Swap(ChangeEquip_stCE* other);

  // implements Message ----------------------------------------------

  ChangeEquip_stCE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeEquip_stCE& from);
  void MergeFrom(const ChangeEquip_stCE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ChangeEquip.stCE)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ChangeEquip_stCE* default_instance_;
};
// -------------------------------------------------------------------

class ChangeEquip : public ::google::protobuf::Message {
 public:
  ChangeEquip();
  virtual ~ChangeEquip();

  ChangeEquip(const ChangeEquip& from);

  inline ChangeEquip& operator=(const ChangeEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeEquip& default_instance();

  void Swap(ChangeEquip* other);

  // implements Message ----------------------------------------------

  ChangeEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeEquip& from);
  void MergeFrom(const ChangeEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ChangeEquip_stCE stCE;

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // repeated .ChangeEquip.stCE changeEquips = 2;
  inline int changeequips_size() const;
  inline void clear_changeequips();
  static const int kChangeEquipsFieldNumber = 2;
  inline const ::ChangeEquip_stCE& changeequips(int index) const;
  inline ::ChangeEquip_stCE* mutable_changeequips(int index);
  inline ::ChangeEquip_stCE* add_changeequips();
  inline const ::google::protobuf::RepeatedPtrField< ::ChangeEquip_stCE >&
      changeequips() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChangeEquip_stCE >*
      mutable_changeequips();

  // repeated .ChangeEquipAccType changeEquipAccs = 3;
  inline int changeequipaccs_size() const;
  inline void clear_changeequipaccs();
  static const int kChangeEquipAccsFieldNumber = 3;
  inline const ::ChangeEquipAccType& changeequipaccs(int index) const;
  inline ::ChangeEquipAccType* mutable_changeequipaccs(int index);
  inline ::ChangeEquipAccType* add_changeequipaccs();
  inline const ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType >&
      changeequipaccs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType >*
      mutable_changeequipaccs();

  // @@protoc_insertion_point(class_scope:ChangeEquip)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ChangeEquip_stCE > changeequips_;
  ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType > changeequipaccs_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ChangeEquip* default_instance_;
};
// -------------------------------------------------------------------

class stChangeEquip : public ::google::protobuf::Message {
 public:
  stChangeEquip();
  virtual ~stChangeEquip();

  stChangeEquip(const stChangeEquip& from);

  inline stChangeEquip& operator=(const stChangeEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stChangeEquip& default_instance();

  void Swap(stChangeEquip* other);

  // implements Message ----------------------------------------------

  stChangeEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stChangeEquip& from);
  void MergeFrom(const stChangeEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // repeated uint32 equipID = 2 [packed = true];
  inline int equipid_size() const;
  inline void clear_equipid();
  static const int kEquipIDFieldNumber = 2;
  inline ::google::protobuf::uint32 equipid(int index) const;
  inline void set_equipid(int index, ::google::protobuf::uint32 value);
  inline void add_equipid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equipid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equipid();

  // repeated .ChangeEquipAccType accKeyID = 3;
  inline int acckeyid_size() const;
  inline void clear_acckeyid();
  static const int kAccKeyIDFieldNumber = 3;
  inline const ::ChangeEquipAccType& acckeyid(int index) const;
  inline ::ChangeEquipAccType* mutable_acckeyid(int index);
  inline ::ChangeEquipAccType* add_acckeyid();
  inline const ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType >&
      acckeyid() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType >*
      mutable_acckeyid();

  // @@protoc_insertion_point(class_scope:stChangeEquip)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equipid_;
  mutable int _equipid_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType > acckeyid_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stChangeEquip* default_instance_;
};
// -------------------------------------------------------------------

class TalismanStar_Prop : public ::google::protobuf::Message {
 public:
  TalismanStar_Prop();
  virtual ~TalismanStar_Prop();

  TalismanStar_Prop(const TalismanStar_Prop& from);

  inline TalismanStar_Prop& operator=(const TalismanStar_Prop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalismanStar_Prop& default_instance();

  void Swap(TalismanStar_Prop* other);

  // implements Message ----------------------------------------------

  TalismanStar_Prop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalismanStar_Prop& from);
  void MergeFrom(const TalismanStar_Prop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TalismanStar.Prop)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 star_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TalismanStar_Prop* default_instance_;
};
// -------------------------------------------------------------------

class TalismanStar : public ::google::protobuf::Message {
 public:
  TalismanStar();
  virtual ~TalismanStar();

  TalismanStar(const TalismanStar& from);

  inline TalismanStar& operator=(const TalismanStar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalismanStar& default_instance();

  void Swap(TalismanStar* other);

  // implements Message ----------------------------------------------

  TalismanStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalismanStar& from);
  void MergeFrom(const TalismanStar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TalismanStar_Prop Prop;

  // accessors -------------------------------------------------------

  // repeated .TalismanStar.Prop prop = 1;
  inline int prop_size() const;
  inline void clear_prop();
  static const int kPropFieldNumber = 1;
  inline const ::TalismanStar_Prop& prop(int index) const;
  inline ::TalismanStar_Prop* mutable_prop(int index);
  inline ::TalismanStar_Prop* add_prop();
  inline const ::google::protobuf::RepeatedPtrField< ::TalismanStar_Prop >&
      prop() const;
  inline ::google::protobuf::RepeatedPtrField< ::TalismanStar_Prop >*
      mutable_prop();

  // optional uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TalismanStar)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TalismanStar_Prop > prop_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TalismanStar* default_instance_;
};
// -------------------------------------------------------------------

class TalismanData_Skill : public ::google::protobuf::Message {
 public:
  TalismanData_Skill();
  virtual ~TalismanData_Skill();

  TalismanData_Skill(const TalismanData_Skill& from);

  inline TalismanData_Skill& operator=(const TalismanData_Skill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalismanData_Skill& default_instance();

  void Swap(TalismanData_Skill* other);

  // implements Message ----------------------------------------------

  TalismanData_Skill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalismanData_Skill& from);
  void MergeFrom(const TalismanData_Skill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TalismanData.Skill)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TalismanData_Skill* default_instance_;
};
// -------------------------------------------------------------------

class TalismanData : public ::google::protobuf::Message {
 public:
  TalismanData();
  virtual ~TalismanData();

  TalismanData(const TalismanData& from);

  inline TalismanData& operator=(const TalismanData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalismanData& default_instance();

  void Swap(TalismanData* other);

  // implements Message ----------------------------------------------

  TalismanData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalismanData& from);
  void MergeFrom(const TalismanData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TalismanData_Skill Skill;

  // accessors -------------------------------------------------------

  // optional bool borne = 1;
  inline bool has_borne() const;
  inline void clear_borne();
  static const int kBorneFieldNumber = 1;
  inline bool borne() const;
  inline void set_borne(bool value);

  // optional uint64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 hp = 4;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 4;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 mp = 5;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 5;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // optional uint32 attack = 6;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 6;
  inline ::google::protobuf::uint32 attack() const;
  inline void set_attack(::google::protobuf::uint32 value);

  // optional uint32 defence = 7;
  inline bool has_defence() const;
  inline void clear_defence();
  static const int kDefenceFieldNumber = 7;
  inline ::google::protobuf::uint32 defence() const;
  inline void set_defence(::google::protobuf::uint32 value);

  // repeated .TalismanData.Skill skill = 9;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 9;
  inline const ::TalismanData_Skill& skill(int index) const;
  inline ::TalismanData_Skill* mutable_skill(int index);
  inline ::TalismanData_Skill* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::TalismanData_Skill >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::TalismanData_Skill >*
      mutable_skill();

  // optional uint32 star = 10;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 10;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional .TalismanStar starprop = 11;
  inline bool has_starprop() const;
  inline void clear_starprop();
  static const int kStarpropFieldNumber = 11;
  inline const ::TalismanStar& starprop() const;
  inline ::TalismanStar* mutable_starprop();
  inline ::TalismanStar* release_starprop();
  inline void set_allocated_starprop(::TalismanStar* starprop);

  // optional uint32 freshnum = 12;
  inline bool has_freshnum() const;
  inline void clear_freshnum();
  static const int kFreshnumFieldNumber = 12;
  inline ::google::protobuf::uint32 freshnum() const;
  inline void set_freshnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TalismanData)
 private:
  inline void set_has_borne();
  inline void clear_has_borne();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_attack();
  inline void clear_has_attack();
  inline void set_has_defence();
  inline void clear_has_defence();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_starprop();
  inline void clear_has_starprop();
  inline void set_has_freshnum();
  inline void clear_has_freshnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 exp_;
  bool borne_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 attack_;
  ::google::protobuf::uint32 defence_;
  ::google::protobuf::RepeatedPtrField< ::TalismanData_Skill > skill_;
  ::TalismanStar* starprop_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 freshnum_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TalismanData* default_instance_;
};
// -------------------------------------------------------------------

class ScenePetAutoFun : public ::google::protobuf::Message {
 public:
  ScenePetAutoFun();
  virtual ~ScenePetAutoFun();

  ScenePetAutoFun(const ScenePetAutoFun& from);

  inline ScenePetAutoFun& operator=(const ScenePetAutoFun& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePetAutoFun& default_instance();

  void Swap(ScenePetAutoFun* other);

  // implements Message ----------------------------------------------

  ScenePetAutoFun* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScenePetAutoFun& from);
  void MergeFrom(const ScenePetAutoFun& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool canAutoPickup = 1;
  inline bool has_canautopickup() const;
  inline void clear_canautopickup();
  static const int kCanAutoPickupFieldNumber = 1;
  inline bool canautopickup() const;
  inline void set_canautopickup(bool value);

  // optional bool canAutoAddHpMp = 2;
  inline bool has_canautoaddhpmp() const;
  inline void clear_canautoaddhpmp();
  static const int kCanAutoAddHpMpFieldNumber = 2;
  inline bool canautoaddhpmp() const;
  inline void set_canautoaddhpmp(bool value);

  // optional uint32 lessHpPer = 3;
  inline bool has_lesshpper() const;
  inline void clear_lesshpper();
  static const int kLessHpPerFieldNumber = 3;
  inline ::google::protobuf::uint32 lesshpper() const;
  inline void set_lesshpper(::google::protobuf::uint32 value);

  // optional uint32 useHpObj = 4;
  inline bool has_usehpobj() const;
  inline void clear_usehpobj();
  static const int kUseHpObjFieldNumber = 4;
  inline ::google::protobuf::uint32 usehpobj() const;
  inline void set_usehpobj(::google::protobuf::uint32 value);

  // optional uint32 lessMpPer = 5;
  inline bool has_lessmpper() const;
  inline void clear_lessmpper();
  static const int kLessMpPerFieldNumber = 5;
  inline ::google::protobuf::uint32 lessmpper() const;
  inline void set_lessmpper(::google::protobuf::uint32 value);

  // optional uint32 useMpObj = 6;
  inline bool has_usempobj() const;
  inline void clear_usempobj();
  static const int kUseMpObjFieldNumber = 6;
  inline ::google::protobuf::uint32 usempobj() const;
  inline void set_usempobj(::google::protobuf::uint32 value);

  // optional uint32 usePetHpObj = 7;
  inline bool has_usepethpobj() const;
  inline void clear_usepethpobj();
  static const int kUsePetHpObjFieldNumber = 7;
  inline ::google::protobuf::uint32 usepethpobj() const;
  inline void set_usepethpobj(::google::protobuf::uint32 value);

  // optional uint32 lessPetHpPer = 8;
  inline bool has_lesspethpper() const;
  inline void clear_lesspethpper();
  static const int kLessPetHpPerFieldNumber = 8;
  inline ::google::protobuf::uint32 lesspethpper() const;
  inline void set_lesspethpper(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ScenePetAutoFun)
 private:
  inline void set_has_canautopickup();
  inline void clear_has_canautopickup();
  inline void set_has_canautoaddhpmp();
  inline void clear_has_canautoaddhpmp();
  inline void set_has_lesshpper();
  inline void clear_has_lesshpper();
  inline void set_has_usehpobj();
  inline void clear_has_usehpobj();
  inline void set_has_lessmpper();
  inline void clear_has_lessmpper();
  inline void set_has_usempobj();
  inline void clear_has_usempobj();
  inline void set_has_usepethpobj();
  inline void clear_has_usepethpobj();
  inline void set_has_lesspethpper();
  inline void clear_has_lesspethpper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool canautopickup_;
  bool canautoaddhpmp_;
  ::google::protobuf::uint32 lesshpper_;
  ::google::protobuf::uint32 usehpobj_;
  ::google::protobuf::uint32 lessmpper_;
  ::google::protobuf::uint32 usempobj_;
  ::google::protobuf::uint32 usepethpobj_;
  ::google::protobuf::uint32 lesspethpper_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ScenePetAutoFun* default_instance_;
};
// -------------------------------------------------------------------

class ScenePetSkillData : public ::google::protobuf::Message {
 public:
  ScenePetSkillData();
  virtual ~ScenePetSkillData();

  ScenePetSkillData(const ScenePetSkillData& from);

  inline ScenePetSkillData& operator=(const ScenePetSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePetSkillData& default_instance();

  void Swap(ScenePetSkillData* other);

  // implements Message ----------------------------------------------

  ScenePetSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScenePetSkillData& from);
  void MergeFrom(const ScenePetSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 petskillid = 1;
  inline bool has_petskillid() const;
  inline void clear_petskillid();
  static const int kPetskillidFieldNumber = 1;
  inline ::google::protobuf::uint32 petskillid() const;
  inline void set_petskillid(::google::protobuf::uint32 value);

  // optional uint32 skillid = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 2;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 skilllevel = 3;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkilllevelFieldNumber = 3;
  inline ::google::protobuf::uint32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::uint32 value);

  // optional uint32 usertype = 4;
  inline bool has_usertype() const;
  inline void clear_usertype();
  static const int kUsertypeFieldNumber = 4;
  inline ::google::protobuf::uint32 usertype() const;
  inline void set_usertype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ScenePetSkillData)
 private:
  inline void set_has_petskillid();
  inline void clear_has_petskillid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilllevel();
  inline void clear_has_skilllevel();
  inline void set_has_usertype();
  inline void clear_has_usertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 petskillid_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 skilllevel_;
  ::google::protobuf::uint32 usertype_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ScenePetSkillData* default_instance_;
};
// -------------------------------------------------------------------

class ScenePetDoSkill : public ::google::protobuf::Message {
 public:
  ScenePetDoSkill();
  virtual ~ScenePetDoSkill();

  ScenePetDoSkill(const ScenePetDoSkill& from);

  inline ScenePetDoSkill& operator=(const ScenePetDoSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePetDoSkill& default_instance();

  void Swap(ScenePetDoSkill* other);

  // implements Message ----------------------------------------------

  ScenePetDoSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScenePetDoSkill& from);
  void MergeFrom(const ScenePetDoSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 useRate = 1;
  inline bool has_userate() const;
  inline void clear_userate();
  static const int kUseRateFieldNumber = 1;
  inline ::google::protobuf::uint32 userate() const;
  inline void set_userate(::google::protobuf::uint32 value);

  // optional uint32 target = 2;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 2;
  inline ::google::protobuf::uint32 target() const;
  inline void set_target(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ScenePetDoSkill)
 private:
  inline void set_has_userate();
  inline void clear_has_userate();
  inline void set_has_target();
  inline void clear_has_target();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 userate_;
  ::google::protobuf::uint32 target_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ScenePetDoSkill* default_instance_;
};
// -------------------------------------------------------------------

class ScenePetData : public ::google::protobuf::Message {
 public:
  ScenePetData();
  virtual ~ScenePetData();

  ScenePetData(const ScenePetData& from);

  inline ScenePetData& operator=(const ScenePetData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePetData& default_instance();

  void Swap(ScenePetData* other);

  // implements Message ----------------------------------------------

  ScenePetData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScenePetData& from);
  void MergeFrom(const ScenePetData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 baseId = 1;
  inline bool has_baseid() const;
  inline void clear_baseid();
  static const int kBaseIdFieldNumber = 1;
  inline ::google::protobuf::uint32 baseid() const;
  inline void set_baseid(::google::protobuf::uint32 value);

  // optional uint32 masterId = 2;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIdFieldNumber = 2;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);

  // optional uint32 resId = 3;
  inline bool has_resid() const;
  inline void clear_resid();
  static const int kResIdFieldNumber = 3;
  inline ::google::protobuf::uint32 resid() const;
  inline void set_resid(::google::protobuf::uint32 value);

  // optional uint32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 useLevel = 7;
  inline bool has_uselevel() const;
  inline void clear_uselevel();
  static const int kUseLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 uselevel() const;
  inline void set_uselevel(::google::protobuf::uint32 value);

  // optional bool petbind = 8;
  inline bool has_petbind() const;
  inline void clear_petbind();
  static const int kPetbindFieldNumber = 8;
  inline bool petbind() const;
  inline void set_petbind(bool value);

  // optional uint32 enhanceLevel = 9;
  inline bool has_enhancelevel() const;
  inline void clear_enhancelevel();
  static const int kEnhanceLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 enhancelevel() const;
  inline void set_enhancelevel(::google::protobuf::uint32 value);

  // optional uint32 sex = 11;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 11;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional uint32 mettle = 12;
  inline bool has_mettle() const;
  inline void clear_mettle();
  static const int kMettleFieldNumber = 12;
  inline ::google::protobuf::uint32 mettle() const;
  inline void set_mettle(::google::protobuf::uint32 value);

  // optional uint64 exp = 13;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 13;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint32 hp = 14;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 14;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 maxhp = 15;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 15;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // optional uint32 life = 16;
  inline bool has_life() const;
  inline void clear_life();
  static const int kLifeFieldNumber = 16;
  inline ::google::protobuf::uint32 life() const;
  inline void set_life(::google::protobuf::uint32 value);

  // optional uint32 happy = 17;
  inline bool has_happy() const;
  inline void clear_happy();
  static const int kHappyFieldNumber = 17;
  inline ::google::protobuf::uint32 happy() const;
  inline void set_happy(::google::protobuf::uint32 value);

  // optional uint32 strength = 18;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 18;
  inline ::google::protobuf::uint32 strength() const;
  inline void set_strength(::google::protobuf::uint32 value);

  // optional uint32 dexterity = 19;
  inline bool has_dexterity() const;
  inline void clear_dexterity();
  static const int kDexterityFieldNumber = 19;
  inline ::google::protobuf::uint32 dexterity() const;
  inline void set_dexterity(::google::protobuf::uint32 value);

  // optional uint32 mentality = 20;
  inline bool has_mentality() const;
  inline void clear_mentality();
  static const int kMentalityFieldNumber = 20;
  inline ::google::protobuf::uint32 mentality() const;
  inline void set_mentality(::google::protobuf::uint32 value);

  // optional uint32 constitution = 21;
  inline bool has_constitution() const;
  inline void clear_constitution();
  static const int kConstitutionFieldNumber = 21;
  inline ::google::protobuf::uint32 constitution() const;
  inline void set_constitution(::google::protobuf::uint32 value);

  // optional uint32 growupLevel = 22;
  inline bool has_growuplevel() const;
  inline void clear_growuplevel();
  static const int kGrowupLevelFieldNumber = 22;
  inline ::google::protobuf::uint32 growuplevel() const;
  inline void set_growuplevel(::google::protobuf::uint32 value);

  // optional uint32 streAptitude = 23;
  inline bool has_streaptitude() const;
  inline void clear_streaptitude();
  static const int kStreAptitudeFieldNumber = 23;
  inline ::google::protobuf::uint32 streaptitude() const;
  inline void set_streaptitude(::google::protobuf::uint32 value);

  // optional uint32 dextAptitude = 24;
  inline bool has_dextaptitude() const;
  inline void clear_dextaptitude();
  static const int kDextAptitudeFieldNumber = 24;
  inline ::google::protobuf::uint32 dextaptitude() const;
  inline void set_dextaptitude(::google::protobuf::uint32 value);

  // optional uint32 mentAptitude = 25;
  inline bool has_mentaptitude() const;
  inline void clear_mentaptitude();
  static const int kMentAptitudeFieldNumber = 25;
  inline ::google::protobuf::uint32 mentaptitude() const;
  inline void set_mentaptitude(::google::protobuf::uint32 value);

  // optional uint32 consAptitude = 26;
  inline bool has_consaptitude() const;
  inline void clear_consaptitude();
  static const int kConsAptitudeFieldNumber = 26;
  inline ::google::protobuf::uint32 consaptitude() const;
  inline void set_consaptitude(::google::protobuf::uint32 value);

  // optional uint32 pmaxAttack = 27;
  inline bool has_pmaxattack() const;
  inline void clear_pmaxattack();
  static const int kPmaxAttackFieldNumber = 27;
  inline ::google::protobuf::uint32 pmaxattack() const;
  inline void set_pmaxattack(::google::protobuf::uint32 value);

  // optional uint32 mmaxAttack = 28;
  inline bool has_mmaxattack() const;
  inline void clear_mmaxattack();
  static const int kMmaxAttackFieldNumber = 28;
  inline ::google::protobuf::uint32 mmaxattack() const;
  inline void set_mmaxattack(::google::protobuf::uint32 value);

  // optional uint32 pminAttack = 29;
  inline bool has_pminattack() const;
  inline void clear_pminattack();
  static const int kPminAttackFieldNumber = 29;
  inline ::google::protobuf::uint32 pminattack() const;
  inline void set_pminattack(::google::protobuf::uint32 value);

  // optional uint32 mminAttack = 30;
  inline bool has_mminattack() const;
  inline void clear_mminattack();
  static const int kMminAttackFieldNumber = 30;
  inline ::google::protobuf::uint32 mminattack() const;
  inline void set_mminattack(::google::protobuf::uint32 value);

  // optional uint32 pDefence = 31;
  inline bool has_pdefence() const;
  inline void clear_pdefence();
  static const int kPDefenceFieldNumber = 31;
  inline ::google::protobuf::uint32 pdefence() const;
  inline void set_pdefence(::google::protobuf::uint32 value);

  // optional uint32 mDefence = 32;
  inline bool has_mdefence() const;
  inline void clear_mdefence();
  static const int kMDefenceFieldNumber = 32;
  inline ::google::protobuf::uint32 mdefence() const;
  inline void set_mdefence(::google::protobuf::uint32 value);

  // optional uint32 heavyRate = 33;
  inline bool has_heavyrate() const;
  inline void clear_heavyrate();
  static const int kHeavyRateFieldNumber = 33;
  inline ::google::protobuf::uint32 heavyrate() const;
  inline void set_heavyrate(::google::protobuf::uint32 value);

  // optional uint32 luckyRate = 34;
  inline bool has_luckyrate() const;
  inline void clear_luckyrate();
  static const int kLuckyRateFieldNumber = 34;
  inline ::google::protobuf::uint32 luckyrate() const;
  inline void set_luckyrate(::google::protobuf::uint32 value);

  // optional uint32 attackSpeedLevel = 35;
  inline bool has_attackspeedlevel() const;
  inline void clear_attackspeedlevel();
  static const int kAttackSpeedLevelFieldNumber = 35;
  inline ::google::protobuf::uint32 attackspeedlevel() const;
  inline void set_attackspeedlevel(::google::protobuf::uint32 value);

  // optional uint32 moveSpeedLevel = 36;
  inline bool has_movespeedlevel() const;
  inline void clear_movespeedlevel();
  static const int kMoveSpeedLevelFieldNumber = 36;
  inline ::google::protobuf::uint32 movespeedlevel() const;
  inline void set_movespeedlevel(::google::protobuf::uint32 value);

  // optional uint64 memory_exp = 37;
  inline bool has_memory_exp() const;
  inline void clear_memory_exp();
  static const int kMemoryExpFieldNumber = 37;
  inline ::google::protobuf::uint64 memory_exp() const;
  inline void set_memory_exp(::google::protobuf::uint64 value);

  // optional uint32 equipGrid = 40;
  inline bool has_equipgrid() const;
  inline void clear_equipgrid();
  static const int kEquipGridFieldNumber = 40;
  inline ::google::protobuf::uint32 equipgrid() const;
  inline void set_equipgrid(::google::protobuf::uint32 value);

  // optional uint32 activeSkillGrid = 41;
  inline bool has_activeskillgrid() const;
  inline void clear_activeskillgrid();
  static const int kActiveSkillGridFieldNumber = 41;
  inline ::google::protobuf::uint32 activeskillgrid() const;
  inline void set_activeskillgrid(::google::protobuf::uint32 value);

  // repeated .ScenePetSkillData skill = 43;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 43;
  inline const ::ScenePetSkillData& skill(int index) const;
  inline ::ScenePetSkillData* mutable_skill(int index);
  inline ::ScenePetSkillData* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData >*
      mutable_skill();

  // repeated .ScenePetSkillData activeskill = 44;
  inline int activeskill_size() const;
  inline void clear_activeskill();
  static const int kActiveskillFieldNumber = 44;
  inline const ::ScenePetSkillData& activeskill(int index) const;
  inline ::ScenePetSkillData* mutable_activeskill(int index);
  inline ::ScenePetSkillData* add_activeskill();
  inline const ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData >&
      activeskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData >*
      mutable_activeskill();

  // repeated uint32 equipItems = 45;
  inline int equipitems_size() const;
  inline void clear_equipitems();
  static const int kEquipItemsFieldNumber = 45;
  inline ::google::protobuf::uint32 equipitems(int index) const;
  inline void set_equipitems(int index, ::google::protobuf::uint32 value);
  inline void add_equipitems(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equipitems() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equipitems();

  // optional uint32 killEnemyCount = 46;
  inline bool has_killenemycount() const;
  inline void clear_killenemycount();
  static const int kKillEnemyCountFieldNumber = 46;
  inline ::google::protobuf::uint32 killenemycount() const;
  inline void set_killenemycount(::google::protobuf::uint32 value);

  // repeated uint32 sign = 60 [packed = true];
  inline int sign_size() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 60;
  inline ::google::protobuf::uint32 sign(int index) const;
  inline void set_sign(int index, ::google::protobuf::uint32 value);
  inline void add_sign(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sign() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sign();

  // optional uint32 kind = 71;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 71;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // optional uint32 growup = 72;
  inline bool has_growup() const;
  inline void clear_growup();
  static const int kGrowupFieldNumber = 72;
  inline ::google::protobuf::uint32 growup() const;
  inline void set_growup(::google::protobuf::uint32 value);

  // optional uint32 freePoint = 73;
  inline bool has_freepoint() const;
  inline void clear_freepoint();
  static const int kFreePointFieldNumber = 73;
  inline ::google::protobuf::uint32 freepoint() const;
  inline void set_freepoint(::google::protobuf::uint32 value);

  // optional uint32 aptitudeLevel = 74;
  inline bool has_aptitudelevel() const;
  inline void clear_aptitudelevel();
  static const int kAptitudeLevelFieldNumber = 74;
  inline ::google::protobuf::uint32 aptitudelevel() const;
  inline void set_aptitudelevel(::google::protobuf::uint32 value);

  // optional uint32 activeskill_cooltime = 75;
  inline bool has_activeskill_cooltime() const;
  inline void clear_activeskill_cooltime();
  static const int kActiveskillCooltimeFieldNumber = 75;
  inline ::google::protobuf::uint32 activeskill_cooltime() const;
  inline void set_activeskill_cooltime(::google::protobuf::uint32 value);

  // optional bool indentify_growup = 76 [default = false];
  inline bool has_indentify_growup() const;
  inline void clear_indentify_growup();
  static const int kIndentifyGrowupFieldNumber = 76;
  inline bool indentify_growup() const;
  inline void set_indentify_growup(bool value);

  // optional uint32 lingqi = 77;
  inline bool has_lingqi() const;
  inline void clear_lingqi();
  static const int kLingqiFieldNumber = 77;
  inline ::google::protobuf::uint32 lingqi() const;
  inline void set_lingqi(::google::protobuf::uint32 value);

  // optional uint32 lingqiattr = 78;
  inline bool has_lingqiattr() const;
  inline void clear_lingqiattr();
  static const int kLingqiattrFieldNumber = 78;
  inline ::google::protobuf::uint32 lingqiattr() const;
  inline void set_lingqiattr(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ScenePetData)
 private:
  inline void set_has_baseid();
  inline void clear_has_baseid();
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_resid();
  inline void clear_has_resid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_uselevel();
  inline void clear_has_uselevel();
  inline void set_has_petbind();
  inline void clear_has_petbind();
  inline void set_has_enhancelevel();
  inline void clear_has_enhancelevel();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_mettle();
  inline void clear_has_mettle();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_life();
  inline void clear_has_life();
  inline void set_has_happy();
  inline void clear_has_happy();
  inline void set_has_strength();
  inline void clear_has_strength();
  inline void set_has_dexterity();
  inline void clear_has_dexterity();
  inline void set_has_mentality();
  inline void clear_has_mentality();
  inline void set_has_constitution();
  inline void clear_has_constitution();
  inline void set_has_growuplevel();
  inline void clear_has_growuplevel();
  inline void set_has_streaptitude();
  inline void clear_has_streaptitude();
  inline void set_has_dextaptitude();
  inline void clear_has_dextaptitude();
  inline void set_has_mentaptitude();
  inline void clear_has_mentaptitude();
  inline void set_has_consaptitude();
  inline void clear_has_consaptitude();
  inline void set_has_pmaxattack();
  inline void clear_has_pmaxattack();
  inline void set_has_mmaxattack();
  inline void clear_has_mmaxattack();
  inline void set_has_pminattack();
  inline void clear_has_pminattack();
  inline void set_has_mminattack();
  inline void clear_has_mminattack();
  inline void set_has_pdefence();
  inline void clear_has_pdefence();
  inline void set_has_mdefence();
  inline void clear_has_mdefence();
  inline void set_has_heavyrate();
  inline void clear_has_heavyrate();
  inline void set_has_luckyrate();
  inline void clear_has_luckyrate();
  inline void set_has_attackspeedlevel();
  inline void clear_has_attackspeedlevel();
  inline void set_has_movespeedlevel();
  inline void clear_has_movespeedlevel();
  inline void set_has_memory_exp();
  inline void clear_has_memory_exp();
  inline void set_has_equipgrid();
  inline void clear_has_equipgrid();
  inline void set_has_activeskillgrid();
  inline void clear_has_activeskillgrid();
  inline void set_has_killenemycount();
  inline void clear_has_killenemycount();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_growup();
  inline void clear_has_growup();
  inline void set_has_freepoint();
  inline void clear_has_freepoint();
  inline void set_has_aptitudelevel();
  inline void clear_has_aptitudelevel();
  inline void set_has_activeskill_cooltime();
  inline void clear_has_activeskill_cooltime();
  inline void set_has_indentify_growup();
  inline void clear_has_indentify_growup();
  inline void set_has_lingqi();
  inline void clear_has_lingqi();
  inline void set_has_lingqiattr();
  inline void clear_has_lingqiattr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint32 baseid_;
  ::google::protobuf::uint32 masterid_;
  ::google::protobuf::uint32 resid_;
  ::google::protobuf::uint32 index_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 uselevel_;
  ::google::protobuf::uint32 enhancelevel_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 mettle_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 maxhp_;
  ::google::protobuf::uint32 life_;
  ::google::protobuf::uint32 happy_;
  ::google::protobuf::uint32 strength_;
  ::google::protobuf::uint32 dexterity_;
  ::google::protobuf::uint32 mentality_;
  ::google::protobuf::uint32 constitution_;
  ::google::protobuf::uint32 growuplevel_;
  ::google::protobuf::uint32 streaptitude_;
  ::google::protobuf::uint32 dextaptitude_;
  ::google::protobuf::uint32 mentaptitude_;
  ::google::protobuf::uint32 consaptitude_;
  ::google::protobuf::uint32 pmaxattack_;
  ::google::protobuf::uint32 mmaxattack_;
  ::google::protobuf::uint32 pminattack_;
  bool petbind_;
  bool indentify_growup_;
  ::google::protobuf::uint32 mminattack_;
  ::google::protobuf::uint32 pdefence_;
  ::google::protobuf::uint32 mdefence_;
  ::google::protobuf::uint32 heavyrate_;
  ::google::protobuf::uint32 luckyrate_;
  ::google::protobuf::uint32 attackspeedlevel_;
  ::google::protobuf::uint64 memory_exp_;
  ::google::protobuf::uint32 movespeedlevel_;
  ::google::protobuf::uint32 equipgrid_;
  ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData > skill_;
  ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData > activeskill_;
  ::google::protobuf::uint32 activeskillgrid_;
  ::google::protobuf::uint32 killenemycount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equipitems_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sign_;
  mutable int _sign_cached_byte_size_;
  ::google::protobuf::uint32 kind_;
  ::google::protobuf::uint32 growup_;
  ::google::protobuf::uint32 freepoint_;
  ::google::protobuf::uint32 aptitudelevel_;
  ::google::protobuf::uint32 activeskill_cooltime_;
  ::google::protobuf::uint32 lingqi_;
  ::google::protobuf::uint32 lingqiattr_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ScenePetData* default_instance_;
};
// -------------------------------------------------------------------

class ScenePetServerData : public ::google::protobuf::Message {
 public:
  ScenePetServerData();
  virtual ~ScenePetServerData();

  ScenePetServerData(const ScenePetServerData& from);

  inline ScenePetServerData& operator=(const ScenePetServerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePetServerData& default_instance();

  void Swap(ScenePetServerData* other);

  // implements Message ----------------------------------------------

  ScenePetServerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScenePetServerData& from);
  void MergeFrom(const ScenePetServerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ScenePetData common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::ScenePetData& common() const;
  inline ::ScenePetData* mutable_common();
  inline ::ScenePetData* release_common();
  inline void set_allocated_common(::ScenePetData* common);

  // optional uint32 tmpId = 2;
  inline bool has_tmpid() const;
  inline void clear_tmpid();
  static const int kTmpIdFieldNumber = 2;
  inline ::google::protobuf::uint32 tmpid() const;
  inline void set_tmpid(::google::protobuf::uint32 value);

  // optional string firstName = 3;
  inline bool has_firstname() const;
  inline void clear_firstname();
  static const int kFirstNameFieldNumber = 3;
  inline const ::std::string& firstname() const;
  inline void set_firstname(const ::std::string& value);
  inline void set_firstname(const char* value);
  inline void set_firstname(const char* value, size_t size);
  inline ::std::string* mutable_firstname();
  inline ::std::string* release_firstname();
  inline void set_allocated_firstname(::std::string* firstname);

  // optional uint32 x = 4;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 4;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 maxlife = 6;
  inline bool has_maxlife() const;
  inline void clear_maxlife();
  static const int kMaxlifeFieldNumber = 6;
  inline ::google::protobuf::uint32 maxlife() const;
  inline void set_maxlife(::google::protobuf::uint32 value);

  // optional uint32 skillMax = 14;
  inline bool has_skillmax() const;
  inline void clear_skillmax();
  static const int kSkillMaxFieldNumber = 14;
  inline ::google::protobuf::uint32 skillmax() const;
  inline void set_skillmax(::google::protobuf::uint32 value);

  // optional uint32 create_item_id = 17;
  inline bool has_create_item_id() const;
  inline void clear_create_item_id();
  static const int kCreateItemIdFieldNumber = 17;
  inline ::google::protobuf::uint32 create_item_id() const;
  inline void set_create_item_id(::google::protobuf::uint32 value);

  // repeated uint32 ai = 9 [packed = true];
  inline int ai_size() const;
  inline void clear_ai();
  static const int kAiFieldNumber = 9;
  inline ::google::protobuf::uint32 ai(int index) const;
  inline void set_ai(int index, ::google::protobuf::uint32 value);
  inline void add_ai(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ai() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ai();

  // optional uint32 initLevel = 10;
  inline bool has_initlevel() const;
  inline void clear_initlevel();
  static const int kInitLevelFieldNumber = 10;
  inline ::google::protobuf::uint32 initlevel() const;
  inline void set_initlevel(::google::protobuf::uint32 value);

  // repeated uint32 intiAttr = 11 [packed = true];
  inline int intiattr_size() const;
  inline void clear_intiattr();
  static const int kIntiAttrFieldNumber = 11;
  inline ::google::protobuf::uint32 intiattr(int index) const;
  inline void set_intiattr(int index, ::google::protobuf::uint32 value);
  inline void add_intiattr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      intiattr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_intiattr();

  // optional uint32 retrnAptiLevel = 12;
  inline bool has_retrnaptilevel() const;
  inline void clear_retrnaptilevel();
  static const int kRetrnAptiLevelFieldNumber = 12;
  inline ::google::protobuf::uint32 retrnaptilevel() const;
  inline void set_retrnaptilevel(::google::protobuf::uint32 value);

  // repeated uint32 retrnApti = 13 [packed = true];
  inline int retrnapti_size() const;
  inline void clear_retrnapti();
  static const int kRetrnAptiFieldNumber = 13;
  inline ::google::protobuf::uint32 retrnapti(int index) const;
  inline void set_retrnapti(int index, ::google::protobuf::uint32 value);
  inline void add_retrnapti(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      retrnapti() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_retrnapti();

  // @@protoc_insertion_point(class_scope:ScenePetServerData)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_tmpid();
  inline void clear_has_tmpid();
  inline void set_has_firstname();
  inline void clear_has_firstname();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_maxlife();
  inline void clear_has_maxlife();
  inline void set_has_skillmax();
  inline void clear_has_skillmax();
  inline void set_has_create_item_id();
  inline void clear_has_create_item_id();
  inline void set_has_initlevel();
  inline void clear_has_initlevel();
  inline void set_has_retrnaptilevel();
  inline void clear_has_retrnaptilevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ScenePetData* common_;
  ::std::string* firstname_;
  ::google::protobuf::uint32 tmpid_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 maxlife_;
  ::google::protobuf::uint32 skillmax_;
  ::google::protobuf::uint32 create_item_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ai_;
  mutable int _ai_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > intiattr_;
  mutable int _intiattr_cached_byte_size_;
  ::google::protobuf::uint32 initlevel_;
  ::google::protobuf::uint32 retrnaptilevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > retrnapti_;
  mutable int _retrnapti_cached_byte_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ScenePetServerData* default_instance_;
};
// -------------------------------------------------------------------

class optionBaseAutoTeamMember : public ::google::protobuf::Message {
 public:
  optionBaseAutoTeamMember();
  virtual ~optionBaseAutoTeamMember();

  optionBaseAutoTeamMember(const optionBaseAutoTeamMember& from);

  inline optionBaseAutoTeamMember& operator=(const optionBaseAutoTeamMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const optionBaseAutoTeamMember& default_instance();

  void Swap(optionBaseAutoTeamMember* other);

  // implements Message ----------------------------------------------

  optionBaseAutoTeamMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const optionBaseAutoTeamMember& from);
  void MergeFrom(const optionBaseAutoTeamMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:optionBaseAutoTeamMember)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static optionBaseAutoTeamMember* default_instance_;
};
// -------------------------------------------------------------------

class stOptionBase : public ::google::protobuf::Message {
 public:
  stOptionBase();
  virtual ~stOptionBase();

  stOptionBase(const stOptionBase& from);

  inline stOptionBase& operator=(const stOptionBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stOptionBase& default_instance();

  void Swap(stOptionBase* other);

  // implements Message ----------------------------------------------

  stOptionBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stOptionBase& from);
  void MergeFrom(const stOptionBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool allowTeam = 1 [default = true];
  inline bool has_allowteam() const;
  inline void clear_allowteam();
  static const int kAllowTeamFieldNumber = 1;
  inline bool allowteam() const;
  inline void set_allowteam(bool value);

  // optional bool allowTrade = 2 [default = true];
  inline bool has_allowtrade() const;
  inline void clear_allowtrade();
  static const int kAllowTradeFieldNumber = 2;
  inline bool allowtrade() const;
  inline void set_allowtrade(bool value);

  // optional bool allowSept = 3 [default = true];
  inline bool has_allowsept() const;
  inline void clear_allowsept();
  static const int kAllowSeptFieldNumber = 3;
  inline bool allowsept() const;
  inline void set_allowsept(bool value);

  // optional bool allowGang = 4 [default = true];
  inline bool has_allowgang() const;
  inline void clear_allowgang();
  static const int kAllowGangFieldNumber = 4;
  inline bool allowgang() const;
  inline void set_allowgang(bool value);

  // optional bool allowFriend = 5 [default = true];
  inline bool has_allowfriend() const;
  inline void clear_allowfriend();
  static const int kAllowFriendFieldNumber = 5;
  inline bool allowfriend() const;
  inline void set_allowfriend(bool value);

  // optional bool allowBanName = 6 [default = true];
  inline bool has_allowbanname() const;
  inline void clear_allowbanname();
  static const int kAllowBanNameFieldNumber = 6;
  inline bool allowbanname() const;
  inline void set_allowbanname(bool value);

  // optional bool allowintoteam = 7 [default = false];
  inline bool has_allowintoteam() const;
  inline void clear_allowintoteam();
  static const int kAllowintoteamFieldNumber = 7;
  inline bool allowintoteam() const;
  inline void set_allowintoteam(bool value);

  // optional uint32 intoteam_level = 8 [default = 0];
  inline bool has_intoteam_level() const;
  inline void clear_intoteam_level();
  static const int kIntoteamLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 intoteam_level() const;
  inline void set_intoteam_level(::google::protobuf::uint32 value);

  // repeated .optionBaseAutoTeamMember teammember = 9;
  inline int teammember_size() const;
  inline void clear_teammember();
  static const int kTeammemberFieldNumber = 9;
  inline const ::optionBaseAutoTeamMember& teammember(int index) const;
  inline ::optionBaseAutoTeamMember* mutable_teammember(int index);
  inline ::optionBaseAutoTeamMember* add_teammember();
  inline const ::google::protobuf::RepeatedPtrField< ::optionBaseAutoTeamMember >&
      teammember() const;
  inline ::google::protobuf::RepeatedPtrField< ::optionBaseAutoTeamMember >*
      mutable_teammember();

  // optional bool autoride = 10 [default = true];
  inline bool has_autoride() const;
  inline void clear_autoride();
  static const int kAutorideFieldNumber = 10;
  inline bool autoride() const;
  inline void set_autoride(bool value);

  // @@protoc_insertion_point(class_scope:stOptionBase)
 private:
  inline void set_has_allowteam();
  inline void clear_has_allowteam();
  inline void set_has_allowtrade();
  inline void clear_has_allowtrade();
  inline void set_has_allowsept();
  inline void clear_has_allowsept();
  inline void set_has_allowgang();
  inline void clear_has_allowgang();
  inline void set_has_allowfriend();
  inline void clear_has_allowfriend();
  inline void set_has_allowbanname();
  inline void clear_has_allowbanname();
  inline void set_has_allowintoteam();
  inline void clear_has_allowintoteam();
  inline void set_has_intoteam_level();
  inline void clear_has_intoteam_level();
  inline void set_has_autoride();
  inline void clear_has_autoride();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool allowteam_;
  bool allowtrade_;
  bool allowsept_;
  bool allowgang_;
  bool allowfriend_;
  bool allowbanname_;
  bool allowintoteam_;
  bool autoride_;
  ::google::protobuf::RepeatedPtrField< ::optionBaseAutoTeamMember > teammember_;
  ::google::protobuf::uint32 intoteam_level_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stOptionBase* default_instance_;
};
// -------------------------------------------------------------------

class stDayHonor : public ::google::protobuf::Message {
 public:
  stDayHonor();
  virtual ~stDayHonor();

  stDayHonor(const stDayHonor& from);

  inline stDayHonor& operator=(const stDayHonor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stDayHonor& default_instance();

  void Swap(stDayHonor* other);

  // implements Message ----------------------------------------------

  stDayHonor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stDayHonor& from);
  void MergeFrom(const stDayHonor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 honor = 1;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 1;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:stDayHonor)
 private:
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stDayHonor* default_instance_;
};
// -------------------------------------------------------------------

class stHonorKill : public ::google::protobuf::Message {
 public:
  stHonorKill();
  virtual ~stHonorKill();

  stHonorKill(const stHonorKill& from);

  inline stHonorKill& operator=(const stHonorKill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stHonorKill& default_instance();

  void Swap(stHonorKill* other);

  // implements Message ----------------------------------------------

  stHonorKill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stHonorKill& from);
  void MergeFrom(const stHonorKill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 revenUserId = 1;
  inline bool has_revenuserid() const;
  inline void clear_revenuserid();
  static const int kRevenUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 revenuserid() const;
  inline void set_revenuserid(::google::protobuf::uint32 value);

  // optional uint32 honorKillTime = 2;
  inline bool has_honorkilltime() const;
  inline void clear_honorkilltime();
  static const int kHonorKillTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 honorkilltime() const;
  inline void set_honorkilltime(::google::protobuf::uint32 value);

  // optional uint32 revenKillTime = 3;
  inline bool has_revenkilltime() const;
  inline void clear_revenkilltime();
  static const int kRevenKillTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 revenkilltime() const;
  inline void set_revenkilltime(::google::protobuf::uint32 value);

  // optional uint32 killCounter = 4;
  inline bool has_killcounter() const;
  inline void clear_killcounter();
  static const int kKillCounterFieldNumber = 4;
  inline ::google::protobuf::uint32 killcounter() const;
  inline void set_killcounter(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:stHonorKill)
 private:
  inline void set_has_revenuserid();
  inline void clear_has_revenuserid();
  inline void set_has_honorkilltime();
  inline void clear_has_honorkilltime();
  inline void set_has_revenkilltime();
  inline void clear_has_revenkilltime();
  inline void set_has_killcounter();
  inline void clear_has_killcounter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 revenuserid_;
  ::google::protobuf::uint32 honorkilltime_;
  ::google::protobuf::uint32 revenkilltime_;
  ::google::protobuf::uint32 killcounter_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stHonorKill* default_instance_;
};
// -------------------------------------------------------------------

class stHonorData : public ::google::protobuf::Message {
 public:
  stHonorData();
  virtual ~stHonorData();

  stHonorData(const stHonorData& from);

  inline stHonorData& operator=(const stHonorData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stHonorData& default_instance();

  void Swap(stHonorData* other);

  // implements Message ----------------------------------------------

  stHonorData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stHonorData& from);
  void MergeFrom(const stHonorData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 honor = 1;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 1;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:stHonorData)
 private:
  inline void set_has_honor();
  inline void clear_has_honor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 honor_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stHonorData* default_instance_;
};
// -------------------------------------------------------------------

class stHonorLimit : public ::google::protobuf::Message {
 public:
  stHonorLimit();
  virtual ~stHonorLimit();

  stHonorLimit(const stHonorLimit& from);

  inline stHonorLimit& operator=(const stHonorLimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stHonorLimit& default_instance();

  void Swap(stHonorLimit* other);

  // implements Message ----------------------------------------------

  stHonorLimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stHonorLimit& from);
  void MergeFrom(const stHonorLimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // optional uint32 killtime = 3;
  inline bool has_killtime() const;
  inline void clear_killtime();
  static const int kKilltimeFieldNumber = 3;
  inline ::google::protobuf::uint32 killtime() const;
  inline void set_killtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:stHonorLimit)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_killtime();
  inline void clear_has_killtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 killtime_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stHonorLimit* default_instance_;
};
// -------------------------------------------------------------------

class stAddPointLimit : public ::google::protobuf::Message {
 public:
  stAddPointLimit();
  virtual ~stAddPointLimit();

  stAddPointLimit(const stAddPointLimit& from);

  inline stAddPointLimit& operator=(const stAddPointLimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stAddPointLimit& default_instance();

  void Swap(stAddPointLimit* other);

  // implements Message ----------------------------------------------

  stAddPointLimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stAddPointLimit& from);
  void MergeFrom(const stAddPointLimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // optional uint32 add_time = 2;
  inline bool has_add_time() const;
  inline void clear_add_time();
  static const int kAddTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 add_time() const;
  inline void set_add_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:stAddPointLimit)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_add_time();
  inline void clear_has_add_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 add_time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stAddPointLimit* default_instance_;
};
// -------------------------------------------------------------------

class SaveGuard : public ::google::protobuf::Message {
 public:
  SaveGuard();
  virtual ~SaveGuard();

  SaveGuard(const SaveGuard& from);

  inline SaveGuard& operator=(const SaveGuard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveGuard& default_instance();

  void Swap(SaveGuard* other);

  // implements Message ----------------------------------------------

  SaveGuard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveGuard& from);
  void MergeFrom(const SaveGuard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cartBaseId = 1;
  inline bool has_cartbaseid() const;
  inline void clear_cartbaseid();
  static const int kCartBaseIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cartbaseid() const;
  inline void set_cartbaseid(::google::protobuf::uint32 value);

  // optional uint32 cartTmpId = 2;
  inline bool has_carttmpid() const;
  inline void clear_carttmpid();
  static const int kCartTmpIdFieldNumber = 2;
  inline ::google::protobuf::uint32 carttmpid() const;
  inline void set_carttmpid(::google::protobuf::uint32 value);

  // optional uint32 cartSceneId = 3;
  inline bool has_cartsceneid() const;
  inline void clear_cartsceneid();
  static const int kCartSceneIdFieldNumber = 3;
  inline ::google::protobuf::uint32 cartsceneid() const;
  inline void set_cartsceneid(::google::protobuf::uint32 value);

  // optional uint32 cartTimeEnd = 4;
  inline bool has_carttimeend() const;
  inline void clear_carttimeend();
  static const int kCartTimeEndFieldNumber = 4;
  inline ::google::protobuf::uint32 carttimeend() const;
  inline void set_carttimeend(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SaveGuard)
 private:
  inline void set_has_cartbaseid();
  inline void clear_has_cartbaseid();
  inline void set_has_carttmpid();
  inline void clear_has_carttmpid();
  inline void set_has_cartsceneid();
  inline void clear_has_cartsceneid();
  inline void set_has_carttimeend();
  inline void clear_has_carttimeend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cartbaseid_;
  ::google::protobuf::uint32 carttmpid_;
  ::google::protobuf::uint32 cartsceneid_;
  ::google::protobuf::uint32 carttimeend_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SaveGuard* default_instance_;
};
// -------------------------------------------------------------------

class SaveDropIncreaseTime : public ::google::protobuf::Message {
 public:
  SaveDropIncreaseTime();
  virtual ~SaveDropIncreaseTime();

  SaveDropIncreaseTime(const SaveDropIncreaseTime& from);

  inline SaveDropIncreaseTime& operator=(const SaveDropIncreaseTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveDropIncreaseTime& default_instance();

  void Swap(SaveDropIncreaseTime* other);

  // implements Message ----------------------------------------------

  SaveDropIncreaseTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveDropIncreaseTime& from);
  void MergeFrom(const SaveDropIncreaseTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 timeLeftForIncRate = 1;
  inline bool has_timeleftforincrate() const;
  inline void clear_timeleftforincrate();
  static const int kTimeLeftForIncRateFieldNumber = 1;
  inline ::google::protobuf::uint32 timeleftforincrate() const;
  inline void set_timeleftforincrate(::google::protobuf::uint32 value);

  // optional uint32 savetime = 2;
  inline bool has_savetime() const;
  inline void clear_savetime();
  static const int kSavetimeFieldNumber = 2;
  inline ::google::protobuf::uint32 savetime() const;
  inline void set_savetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SaveDropIncreaseTime)
 private:
  inline void set_has_timeleftforincrate();
  inline void clear_has_timeleftforincrate();
  inline void set_has_savetime();
  inline void clear_has_savetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 timeleftforincrate_;
  ::google::protobuf::uint32 savetime_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SaveDropIncreaseTime* default_instance_;
};
// -------------------------------------------------------------------

class stAccelKey : public ::google::protobuf::Message {
 public:
  stAccelKey();
  virtual ~stAccelKey();

  stAccelKey(const stAccelKey& from);

  inline stAccelKey& operator=(const stAccelKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stAccelKey& default_instance();

  void Swap(stAccelKey* other);

  // implements Message ----------------------------------------------

  stAccelKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stAccelKey& from);
  void MergeFrom(const stAccelKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 eAccelType = 2;
  inline bool has_eacceltype() const;
  inline void clear_eacceltype();
  static const int kEAccelTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 eacceltype() const;
  inline void set_eacceltype(::google::protobuf::uint32 value);

  // optional uint32 dwID = 3;
  inline bool has_dwid() const;
  inline void clear_dwid();
  static const int kDwIDFieldNumber = 3;
  inline ::google::protobuf::uint32 dwid() const;
  inline void set_dwid(::google::protobuf::uint32 value);

  // optional uint32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:stAccelKey)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_eacceltype();
  inline void clear_has_eacceltype();
  inline void set_has_dwid();
  inline void clear_has_dwid();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 eacceltype_;
  ::google::protobuf::uint32 dwid_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stAccelKey* default_instance_;
};
// -------------------------------------------------------------------

class stMapTermData : public ::google::protobuf::Message {
 public:
  stMapTermData();
  virtual ~stMapTermData();

  stMapTermData(const stMapTermData& from);

  inline stMapTermData& operator=(const stMapTermData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stMapTermData& default_instance();

  void Swap(stMapTermData* other);

  // implements Message ----------------------------------------------

  stMapTermData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stMapTermData& from);
  void MergeFrom(const stMapTermData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:stMapTermData)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stMapTermData* default_instance_;
};
// -------------------------------------------------------------------

class OrderSysPresent : public ::google::protobuf::Message {
 public:
  OrderSysPresent();
  virtual ~OrderSysPresent();

  OrderSysPresent(const OrderSysPresent& from);

  inline OrderSysPresent& operator=(const OrderSysPresent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderSysPresent& default_instance();

  void Swap(OrderSysPresent* other);

  // implements Message ----------------------------------------------

  OrderSysPresent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderSysPresent& from);
  void MergeFrom(const OrderSysPresent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 orderid = 1;
  inline int orderid_size() const;
  inline void clear_orderid();
  static const int kOrderidFieldNumber = 1;
  inline ::google::protobuf::uint32 orderid(int index) const;
  inline void set_orderid(int index, ::google::protobuf::uint32 value);
  inline void add_orderid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      orderid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_orderid();

  // @@protoc_insertion_point(class_scope:OrderSysPresent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > orderid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static OrderSysPresent* default_instance_;
};
// -------------------------------------------------------------------

class UserCopyID : public ::google::protobuf::Message {
 public:
  UserCopyID();
  virtual ~UserCopyID();

  UserCopyID(const UserCopyID& from);

  inline UserCopyID& operator=(const UserCopyID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCopyID& default_instance();

  void Swap(UserCopyID* other);

  // implements Message ----------------------------------------------

  UserCopyID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCopyID& from);
  void MergeFrom(const UserCopyID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .enumCopySceneType type = 1 [default = enumCopyScene_None];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::enumCopySceneType type() const;
  inline void set_type(::enumCopySceneType value);

  // optional uint32 copytypeid = 2;
  inline bool has_copytypeid() const;
  inline void clear_copytypeid();
  static const int kCopytypeidFieldNumber = 2;
  inline ::google::protobuf::uint32 copytypeid() const;
  inline void set_copytypeid(::google::protobuf::uint32 value);

  // optional uint32 copyid = 3;
  inline bool has_copyid() const;
  inline void clear_copyid();
  static const int kCopyidFieldNumber = 3;
  inline ::google::protobuf::uint32 copyid() const;
  inline void set_copyid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserCopyID)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_copytypeid();
  inline void clear_has_copytypeid();
  inline void set_has_copyid();
  inline void clear_has_copyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 copytypeid_;
  ::google::protobuf::uint32 copyid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static UserCopyID* default_instance_;
};
// -------------------------------------------------------------------

class UserCopyTimes : public ::google::protobuf::Message {
 public:
  UserCopyTimes();
  virtual ~UserCopyTimes();

  UserCopyTimes(const UserCopyTimes& from);

  inline UserCopyTimes& operator=(const UserCopyTimes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCopyTimes& default_instance();

  void Swap(UserCopyTimes* other);

  // implements Message ----------------------------------------------

  UserCopyTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCopyTimes& from);
  void MergeFrom(const UserCopyTimes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .enumCopySceneType type = 1 [default = enumCopyScene_None];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::enumCopySceneType type() const;
  inline void set_type(::enumCopySceneType value);

  // optional uint32 copytypeid = 4;
  inline bool has_copytypeid() const;
  inline void clear_copytypeid();
  static const int kCopytypeidFieldNumber = 4;
  inline ::google::protobuf::uint32 copytypeid() const;
  inline void set_copytypeid(::google::protobuf::uint32 value);

  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional .TimeCycle cyctype = 3 [default = TimeCycle_None];
  inline bool has_cyctype() const;
  inline void clear_cyctype();
  static const int kCyctypeFieldNumber = 3;
  inline ::TimeCycle cyctype() const;
  inline void set_cyctype(::TimeCycle value);

  // optional uint32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserCopyTimes)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_copytypeid();
  inline void clear_has_copytypeid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_cyctype();
  inline void clear_has_cyctype();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 copytypeid_;
  ::google::protobuf::uint32 time_;
  int cyctype_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static UserCopyTimes* default_instance_;
};
// -------------------------------------------------------------------

class UserCopyScore : public ::google::protobuf::Message {
 public:
  UserCopyScore();
  virtual ~UserCopyScore();

  UserCopyScore(const UserCopyScore& from);

  inline UserCopyScore& operator=(const UserCopyScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCopyScore& default_instance();

  void Swap(UserCopyScore* other);

  // implements Message ----------------------------------------------

  UserCopyScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCopyScore& from);
  void MergeFrom(const UserCopyScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .enumCopySceneType type = 1 [default = enumCopyScene_None];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::enumCopySceneType type() const;
  inline void set_type(::enumCopySceneType value);

  // optional uint32 copytypeid = 5;
  inline bool has_copytypeid() const;
  inline void clear_copytypeid();
  static const int kCopytypeidFieldNumber = 5;
  inline ::google::protobuf::uint32 copytypeid() const;
  inline void set_copytypeid(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // optional .TimeCycle cyctype = 4 [default = TimeCycle_None];
  inline bool has_cyctype() const;
  inline void clear_cyctype();
  static const int kCyctypeFieldNumber = 4;
  inline ::TimeCycle cyctype() const;
  inline void set_cyctype(::TimeCycle value);

  // @@protoc_insertion_point(class_scope:UserCopyScore)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_copytypeid();
  inline void clear_has_copytypeid();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_cyctype();
  inline void clear_has_cyctype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 copytypeid_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 number_;
  int cyctype_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static UserCopyScore* default_instance_;
};
// -------------------------------------------------------------------

class UserCopySceneTimes : public ::google::protobuf::Message {
 public:
  UserCopySceneTimes();
  virtual ~UserCopySceneTimes();

  UserCopySceneTimes(const UserCopySceneTimes& from);

  inline UserCopySceneTimes& operator=(const UserCopySceneTimes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCopySceneTimes& default_instance();

  void Swap(UserCopySceneTimes* other);

  // implements Message ----------------------------------------------

  UserCopySceneTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCopySceneTimes& from);
  void MergeFrom(const UserCopySceneTimes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teammonster = 1;
  inline bool has_teammonster() const;
  inline void clear_teammonster();
  static const int kTeammonsterFieldNumber = 1;
  inline ::google::protobuf::uint32 teammonster() const;
  inline void set_teammonster(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserCopySceneTimes)
 private:
  inline void set_has_teammonster();
  inline void clear_has_teammonster();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 teammonster_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static UserCopySceneTimes* default_instance_;
};
// -------------------------------------------------------------------

class SaveSkill : public ::google::protobuf::Message {
 public:
  SaveSkill();
  virtual ~SaveSkill();

  SaveSkill(const SaveSkill& from);

  inline SaveSkill& operator=(const SaveSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveSkill& default_instance();

  void Swap(SaveSkill* other);

  // implements Message ----------------------------------------------

  SaveSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveSkill& from);
  void MergeFrom(const SaveSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SaveSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SaveSkill* default_instance_;
};
// -------------------------------------------------------------------

class BinarySaveSkill : public ::google::protobuf::Message {
 public:
  BinarySaveSkill();
  virtual ~BinarySaveSkill();

  BinarySaveSkill(const BinarySaveSkill& from);

  inline BinarySaveSkill& operator=(const BinarySaveSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinarySaveSkill& default_instance();

  void Swap(BinarySaveSkill* other);

  // implements Message ----------------------------------------------

  BinarySaveSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinarySaveSkill& from);
  void MergeFrom(const BinarySaveSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SaveSkill skills = 1;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 1;
  inline const ::SaveSkill& skills(int index) const;
  inline ::SaveSkill* mutable_skills(int index);
  inline ::SaveSkill* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::SaveSkill >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::SaveSkill >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:BinarySaveSkill)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SaveSkill > skills_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BinarySaveSkill* default_instance_;
};
// -------------------------------------------------------------------

class NoPropertyIconState : public ::google::protobuf::Message {
 public:
  NoPropertyIconState();
  virtual ~NoPropertyIconState();

  NoPropertyIconState(const NoPropertyIconState& from);

  inline NoPropertyIconState& operator=(const NoPropertyIconState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoPropertyIconState& default_instance();

  void Swap(NoPropertyIconState* other);

  // implements Message ----------------------------------------------

  NoPropertyIconState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoPropertyIconState& from);
  void MergeFrom(const NoPropertyIconState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stateid = 1;
  inline bool has_stateid() const;
  inline void clear_stateid();
  static const int kStateidFieldNumber = 1;
  inline ::google::protobuf::uint32 stateid() const;
  inline void set_stateid(::google::protobuf::uint32 value);

  // optional uint32 endtime = 2 [default = 0];
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 2;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NoPropertyIconState)
 private:
  inline void set_has_stateid();
  inline void clear_has_stateid();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 stateid_;
  ::google::protobuf::uint32 endtime_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static NoPropertyIconState* default_instance_;
};
// -------------------------------------------------------------------

class SkillStatusElement_Pos : public ::google::protobuf::Message {
 public:
  SkillStatusElement_Pos();
  virtual ~SkillStatusElement_Pos();

  SkillStatusElement_Pos(const SkillStatusElement_Pos& from);

  inline SkillStatusElement_Pos& operator=(const SkillStatusElement_Pos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillStatusElement_Pos& default_instance();

  void Swap(SkillStatusElement_Pos* other);

  // implements Message ----------------------------------------------

  SkillStatusElement_Pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillStatusElement_Pos& from);
  void MergeFrom(const SkillStatusElement_Pos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SkillStatusElement.Pos)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SkillStatusElement_Pos* default_instance_;
};
// -------------------------------------------------------------------

class SkillStatusElement : public ::google::protobuf::Message {
 public:
  SkillStatusElement();
  virtual ~SkillStatusElement();

  SkillStatusElement(const SkillStatusElement& from);

  inline SkillStatusElement& operator=(const SkillStatusElement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillStatusElement& default_instance();

  void Swap(SkillStatusElement* other);

  // implements Message ----------------------------------------------

  SkillStatusElement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillStatusElement& from);
  void MergeFrom(const SkillStatusElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SkillStatusElement_Pos Pos;

  // accessors -------------------------------------------------------

  // optional uint64 keyid = 1;
  inline bool has_keyid() const;
  inline void clear_keyid();
  static const int kKeyidFieldNumber = 1;
  inline ::google::protobuf::uint64 keyid() const;
  inline void set_keyid(::google::protobuf::uint64 value);

  // optional uint32 skillid = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 2;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 percent = 5;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 5;
  inline ::google::protobuf::uint32 percent() const;
  inline void set_percent(::google::protobuf::uint32 value);

  // optional int32 value = 6;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional uint32 backvalue = 7;
  inline bool has_backvalue() const;
  inline void clear_backvalue();
  static const int kBackvalueFieldNumber = 7;
  inline ::google::protobuf::uint32 backvalue() const;
  inline void set_backvalue(::google::protobuf::uint32 value);

  // optional uint64 time = 8;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // optional uint64 endtime = 9;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 9;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // optional uint32 step = 10;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 10;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // optional uint32 skillType = 11;
  inline bool has_skilltype() const;
  inline void clear_skilltype();
  static const int kSkillTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 skilltype() const;
  inline void set_skilltype(::google::protobuf::uint32 value);

  // optional bool refresh = 12;
  inline bool has_refresh() const;
  inline void clear_refresh();
  static const int kRefreshFieldNumber = 12;
  inline bool refresh() const;
  inline void set_refresh(bool value);

  // optional uint32 dir = 13;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 13;
  inline ::google::protobuf::uint32 dir() const;
  inline void set_dir(::google::protobuf::uint32 value);

  // optional .SkillStatusElement.Pos pos = 14;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 14;
  inline const ::SkillStatusElement_Pos& pos() const;
  inline ::SkillStatusElement_Pos* mutable_pos();
  inline ::SkillStatusElement_Pos* release_pos();
  inline void set_allocated_pos(::SkillStatusElement_Pos* pos);

  // optional uint32 attackerID = 15;
  inline bool has_attackerid() const;
  inline void clear_attackerid();
  static const int kAttackerIDFieldNumber = 15;
  inline ::google::protobuf::uint32 attackerid() const;
  inline void set_attackerid(::google::protobuf::uint32 value);

  // optional uint32 attacktype = 16;
  inline bool has_attacktype() const;
  inline void clear_attacktype();
  static const int kAttacktypeFieldNumber = 16;
  inline ::google::protobuf::uint32 attacktype() const;
  inline void set_attacktype(::google::protobuf::uint32 value);

  // optional uint32 targetID = 17;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIDFieldNumber = 17;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);

  // optional uint32 targetType = 18;
  inline bool has_targettype() const;
  inline void clear_targettype();
  static const int kTargetTypeFieldNumber = 18;
  inline ::google::protobuf::uint32 targettype() const;
  inline void set_targettype(::google::protobuf::uint32 value);

  // optional uint32 layers = 19;
  inline bool has_layers() const;
  inline void clear_layers();
  static const int kLayersFieldNumber = 19;
  inline ::google::protobuf::uint32 layers() const;
  inline void set_layers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SkillStatusElement)
 private:
  inline void set_has_keyid();
  inline void clear_has_keyid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_percent();
  inline void clear_has_percent();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_backvalue();
  inline void clear_has_backvalue();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_skilltype();
  inline void clear_has_skilltype();
  inline void set_has_refresh();
  inline void clear_has_refresh();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_attackerid();
  inline void clear_has_attackerid();
  inline void set_has_attacktype();
  inline void clear_has_attacktype();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_targettype();
  inline void clear_has_targettype();
  inline void set_has_layers();
  inline void clear_has_layers();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 keyid_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 percent_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::uint32 backvalue_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 step_;
  ::google::protobuf::uint32 skilltype_;
  bool refresh_;
  ::google::protobuf::uint32 dir_;
  ::SkillStatusElement_Pos* pos_;
  ::google::protobuf::uint32 attackerid_;
  ::google::protobuf::uint32 attacktype_;
  ::google::protobuf::uint32 targetid_;
  ::google::protobuf::uint32 targettype_;
  ::google::protobuf::uint32 layers_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SkillStatusElement* default_instance_;
};
// -------------------------------------------------------------------

class ObjectLocation : public ::google::protobuf::Message {
 public:
  ObjectLocation();
  virtual ~ObjectLocation();

  ObjectLocation(const ObjectLocation& from);

  inline ObjectLocation& operator=(const ObjectLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectLocation& default_instance();

  void Swap(ObjectLocation* other);

  // implements Message ----------------------------------------------

  ObjectLocation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectLocation& from);
  void MergeFrom(const ObjectLocation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline ::google::protobuf::uint32 location() const;
  inline void set_location(::google::protobuf::uint32 value);

  // optional uint32 table = 2;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 2;
  inline ::google::protobuf::uint32 table() const;
  inline void set_table(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ObjectLocation)
 private:
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 location_;
  ::google::protobuf::uint32 table_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ObjectLocation* default_instance_;
};
// -------------------------------------------------------------------

class stoneSocket : public ::google::protobuf::Message {
 public:
  stoneSocket();
  virtual ~stoneSocket();

  stoneSocket(const stoneSocket& from);

  inline stoneSocket& operator=(const stoneSocket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stoneSocket& default_instance();

  void Swap(stoneSocket* other);

  // implements Message ----------------------------------------------

  stoneSocket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stoneSocket& from);
  void MergeFrom(const stoneSocket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stoneID = 1;
  inline bool has_stoneid() const;
  inline void clear_stoneid();
  static const int kStoneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 stoneid() const;
  inline void set_stoneid(::google::protobuf::uint32 value);

  // optional uint32 stoneRank = 2;
  inline bool has_stonerank() const;
  inline void clear_stonerank();
  static const int kStoneRankFieldNumber = 2;
  inline ::google::protobuf::uint32 stonerank() const;
  inline void set_stonerank(::google::protobuf::uint32 value);

  // repeated uint32 value = 3 [packed = true];
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::uint32 value);
  inline void add_value(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:stoneSocket)
 private:
  inline void set_has_stoneid();
  inline void clear_has_stoneid();
  inline void set_has_stonerank();
  inline void clear_has_stonerank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 stoneid_;
  ::google::protobuf::uint32 stonerank_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_;
  mutable int _value_cached_byte_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stoneSocket* default_instance_;
};
// -------------------------------------------------------------------

class diamondSoket_Diamond : public ::google::protobuf::Message {
 public:
  diamondSoket_Diamond();
  virtual ~diamondSoket_Diamond();

  diamondSoket_Diamond(const diamondSoket_Diamond& from);

  inline diamondSoket_Diamond& operator=(const diamondSoket_Diamond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const diamondSoket_Diamond& default_instance();

  void Swap(diamondSoket_Diamond* other);

  // implements Message ----------------------------------------------

  diamondSoket_Diamond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const diamondSoket_Diamond& from);
  void MergeFrom(const diamondSoket_Diamond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 6;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 6;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 baseid = 2;
  inline bool has_baseid() const;
  inline void clear_baseid();
  static const int kBaseidFieldNumber = 2;
  inline ::google::protobuf::uint32 baseid() const;
  inline void set_baseid(::google::protobuf::uint32 value);

  // optional uint32 upgrade = 3;
  inline bool has_upgrade() const;
  inline void clear_upgrade();
  static const int kUpgradeFieldNumber = 3;
  inline ::google::protobuf::uint32 upgrade() const;
  inline void set_upgrade(::google::protobuf::uint32 value);

  // optional uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:diamondSoket.Diamond)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_baseid();
  inline void clear_has_baseid();
  inline void set_has_upgrade();
  inline void clear_has_upgrade();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 baseid_;
  ::google::protobuf::uint32 upgrade_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static diamondSoket_Diamond* default_instance_;
};
// -------------------------------------------------------------------

class diamondSoket : public ::google::protobuf::Message {
 public:
  diamondSoket();
  virtual ~diamondSoket();

  diamondSoket(const diamondSoket& from);

  inline diamondSoket& operator=(const diamondSoket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const diamondSoket& default_instance();

  void Swap(diamondSoket* other);

  // implements Message ----------------------------------------------

  diamondSoket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const diamondSoket& from);
  void MergeFrom(const diamondSoket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef diamondSoket_Diamond Diamond;

  // accessors -------------------------------------------------------

  // repeated .diamondSoket.Diamond diamond = 1;
  inline int diamond_size() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 1;
  inline const ::diamondSoket_Diamond& diamond(int index) const;
  inline ::diamondSoket_Diamond* mutable_diamond(int index);
  inline ::diamondSoket_Diamond* add_diamond();
  inline const ::google::protobuf::RepeatedPtrField< ::diamondSoket_Diamond >&
      diamond() const;
  inline ::google::protobuf::RepeatedPtrField< ::diamondSoket_Diamond >*
      mutable_diamond();

  // @@protoc_insertion_point(class_scope:diamondSoket)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::diamondSoket_Diamond > diamond_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static diamondSoket* default_instance_;
};
// -------------------------------------------------------------------

class wingData_Diamond : public ::google::protobuf::Message {
 public:
  wingData_Diamond();
  virtual ~wingData_Diamond();

  wingData_Diamond(const wingData_Diamond& from);

  inline wingData_Diamond& operator=(const wingData_Diamond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const wingData_Diamond& default_instance();

  void Swap(wingData_Diamond* other);

  // implements Message ----------------------------------------------

  wingData_Diamond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const wingData_Diamond& from);
  void MergeFrom(const wingData_Diamond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 baseid = 1;
  inline bool has_baseid() const;
  inline void clear_baseid();
  static const int kBaseidFieldNumber = 1;
  inline ::google::protobuf::uint32 baseid() const;
  inline void set_baseid(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:wingData.Diamond)
 private:
  inline void set_has_baseid();
  inline void clear_has_baseid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 baseid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static wingData_Diamond* default_instance_;
};
// -------------------------------------------------------------------

class wingData_ActiveSkill : public ::google::protobuf::Message {
 public:
  wingData_ActiveSkill();
  virtual ~wingData_ActiveSkill();

  wingData_ActiveSkill(const wingData_ActiveSkill& from);

  inline wingData_ActiveSkill& operator=(const wingData_ActiveSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const wingData_ActiveSkill& default_instance();

  void Swap(wingData_ActiveSkill* other);

  // implements Message ----------------------------------------------

  wingData_ActiveSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const wingData_ActiveSkill& from);
  void MergeFrom(const wingData_ActiveSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:wingData.ActiveSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static wingData_ActiveSkill* default_instance_;
};
// -------------------------------------------------------------------

class wingData : public ::google::protobuf::Message {
 public:
  wingData();
  virtual ~wingData();

  wingData(const wingData& from);

  inline wingData& operator=(const wingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const wingData& default_instance();

  void Swap(wingData* other);

  // implements Message ----------------------------------------------

  wingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const wingData& from);
  void MergeFrom(const wingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef wingData_Diamond Diamond;
  typedef wingData_ActiveSkill ActiveSkill;

  // accessors -------------------------------------------------------

  // repeated .wingData.Diamond diamond = 1;
  inline int diamond_size() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 1;
  inline const ::wingData_Diamond& diamond(int index) const;
  inline ::wingData_Diamond* mutable_diamond(int index);
  inline ::wingData_Diamond* add_diamond();
  inline const ::google::protobuf::RepeatedPtrField< ::wingData_Diamond >&
      diamond() const;
  inline ::google::protobuf::RepeatedPtrField< ::wingData_Diamond >*
      mutable_diamond();

  // optional .wingData.ActiveSkill skill = 2;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 2;
  inline const ::wingData_ActiveSkill& skill() const;
  inline ::wingData_ActiveSkill* mutable_skill();
  inline ::wingData_ActiveSkill* release_skill();
  inline void set_allocated_skill(::wingData_ActiveSkill* skill);

  // optional .wingData.Diamond diamonditem = 3;
  inline bool has_diamonditem() const;
  inline void clear_diamonditem();
  static const int kDiamonditemFieldNumber = 3;
  inline const ::wingData_Diamond& diamonditem() const;
  inline ::wingData_Diamond* mutable_diamonditem();
  inline ::wingData_Diamond* release_diamonditem();
  inline void set_allocated_diamonditem(::wingData_Diamond* diamonditem);

  // @@protoc_insertion_point(class_scope:wingData)
 private:
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_diamonditem();
  inline void clear_has_diamonditem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::wingData_Diamond > diamond_;
  ::wingData_ActiveSkill* skill_;
  ::wingData_Diamond* diamonditem_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static wingData* default_instance_;
};
// -------------------------------------------------------------------

class flyPos : public ::google::protobuf::Message {
 public:
  flyPos();
  virtual ~flyPos();

  flyPos(const flyPos& from);

  inline flyPos& operator=(const flyPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flyPos& default_instance();

  void Swap(flyPos* other);

  // implements Message ----------------------------------------------

  flyPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const flyPos& from);
  void MergeFrom(const flyPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string scene_name = 1;
  inline bool has_scene_name() const;
  inline void clear_scene_name();
  static const int kSceneNameFieldNumber = 1;
  inline const ::std::string& scene_name() const;
  inline void set_scene_name(const ::std::string& value);
  inline void set_scene_name(const char* value);
  inline void set_scene_name(const char* value, size_t size);
  inline ::std::string* mutable_scene_name();
  inline ::std::string* release_scene_name();
  inline void set_allocated_scene_name(::std::string* scene_name);

  // optional uint32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:flyPos)
 private:
  inline void set_has_scene_name();
  inline void clear_has_scene_name();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* scene_name_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static flyPos* default_instance_;
};
// -------------------------------------------------------------------

class flyMessage : public ::google::protobuf::Message {
 public:
  flyMessage();
  virtual ~flyMessage();

  flyMessage(const flyMessage& from);

  inline flyMessage& operator=(const flyMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flyMessage& default_instance();

  void Swap(flyMessage* other);

  // implements Message ----------------------------------------------

  flyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const flyMessage& from);
  void MergeFrom(const flyMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .flyPos flypos = 1;
  inline int flypos_size() const;
  inline void clear_flypos();
  static const int kFlyposFieldNumber = 1;
  inline const ::flyPos& flypos(int index) const;
  inline ::flyPos* mutable_flypos(int index);
  inline ::flyPos* add_flypos();
  inline const ::google::protobuf::RepeatedPtrField< ::flyPos >&
      flypos() const;
  inline ::google::protobuf::RepeatedPtrField< ::flyPos >*
      mutable_flypos();

  // optional uint32 avail_times = 2;
  inline bool has_avail_times() const;
  inline void clear_avail_times();
  static const int kAvailTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 avail_times() const;
  inline void set_avail_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:flyMessage)
 private:
  inline void set_has_avail_times();
  inline void clear_has_avail_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::flyPos > flypos_;
  ::google::protobuf::uint32 avail_times_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static flyMessage* default_instance_;
};
// -------------------------------------------------------------------

class PropertyValues_Value : public ::google::protobuf::Message {
 public:
  PropertyValues_Value();
  virtual ~PropertyValues_Value();

  PropertyValues_Value(const PropertyValues_Value& from);

  inline PropertyValues_Value& operator=(const PropertyValues_Value& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertyValues_Value& default_instance();

  void Swap(PropertyValues_Value* other);

  // implements Message ----------------------------------------------

  PropertyValues_Value* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropertyValues_Value& from);
  void MergeFrom(const PropertyValues_Value& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PropValueType key = 1 [default = ValueType_none];
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::PropValueType key() const;
  inline void set_key(::PropValueType value);

  // repeated uint32 value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::uint32 value);
  inline void add_value(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:PropertyValues.Value)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_;
  int key_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static PropertyValues_Value* default_instance_;
};
// -------------------------------------------------------------------

class PropertyValues : public ::google::protobuf::Message {
 public:
  PropertyValues();
  virtual ~PropertyValues();

  PropertyValues(const PropertyValues& from);

  inline PropertyValues& operator=(const PropertyValues& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertyValues& default_instance();

  void Swap(PropertyValues* other);

  // implements Message ----------------------------------------------

  PropertyValues* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropertyValues& from);
  void MergeFrom(const PropertyValues& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PropertyValues_Value Value;

  // accessors -------------------------------------------------------

  // repeated .PropertyValues.Value value = 1;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::PropertyValues_Value& value(int index) const;
  inline ::PropertyValues_Value* mutable_value(int index);
  inline ::PropertyValues_Value* add_value();
  inline const ::google::protobuf::RepeatedPtrField< ::PropertyValues_Value >&
      value() const;
  inline ::google::protobuf::RepeatedPtrField< ::PropertyValues_Value >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:PropertyValues)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PropertyValues_Value > value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static PropertyValues* default_instance_;
};
// -------------------------------------------------------------------

class PropertyValuesEx_Value : public ::google::protobuf::Message {
 public:
  PropertyValuesEx_Value();
  virtual ~PropertyValuesEx_Value();

  PropertyValuesEx_Value(const PropertyValuesEx_Value& from);

  inline PropertyValuesEx_Value& operator=(const PropertyValuesEx_Value& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertyValuesEx_Value& default_instance();

  void Swap(PropertyValuesEx_Value* other);

  // implements Message ----------------------------------------------

  PropertyValuesEx_Value* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropertyValuesEx_Value& from);
  void MergeFrom(const PropertyValuesEx_Value& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PropValueType key = 1 [default = ValueType_none];
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::PropValueType key() const;
  inline void set_key(::PropValueType value);

  // repeated .PairDataDWORD value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::PairDataDWORD& value(int index) const;
  inline ::PairDataDWORD* mutable_value(int index);
  inline ::PairDataDWORD* add_value();
  inline const ::google::protobuf::RepeatedPtrField< ::PairDataDWORD >&
      value() const;
  inline ::google::protobuf::RepeatedPtrField< ::PairDataDWORD >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:PropertyValuesEx.Value)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PairDataDWORD > value_;
  int key_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static PropertyValuesEx_Value* default_instance_;
};
// -------------------------------------------------------------------

class PropertyValuesEx : public ::google::protobuf::Message {
 public:
  PropertyValuesEx();
  virtual ~PropertyValuesEx();

  PropertyValuesEx(const PropertyValuesEx& from);

  inline PropertyValuesEx& operator=(const PropertyValuesEx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertyValuesEx& default_instance();

  void Swap(PropertyValuesEx* other);

  // implements Message ----------------------------------------------

  PropertyValuesEx* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropertyValuesEx& from);
  void MergeFrom(const PropertyValuesEx& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PropertyValuesEx_Value Value;

  // accessors -------------------------------------------------------

  // repeated .PropertyValuesEx.Value value = 1;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::PropertyValuesEx_Value& value(int index) const;
  inline ::PropertyValuesEx_Value* mutable_value(int index);
  inline ::PropertyValuesEx_Value* add_value();
  inline const ::google::protobuf::RepeatedPtrField< ::PropertyValuesEx_Value >&
      value() const;
  inline ::google::protobuf::RepeatedPtrField< ::PropertyValuesEx_Value >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:PropertyValuesEx)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PropertyValuesEx_Value > value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static PropertyValuesEx* default_instance_;
};
// -------------------------------------------------------------------

class EquipBaseValue : public ::google::protobuf::Message {
 public:
  EquipBaseValue();
  virtual ~EquipBaseValue();

  EquipBaseValue(const EquipBaseValue& from);

  inline EquipBaseValue& operator=(const EquipBaseValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipBaseValue& default_instance();

  void Swap(EquipBaseValue* other);

  // implements Message ----------------------------------------------

  EquipBaseValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipBaseValue& from);
  void MergeFrom(const EquipBaseValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 strength = 1;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 1;
  inline ::google::protobuf::uint32 strength() const;
  inline void set_strength(::google::protobuf::uint32 value);

  // optional uint32 dexterity = 2;
  inline bool has_dexterity() const;
  inline void clear_dexterity();
  static const int kDexterityFieldNumber = 2;
  inline ::google::protobuf::uint32 dexterity() const;
  inline void set_dexterity(::google::protobuf::uint32 value);

  // optional uint32 mentality = 3;
  inline bool has_mentality() const;
  inline void clear_mentality();
  static const int kMentalityFieldNumber = 3;
  inline ::google::protobuf::uint32 mentality() const;
  inline void set_mentality(::google::protobuf::uint32 value);

  // optional uint32 constitution = 4;
  inline bool has_constitution() const;
  inline void clear_constitution();
  static const int kConstitutionFieldNumber = 4;
  inline ::google::protobuf::uint32 constitution() const;
  inline void set_constitution(::google::protobuf::uint32 value);

  // optional uint32 maxhp = 5;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 5;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // optional uint32 maxmp = 6;
  inline bool has_maxmp() const;
  inline void clear_maxmp();
  static const int kMaxmpFieldNumber = 6;
  inline ::google::protobuf::uint32 maxmp() const;
  inline void set_maxmp(::google::protobuf::uint32 value);

  // optional uint32 minpdamage = 7;
  inline bool has_minpdamage() const;
  inline void clear_minpdamage();
  static const int kMinpdamageFieldNumber = 7;
  inline ::google::protobuf::uint32 minpdamage() const;
  inline void set_minpdamage(::google::protobuf::uint32 value);

  // optional uint32 maxpdamage = 8;
  inline bool has_maxpdamage() const;
  inline void clear_maxpdamage();
  static const int kMaxpdamageFieldNumber = 8;
  inline ::google::protobuf::uint32 maxpdamage() const;
  inline void set_maxpdamage(::google::protobuf::uint32 value);

  // optional uint32 minmdamage = 9;
  inline bool has_minmdamage() const;
  inline void clear_minmdamage();
  static const int kMinmdamageFieldNumber = 9;
  inline ::google::protobuf::uint32 minmdamage() const;
  inline void set_minmdamage(::google::protobuf::uint32 value);

  // optional uint32 maxmdamage = 10;
  inline bool has_maxmdamage() const;
  inline void clear_maxmdamage();
  static const int kMaxmdamageFieldNumber = 10;
  inline ::google::protobuf::uint32 maxmdamage() const;
  inline void set_maxmdamage(::google::protobuf::uint32 value);

  // optional uint32 pdefence = 11;
  inline bool has_pdefence() const;
  inline void clear_pdefence();
  static const int kPdefenceFieldNumber = 11;
  inline ::google::protobuf::uint32 pdefence() const;
  inline void set_pdefence(::google::protobuf::uint32 value);

  // optional uint32 mdefence = 12;
  inline bool has_mdefence() const;
  inline void clear_mdefence();
  static const int kMdefenceFieldNumber = 12;
  inline ::google::protobuf::uint32 mdefence() const;
  inline void set_mdefence(::google::protobuf::uint32 value);

  // optional uint32 pdamagep = 13;
  inline bool has_pdamagep() const;
  inline void clear_pdamagep();
  static const int kPdamagepFieldNumber = 13;
  inline ::google::protobuf::uint32 pdamagep() const;
  inline void set_pdamagep(::google::protobuf::uint32 value);

  // optional uint32 mdamagep = 14;
  inline bool has_mdamagep() const;
  inline void clear_mdamagep();
  static const int kMdamagepFieldNumber = 14;
  inline ::google::protobuf::uint32 mdamagep() const;
  inline void set_mdamagep(::google::protobuf::uint32 value);

  // optional uint32 pdefencep = 15;
  inline bool has_pdefencep() const;
  inline void clear_pdefencep();
  static const int kPdefencepFieldNumber = 15;
  inline ::google::protobuf::uint32 pdefencep() const;
  inline void set_pdefencep(::google::protobuf::uint32 value);

  // optional uint32 mdefencep = 16;
  inline bool has_mdefencep() const;
  inline void clear_mdefencep();
  static const int kMdefencepFieldNumber = 16;
  inline ::google::protobuf::uint32 mdefencep() const;
  inline void set_mdefencep(::google::protobuf::uint32 value);

  // optional uint32 attlevel = 17;
  inline bool has_attlevel() const;
  inline void clear_attlevel();
  static const int kAttlevelFieldNumber = 17;
  inline ::google::protobuf::uint32 attlevel() const;
  inline void set_attlevel(::google::protobuf::uint32 value);

  // optional uint32 deflevel = 18;
  inline bool has_deflevel() const;
  inline void clear_deflevel();
  static const int kDeflevelFieldNumber = 18;
  inline ::google::protobuf::uint32 deflevel() const;
  inline void set_deflevel(::google::protobuf::uint32 value);

  // optional uint32 hplevel = 19;
  inline bool has_hplevel() const;
  inline void clear_hplevel();
  static const int kHplevelFieldNumber = 19;
  inline ::google::protobuf::uint32 hplevel() const;
  inline void set_hplevel(::google::protobuf::uint32 value);

  // optional int32 mvspeed = 25;
  inline bool has_mvspeed() const;
  inline void clear_mvspeed();
  static const int kMvspeedFieldNumber = 25;
  inline ::google::protobuf::int32 mvspeed() const;
  inline void set_mvspeed(::google::protobuf::int32 value);

  // optional uint32 luckRate = 26;
  inline bool has_luckrate() const;
  inline void clear_luckrate();
  static const int kLuckRateFieldNumber = 26;
  inline ::google::protobuf::uint32 luckrate() const;
  inline void set_luckrate(::google::protobuf::uint32 value);

  // optional uint32 hitRate = 27;
  inline bool has_hitrate() const;
  inline void clear_hitrate();
  static const int kHitRateFieldNumber = 27;
  inline ::google::protobuf::uint32 hitrate() const;
  inline void set_hitrate(::google::protobuf::uint32 value);

  // optional uint32 missRate = 28;
  inline bool has_missrate() const;
  inline void clear_missrate();
  static const int kMissRateFieldNumber = 28;
  inline ::google::protobuf::uint32 missrate() const;
  inline void set_missrate(::google::protobuf::uint32 value);

  // optional uint32 smiteRate = 29;
  inline bool has_smiterate() const;
  inline void clear_smiterate();
  static const int kSmiteRateFieldNumber = 29;
  inline ::google::protobuf::uint32 smiterate() const;
  inline void set_smiterate(::google::protobuf::uint32 value);

  // optional uint32 reSmiteRate = 30;
  inline bool has_resmiterate() const;
  inline void clear_resmiterate();
  static const int kReSmiteRateFieldNumber = 30;
  inline ::google::protobuf::uint32 resmiterate() const;
  inline void set_resmiterate(::google::protobuf::uint32 value);

  // optional uint32 beatRate = 31;
  inline bool has_beatrate() const;
  inline void clear_beatrate();
  static const int kBeatRateFieldNumber = 31;
  inline ::google::protobuf::uint32 beatrate() const;
  inline void set_beatrate(::google::protobuf::uint32 value);

  // optional uint32 reBeatRate = 32;
  inline bool has_rebeatrate() const;
  inline void clear_rebeatrate();
  static const int kReBeatRateFieldNumber = 32;
  inline ::google::protobuf::uint32 rebeatrate() const;
  inline void set_rebeatrate(::google::protobuf::uint32 value);

  // optional uint32 paralysisRate = 33;
  inline bool has_paralysisrate() const;
  inline void clear_paralysisrate();
  static const int kParalysisRateFieldNumber = 33;
  inline ::google::protobuf::uint32 paralysisrate() const;
  inline void set_paralysisrate(::google::protobuf::uint32 value);

  // optional uint32 reParalysisRate = 34;
  inline bool has_reparalysisrate() const;
  inline void clear_reparalysisrate();
  static const int kReParalysisRateFieldNumber = 34;
  inline ::google::protobuf::uint32 reparalysisrate() const;
  inline void set_reparalysisrate(::google::protobuf::uint32 value);

  // optional uint32 coldRate = 35;
  inline bool has_coldrate() const;
  inline void clear_coldrate();
  static const int kColdRateFieldNumber = 35;
  inline ::google::protobuf::uint32 coldrate() const;
  inline void set_coldrate(::google::protobuf::uint32 value);

  // optional uint32 reColdRate = 36;
  inline bool has_recoldrate() const;
  inline void clear_recoldrate();
  static const int kReColdRateFieldNumber = 36;
  inline ::google::protobuf::uint32 recoldrate() const;
  inline void set_recoldrate(::google::protobuf::uint32 value);

  // optional uint32 reAllRate = 37;
  inline bool has_reallrate() const;
  inline void clear_reallrate();
  static const int kReAllRateFieldNumber = 37;
  inline ::google::protobuf::uint32 reallrate() const;
  inline void set_reallrate(::google::protobuf::uint32 value);

  // optional uint32 neglectRate = 38;
  inline bool has_neglectrate() const;
  inline void clear_neglectrate();
  static const int kNeglectRateFieldNumber = 38;
  inline ::google::protobuf::uint32 neglectrate() const;
  inline void set_neglectrate(::google::protobuf::uint32 value);

  // optional uint32 damageInc = 39;
  inline bool has_damageinc() const;
  inline void clear_damageinc();
  static const int kDamageIncFieldNumber = 39;
  inline ::google::protobuf::uint32 damageinc() const;
  inline void set_damageinc(::google::protobuf::uint32 value);

  // optional uint32 hpsucker = 40;
  inline bool has_hpsucker() const;
  inline void clear_hpsucker();
  static const int kHpsuckerFieldNumber = 40;
  inline ::google::protobuf::uint32 hpsucker() const;
  inline void set_hpsucker(::google::protobuf::uint32 value);

  // optional uint32 mpsucker = 41;
  inline bool has_mpsucker() const;
  inline void clear_mpsucker();
  static const int kMpsuckerFieldNumber = 41;
  inline ::google::protobuf::uint32 mpsucker() const;
  inline void set_mpsucker(::google::protobuf::uint32 value);

  // optional uint32 hpsuckerrate = 42;
  inline bool has_hpsuckerrate() const;
  inline void clear_hpsuckerrate();
  static const int kHpsuckerrateFieldNumber = 42;
  inline ::google::protobuf::uint32 hpsuckerrate() const;
  inline void set_hpsuckerrate(::google::protobuf::uint32 value);

  // optional uint32 mpsuckerrate = 43;
  inline bool has_mpsuckerrate() const;
  inline void clear_mpsuckerrate();
  static const int kMpsuckerrateFieldNumber = 43;
  inline ::google::protobuf::uint32 mpsuckerrate() const;
  inline void set_mpsuckerrate(::google::protobuf::uint32 value);

  // optional uint32 hpresume = 44;
  inline bool has_hpresume() const;
  inline void clear_hpresume();
  static const int kHpresumeFieldNumber = 44;
  inline ::google::protobuf::uint32 hpresume() const;
  inline void set_hpresume(::google::protobuf::uint32 value);

  // optional uint32 mpresume = 45;
  inline bool has_mpresume() const;
  inline void clear_mpresume();
  static const int kMpresumeFieldNumber = 45;
  inline ::google::protobuf::uint32 mpresume() const;
  inline void set_mpresume(::google::protobuf::uint32 value);

  // optional uint32 moneyLostRate = 46;
  inline bool has_moneylostrate() const;
  inline void clear_moneylostrate();
  static const int kMoneyLostRateFieldNumber = 46;
  inline ::google::protobuf::uint32 moneylostrate() const;
  inline void set_moneylostrate(::google::protobuf::uint32 value);

  // optional uint32 equipLostRate = 47;
  inline bool has_equiplostrate() const;
  inline void clear_equiplostrate();
  static const int kEquipLostRateFieldNumber = 47;
  inline ::google::protobuf::uint32 equiplostrate() const;
  inline void set_equiplostrate(::google::protobuf::uint32 value);

  // optional uint32 smiteAdd = 48;
  inline bool has_smiteadd() const;
  inline void clear_smiteadd();
  static const int kSmiteAddFieldNumber = 48;
  inline ::google::protobuf::uint32 smiteadd() const;
  inline void set_smiteadd(::google::protobuf::uint32 value);

  // optional uint32 fixedhurtadd = 49;
  inline bool has_fixedhurtadd() const;
  inline void clear_fixedhurtadd();
  static const int kFixedhurtaddFieldNumber = 49;
  inline ::google::protobuf::uint32 fixedhurtadd() const;
  inline void set_fixedhurtadd(::google::protobuf::uint32 value);

  // optional uint32 fixedhurtsub = 50;
  inline bool has_fixedhurtsub() const;
  inline void clear_fixedhurtsub();
  static const int kFixedhurtsubFieldNumber = 50;
  inline ::google::protobuf::uint32 fixedhurtsub() const;
  inline void set_fixedhurtsub(::google::protobuf::uint32 value);

  // optional uint32 reflect = 51;
  inline bool has_reflect() const;
  inline void clear_reflect();
  static const int kReflectFieldNumber = 51;
  inline ::google::protobuf::uint32 reflect() const;
  inline void set_reflect(::google::protobuf::uint32 value);

  // optional uint32 shield = 52;
  inline bool has_shield() const;
  inline void clear_shield();
  static const int kShieldFieldNumber = 52;
  inline ::google::protobuf::uint32 shield() const;
  inline void set_shield(::google::protobuf::uint32 value);

  // optional uint32 resist = 53;
  inline bool has_resist() const;
  inline void clear_resist();
  static const int kResistFieldNumber = 53;
  inline ::google::protobuf::uint32 resist() const;
  inline void set_resist(::google::protobuf::uint32 value);

  // optional uint32 butterfly = 54;
  inline bool has_butterfly() const;
  inline void clear_butterfly();
  static const int kButterflyFieldNumber = 54;
  inline ::google::protobuf::uint32 butterfly() const;
  inline void set_butterfly(::google::protobuf::uint32 value);

  // optional uint32 reneglectrate = 55;
  inline bool has_reneglectrate() const;
  inline void clear_reneglectrate();
  static const int kReneglectrateFieldNumber = 55;
  inline ::google::protobuf::uint32 reneglectrate() const;
  inline void set_reneglectrate(::google::protobuf::uint32 value);

  // optional uint32 phyresist = 56;
  inline bool has_phyresist() const;
  inline void clear_phyresist();
  static const int kPhyresistFieldNumber = 56;
  inline ::google::protobuf::uint32 phyresist() const;
  inline void set_phyresist(::google::protobuf::uint32 value);

  // optional uint32 magresist = 57;
  inline bool has_magresist() const;
  inline void clear_magresist();
  static const int kMagresistFieldNumber = 57;
  inline ::google::protobuf::uint32 magresist() const;
  inline void set_magresist(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipBaseValue)
 private:
  inline void set_has_strength();
  inline void clear_has_strength();
  inline void set_has_dexterity();
  inline void clear_has_dexterity();
  inline void set_has_mentality();
  inline void clear_has_mentality();
  inline void set_has_constitution();
  inline void clear_has_constitution();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_maxmp();
  inline void clear_has_maxmp();
  inline void set_has_minpdamage();
  inline void clear_has_minpdamage();
  inline void set_has_maxpdamage();
  inline void clear_has_maxpdamage();
  inline void set_has_minmdamage();
  inline void clear_has_minmdamage();
  inline void set_has_maxmdamage();
  inline void clear_has_maxmdamage();
  inline void set_has_pdefence();
  inline void clear_has_pdefence();
  inline void set_has_mdefence();
  inline void clear_has_mdefence();
  inline void set_has_pdamagep();
  inline void clear_has_pdamagep();
  inline void set_has_mdamagep();
  inline void clear_has_mdamagep();
  inline void set_has_pdefencep();
  inline void clear_has_pdefencep();
  inline void set_has_mdefencep();
  inline void clear_has_mdefencep();
  inline void set_has_attlevel();
  inline void clear_has_attlevel();
  inline void set_has_deflevel();
  inline void clear_has_deflevel();
  inline void set_has_hplevel();
  inline void clear_has_hplevel();
  inline void set_has_mvspeed();
  inline void clear_has_mvspeed();
  inline void set_has_luckrate();
  inline void clear_has_luckrate();
  inline void set_has_hitrate();
  inline void clear_has_hitrate();
  inline void set_has_missrate();
  inline void clear_has_missrate();
  inline void set_has_smiterate();
  inline void clear_has_smiterate();
  inline void set_has_resmiterate();
  inline void clear_has_resmiterate();
  inline void set_has_beatrate();
  inline void clear_has_beatrate();
  inline void set_has_rebeatrate();
  inline void clear_has_rebeatrate();
  inline void set_has_paralysisrate();
  inline void clear_has_paralysisrate();
  inline void set_has_reparalysisrate();
  inline void clear_has_reparalysisrate();
  inline void set_has_coldrate();
  inline void clear_has_coldrate();
  inline void set_has_recoldrate();
  inline void clear_has_recoldrate();
  inline void set_has_reallrate();
  inline void clear_has_reallrate();
  inline void set_has_neglectrate();
  inline void clear_has_neglectrate();
  inline void set_has_damageinc();
  inline void clear_has_damageinc();
  inline void set_has_hpsucker();
  inline void clear_has_hpsucker();
  inline void set_has_mpsucker();
  inline void clear_has_mpsucker();
  inline void set_has_hpsuckerrate();
  inline void clear_has_hpsuckerrate();
  inline void set_has_mpsuckerrate();
  inline void clear_has_mpsuckerrate();
  inline void set_has_hpresume();
  inline void clear_has_hpresume();
  inline void set_has_mpresume();
  inline void clear_has_mpresume();
  inline void set_has_moneylostrate();
  inline void clear_has_moneylostrate();
  inline void set_has_equiplostrate();
  inline void clear_has_equiplostrate();
  inline void set_has_smiteadd();
  inline void clear_has_smiteadd();
  inline void set_has_fixedhurtadd();
  inline void clear_has_fixedhurtadd();
  inline void set_has_fixedhurtsub();
  inline void clear_has_fixedhurtsub();
  inline void set_has_reflect();
  inline void clear_has_reflect();
  inline void set_has_shield();
  inline void clear_has_shield();
  inline void set_has_resist();
  inline void clear_has_resist();
  inline void set_has_butterfly();
  inline void clear_has_butterfly();
  inline void set_has_reneglectrate();
  inline void clear_has_reneglectrate();
  inline void set_has_phyresist();
  inline void clear_has_phyresist();
  inline void set_has_magresist();
  inline void clear_has_magresist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint32 strength_;
  ::google::protobuf::uint32 dexterity_;
  ::google::protobuf::uint32 mentality_;
  ::google::protobuf::uint32 constitution_;
  ::google::protobuf::uint32 maxhp_;
  ::google::protobuf::uint32 maxmp_;
  ::google::protobuf::uint32 minpdamage_;
  ::google::protobuf::uint32 maxpdamage_;
  ::google::protobuf::uint32 minmdamage_;
  ::google::protobuf::uint32 maxmdamage_;
  ::google::protobuf::uint32 pdefence_;
  ::google::protobuf::uint32 mdefence_;
  ::google::protobuf::uint32 pdamagep_;
  ::google::protobuf::uint32 mdamagep_;
  ::google::protobuf::uint32 pdefencep_;
  ::google::protobuf::uint32 mdefencep_;
  ::google::protobuf::uint32 attlevel_;
  ::google::protobuf::uint32 deflevel_;
  ::google::protobuf::uint32 hplevel_;
  ::google::protobuf::int32 mvspeed_;
  ::google::protobuf::uint32 luckrate_;
  ::google::protobuf::uint32 hitrate_;
  ::google::protobuf::uint32 missrate_;
  ::google::protobuf::uint32 smiterate_;
  ::google::protobuf::uint32 resmiterate_;
  ::google::protobuf::uint32 beatrate_;
  ::google::protobuf::uint32 rebeatrate_;
  ::google::protobuf::uint32 paralysisrate_;
  ::google::protobuf::uint32 reparalysisrate_;
  ::google::protobuf::uint32 coldrate_;
  ::google::protobuf::uint32 recoldrate_;
  ::google::protobuf::uint32 reallrate_;
  ::google::protobuf::uint32 neglectrate_;
  ::google::protobuf::uint32 damageinc_;
  ::google::protobuf::uint32 hpsucker_;
  ::google::protobuf::uint32 mpsucker_;
  ::google::protobuf::uint32 hpsuckerrate_;
  ::google::protobuf::uint32 mpsuckerrate_;
  ::google::protobuf::uint32 hpresume_;
  ::google::protobuf::uint32 mpresume_;
  ::google::protobuf::uint32 moneylostrate_;
  ::google::protobuf::uint32 equiplostrate_;
  ::google::protobuf::uint32 smiteadd_;
  ::google::protobuf::uint32 fixedhurtadd_;
  ::google::protobuf::uint32 fixedhurtsub_;
  ::google::protobuf::uint32 reflect_;
  ::google::protobuf::uint32 shield_;
  ::google::protobuf::uint32 resist_;
  ::google::protobuf::uint32 butterfly_;
  ::google::protobuf::uint32 reneglectrate_;
  ::google::protobuf::uint32 phyresist_;
  ::google::protobuf::uint32 magresist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static EquipBaseValue* default_instance_;
};
// -------------------------------------------------------------------

class EquipSplitData : public ::google::protobuf::Message {
 public:
  EquipSplitData();
  virtual ~EquipSplitData();

  EquipSplitData(const EquipSplitData& from);

  inline EquipSplitData& operator=(const EquipSplitData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSplitData& default_instance();

  void Swap(EquipSplitData* other);

  // implements Message ----------------------------------------------

  EquipSplitData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSplitData& from);
  void MergeFrom(const EquipSplitData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipSplitData)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static EquipSplitData* default_instance_;
};
// -------------------------------------------------------------------

class t_Object : public ::google::protobuf::Message {
 public:
  t_Object();
  virtual ~t_Object();

  t_Object(const t_Object& from);

  inline t_Object& operator=(const t_Object& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t_Object& default_instance();

  void Swap(t_Object* other);

  // implements Message ----------------------------------------------

  t_Object* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t_Object& from);
  void MergeFrom(const t_Object& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 thisID = 1;
  inline bool has_thisid() const;
  inline void clear_thisid();
  static const int kThisIDFieldNumber = 1;
  inline ::google::protobuf::uint32 thisid() const;
  inline void set_thisid(::google::protobuf::uint32 value);

  // optional uint32 objID = 2;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIDFieldNumber = 2;
  inline ::google::protobuf::uint32 objid() const;
  inline void set_objid(::google::protobuf::uint32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string maker = 4;
  inline bool has_maker() const;
  inline void clear_maker();
  static const int kMakerFieldNumber = 4;
  inline const ::std::string& maker() const;
  inline void set_maker(const ::std::string& value);
  inline void set_maker(const char* value);
  inline void set_maker(const char* value, size_t size);
  inline ::std::string* mutable_maker();
  inline ::std::string* release_maker();
  inline void set_allocated_maker(::std::string* maker);

  // optional .ObjectLocation pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline const ::ObjectLocation& pos() const;
  inline ::ObjectLocation* mutable_pos();
  inline ::ObjectLocation* release_pos();
  inline void set_allocated_pos(::ObjectLocation* pos);

  // optional uint32 num = 6;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 6;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 upgrade = 7;
  inline bool has_upgrade() const;
  inline void clear_upgrade();
  static const int kUpgradeFieldNumber = 7;
  inline ::google::protobuf::uint32 upgrade() const;
  inline void set_upgrade(::google::protobuf::uint32 value);

  // optional uint32 kind = 8;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 8;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // optional uint32 level = 15;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 needlevel = 9;
  inline bool has_needlevel() const;
  inline void clear_needlevel();
  static const int kNeedlevelFieldNumber = 9;
  inline ::google::protobuf::uint32 needlevel() const;
  inline void set_needlevel(::google::protobuf::uint32 value);

  // optional uint32 maxDur = 10;
  inline bool has_maxdur() const;
  inline void clear_maxdur();
  static const int kMaxDurFieldNumber = 10;
  inline ::google::protobuf::uint32 maxdur() const;
  inline void set_maxdur(::google::protobuf::uint32 value);

  // optional uint32 dur = 11;
  inline bool has_dur() const;
  inline void clear_dur();
  static const int kDurFieldNumber = 11;
  inline ::google::protobuf::uint32 dur() const;
  inline void set_dur(::google::protobuf::uint32 value);

  // optional uint32 bind = 12;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 12;
  inline ::google::protobuf::uint32 bind() const;
  inline void set_bind(::google::protobuf::uint32 value);

  // optional uint32 timertype = 13;
  inline bool has_timertype() const;
  inline void clear_timertype();
  static const int kTimertypeFieldNumber = 13;
  inline ::google::protobuf::uint32 timertype() const;
  inline void set_timertype(::google::protobuf::uint32 value);

  // optional uint32 lifetime = 14;
  inline bool has_lifetime() const;
  inline void clear_lifetime();
  static const int kLifetimeFieldNumber = 14;
  inline ::google::protobuf::uint32 lifetime() const;
  inline void set_lifetime(::google::protobuf::uint32 value);

  // optional uint64 createID = 16;
  inline bool has_createid() const;
  inline void clear_createid();
  static const int kCreateIDFieldNumber = 16;
  inline ::google::protobuf::uint64 createid() const;
  inline void set_createid(::google::protobuf::uint64 value);

  // optional uint32 makeruleid = 20;
  inline bool has_makeruleid() const;
  inline void clear_makeruleid();
  static const int kMakeruleidFieldNumber = 20;
  inline ::google::protobuf::uint32 makeruleid() const;
  inline void set_makeruleid(::google::protobuf::uint32 value);

  // optional .PropertyValues equipProp = 22;
  inline bool has_equipprop() const;
  inline void clear_equipprop();
  static const int kEquipPropFieldNumber = 22;
  inline const ::PropertyValues& equipprop() const;
  inline ::PropertyValues* mutable_equipprop();
  inline ::PropertyValues* release_equipprop();
  inline void set_allocated_equipprop(::PropertyValues* equipprop);

  // optional .PropertyValuesEx equippropex = 23;
  inline bool has_equippropex() const;
  inline void clear_equippropex();
  static const int kEquippropexFieldNumber = 23;
  inline const ::PropertyValuesEx& equippropex() const;
  inline ::PropertyValuesEx* mutable_equippropex();
  inline ::PropertyValuesEx* release_equippropex();
  inline void set_allocated_equippropex(::PropertyValuesEx* equippropex);

  // repeated uint32 skill = 25;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 25;
  inline ::google::protobuf::uint32 skill(int index) const;
  inline void set_skill(int index, ::google::protobuf::uint32 value);
  inline void add_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill();

  // optional uint32 subneedlevel = 26;
  inline bool has_subneedlevel() const;
  inline void clear_subneedlevel();
  static const int kSubneedlevelFieldNumber = 26;
  inline ::google::protobuf::uint32 subneedlevel() const;
  inline void set_subneedlevel(::google::protobuf::uint32 value);

  // optional uint32 fivetype = 31;
  inline bool has_fivetype() const;
  inline void clear_fivetype();
  static const int kFivetypeFieldNumber = 31;
  inline ::google::protobuf::uint32 fivetype() const;
  inline void set_fivetype(::google::protobuf::uint32 value);

  // optional uint32 fivepoint = 32;
  inline bool has_fivepoint() const;
  inline void clear_fivepoint();
  static const int kFivepointFieldNumber = 32;
  inline ::google::protobuf::uint32 fivepoint() const;
  inline void set_fivepoint(::google::protobuf::uint32 value);

  // optional uint32 star = 33;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 33;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 diamondbonus = 36;
  inline bool has_diamondbonus() const;
  inline void clear_diamondbonus();
  static const int kDiamondbonusFieldNumber = 36;
  inline ::google::protobuf::uint32 diamondbonus() const;
  inline void set_diamondbonus(::google::protobuf::uint32 value);

  // optional .diamondSoket diamondsoket = 37;
  inline bool has_diamondsoket() const;
  inline void clear_diamondsoket();
  static const int kDiamondsoketFieldNumber = 37;
  inline const ::diamondSoket& diamondsoket() const;
  inline ::diamondSoket* mutable_diamondsoket();
  inline ::diamondSoket* release_diamondsoket();
  inline void set_allocated_diamondsoket(::diamondSoket* diamondsoket);

  // optional .wingData wing = 38;
  inline bool has_wing() const;
  inline void clear_wing();
  static const int kWingFieldNumber = 38;
  inline const ::wingData& wing() const;
  inline ::wingData* mutable_wing();
  inline ::wingData* release_wing();
  inline void set_allocated_wing(::wingData* wing);

  // optional uint32 active = 40;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 40;
  inline ::google::protobuf::uint32 active() const;
  inline void set_active(::google::protobuf::uint32 value);

  // optional uint32 boxExp = 41;
  inline bool has_boxexp() const;
  inline void clear_boxexp();
  static const int kBoxExpFieldNumber = 41;
  inline ::google::protobuf::uint32 boxexp() const;
  inline void set_boxexp(::google::protobuf::uint32 value);

  // optional .flyMessage fly = 43;
  inline bool has_fly() const;
  inline void clear_fly();
  static const int kFlyFieldNumber = 43;
  inline const ::flyMessage& fly() const;
  inline ::flyMessage* mutable_fly();
  inline ::flyMessage* release_fly();
  inline void set_allocated_fly(::flyMessage* fly);

  // optional uint32 horseid = 44;
  inline bool has_horseid() const;
  inline void clear_horseid();
  static const int kHorseidFieldNumber = 44;
  inline ::google::protobuf::uint32 horseid() const;
  inline void set_horseid(::google::protobuf::uint32 value);

  // optional uint32 spvalue = 45;
  inline bool has_spvalue() const;
  inline void clear_spvalue();
  static const int kSpvalueFieldNumber = 45;
  inline ::google::protobuf::uint32 spvalue() const;
  inline void set_spvalue(::google::protobuf::uint32 value);

  // optional uint32 friendvalue = 46;
  inline bool has_friendvalue() const;
  inline void clear_friendvalue();
  static const int kFriendvalueFieldNumber = 46;
  inline ::google::protobuf::uint32 friendvalue() const;
  inline void set_friendvalue(::google::protobuf::uint32 value);

  // optional uint32 usepos = 47;
  inline bool has_usepos() const;
  inline void clear_usepos();
  static const int kUseposFieldNumber = 47;
  inline ::google::protobuf::uint32 usepos() const;
  inline void set_usepos(::google::protobuf::uint32 value);

  // optional int32 elementattr = 48 [default = -1];
  inline bool has_elementattr() const;
  inline void clear_elementattr();
  static const int kElementattrFieldNumber = 48;
  inline ::google::protobuf::int32 elementattr() const;
  inline void set_elementattr(::google::protobuf::int32 value);

  // optional uint32 suittype = 49;
  inline bool has_suittype() const;
  inline void clear_suittype();
  static const int kSuittypeFieldNumber = 49;
  inline ::google::protobuf::uint32 suittype() const;
  inline void set_suittype(::google::protobuf::uint32 value);

  // optional uint32 suitvalue = 50;
  inline bool has_suitvalue() const;
  inline void clear_suitvalue();
  static const int kSuitvalueFieldNumber = 50;
  inline ::google::protobuf::uint32 suitvalue() const;
  inline void set_suitvalue(::google::protobuf::uint32 value);

  // optional .EquipSplitData splitvalue = 51;
  inline bool has_splitvalue() const;
  inline void clear_splitvalue();
  static const int kSplitvalueFieldNumber = 51;
  inline const ::EquipSplitData& splitvalue() const;
  inline ::EquipSplitData* mutable_splitvalue();
  inline ::EquipSplitData* release_splitvalue();
  inline void set_allocated_splitvalue(::EquipSplitData* splitvalue);

  // optional bool suitact = 52 [default = false];
  inline bool has_suitact() const;
  inline void clear_suitact();
  static const int kSuitactFieldNumber = 52;
  inline bool suitact() const;
  inline void set_suitact(bool value);

  // @@protoc_insertion_point(class_scope:t_Object)
 private:
  inline void set_has_thisid();
  inline void clear_has_thisid();
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_maker();
  inline void clear_has_maker();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_upgrade();
  inline void clear_has_upgrade();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_needlevel();
  inline void clear_has_needlevel();
  inline void set_has_maxdur();
  inline void clear_has_maxdur();
  inline void set_has_dur();
  inline void clear_has_dur();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_timertype();
  inline void clear_has_timertype();
  inline void set_has_lifetime();
  inline void clear_has_lifetime();
  inline void set_has_createid();
  inline void clear_has_createid();
  inline void set_has_makeruleid();
  inline void clear_has_makeruleid();
  inline void set_has_equipprop();
  inline void clear_has_equipprop();
  inline void set_has_equippropex();
  inline void clear_has_equippropex();
  inline void set_has_subneedlevel();
  inline void clear_has_subneedlevel();
  inline void set_has_fivetype();
  inline void clear_has_fivetype();
  inline void set_has_fivepoint();
  inline void clear_has_fivepoint();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_diamondbonus();
  inline void clear_has_diamondbonus();
  inline void set_has_diamondsoket();
  inline void clear_has_diamondsoket();
  inline void set_has_wing();
  inline void clear_has_wing();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_boxexp();
  inline void clear_has_boxexp();
  inline void set_has_fly();
  inline void clear_has_fly();
  inline void set_has_horseid();
  inline void clear_has_horseid();
  inline void set_has_spvalue();
  inline void clear_has_spvalue();
  inline void set_has_friendvalue();
  inline void clear_has_friendvalue();
  inline void set_has_usepos();
  inline void clear_has_usepos();
  inline void set_has_elementattr();
  inline void clear_has_elementattr();
  inline void set_has_suittype();
  inline void clear_has_suittype();
  inline void set_has_suitvalue();
  inline void clear_has_suitvalue();
  inline void set_has_splitvalue();
  inline void clear_has_splitvalue();
  inline void set_has_suitact();
  inline void clear_has_suitact();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint32 thisid_;
  ::google::protobuf::uint32 objid_;
  ::std::string* name_;
  ::std::string* maker_;
  ::ObjectLocation* pos_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 upgrade_;
  ::google::protobuf::uint32 kind_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 needlevel_;
  ::google::protobuf::uint32 maxdur_;
  ::google::protobuf::uint32 dur_;
  ::google::protobuf::uint32 bind_;
  ::google::protobuf::uint32 timertype_;
  ::google::protobuf::uint32 lifetime_;
  ::google::protobuf::uint64 createid_;
  ::PropertyValues* equipprop_;
  ::PropertyValuesEx* equippropex_;
  ::google::protobuf::uint32 makeruleid_;
  ::google::protobuf::uint32 subneedlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_;
  ::google::protobuf::uint32 fivetype_;
  ::google::protobuf::uint32 fivepoint_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 diamondbonus_;
  ::diamondSoket* diamondsoket_;
  ::wingData* wing_;
  ::google::protobuf::uint32 active_;
  ::google::protobuf::uint32 boxexp_;
  ::flyMessage* fly_;
  ::google::protobuf::uint32 horseid_;
  ::google::protobuf::uint32 spvalue_;
  ::google::protobuf::uint32 friendvalue_;
  ::google::protobuf::uint32 usepos_;
  ::google::protobuf::int32 elementattr_;
  ::google::protobuf::uint32 suittype_;
  ::EquipSplitData* splitvalue_;
  ::google::protobuf::uint32 suitvalue_;
  bool suitact_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static t_Object* default_instance_;
};
// -------------------------------------------------------------------

class ObjectMapData : public ::google::protobuf::Message {
 public:
  ObjectMapData();
  virtual ~ObjectMapData();

  ObjectMapData(const ObjectMapData& from);

  inline ObjectMapData& operator=(const ObjectMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectMapData& default_instance();

  void Swap(ObjectMapData* other);

  // implements Message ----------------------------------------------

  ObjectMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectMapData& from);
  void MergeFrom(const ObjectMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 temp_id = 2;
  inline bool has_temp_id() const;
  inline void clear_temp_id();
  static const int kTempIdFieldNumber = 2;
  inline ::google::protobuf::uint32 temp_id() const;
  inline void set_temp_id(::google::protobuf::uint32 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 x = 5;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 5;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 6;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 6;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 kind = 7;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 7;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // optional uint32 protect_time = 8;
  inline bool has_protect_time() const;
  inline void clear_protect_time();
  static const int kProtectTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 protect_time() const;
  inline void set_protect_time(::google::protobuf::uint32 value);

  // optional uint32 disappear_time = 9;
  inline bool has_disappear_time() const;
  inline void clear_disappear_time();
  static const int kDisappearTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 disappear_time() const;
  inline void set_disappear_time(::google::protobuf::uint32 value);

  // optional uint32 owner_type = 10;
  inline bool has_owner_type() const;
  inline void clear_owner_type();
  static const int kOwnerTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 owner_type() const;
  inline void set_owner_type(::google::protobuf::uint32 value);

  // optional uint32 owner_id = 11;
  inline bool has_owner_id() const;
  inline void clear_owner_id();
  static const int kOwnerIdFieldNumber = 11;
  inline ::google::protobuf::uint32 owner_id() const;
  inline void set_owner_id(::google::protobuf::uint32 value);

  // repeated uint32 prefixkeys = 12;
  inline int prefixkeys_size() const;
  inline void clear_prefixkeys();
  static const int kPrefixkeysFieldNumber = 12;
  inline ::google::protobuf::uint32 prefixkeys(int index) const;
  inline void set_prefixkeys(int index, ::google::protobuf::uint32 value);
  inline void add_prefixkeys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      prefixkeys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_prefixkeys();

  // @@protoc_insertion_point(class_scope:ObjectMapData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_temp_id();
  inline void clear_has_temp_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_protect_time();
  inline void clear_has_protect_time();
  inline void set_has_disappear_time();
  inline void clear_has_disappear_time();
  inline void set_has_owner_type();
  inline void clear_has_owner_type();
  inline void set_has_owner_id();
  inline void clear_has_owner_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 temp_id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 kind_;
  ::google::protobuf::uint32 protect_time_;
  ::google::protobuf::uint32 disappear_time_;
  ::google::protobuf::uint32 owner_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > prefixkeys_;
  ::google::protobuf::uint32 owner_id_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ObjectMapData* default_instance_;
};
// -------------------------------------------------------------------

class stChatChannel : public ::google::protobuf::Message {
 public:
  stChatChannel();
  virtual ~stChatChannel();

  stChatChannel(const stChatChannel& from);

  inline stChatChannel& operator=(const stChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stChatChannel& default_instance();

  void Swap(stChatChannel* other);

  // implements Message ----------------------------------------------

  stChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stChatChannel& from);
  void MergeFrom(const stChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string senderName = 1;
  inline bool has_sendername() const;
  inline void clear_sendername();
  static const int kSenderNameFieldNumber = 1;
  inline const ::std::string& sendername() const;
  inline void set_sendername(const ::std::string& value);
  inline void set_sendername(const char* value);
  inline void set_sendername(const char* value, size_t size);
  inline ::std::string* mutable_sendername();
  inline ::std::string* release_sendername();
  inline void set_allocated_sendername(::std::string* sendername);

  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // repeated .ScenePetData petData = 3;
  inline int petdata_size() const;
  inline void clear_petdata();
  static const int kPetDataFieldNumber = 3;
  inline const ::ScenePetData& petdata(int index) const;
  inline ::ScenePetData* mutable_petdata(int index);
  inline ::ScenePetData* add_petdata();
  inline const ::google::protobuf::RepeatedPtrField< ::ScenePetData >&
      petdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::ScenePetData >*
      mutable_petdata();

  // repeated .t_Object items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::t_Object& items(int index) const;
  inline ::t_Object* mutable_items(int index);
  inline ::t_Object* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::t_Object >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::t_Object >*
      mutable_items();

  // repeated .HorseExtraData horsedata = 5;
  inline int horsedata_size() const;
  inline void clear_horsedata();
  static const int kHorsedataFieldNumber = 5;
  inline const ::HorseExtraData& horsedata(int index) const;
  inline ::HorseExtraData* mutable_horsedata(int index);
  inline ::HorseExtraData* add_horsedata();
  inline const ::google::protobuf::RepeatedPtrField< ::HorseExtraData >&
      horsedata() const;
  inline ::google::protobuf::RepeatedPtrField< ::HorseExtraData >*
      mutable_horsedata();

  // @@protoc_insertion_point(class_scope:stChatChannel)
 private:
  inline void set_has_sendername();
  inline void clear_has_sendername();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sendername_;
  ::std::string* text_;
  ::google::protobuf::RepeatedPtrField< ::ScenePetData > petdata_;
  ::google::protobuf::RepeatedPtrField< ::t_Object > items_;
  ::google::protobuf::RepeatedPtrField< ::HorseExtraData > horsedata_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class stUserShopItemView : public ::google::protobuf::Message {
 public:
  stUserShopItemView();
  virtual ~stUserShopItemView();

  stUserShopItemView(const stUserShopItemView& from);

  inline stUserShopItemView& operator=(const stUserShopItemView& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stUserShopItemView& default_instance();

  void Swap(stUserShopItemView* other);

  // implements Message ----------------------------------------------

  stUserShopItemView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stUserShopItemView& from);
  void MergeFrom(const stUserShopItemView& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef stUserShopItemView_PriceTypes PriceTypes;
  static const PriceTypes Silver = stUserShopItemView_PriceTypes_Silver;
  static const PriceTypes Gold = stUserShopItemView_PriceTypes_Gold;
  static inline bool PriceTypes_IsValid(int value) {
    return stUserShopItemView_PriceTypes_IsValid(value);
  }
  static const PriceTypes PriceTypes_MIN =
    stUserShopItemView_PriceTypes_PriceTypes_MIN;
  static const PriceTypes PriceTypes_MAX =
    stUserShopItemView_PriceTypes_PriceTypes_MAX;
  static const int PriceTypes_ARRAYSIZE =
    stUserShopItemView_PriceTypes_PriceTypes_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PriceTypes_descriptor() {
    return stUserShopItemView_PriceTypes_descriptor();
  }
  static inline const ::std::string& PriceTypes_Name(PriceTypes value) {
    return stUserShopItemView_PriceTypes_Name(value);
  }
  static inline bool PriceTypes_Parse(const ::std::string& name,
      PriceTypes* value) {
    return stUserShopItemView_PriceTypes_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .t_Object item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::t_Object& item() const;
  inline ::t_Object* mutable_item();
  inline ::t_Object* release_item();
  inline void set_allocated_item(::t_Object* item);

  // optional uint32 unitPrice = 2;
  inline bool has_unitprice() const;
  inline void clear_unitprice();
  static const int kUnitPriceFieldNumber = 2;
  inline ::google::protobuf::uint32 unitprice() const;
  inline void set_unitprice(::google::protobuf::uint32 value);

  // optional uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 x = 4;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 4;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional .stUserShopItemView.PriceTypes price_type = 6 [default = Silver];
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 6;
  inline ::stUserShopItemView_PriceTypes price_type() const;
  inline void set_price_type(::stUserShopItemView_PriceTypes value);

  // optional uint32 tax = 7;
  inline bool has_tax() const;
  inline void clear_tax();
  static const int kTaxFieldNumber = 7;
  inline ::google::protobuf::uint32 tax() const;
  inline void set_tax(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:stUserShopItemView)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_unitprice();
  inline void clear_has_unitprice();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_tax();
  inline void clear_has_tax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::t_Object* item_;
  ::google::protobuf::uint32 unitprice_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  int price_type_;
  ::google::protobuf::uint32 tax_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static stUserShopItemView* default_instance_;
};
// -------------------------------------------------------------------

class LockItem : public ::google::protobuf::Message {
 public:
  LockItem();
  virtual ~LockItem();

  LockItem(const LockItem& from);

  inline LockItem& operator=(const LockItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LockItem& default_instance();

  void Swap(LockItem* other);

  // implements Message ----------------------------------------------

  LockItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LockItem& from);
  void MergeFrom(const LockItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LockItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static LockItem* default_instance_;
};
// -------------------------------------------------------------------

class CounterNum : public ::google::protobuf::Message {
 public:
  CounterNum();
  virtual ~CounterNum();

  CounterNum(const CounterNum& from);

  inline CounterNum& operator=(const CounterNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CounterNum& default_instance();

  void Swap(CounterNum* other);

  // implements Message ----------------------------------------------

  CounterNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CounterNum& from);
  void MergeFrom(const CounterNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 valueForDay = 3;
  inline bool has_valueforday() const;
  inline void clear_valueforday();
  static const int kValueForDayFieldNumber = 3;
  inline ::google::protobuf::uint32 valueforday() const;
  inline void set_valueforday(::google::protobuf::uint32 value);

  // optional uint32 valueForWeek = 4;
  inline bool has_valueforweek() const;
  inline void clear_valueforweek();
  static const int kValueForWeekFieldNumber = 4;
  inline ::google::protobuf::uint32 valueforweek() const;
  inline void set_valueforweek(::google::protobuf::uint32 value);

  // optional uint32 valueForMonth = 5;
  inline bool has_valueformonth() const;
  inline void clear_valueformonth();
  static const int kValueForMonthFieldNumber = 5;
  inline ::google::protobuf::uint32 valueformonth() const;
  inline void set_valueformonth(::google::protobuf::uint32 value);

  // optional uint32 valueForYear = 6;
  inline bool has_valueforyear() const;
  inline void clear_valueforyear();
  static const int kValueForYearFieldNumber = 6;
  inline ::google::protobuf::uint32 valueforyear() const;
  inline void set_valueforyear(::google::protobuf::uint32 value);

  // optional uint32 valueForever = 7;
  inline bool has_valueforever() const;
  inline void clear_valueforever();
  static const int kValueForeverFieldNumber = 7;
  inline ::google::protobuf::uint32 valueforever() const;
  inline void set_valueforever(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CounterNum)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_valueforday();
  inline void clear_has_valueforday();
  inline void set_has_valueforweek();
  inline void clear_has_valueforweek();
  inline void set_has_valueformonth();
  inline void clear_has_valueformonth();
  inline void set_has_valueforyear();
  inline void clear_has_valueforyear();
  inline void set_has_valueforever();
  inline void clear_has_valueforever();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 valueforday_;
  ::google::protobuf::uint32 valueforweek_;
  ::google::protobuf::uint32 valueformonth_;
  ::google::protobuf::uint32 valueforyear_;
  ::google::protobuf::uint32 valueforever_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CounterNum* default_instance_;
};
// -------------------------------------------------------------------

class CounterSave : public ::google::protobuf::Message {
 public:
  CounterSave();
  virtual ~CounterSave();

  CounterSave(const CounterSave& from);

  inline CounterSave& operator=(const CounterSave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CounterSave& default_instance();

  void Swap(CounterSave* other);

  // implements Message ----------------------------------------------

  CounterSave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CounterSave& from);
  void MergeFrom(const CounterSave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CounterType counttype = 1 [default = COUNTERT_NONE];
  inline bool has_counttype() const;
  inline void clear_counttype();
  static const int kCounttypeFieldNumber = 1;
  inline ::CounterType counttype() const;
  inline void set_counttype(::CounterType value);

  // repeated .CounterNum countnum = 2;
  inline int countnum_size() const;
  inline void clear_countnum();
  static const int kCountnumFieldNumber = 2;
  inline const ::CounterNum& countnum(int index) const;
  inline ::CounterNum* mutable_countnum(int index);
  inline ::CounterNum* add_countnum();
  inline const ::google::protobuf::RepeatedPtrField< ::CounterNum >&
      countnum() const;
  inline ::google::protobuf::RepeatedPtrField< ::CounterNum >*
      mutable_countnum();

  // @@protoc_insertion_point(class_scope:CounterSave)
 private:
  inline void set_has_counttype();
  inline void clear_has_counttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CounterNum > countnum_;
  int counttype_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CounterSave* default_instance_;
};
// -------------------------------------------------------------------

class TimeExpItem : public ::google::protobuf::Message {
 public:
  TimeExpItem();
  virtual ~TimeExpItem();

  TimeExpItem(const TimeExpItem& from);

  inline TimeExpItem& operator=(const TimeExpItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeExpItem& default_instance();

  void Swap(TimeExpItem* other);

  // implements Message ----------------------------------------------

  TimeExpItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeExpItem& from);
  void MergeFrom(const TimeExpItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 baseid = 1;
  inline bool has_baseid() const;
  inline void clear_baseid();
  static const int kBaseidFieldNumber = 1;
  inline ::google::protobuf::uint32 baseid() const;
  inline void set_baseid(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 end_time = 3;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 end_time() const;
  inline void set_end_time(::google::protobuf::uint32 value);

  // optional uint32 coefficient = 4;
  inline bool has_coefficient() const;
  inline void clear_coefficient();
  static const int kCoefficientFieldNumber = 4;
  inline ::google::protobuf::uint32 coefficient() const;
  inline void set_coefficient(::google::protobuf::uint32 value);

  // optional uint32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TimeExpItem)
 private:
  inline void set_has_baseid();
  inline void clear_has_baseid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_coefficient();
  inline void clear_has_coefficient();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 baseid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 coefficient_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TimeExpItem* default_instance_;
};
// -------------------------------------------------------------------

class TimeExpSave : public ::google::protobuf::Message {
 public:
  TimeExpSave();
  virtual ~TimeExpSave();

  TimeExpSave(const TimeExpSave& from);

  inline TimeExpSave& operator=(const TimeExpSave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeExpSave& default_instance();

  void Swap(TimeExpSave* other);

  // implements Message ----------------------------------------------

  TimeExpSave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeExpSave& from);
  void MergeFrom(const TimeExpSave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 left_time = 1;
  inline bool has_left_time() const;
  inline void clear_left_time();
  static const int kLeftTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 left_time() const;
  inline void set_left_time(::google::protobuf::uint32 value);

  // optional uint32 reset_time = 2;
  inline bool has_reset_time() const;
  inline void clear_reset_time();
  static const int kResetTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reset_time() const;
  inline void set_reset_time(::google::protobuf::uint32 value);

  // repeated .TimeExpItem expitem = 3;
  inline int expitem_size() const;
  inline void clear_expitem();
  static const int kExpitemFieldNumber = 3;
  inline const ::TimeExpItem& expitem(int index) const;
  inline ::TimeExpItem* mutable_expitem(int index);
  inline ::TimeExpItem* add_expitem();
  inline const ::google::protobuf::RepeatedPtrField< ::TimeExpItem >&
      expitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::TimeExpItem >*
      mutable_expitem();

  // @@protoc_insertion_point(class_scope:TimeExpSave)
 private:
  inline void set_has_left_time();
  inline void clear_has_left_time();
  inline void set_has_reset_time();
  inline void clear_has_reset_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 left_time_;
  ::google::protobuf::uint32 reset_time_;
  ::google::protobuf::RepeatedPtrField< ::TimeExpItem > expitem_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TimeExpSave* default_instance_;
};
// -------------------------------------------------------------------

class ObjectArray : public ::google::protobuf::Message {
 public:
  ObjectArray();
  virtual ~ObjectArray();

  ObjectArray(const ObjectArray& from);

  inline ObjectArray& operator=(const ObjectArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectArray& default_instance();

  void Swap(ObjectArray* other);

  // implements Message ----------------------------------------------

  ObjectArray* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectArray& from);
  void MergeFrom(const ObjectArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .t_Object objects = 1;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 1;
  inline const ::t_Object& objects(int index) const;
  inline ::t_Object* mutable_objects(int index);
  inline ::t_Object* add_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::t_Object >&
      objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::t_Object >*
      mutable_objects();

  // @@protoc_insertion_point(class_scope:ObjectArray)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::t_Object > objects_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ObjectArray* default_instance_;
};
// -------------------------------------------------------------------

class MailOneObject : public ::google::protobuf::Message {
 public:
  MailOneObject();
  virtual ~MailOneObject();

  MailOneObject(const MailOneObject& from);

  inline MailOneObject& operator=(const MailOneObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailOneObject& default_instance();

  void Swap(MailOneObject* other);

  // implements Message ----------------------------------------------

  MailOneObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailOneObject& from);
  void MergeFrom(const MailOneObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional .t_Object object = 2;
  inline bool has_object() const;
  inline void clear_object();
  static const int kObjectFieldNumber = 2;
  inline const ::t_Object& object() const;
  inline ::t_Object* mutable_object();
  inline ::t_Object* release_object();
  inline void set_allocated_object(::t_Object* object);

  // @@protoc_insertion_point(class_scope:MailOneObject)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_object();
  inline void clear_has_object();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::t_Object* object_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MailOneObject* default_instance_;
};
// -------------------------------------------------------------------

class MailObjects : public ::google::protobuf::Message {
 public:
  MailObjects();
  virtual ~MailObjects();

  MailObjects(const MailObjects& from);

  inline MailObjects& operator=(const MailObjects& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailObjects& default_instance();

  void Swap(MailObjects* other);

  // implements Message ----------------------------------------------

  MailObjects* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailObjects& from);
  void MergeFrom(const MailObjects& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MailOneObject objects = 1;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 1;
  inline const ::MailOneObject& objects(int index) const;
  inline ::MailOneObject* mutable_objects(int index);
  inline ::MailOneObject* add_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::MailOneObject >&
      objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::MailOneObject >*
      mutable_objects();

  // @@protoc_insertion_point(class_scope:MailObjects)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MailOneObject > objects_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MailObjects* default_instance_;
};
// -------------------------------------------------------------------

class SceneShowFuncNpcData : public ::google::protobuf::Message {
 public:
  SceneShowFuncNpcData();
  virtual ~SceneShowFuncNpcData();

  SceneShowFuncNpcData(const SceneShowFuncNpcData& from);

  inline SceneShowFuncNpcData& operator=(const SceneShowFuncNpcData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneShowFuncNpcData& default_instance();

  void Swap(SceneShowFuncNpcData* other);

  // implements Message ----------------------------------------------

  SceneShowFuncNpcData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneShowFuncNpcData& from);
  void MergeFrom(const SceneShowFuncNpcData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 baseId = 1;
  inline bool has_baseid() const;
  inline void clear_baseid();
  static const int kBaseIdFieldNumber = 1;
  inline ::google::protobuf::uint32 baseid() const;
  inline void set_baseid(::google::protobuf::uint32 value);

  // optional uint32 tempId = 2;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIdFieldNumber = 2;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 show = 5;
  inline bool has_show() const;
  inline void clear_show();
  static const int kShowFieldNumber = 5;
  inline ::google::protobuf::uint32 show() const;
  inline void set_show(::google::protobuf::uint32 value);

  // optional uint32 sign = 6;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 6;
  inline ::google::protobuf::uint32 sign() const;
  inline void set_sign(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SceneShowFuncNpcData)
 private:
  inline void set_has_baseid();
  inline void clear_has_baseid();
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_show();
  inline void clear_has_show();
  inline void set_has_sign();
  inline void clear_has_sign();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 baseid_;
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 show_;
  ::google::protobuf::uint32 sign_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SceneShowFuncNpcData* default_instance_;
};
// -------------------------------------------------------------------

class MapFuncNpcList : public ::google::protobuf::Message {
 public:
  MapFuncNpcList();
  virtual ~MapFuncNpcList();

  MapFuncNpcList(const MapFuncNpcList& from);

  inline MapFuncNpcList& operator=(const MapFuncNpcList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapFuncNpcList& default_instance();

  void Swap(MapFuncNpcList* other);

  // implements Message ----------------------------------------------

  MapFuncNpcList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapFuncNpcList& from);
  void MergeFrom(const MapFuncNpcList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SceneShowFuncNpcData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::SceneShowFuncNpcData& data(int index) const;
  inline ::SceneShowFuncNpcData* mutable_data(int index);
  inline ::SceneShowFuncNpcData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::SceneShowFuncNpcData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::SceneShowFuncNpcData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:MapFuncNpcList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SceneShowFuncNpcData > data_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MapFuncNpcList* default_instance_;
};
// -------------------------------------------------------------------

class MusterCount : public ::google::protobuf::Message {
 public:
  MusterCount();
  virtual ~MusterCount();

  MusterCount(const MusterCount& from);

  inline MusterCount& operator=(const MusterCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MusterCount& default_instance();

  void Swap(MusterCount* other);

  // implements Message ----------------------------------------------

  MusterCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MusterCount& from);
  void MergeFrom(const MusterCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 musterid = 1;
  inline bool has_musterid() const;
  inline void clear_musterid();
  static const int kMusteridFieldNumber = 1;
  inline ::google::protobuf::uint32 musterid() const;
  inline void set_musterid(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MusterCount)
 private:
  inline void set_has_musterid();
  inline void clear_has_musterid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 musterid_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MusterCount* default_instance_;
};
// -------------------------------------------------------------------

class septCartHelpBack : public ::google::protobuf::Message {
 public:
  septCartHelpBack();
  virtual ~septCartHelpBack();

  septCartHelpBack(const septCartHelpBack& from);

  inline septCartHelpBack& operator=(const septCartHelpBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const septCartHelpBack& default_instance();

  void Swap(septCartHelpBack* other);

  // implements Message ----------------------------------------------

  septCartHelpBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const septCartHelpBack& from);
  void MergeFrom(const septCartHelpBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // optional string scene_name = 2;
  inline bool has_scene_name() const;
  inline void clear_scene_name();
  static const int kSceneNameFieldNumber = 2;
  inline const ::std::string& scene_name() const;
  inline void set_scene_name(const ::std::string& value);
  inline void set_scene_name(const char* value);
  inline void set_scene_name(const char* value, size_t size);
  inline ::std::string* mutable_scene_name();
  inline ::std::string* release_scene_name();
  inline void set_allocated_scene_name(::std::string* scene_name);

  // optional uint32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 help_time = 5;
  inline bool has_help_time() const;
  inline void clear_help_time();
  static const int kHelpTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 help_time() const;
  inline void set_help_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:septCartHelpBack)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_scene_name();
  inline void clear_has_scene_name();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_help_time();
  inline void clear_has_help_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* scene_name_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 help_time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static septCartHelpBack* default_instance_;
};
// -------------------------------------------------------------------

class septCartHelpSave : public ::google::protobuf::Message {
 public:
  septCartHelpSave();
  virtual ~septCartHelpSave();

  septCartHelpSave(const septCartHelpSave& from);

  inline septCartHelpSave& operator=(const septCartHelpSave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const septCartHelpSave& default_instance();

  void Swap(septCartHelpSave* other);

  // implements Message ----------------------------------------------

  septCartHelpSave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const septCartHelpSave& from);
  void MergeFrom(const septCartHelpSave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cart_tmpid = 1 [default = 0];
  inline bool has_cart_tmpid() const;
  inline void clear_cart_tmpid();
  static const int kCartTmpidFieldNumber = 1;
  inline ::google::protobuf::uint32 cart_tmpid() const;
  inline void set_cart_tmpid(::google::protobuf::uint32 value);

  // optional bool available = 2 [default = false];
  inline bool has_available() const;
  inline void clear_available();
  static const int kAvailableFieldNumber = 2;
  inline bool available() const;
  inline void set_available(bool value);

  // @@protoc_insertion_point(class_scope:septCartHelpSave)
 private:
  inline void set_has_cart_tmpid();
  inline void clear_has_cart_tmpid();
  inline void set_has_available();
  inline void clear_has_available();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cart_tmpid_;
  bool available_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static septCartHelpSave* default_instance_;
};
// -------------------------------------------------------------------

class BinaryGangData : public ::google::protobuf::Message {
 public:
  BinaryGangData();
  virtual ~BinaryGangData();

  BinaryGangData(const BinaryGangData& from);

  inline BinaryGangData& operator=(const BinaryGangData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryGangData& default_instance();

  void Swap(BinaryGangData* other);

  // implements Message ----------------------------------------------

  BinaryGangData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryGangData& from);
  void MergeFrom(const BinaryGangData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 startdoubleexptime = 1;
  inline bool has_startdoubleexptime() const;
  inline void clear_startdoubleexptime();
  static const int kStartdoubleexptimeFieldNumber = 1;
  inline ::google::protobuf::uint32 startdoubleexptime() const;
  inline void set_startdoubleexptime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BinaryGangData)
 private:
  inline void set_has_startdoubleexptime();
  inline void clear_has_startdoubleexptime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 startdoubleexptime_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BinaryGangData* default_instance_;
};
// -------------------------------------------------------------------

class GangServerSyncData : public ::google::protobuf::Message {
 public:
  GangServerSyncData();
  virtual ~GangServerSyncData();

  GangServerSyncData(const GangServerSyncData& from);

  inline GangServerSyncData& operator=(const GangServerSyncData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GangServerSyncData& default_instance();

  void Swap(GangServerSyncData* other);

  // implements Message ----------------------------------------------

  GangServerSyncData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GangServerSyncData& from);
  void MergeFrom(const GangServerSyncData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gangid = 1;
  inline bool has_gangid() const;
  inline void clear_gangid();
  static const int kGangidFieldNumber = 1;
  inline ::google::protobuf::uint32 gangid() const;
  inline void set_gangid(::google::protobuf::uint32 value);

  // optional string gangname = 2;
  inline bool has_gangname() const;
  inline void clear_gangname();
  static const int kGangnameFieldNumber = 2;
  inline const ::std::string& gangname() const;
  inline void set_gangname(const ::std::string& value);
  inline void set_gangname(const char* value);
  inline void set_gangname(const char* value, size_t size);
  inline ::std::string* mutable_gangname();
  inline ::std::string* release_gangname();
  inline void set_allocated_gangname(::std::string* gangname);

  // optional uint32 startdoubleexptime = 3;
  inline bool has_startdoubleexptime() const;
  inline void clear_startdoubleexptime();
  static const int kStartdoubleexptimeFieldNumber = 3;
  inline ::google::protobuf::uint32 startdoubleexptime() const;
  inline void set_startdoubleexptime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GangServerSyncData)
 private:
  inline void set_has_gangid();
  inline void clear_has_gangid();
  inline void set_has_gangname();
  inline void clear_has_gangname();
  inline void set_has_startdoubleexptime();
  inline void clear_has_startdoubleexptime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gangname_;
  ::google::protobuf::uint32 gangid_;
  ::google::protobuf::uint32 startdoubleexptime_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static GangServerSyncData* default_instance_;
};
// -------------------------------------------------------------------

class StockAccountData : public ::google::protobuf::Message {
 public:
  StockAccountData();
  virtual ~StockAccountData();

  StockAccountData(const StockAccountData& from);

  inline StockAccountData& operator=(const StockAccountData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StockAccountData& default_instance();

  void Swap(StockAccountData* other);

  // implements Message ----------------------------------------------

  StockAccountData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StockAccountData& from);
  void MergeFrom(const StockAccountData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // optional uint32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:StockAccountData)
 private:
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 gold_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static StockAccountData* default_instance_;
};
// -------------------------------------------------------------------

class OneStockItem : public ::google::protobuf::Message {
 public:
  OneStockItem();
  virtual ~OneStockItem();

  OneStockItem(const OneStockItem& from);

  inline OneStockItem& operator=(const OneStockItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneStockItem& default_instance();

  void Swap(OneStockItem* other);

  // implements Message ----------------------------------------------

  OneStockItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneStockItem& from);
  void MergeFrom(const OneStockItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:OneStockItem)
 private:
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static OneStockItem* default_instance_;
};
// -------------------------------------------------------------------

class SelfOneStockItem : public ::google::protobuf::Message {
 public:
  SelfOneStockItem();
  virtual ~SelfOneStockItem();

  SelfOneStockItem(const SelfOneStockItem& from);

  inline SelfOneStockItem& operator=(const SelfOneStockItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelfOneStockItem& default_instance();

  void Swap(SelfOneStockItem* other);

  // implements Message ----------------------------------------------

  SelfOneStockItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelfOneStockItem& from);
  void MergeFrom(const SelfOneStockItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tradeid = 1;
  inline bool has_tradeid() const;
  inline void clear_tradeid();
  static const int kTradeidFieldNumber = 1;
  inline ::google::protobuf::uint32 tradeid() const;
  inline void set_tradeid(::google::protobuf::uint32 value);

  // optional .enumStockAuctionType type = 2 [default = enumStock_SellGold];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::enumStockAuctionType type() const;
  inline void set_type(::enumStockAuctionType value);

  // optional uint32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // optional uint32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SelfOneStockItem)
 private:
  inline void set_has_tradeid();
  inline void clear_has_tradeid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tradeid_;
  int type_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SelfOneStockItem* default_instance_;
};
// -------------------------------------------------------------------

class StockTypeList : public ::google::protobuf::Message {
 public:
  StockTypeList();
  virtual ~StockTypeList();

  StockTypeList(const StockTypeList& from);

  inline StockTypeList& operator=(const StockTypeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StockTypeList& default_instance();

  void Swap(StockTypeList* other);

  // implements Message ----------------------------------------------

  StockTypeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StockTypeList& from);
  void MergeFrom(const StockTypeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .enumStockAuctionType type = 1 [default = enumStock_SellGold];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::enumStockAuctionType type() const;
  inline void set_type(::enumStockAuctionType value);

  // repeated .OneStockItem items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::OneStockItem& items(int index) const;
  inline ::OneStockItem* mutable_items(int index);
  inline ::OneStockItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::OneStockItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneStockItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:StockTypeList)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::OneStockItem > items_;
  int type_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static StockTypeList* default_instance_;
};
// -------------------------------------------------------------------

class SeptBuildingData : public ::google::protobuf::Message {
 public:
  SeptBuildingData();
  virtual ~SeptBuildingData();

  SeptBuildingData(const SeptBuildingData& from);

  inline SeptBuildingData& operator=(const SeptBuildingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeptBuildingData& default_instance();

  void Swap(SeptBuildingData* other);

  // implements Message ----------------------------------------------

  SeptBuildingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeptBuildingData& from);
  void MergeFrom(const SeptBuildingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .enumSeptBuildingType type = 1 [default = enumSeptBuildingType_None];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::enumSeptBuildingType type() const;
  inline void set_type(::enumSeptBuildingType value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // optional uint32 buildstate = 4 [default = 0];
  inline bool has_buildstate() const;
  inline void clear_buildstate();
  static const int kBuildstateFieldNumber = 4;
  inline ::google::protobuf::uint32 buildstate() const;
  inline void set_buildstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SeptBuildingData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_buildstate();
  inline void clear_has_buildstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::uint32 buildstate_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SeptBuildingData* default_instance_;
};
// -------------------------------------------------------------------

class SceneChariotSkill : public ::google::protobuf::Message {
 public:
  SceneChariotSkill();
  virtual ~SceneChariotSkill();

  SceneChariotSkill(const SceneChariotSkill& from);

  inline SceneChariotSkill& operator=(const SceneChariotSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneChariotSkill& default_instance();

  void Swap(SceneChariotSkill* other);

  // implements Message ----------------------------------------------

  SceneChariotSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneChariotSkill& from);
  void MergeFrom(const SceneChariotSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // optional uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);

  // optional uint32 use_type = 3;
  inline bool has_use_type() const;
  inline void clear_use_type();
  static const int kUseTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 use_type() const;
  inline void set_use_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SceneChariotSkill)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_use_type();
  inline void clear_has_use_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 use_type_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SceneChariotSkill* default_instance_;
};
// -------------------------------------------------------------------

class SceneChariotBaseData : public ::google::protobuf::Message {
 public:
  SceneChariotBaseData();
  virtual ~SceneChariotBaseData();

  SceneChariotBaseData(const SceneChariotBaseData& from);

  inline SceneChariotBaseData& operator=(const SceneChariotBaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneChariotBaseData& default_instance();

  void Swap(SceneChariotBaseData* other);

  // implements Message ----------------------------------------------

  SceneChariotBaseData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneChariotBaseData& from);
  void MergeFrom(const SceneChariotBaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 base_id = 1;
  inline bool has_base_id() const;
  inline void clear_base_id();
  static const int kBaseIdFieldNumber = 1;
  inline ::google::protobuf::uint32 base_id() const;
  inline void set_base_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string type_name = 3;
  inline bool has_type_name() const;
  inline void clear_type_name();
  static const int kTypeNameFieldNumber = 3;
  inline const ::std::string& type_name() const;
  inline void set_type_name(const ::std::string& value);
  inline void set_type_name(const char* value);
  inline void set_type_name(const char* value, size_t size);
  inline ::std::string* mutable_type_name();
  inline ::std::string* release_type_name();
  inline void set_allocated_type_name(::std::string* type_name);

  // repeated uint32 sign = 4 [packed = true];
  inline int sign_size() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 4;
  inline ::google::protobuf::uint32 sign(int index) const;
  inline void set_sign(int index, ::google::protobuf::uint32 value);
  inline void add_sign(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sign() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sign();

  // repeated uint32 ai = 5;
  inline int ai_size() const;
  inline void clear_ai();
  static const int kAiFieldNumber = 5;
  inline ::google::protobuf::uint32 ai(int index) const;
  inline void set_ai(int index, ::google::protobuf::uint32 value);
  inline void add_ai(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ai() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ai();

  // optional uint32 honor_level = 6;
  inline bool has_honor_level() const;
  inline void clear_honor_level();
  static const int kHonorLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 honor_level() const;
  inline void set_honor_level(::google::protobuf::uint32 value);

  // optional uint32 honor = 7;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 7;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // optional uint32 sept_id = 8;
  inline bool has_sept_id() const;
  inline void clear_sept_id();
  static const int kSeptIdFieldNumber = 8;
  inline ::google::protobuf::uint32 sept_id() const;
  inline void set_sept_id(::google::protobuf::uint32 value);

  // optional uint32 index = 9;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 9;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional string ex_holder_name = 10;
  inline bool has_ex_holder_name() const;
  inline void clear_ex_holder_name();
  static const int kExHolderNameFieldNumber = 10;
  inline const ::std::string& ex_holder_name() const;
  inline void set_ex_holder_name(const ::std::string& value);
  inline void set_ex_holder_name(const char* value);
  inline void set_ex_holder_name(const char* value, size_t size);
  inline ::std::string* mutable_ex_holder_name();
  inline ::std::string* release_ex_holder_name();
  inline void set_allocated_ex_holder_name(::std::string* ex_holder_name);

  // optional uint32 max_carrier = 11;
  inline bool has_max_carrier() const;
  inline void clear_max_carrier();
  static const int kMaxCarrierFieldNumber = 11;
  inline ::google::protobuf::uint32 max_carrier() const;
  inline void set_max_carrier(::google::protobuf::uint32 value);

  // optional uint32 hp = 12;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 12;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 maxhp = 13;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 13;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // optional uint32 mp = 14;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 14;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // optional uint32 maxmp = 15;
  inline bool has_maxmp() const;
  inline void clear_maxmp();
  static const int kMaxmpFieldNumber = 15;
  inline ::google::protobuf::uint32 maxmp() const;
  inline void set_maxmp(::google::protobuf::uint32 value);

  // optional uint32 pmax_attack = 16;
  inline bool has_pmax_attack() const;
  inline void clear_pmax_attack();
  static const int kPmaxAttackFieldNumber = 16;
  inline ::google::protobuf::uint32 pmax_attack() const;
  inline void set_pmax_attack(::google::protobuf::uint32 value);

  // optional uint32 mmax_attack = 17;
  inline bool has_mmax_attack() const;
  inline void clear_mmax_attack();
  static const int kMmaxAttackFieldNumber = 17;
  inline ::google::protobuf::uint32 mmax_attack() const;
  inline void set_mmax_attack(::google::protobuf::uint32 value);

  // optional uint32 pmin_attack = 18;
  inline bool has_pmin_attack() const;
  inline void clear_pmin_attack();
  static const int kPminAttackFieldNumber = 18;
  inline ::google::protobuf::uint32 pmin_attack() const;
  inline void set_pmin_attack(::google::protobuf::uint32 value);

  // optional uint32 mmin_attack = 19;
  inline bool has_mmin_attack() const;
  inline void clear_mmin_attack();
  static const int kMminAttackFieldNumber = 19;
  inline ::google::protobuf::uint32 mmin_attack() const;
  inline void set_mmin_attack(::google::protobuf::uint32 value);

  // optional uint32 pdefence = 20;
  inline bool has_pdefence() const;
  inline void clear_pdefence();
  static const int kPdefenceFieldNumber = 20;
  inline ::google::protobuf::uint32 pdefence() const;
  inline void set_pdefence(::google::protobuf::uint32 value);

  // optional uint32 mdefence = 21;
  inline bool has_mdefence() const;
  inline void clear_mdefence();
  static const int kMdefenceFieldNumber = 21;
  inline ::google::protobuf::uint32 mdefence() const;
  inline void set_mdefence(::google::protobuf::uint32 value);

  // optional uint32 heavy = 22;
  inline bool has_heavy() const;
  inline void clear_heavy();
  static const int kHeavyFieldNumber = 22;
  inline ::google::protobuf::uint32 heavy() const;
  inline void set_heavy(::google::protobuf::uint32 value);

  // optional uint32 attack_speed_level = 23;
  inline bool has_attack_speed_level() const;
  inline void clear_attack_speed_level();
  static const int kAttackSpeedLevelFieldNumber = 23;
  inline ::google::protobuf::uint32 attack_speed_level() const;
  inline void set_attack_speed_level(::google::protobuf::uint32 value);

  // optional uint32 attack_length_level = 24;
  inline bool has_attack_length_level() const;
  inline void clear_attack_length_level();
  static const int kAttackLengthLevelFieldNumber = 24;
  inline ::google::protobuf::uint32 attack_length_level() const;
  inline void set_attack_length_level(::google::protobuf::uint32 value);

  // optional uint32 move_speed_level = 25;
  inline bool has_move_speed_level() const;
  inline void clear_move_speed_level();
  static const int kMoveSpeedLevelFieldNumber = 25;
  inline ::google::protobuf::uint32 move_speed_level() const;
  inline void set_move_speed_level(::google::protobuf::uint32 value);

  // optional uint32 strength = 26;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 26;
  inline ::google::protobuf::uint32 strength() const;
  inline void set_strength(::google::protobuf::uint32 value);

  // optional uint32 dexterity = 27;
  inline bool has_dexterity() const;
  inline void clear_dexterity();
  static const int kDexterityFieldNumber = 27;
  inline ::google::protobuf::uint32 dexterity() const;
  inline void set_dexterity(::google::protobuf::uint32 value);

  // optional uint32 mentality = 28;
  inline bool has_mentality() const;
  inline void clear_mentality();
  static const int kMentalityFieldNumber = 28;
  inline ::google::protobuf::uint32 mentality() const;
  inline void set_mentality(::google::protobuf::uint32 value);

  // optional uint32 constitution = 29;
  inline bool has_constitution() const;
  inline void clear_constitution();
  static const int kConstitutionFieldNumber = 29;
  inline ::google::protobuf::uint32 constitution() const;
  inline void set_constitution(::google::protobuf::uint32 value);

  // repeated .SceneChariotSkill skill = 35;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 35;
  inline const ::SceneChariotSkill& skill(int index) const;
  inline ::SceneChariotSkill* mutable_skill(int index);
  inline ::SceneChariotSkill* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::SceneChariotSkill >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::SceneChariotSkill >*
      mutable_skill();

  // @@protoc_insertion_point(class_scope:SceneChariotBaseData)
 private:
  inline void set_has_base_id();
  inline void clear_has_base_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type_name();
  inline void clear_has_type_name();
  inline void set_has_honor_level();
  inline void clear_has_honor_level();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_sept_id();
  inline void clear_has_sept_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_ex_holder_name();
  inline void clear_has_ex_holder_name();
  inline void set_has_max_carrier();
  inline void clear_has_max_carrier();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_maxmp();
  inline void clear_has_maxmp();
  inline void set_has_pmax_attack();
  inline void clear_has_pmax_attack();
  inline void set_has_mmax_attack();
  inline void clear_has_mmax_attack();
  inline void set_has_pmin_attack();
  inline void clear_has_pmin_attack();
  inline void set_has_mmin_attack();
  inline void clear_has_mmin_attack();
  inline void set_has_pdefence();
  inline void clear_has_pdefence();
  inline void set_has_mdefence();
  inline void clear_has_mdefence();
  inline void set_has_heavy();
  inline void clear_has_heavy();
  inline void set_has_attack_speed_level();
  inline void clear_has_attack_speed_level();
  inline void set_has_attack_length_level();
  inline void clear_has_attack_length_level();
  inline void set_has_move_speed_level();
  inline void clear_has_move_speed_level();
  inline void set_has_strength();
  inline void clear_has_strength();
  inline void set_has_dexterity();
  inline void clear_has_dexterity();
  inline void set_has_mentality();
  inline void clear_has_mentality();
  inline void set_has_constitution();
  inline void clear_has_constitution();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* type_name_;
  ::google::protobuf::uint32 base_id_;
  ::google::protobuf::uint32 honor_level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sign_;
  mutable int _sign_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ai_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 sept_id_;
  ::std::string* ex_holder_name_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 max_carrier_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 maxhp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 maxmp_;
  ::google::protobuf::uint32 pmax_attack_;
  ::google::protobuf::uint32 mmax_attack_;
  ::google::protobuf::uint32 pmin_attack_;
  ::google::protobuf::uint32 mmin_attack_;
  ::google::protobuf::uint32 pdefence_;
  ::google::protobuf::uint32 mdefence_;
  ::google::protobuf::uint32 heavy_;
  ::google::protobuf::uint32 attack_speed_level_;
  ::google::protobuf::uint32 attack_length_level_;
  ::google::protobuf::uint32 move_speed_level_;
  ::google::protobuf::uint32 strength_;
  ::google::protobuf::uint32 dexterity_;
  ::google::protobuf::uint32 mentality_;
  ::google::protobuf::uint32 constitution_;
  ::google::protobuf::RepeatedPtrField< ::SceneChariotSkill > skill_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SceneChariotBaseData* default_instance_;
};
// -------------------------------------------------------------------

class SceneChariotBinaryData : public ::google::protobuf::Message {
 public:
  SceneChariotBinaryData();
  virtual ~SceneChariotBinaryData();

  SceneChariotBinaryData(const SceneChariotBinaryData& from);

  inline SceneChariotBinaryData& operator=(const SceneChariotBinaryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneChariotBinaryData& default_instance();

  void Swap(SceneChariotBinaryData* other);

  // implements Message ----------------------------------------------

  SceneChariotBinaryData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneChariotBinaryData& from);
  void MergeFrom(const SceneChariotBinaryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SceneChariotBaseData base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::SceneChariotBaseData& base() const;
  inline ::SceneChariotBaseData* mutable_base();
  inline ::SceneChariotBaseData* release_base();
  inline void set_allocated_base(::SceneChariotBaseData* base);

  // optional uint32 holder_id = 2;
  inline bool has_holder_id() const;
  inline void clear_holder_id();
  static const int kHolderIdFieldNumber = 2;
  inline ::google::protobuf::uint32 holder_id() const;
  inline void set_holder_id(::google::protobuf::uint32 value);

  // optional string holder_name = 3;
  inline bool has_holder_name() const;
  inline void clear_holder_name();
  static const int kHolderNameFieldNumber = 3;
  inline const ::std::string& holder_name() const;
  inline void set_holder_name(const ::std::string& value);
  inline void set_holder_name(const char* value);
  inline void set_holder_name(const char* value, size_t size);
  inline ::std::string* mutable_holder_name();
  inline ::std::string* release_holder_name();
  inline void set_allocated_holder_name(::std::string* holder_name);

  // optional uint32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 tmpid = 5;
  inline bool has_tmpid() const;
  inline void clear_tmpid();
  static const int kTmpidFieldNumber = 5;
  inline ::google::protobuf::uint32 tmpid() const;
  inline void set_tmpid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SceneChariotBinaryData)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_holder_id();
  inline void clear_has_holder_id();
  inline void set_has_holder_name();
  inline void clear_has_holder_name();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_tmpid();
  inline void clear_has_tmpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SceneChariotBaseData* base_;
  ::std::string* holder_name_;
  ::google::protobuf::uint32 holder_id_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 tmpid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static SceneChariotBinaryData* default_instance_;
};
// -------------------------------------------------------------------

class UserTempPosition : public ::google::protobuf::Message {
 public:
  UserTempPosition();
  virtual ~UserTempPosition();

  UserTempPosition(const UserTempPosition& from);

  inline UserTempPosition& operator=(const UserTempPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserTempPosition& default_instance();

  void Swap(UserTempPosition* other);

  // implements Message ----------------------------------------------

  UserTempPosition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserTempPosition& from);
  void MergeFrom(const UserTempPosition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 src_sceneid = 1;
  inline bool has_src_sceneid() const;
  inline void clear_src_sceneid();
  static const int kSrcSceneidFieldNumber = 1;
  inline ::google::protobuf::uint32 src_sceneid() const;
  inline void set_src_sceneid(::google::protobuf::uint32 value);

  // optional uint32 src_posx = 2;
  inline bool has_src_posx() const;
  inline void clear_src_posx();
  static const int kSrcPosxFieldNumber = 2;
  inline ::google::protobuf::uint32 src_posx() const;
  inline void set_src_posx(::google::protobuf::uint32 value);

  // optional uint32 src_posy = 3;
  inline bool has_src_posy() const;
  inline void clear_src_posy();
  static const int kSrcPosyFieldNumber = 3;
  inline ::google::protobuf::uint32 src_posy() const;
  inline void set_src_posy(::google::protobuf::uint32 value);

  // optional string src_mapname = 4;
  inline bool has_src_mapname() const;
  inline void clear_src_mapname();
  static const int kSrcMapnameFieldNumber = 4;
  inline const ::std::string& src_mapname() const;
  inline void set_src_mapname(const ::std::string& value);
  inline void set_src_mapname(const char* value);
  inline void set_src_mapname(const char* value, size_t size);
  inline ::std::string* mutable_src_mapname();
  inline ::std::string* release_src_mapname();
  inline void set_allocated_src_mapname(::std::string* src_mapname);

  // @@protoc_insertion_point(class_scope:UserTempPosition)
 private:
  inline void set_has_src_sceneid();
  inline void clear_has_src_sceneid();
  inline void set_has_src_posx();
  inline void clear_has_src_posx();
  inline void set_has_src_posy();
  inline void clear_has_src_posy();
  inline void set_has_src_mapname();
  inline void clear_has_src_mapname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 src_sceneid_;
  ::google::protobuf::uint32 src_posx_;
  ::std::string* src_mapname_;
  ::google::protobuf::uint32 src_posy_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static UserTempPosition* default_instance_;
};
// -------------------------------------------------------------------

class BiGuanXiuXianData : public ::google::protobuf::Message {
 public:
  BiGuanXiuXianData();
  virtual ~BiGuanXiuXianData();

  BiGuanXiuXianData(const BiGuanXiuXianData& from);

  inline BiGuanXiuXianData& operator=(const BiGuanXiuXianData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BiGuanXiuXianData& default_instance();

  void Swap(BiGuanXiuXianData* other);

  // implements Message ----------------------------------------------

  BiGuanXiuXianData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BiGuanXiuXianData& from);
  void MergeFrom(const BiGuanXiuXianData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .enumBiGuanXiuXianType type = 1 [default = enumBiGuanXiuXian_None];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::enumBiGuanXiuXianType type() const;
  inline void set_type(::enumBiGuanXiuXianType value);

  // optional uint32 expeffic = 2;
  inline bool has_expeffic() const;
  inline void clear_expeffic();
  static const int kExpefficFieldNumber = 2;
  inline ::google::protobuf::uint32 expeffic() const;
  inline void set_expeffic(::google::protobuf::uint32 value);

  // optional uint32 starttime = 3;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 3;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint64 storeexp = 4;
  inline bool has_storeexp() const;
  inline void clear_storeexp();
  static const int kStoreexpFieldNumber = 4;
  inline ::google::protobuf::uint64 storeexp() const;
  inline void set_storeexp(::google::protobuf::uint64 value);

  // optional uint32 silver = 5;
  inline bool has_silver() const;
  inline void clear_silver();
  static const int kSilverFieldNumber = 5;
  inline ::google::protobuf::uint32 silver() const;
  inline void set_silver(::google::protobuf::uint32 value);

  // optional uint32 gold = 6;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 6;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 alltime = 8;
  inline bool has_alltime() const;
  inline void clear_alltime();
  static const int kAlltimeFieldNumber = 8;
  inline ::google::protobuf::uint32 alltime() const;
  inline void set_alltime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BiGuanXiuXianData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_expeffic();
  inline void clear_has_expeffic();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_storeexp();
  inline void clear_has_storeexp();
  inline void set_has_silver();
  inline void clear_has_silver();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_alltime();
  inline void clear_has_alltime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 expeffic_;
  ::google::protobuf::uint64 storeexp_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 silver_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 alltime_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BiGuanXiuXianData* default_instance_;
};
// -------------------------------------------------------------------

class ObjectDrop : public ::google::protobuf::Message {
 public:
  ObjectDrop();
  virtual ~ObjectDrop();

  ObjectDrop(const ObjectDrop& from);

  inline ObjectDrop& operator=(const ObjectDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectDrop& default_instance();

  void Swap(ObjectDrop* other);

  // implements Message ----------------------------------------------

  ObjectDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectDrop& from);
  void MergeFrom(const ObjectDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .enumObjectDropType type = 1 [default = enumObjectDropType_Set];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::enumObjectDropType type() const;
  inline void set_type(::enumObjectDropType value);

  // optional uint32 countryid = 2;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 2;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 objectid = 3;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 3;
  inline ::google::protobuf::uint32 objectid() const;
  inline void set_objectid(::google::protobuf::uint32 value);

  // optional uint32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 period = 5;
  inline bool has_period() const;
  inline void clear_period();
  static const int kPeriodFieldNumber = 5;
  inline ::google::protobuf::uint32 period() const;
  inline void set_period(::google::protobuf::uint32 value);

  // optional uint32 starttime = 6;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 6;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 7;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 7;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 next_resettime = 8;
  inline bool has_next_resettime() const;
  inline void clear_next_resettime();
  static const int kNextResettimeFieldNumber = 8;
  inline ::google::protobuf::uint32 next_resettime() const;
  inline void set_next_resettime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ObjectDrop)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_period();
  inline void clear_has_period();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_next_resettime();
  inline void clear_has_next_resettime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 objectid_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 period_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 next_resettime_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ObjectDrop* default_instance_;
};
// -------------------------------------------------------------------

class ObjectDropSave : public ::google::protobuf::Message {
 public:
  ObjectDropSave();
  virtual ~ObjectDropSave();

  ObjectDropSave(const ObjectDropSave& from);

  inline ObjectDropSave& operator=(const ObjectDropSave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectDropSave& default_instance();

  void Swap(ObjectDropSave* other);

  // implements Message ----------------------------------------------

  ObjectDropSave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectDropSave& from);
  void MergeFrom(const ObjectDropSave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ObjectDrop object = 1;
  inline int object_size() const;
  inline void clear_object();
  static const int kObjectFieldNumber = 1;
  inline const ::ObjectDrop& object(int index) const;
  inline ::ObjectDrop* mutable_object(int index);
  inline ::ObjectDrop* add_object();
  inline const ::google::protobuf::RepeatedPtrField< ::ObjectDrop >&
      object() const;
  inline ::google::protobuf::RepeatedPtrField< ::ObjectDrop >*
      mutable_object();

  // @@protoc_insertion_point(class_scope:ObjectDropSave)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ObjectDrop > object_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ObjectDropSave* default_instance_;
};
// -------------------------------------------------------------------

class CopyUserMember : public ::google::protobuf::Message {
 public:
  CopyUserMember();
  virtual ~CopyUserMember();

  CopyUserMember(const CopyUserMember& from);

  inline CopyUserMember& operator=(const CopyUserMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CopyUserMember& default_instance();

  void Swap(CopyUserMember* other);

  // implements Message ----------------------------------------------

  CopyUserMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CopyUserMember& from);
  void MergeFrom(const CopyUserMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CopyUserMember)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CopyUserMember* default_instance_;
};
// -------------------------------------------------------------------

class DBCopySceneBinaryData : public ::google::protobuf::Message {
 public:
  DBCopySceneBinaryData();
  virtual ~DBCopySceneBinaryData();

  DBCopySceneBinaryData(const DBCopySceneBinaryData& from);

  inline DBCopySceneBinaryData& operator=(const DBCopySceneBinaryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBCopySceneBinaryData& default_instance();

  void Swap(DBCopySceneBinaryData* other);

  // implements Message ----------------------------------------------

  DBCopySceneBinaryData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBCopySceneBinaryData& from);
  void MergeFrom(const DBCopySceneBinaryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CopyUserMember member1 = 1;
  inline int member1_size() const;
  inline void clear_member1();
  static const int kMember1FieldNumber = 1;
  inline const ::CopyUserMember& member1(int index) const;
  inline ::CopyUserMember* mutable_member1(int index);
  inline ::CopyUserMember* add_member1();
  inline const ::google::protobuf::RepeatedPtrField< ::CopyUserMember >&
      member1() const;
  inline ::google::protobuf::RepeatedPtrField< ::CopyUserMember >*
      mutable_member1();

  // repeated .CopyUserMember member2 = 2;
  inline int member2_size() const;
  inline void clear_member2();
  static const int kMember2FieldNumber = 2;
  inline const ::CopyUserMember& member2(int index) const;
  inline ::CopyUserMember* mutable_member2(int index);
  inline ::CopyUserMember* add_member2();
  inline const ::google::protobuf::RepeatedPtrField< ::CopyUserMember >&
      member2() const;
  inline ::google::protobuf::RepeatedPtrField< ::CopyUserMember >*
      mutable_member2();

  // optional uint32 cost = 3;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 3;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);

  // optional uint32 septid = 13;
  inline bool has_septid() const;
  inline void clear_septid();
  static const int kSeptidFieldNumber = 13;
  inline ::google::protobuf::uint32 septid() const;
  inline void set_septid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DBCopySceneBinaryData)
 private:
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_septid();
  inline void clear_has_septid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CopyUserMember > member1_;
  ::google::protobuf::RepeatedPtrField< ::CopyUserMember > member2_;
  ::google::protobuf::uint32 cost_;
  ::google::protobuf::uint32 septid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static DBCopySceneBinaryData* default_instance_;
};
// -------------------------------------------------------------------

class HorseExtraData : public ::google::protobuf::Message {
 public:
  HorseExtraData();
  virtual ~HorseExtraData();

  HorseExtraData(const HorseExtraData& from);

  inline HorseExtraData& operator=(const HorseExtraData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorseExtraData& default_instance();

  void Swap(HorseExtraData* other);

  // implements Message ----------------------------------------------

  HorseExtraData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HorseExtraData& from);
  void MergeFrom(const HorseExtraData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 horseid = 1;
  inline bool has_horseid() const;
  inline void clear_horseid();
  static const int kHorseidFieldNumber = 1;
  inline ::google::protobuf::uint32 horseid() const;
  inline void set_horseid(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 speed = 4;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 4;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);

  // optional uint32 smiterate = 5;
  inline bool has_smiterate() const;
  inline void clear_smiterate();
  static const int kSmiterateFieldNumber = 5;
  inline ::google::protobuf::uint32 smiterate() const;
  inline void set_smiterate(::google::protobuf::uint32 value);

  // optional uint32 luck = 6;
  inline bool has_luck() const;
  inline void clear_luck();
  static const int kLuckFieldNumber = 6;
  inline ::google::protobuf::uint32 luck() const;
  inline void set_luck(::google::protobuf::uint32 value);

  // repeated uint32 skillid = 7;
  inline int skillid_size() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 7;
  inline ::google::protobuf::uint32 skillid(int index) const;
  inline void set_skillid(int index, ::google::protobuf::uint32 value);
  inline void add_skillid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skillid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skillid();

  // optional uint32 baseid = 8;
  inline bool has_baseid() const;
  inline void clear_baseid();
  static const int kBaseidFieldNumber = 8;
  inline ::google::protobuf::uint32 baseid() const;
  inline void set_baseid(::google::protobuf::uint32 value);

  // optional uint32 thisid = 9;
  inline bool has_thisid() const;
  inline void clear_thisid();
  static const int kThisidFieldNumber = 9;
  inline ::google::protobuf::uint32 thisid() const;
  inline void set_thisid(::google::protobuf::uint32 value);

  // repeated uint32 skilllevel = 10;
  inline int skilllevel_size() const;
  inline void clear_skilllevel();
  static const int kSkilllevelFieldNumber = 10;
  inline ::google::protobuf::uint32 skilllevel(int index) const;
  inline void set_skilllevel(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skilllevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skilllevel();

  // @@protoc_insertion_point(class_scope:HorseExtraData)
 private:
  inline void set_has_horseid();
  inline void clear_has_horseid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_smiterate();
  inline void clear_has_smiterate();
  inline void set_has_luck();
  inline void clear_has_luck();
  inline void set_has_baseid();
  inline void clear_has_baseid();
  inline void set_has_thisid();
  inline void clear_has_thisid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 horseid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 smiterate_;
  ::google::protobuf::uint32 luck_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillid_;
  ::google::protobuf::uint32 baseid_;
  ::google::protobuf::uint32 thisid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static HorseExtraData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterMapShow : public ::google::protobuf::Message {
 public:
  CharacterMapShow();
  virtual ~CharacterMapShow();

  CharacterMapShow(const CharacterMapShow& from);

  inline CharacterMapShow& operator=(const CharacterMapShow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterMapShow& default_instance();

  void Swap(CharacterMapShow* other);

  // implements Message ----------------------------------------------

  CharacterMapShow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterMapShow& from);
  void MergeFrom(const CharacterMapShow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 face = 1;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 1;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);

  // optional uint32 hairstyle = 2;
  inline bool has_hairstyle() const;
  inline void clear_hairstyle();
  static const int kHairstyleFieldNumber = 2;
  inline ::google::protobuf::uint32 hairstyle() const;
  inline void set_hairstyle(::google::protobuf::uint32 value);

  // optional uint32 haircolor = 3;
  inline bool has_haircolor() const;
  inline void clear_haircolor();
  static const int kHaircolorFieldNumber = 3;
  inline ::google::protobuf::uint32 haircolor() const;
  inline void set_haircolor(::google::protobuf::uint32 value);

  // optional uint32 weapon = 4;
  inline bool has_weapon() const;
  inline void clear_weapon();
  static const int kWeaponFieldNumber = 4;
  inline ::google::protobuf::uint32 weapon() const;
  inline void set_weapon(::google::protobuf::uint32 value);

  // optional uint32 coat = 5;
  inline bool has_coat() const;
  inline void clear_coat();
  static const int kCoatFieldNumber = 5;
  inline ::google::protobuf::uint32 coat() const;
  inline void set_coat(::google::protobuf::uint32 value);

  // optional uint32 horse = 6;
  inline bool has_horse() const;
  inline void clear_horse();
  static const int kHorseFieldNumber = 6;
  inline ::google::protobuf::uint32 horse() const;
  inline void set_horse(::google::protobuf::uint32 value);

  // optional uint32 wing = 7;
  inline bool has_wing() const;
  inline void clear_wing();
  static const int kWingFieldNumber = 7;
  inline ::google::protobuf::uint32 wing() const;
  inline void set_wing(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CharacterMapShow)
 private:
  inline void set_has_face();
  inline void clear_has_face();
  inline void set_has_hairstyle();
  inline void clear_has_hairstyle();
  inline void set_has_haircolor();
  inline void clear_has_haircolor();
  inline void set_has_weapon();
  inline void clear_has_weapon();
  inline void set_has_coat();
  inline void clear_has_coat();
  inline void set_has_horse();
  inline void clear_has_horse();
  inline void set_has_wing();
  inline void clear_has_wing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 hairstyle_;
  ::google::protobuf::uint32 haircolor_;
  ::google::protobuf::uint32 weapon_;
  ::google::protobuf::uint32 coat_;
  ::google::protobuf::uint32 horse_;
  ::google::protobuf::uint32 wing_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CharacterMapShow* default_instance_;
};
// -------------------------------------------------------------------

class StateData : public ::google::protobuf::Message {
 public:
  StateData();
  virtual ~StateData();

  StateData(const StateData& from);

  inline StateData& operator=(const StateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StateData& default_instance();

  void Swap(StateData* other);

  // implements Message ----------------------------------------------

  StateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StateData& from);
  void MergeFrom(const StateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 stateid = 1;
  inline bool has_stateid() const;
  inline void clear_stateid();
  static const int kStateidFieldNumber = 1;
  inline ::google::protobuf::uint64 stateid() const;
  inline void set_stateid(::google::protobuf::uint64 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional uint32 linkpoint = 4;
  inline bool has_linkpoint() const;
  inline void clear_linkpoint();
  static const int kLinkpointFieldNumber = 4;
  inline ::google::protobuf::uint32 linkpoint() const;
  inline void set_linkpoint(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:StateData)
 private:
  inline void set_has_stateid();
  inline void clear_has_stateid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_linkpoint();
  inline void clear_has_linkpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 stateid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::uint32 linkpoint_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static StateData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterMapData : public ::google::protobuf::Message {
 public:
  CharacterMapData();
  virtual ~CharacterMapData();

  CharacterMapData(const CharacterMapData& from);

  inline CharacterMapData& operator=(const CharacterMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterMapData& default_instance();

  void Swap(CharacterMapData* other);

  // implements Message ----------------------------------------------

  CharacterMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterMapData& from);
  void MergeFrom(const CharacterMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CharacterMapShow mapShow = 1;
  inline bool has_mapshow() const;
  inline void clear_mapshow();
  static const int kMapShowFieldNumber = 1;
  inline const ::CharacterMapShow& mapshow() const;
  inline ::CharacterMapShow* mutable_mapshow();
  inline ::CharacterMapShow* release_mapshow();
  inline void set_allocated_mapshow(::CharacterMapShow* mapshow);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 country = 3;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 3;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);

  // optional uint32 septOfficer = 4;
  inline bool has_septofficer() const;
  inline void clear_septofficer();
  static const int kSeptOfficerFieldNumber = 4;
  inline ::google::protobuf::uint32 septofficer() const;
  inline void set_septofficer(::google::protobuf::uint32 value);

  // optional uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 x = 7;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 7;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 8;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 8;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 z = 38;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 38;
  inline ::google::protobuf::uint32 z() const;
  inline void set_z(::google::protobuf::uint32 value);

  // optional uint32 dir = 9;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 9;
  inline ::google::protobuf::uint32 dir() const;
  inline void set_dir(::google::protobuf::uint32 value);

  // optional uint32 moveSpeed = 10;
  inline bool has_movespeed() const;
  inline void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 10;
  inline ::google::protobuf::uint32 movespeed() const;
  inline void set_movespeed(::google::protobuf::uint32 value);

  // optional uint32 evilvalue = 11;
  inline bool has_evilvalue() const;
  inline void clear_evilvalue();
  static const int kEvilvalueFieldNumber = 11;
  inline ::google::protobuf::uint32 evilvalue() const;
  inline void set_evilvalue(::google::protobuf::uint32 value);

  // optional uint32 questState = 12;
  inline bool has_queststate() const;
  inline void clear_queststate();
  static const int kQuestStateFieldNumber = 12;
  inline ::google::protobuf::uint32 queststate() const;
  inline void set_queststate(::google::protobuf::uint32 value);

  // optional string shopName = 13;
  inline bool has_shopname() const;
  inline void clear_shopname();
  static const int kShopNameFieldNumber = 13;
  inline const ::std::string& shopname() const;
  inline void set_shopname(const ::std::string& value);
  inline void set_shopname(const char* value);
  inline void set_shopname(const char* value, size_t size);
  inline ::std::string* mutable_shopname();
  inline ::std::string* release_shopname();
  inline void set_allocated_shopname(::std::string* shopname);

  // optional uint32 shopState = 14;
  inline bool has_shopstate() const;
  inline void clear_shopstate();
  static const int kShopStateFieldNumber = 14;
  inline ::google::protobuf::uint32 shopstate() const;
  inline void set_shopstate(::google::protobuf::uint32 value);

  // optional uint32 shopNameColor = 15;
  inline bool has_shopnamecolor() const;
  inline void clear_shopnamecolor();
  static const int kShopNameColorFieldNumber = 15;
  inline ::google::protobuf::uint32 shopnamecolor() const;
  inline void set_shopnamecolor(::google::protobuf::uint32 value);

  // repeated .StateData ninestate = 16;
  inline int ninestate_size() const;
  inline void clear_ninestate();
  static const int kNinestateFieldNumber = 16;
  inline const ::StateData& ninestate(int index) const;
  inline ::StateData* mutable_ninestate(int index);
  inline ::StateData* add_ninestate();
  inline const ::google::protobuf::RepeatedPtrField< ::StateData >&
      ninestate() const;
  inline ::google::protobuf::RepeatedPtrField< ::StateData >*
      mutable_ninestate();

  // optional string name = 17;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 17;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string septname = 18;
  inline bool has_septname() const;
  inline void clear_septname();
  static const int kSeptnameFieldNumber = 18;
  inline const ::std::string& septname() const;
  inline void set_septname(const ::std::string& value);
  inline void set_septname(const char* value);
  inline void set_septname(const char* value, size_t size);
  inline ::std::string* mutable_septname();
  inline ::std::string* release_septname();
  inline void set_allocated_septname(::std::string* septname);

  // optional string title = 20;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 20;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string teamName = 21;
  inline bool has_teamname() const;
  inline void clear_teamname();
  static const int kTeamNameFieldNumber = 21;
  inline const ::std::string& teamname() const;
  inline void set_teamname(const ::std::string& value);
  inline void set_teamname(const char* value);
  inline void set_teamname(const char* value, size_t size);
  inline ::std::string* mutable_teamname();
  inline ::std::string* release_teamname();
  inline void set_allocated_teamname(::std::string* teamname);

  // optional uint32 worldLevel = 22;
  inline bool has_worldlevel() const;
  inline void clear_worldlevel();
  static const int kWorldLevelFieldNumber = 22;
  inline ::google::protobuf::uint32 worldlevel() const;
  inline void set_worldlevel(::google::protobuf::uint32 value);

  // optional uint32 gohome = 23;
  inline bool has_gohome() const;
  inline void clear_gohome();
  static const int kGohomeFieldNumber = 23;
  inline ::google::protobuf::uint32 gohome() const;
  inline void set_gohome(::google::protobuf::uint32 value);

  // optional uint32 chariot_tempid = 24;
  inline bool has_chariot_tempid() const;
  inline void clear_chariot_tempid();
  static const int kChariotTempidFieldNumber = 24;
  inline ::google::protobuf::uint32 chariot_tempid() const;
  inline void set_chariot_tempid(::google::protobuf::uint32 value);

  // optional uint32 chariot_mastertype = 25;
  inline bool has_chariot_mastertype() const;
  inline void clear_chariot_mastertype();
  static const int kChariotMastertypeFieldNumber = 25;
  inline ::google::protobuf::uint32 chariot_mastertype() const;
  inline void set_chariot_mastertype(::google::protobuf::uint32 value);

  // optional .ProfessionType profession = 26 [default = Profession_None];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 26;
  inline ::ProfessionType profession() const;
  inline void set_profession(::ProfessionType value);

  // optional bool is_gold_shop = 27 [default = false];
  inline bool has_is_gold_shop() const;
  inline void clear_is_gold_shop();
  static const int kIsGoldShopFieldNumber = 27;
  inline bool is_gold_shop() const;
  inline void set_is_gold_shop(bool value);

  // optional uint32 hp = 28;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 28;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 maxhp = 29;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 29;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // optional uint32 pkcamp = 30;
  inline bool has_pkcamp() const;
  inline void clear_pkcamp();
  static const int kPkcampFieldNumber = 30;
  inline ::google::protobuf::uint32 pkcamp() const;
  inline void set_pkcamp(::google::protobuf::uint32 value);

  // optional bool citywarwinner = 31;
  inline bool has_citywarwinner() const;
  inline void clear_citywarwinner();
  static const int kCitywarwinnerFieldNumber = 31;
  inline bool citywarwinner() const;
  inline void set_citywarwinner(bool value);

  // optional uint32 duelmode = 32;
  inline bool has_duelmode() const;
  inline void clear_duelmode();
  static const int kDuelmodeFieldNumber = 32;
  inline ::google::protobuf::uint32 duelmode() const;
  inline void set_duelmode(::google::protobuf::uint32 value);

  // optional uint32 castle_level = 33;
  inline bool has_castle_level() const;
  inline void clear_castle_level();
  static const int kCastleLevelFieldNumber = 33;
  inline ::google::protobuf::uint32 castle_level() const;
  inline void set_castle_level(::google::protobuf::uint32 value);

  // optional uint32 wingid = 34;
  inline bool has_wingid() const;
  inline void clear_wingid();
  static const int kWingidFieldNumber = 34;
  inline ::google::protobuf::uint32 wingid() const;
  inline void set_wingid(::google::protobuf::uint32 value);

  // optional uint32 winglevel = 35;
  inline bool has_winglevel() const;
  inline void clear_winglevel();
  static const int kWinglevelFieldNumber = 35;
  inline ::google::protobuf::uint32 winglevel() const;
  inline void set_winglevel(::google::protobuf::uint32 value);

  // optional uint32 wingstrenglevel = 36;
  inline bool has_wingstrenglevel() const;
  inline void clear_wingstrenglevel();
  static const int kWingstrenglevelFieldNumber = 36;
  inline ::google::protobuf::uint32 wingstrenglevel() const;
  inline void set_wingstrenglevel(::google::protobuf::uint32 value);

  // optional uint32 subprofession = 37;
  inline bool has_subprofession() const;
  inline void clear_subprofession();
  static const int kSubprofessionFieldNumber = 37;
  inline ::google::protobuf::uint32 subprofession() const;
  inline void set_subprofession(::google::protobuf::uint32 value);

  // optional uint32 newtitle = 39;
  inline bool has_newtitle() const;
  inline void clear_newtitle();
  static const int kNewtitleFieldNumber = 39;
  inline ::google::protobuf::uint32 newtitle() const;
  inline void set_newtitle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CharacterMapData)
 private:
  inline void set_has_mapshow();
  inline void clear_has_mapshow();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_septofficer();
  inline void clear_has_septofficer();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_movespeed();
  inline void clear_has_movespeed();
  inline void set_has_evilvalue();
  inline void clear_has_evilvalue();
  inline void set_has_queststate();
  inline void clear_has_queststate();
  inline void set_has_shopname();
  inline void clear_has_shopname();
  inline void set_has_shopstate();
  inline void clear_has_shopstate();
  inline void set_has_shopnamecolor();
  inline void clear_has_shopnamecolor();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_septname();
  inline void clear_has_septname();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_teamname();
  inline void clear_has_teamname();
  inline void set_has_worldlevel();
  inline void clear_has_worldlevel();
  inline void set_has_gohome();
  inline void clear_has_gohome();
  inline void set_has_chariot_tempid();
  inline void clear_has_chariot_tempid();
  inline void set_has_chariot_mastertype();
  inline void clear_has_chariot_mastertype();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_is_gold_shop();
  inline void clear_has_is_gold_shop();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_pkcamp();
  inline void clear_has_pkcamp();
  inline void set_has_citywarwinner();
  inline void clear_has_citywarwinner();
  inline void set_has_duelmode();
  inline void clear_has_duelmode();
  inline void set_has_castle_level();
  inline void clear_has_castle_level();
  inline void set_has_wingid();
  inline void clear_has_wingid();
  inline void set_has_winglevel();
  inline void clear_has_winglevel();
  inline void set_has_wingstrenglevel();
  inline void clear_has_wingstrenglevel();
  inline void set_has_subprofession();
  inline void clear_has_subprofession();
  inline void set_has_newtitle();
  inline void clear_has_newtitle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::CharacterMapShow* mapshow_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::uint32 septofficer_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 z_;
  ::google::protobuf::uint32 dir_;
  ::google::protobuf::uint32 movespeed_;
  ::google::protobuf::uint32 evilvalue_;
  ::std::string* shopname_;
  ::google::protobuf::uint32 queststate_;
  ::google::protobuf::uint32 shopstate_;
  ::google::protobuf::RepeatedPtrField< ::StateData > ninestate_;
  ::std::string* name_;
  ::std::string* septname_;
  ::google::protobuf::uint32 shopnamecolor_;
  ::google::protobuf::uint32 worldlevel_;
  ::std::string* title_;
  ::std::string* teamname_;
  ::google::protobuf::uint32 gohome_;
  ::google::protobuf::uint32 chariot_tempid_;
  ::google::protobuf::uint32 chariot_mastertype_;
  int profession_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 maxhp_;
  bool is_gold_shop_;
  bool citywarwinner_;
  ::google::protobuf::uint32 pkcamp_;
  ::google::protobuf::uint32 duelmode_;
  ::google::protobuf::uint32 castle_level_;
  ::google::protobuf::uint32 wingid_;
  ::google::protobuf::uint32 winglevel_;
  ::google::protobuf::uint32 wingstrenglevel_;
  ::google::protobuf::uint32 subprofession_;
  ::google::protobuf::uint32 newtitle_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CharacterMapData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterMainData : public ::google::protobuf::Message {
 public:
  CharacterMainData();
  virtual ~CharacterMainData();

  CharacterMainData(const CharacterMainData& from);

  inline CharacterMainData& operator=(const CharacterMainData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterMainData& default_instance();

  void Swap(CharacterMainData* other);

  // implements Message ----------------------------------------------

  CharacterMainData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterMainData& from);
  void MergeFrom(const CharacterMainData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CharacterMapData mapData = 1;
  inline bool has_mapdata() const;
  inline void clear_mapdata();
  static const int kMapDataFieldNumber = 1;
  inline const ::CharacterMapData& mapdata() const;
  inline ::CharacterMapData* mutable_mapdata();
  inline ::CharacterMapData* release_mapdata();
  inline void set_allocated_mapdata(::CharacterMapData* mapdata);

  // optional uint32 mp = 4;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 4;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // optional uint32 maxmp = 5;
  inline bool has_maxmp() const;
  inline void clear_maxmp();
  static const int kMaxmpFieldNumber = 5;
  inline ::google::protobuf::uint32 maxmp() const;
  inline void set_maxmp(::google::protobuf::uint32 value);

  // optional uint64 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint32 strength = 7;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 7;
  inline ::google::protobuf::uint32 strength() const;
  inline void set_strength(::google::protobuf::uint32 value);

  // optional uint32 dexterity = 8;
  inline bool has_dexterity() const;
  inline void clear_dexterity();
  static const int kDexterityFieldNumber = 8;
  inline ::google::protobuf::uint32 dexterity() const;
  inline void set_dexterity(::google::protobuf::uint32 value);

  // optional uint32 mentality = 9;
  inline bool has_mentality() const;
  inline void clear_mentality();
  static const int kMentalityFieldNumber = 9;
  inline ::google::protobuf::uint32 mentality() const;
  inline void set_mentality(::google::protobuf::uint32 value);

  // optional uint32 constitution = 10;
  inline bool has_constitution() const;
  inline void clear_constitution();
  static const int kConstitutionFieldNumber = 10;
  inline ::google::protobuf::uint32 constitution() const;
  inline void set_constitution(::google::protobuf::uint32 value);

  // optional uint32 attrpoint = 12;
  inline bool has_attrpoint() const;
  inline void clear_attrpoint();
  static const int kAttrpointFieldNumber = 12;
  inline ::google::protobuf::uint32 attrpoint() const;
  inline void set_attrpoint(::google::protobuf::uint32 value);

  // optional uint32 attackSpeed = 13;
  inline bool has_attackspeed() const;
  inline void clear_attackspeed();
  static const int kAttackSpeedFieldNumber = 13;
  inline ::google::protobuf::uint32 attackspeed() const;
  inline void set_attackspeed(::google::protobuf::uint32 value);

  // optional uint32 minPhysics = 14;
  inline bool has_minphysics() const;
  inline void clear_minphysics();
  static const int kMinPhysicsFieldNumber = 14;
  inline ::google::protobuf::uint32 minphysics() const;
  inline void set_minphysics(::google::protobuf::uint32 value);

  // optional uint32 maxPhysics = 15;
  inline bool has_maxphysics() const;
  inline void clear_maxphysics();
  static const int kMaxPhysicsFieldNumber = 15;
  inline ::google::protobuf::uint32 maxphysics() const;
  inline void set_maxphysics(::google::protobuf::uint32 value);

  // optional uint32 minMagic = 16;
  inline bool has_minmagic() const;
  inline void clear_minmagic();
  static const int kMinMagicFieldNumber = 16;
  inline ::google::protobuf::uint32 minmagic() const;
  inline void set_minmagic(::google::protobuf::uint32 value);

  // optional uint32 maxMagic = 17;
  inline bool has_maxmagic() const;
  inline void clear_maxmagic();
  static const int kMaxMagicFieldNumber = 17;
  inline ::google::protobuf::uint32 maxmagic() const;
  inline void set_maxmagic(::google::protobuf::uint32 value);

  // optional uint32 pDefence = 18;
  inline bool has_pdefence() const;
  inline void clear_pdefence();
  static const int kPDefenceFieldNumber = 18;
  inline ::google::protobuf::uint32 pdefence() const;
  inline void set_pdefence(::google::protobuf::uint32 value);

  // optional uint32 mDefence = 19;
  inline bool has_mdefence() const;
  inline void clear_mdefence();
  static const int kMDefenceFieldNumber = 19;
  inline ::google::protobuf::uint32 mdefence() const;
  inline void set_mdefence(::google::protobuf::uint32 value);

  // optional uint32 money = 20;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 20;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // optional uint32 bindMoney = 21;
  inline bool has_bindmoney() const;
  inline void clear_bindmoney();
  static const int kBindMoneyFieldNumber = 21;
  inline ::google::protobuf::uint32 bindmoney() const;
  inline void set_bindmoney(::google::protobuf::uint32 value);

  // optional uint32 gold = 22;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 22;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 bindGold = 23;
  inline bool has_bindgold() const;
  inline void clear_bindgold();
  static const int kBindGoldFieldNumber = 23;
  inline ::google::protobuf::uint32 bindgold() const;
  inline void set_bindgold(::google::protobuf::uint32 value);

  // optional uint32 luckyRate = 24;
  inline bool has_luckyrate() const;
  inline void clear_luckyrate();
  static const int kLuckyRateFieldNumber = 24;
  inline ::google::protobuf::uint32 luckyrate() const;
  inline void set_luckyrate(::google::protobuf::uint32 value);

  // optional uint32 antiLuckyRate = 25;
  inline bool has_antiluckyrate() const;
  inline void clear_antiluckyrate();
  static const int kAntiLuckyRateFieldNumber = 25;
  inline ::google::protobuf::uint32 antiluckyrate() const;
  inline void set_antiluckyrate(::google::protobuf::uint32 value);

  // optional uint32 heavyRate = 26;
  inline bool has_heavyrate() const;
  inline void clear_heavyrate();
  static const int kHeavyRateFieldNumber = 26;
  inline ::google::protobuf::uint32 heavyrate() const;
  inline void set_heavyrate(::google::protobuf::uint32 value);

  // optional uint32 antiHeavyRate = 27;
  inline bool has_antiheavyrate() const;
  inline void clear_antiheavyrate();
  static const int kAntiHeavyRateFieldNumber = 27;
  inline ::google::protobuf::uint32 antiheavyrate() const;
  inline void set_antiheavyrate(::google::protobuf::uint32 value);

  // optional uint32 honor = 28;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 28;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // optional uint32 funcvalue = 30;
  inline bool has_funcvalue() const;
  inline void clear_funcvalue();
  static const int kFuncvalueFieldNumber = 30;
  inline ::google::protobuf::uint32 funcvalue() const;
  inline void set_funcvalue(::google::protobuf::uint32 value);

  // optional uint32 septaward = 31;
  inline bool has_septaward() const;
  inline void clear_septaward();
  static const int kSeptawardFieldNumber = 31;
  inline ::google::protobuf::uint32 septaward() const;
  inline void set_septaward(::google::protobuf::uint32 value);

  // optional uint32 septactive = 32;
  inline bool has_septactive() const;
  inline void clear_septactive();
  static const int kSeptactiveFieldNumber = 32;
  inline ::google::protobuf::uint32 septactive() const;
  inline void set_septactive(::google::protobuf::uint32 value);

  // optional uint32 friendvalue = 33;
  inline bool has_friendvalue() const;
  inline void clear_friendvalue();
  static const int kFriendvalueFieldNumber = 33;
  inline ::google::protobuf::uint32 friendvalue() const;
  inline void set_friendvalue(::google::protobuf::uint32 value);

  // optional uint32 subprofession = 34;
  inline bool has_subprofession() const;
  inline void clear_subprofession();
  static const int kSubprofessionFieldNumber = 34;
  inline ::google::protobuf::uint32 subprofession() const;
  inline void set_subprofession(::google::protobuf::uint32 value);

  // optional uint32 horseid = 35;
  inline bool has_horseid() const;
  inline void clear_horseid();
  static const int kHorseidFieldNumber = 35;
  inline ::google::protobuf::uint32 horseid() const;
  inline void set_horseid(::google::protobuf::uint32 value);

  // optional uint64 totalexp = 36;
  inline bool has_totalexp() const;
  inline void clear_totalexp();
  static const int kTotalexpFieldNumber = 36;
  inline ::google::protobuf::uint64 totalexp() const;
  inline void set_totalexp(::google::protobuf::uint64 value);

  // optional bool zonelimit = 37;
  inline bool has_zonelimit() const;
  inline void clear_zonelimit();
  static const int kZonelimitFieldNumber = 37;
  inline bool zonelimit() const;
  inline void set_zonelimit(bool value);

  // optional bool countryzone = 38;
  inline bool has_countryzone() const;
  inline void clear_countryzone();
  static const int kCountryzoneFieldNumber = 38;
  inline bool countryzone() const;
  inline void set_countryzone(bool value);

  // repeated uint64 resource = 39;
  inline int resource_size() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 39;
  inline ::google::protobuf::uint64 resource(int index) const;
  inline void set_resource(int index, ::google::protobuf::uint64 value);
  inline void add_resource(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      resource() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_resource();

  // optional uint32 petskill = 40;
  inline bool has_petskill() const;
  inline void clear_petskill();
  static const int kPetskillFieldNumber = 40;
  inline ::google::protobuf::uint32 petskill() const;
  inline void set_petskill(::google::protobuf::uint32 value);

  // optional bool autofight = 41;
  inline bool has_autofight() const;
  inline void clear_autofight();
  static const int kAutofightFieldNumber = 41;
  inline bool autofight() const;
  inline void set_autofight(bool value);

  // optional .PropertyValues propertys = 100;
  inline bool has_propertys() const;
  inline void clear_propertys();
  static const int kPropertysFieldNumber = 100;
  inline const ::PropertyValues& propertys() const;
  inline ::PropertyValues* mutable_propertys();
  inline ::PropertyValues* release_propertys();
  inline void set_allocated_propertys(::PropertyValues* propertys);

  // @@protoc_insertion_point(class_scope:CharacterMainData)
 private:
  inline void set_has_mapdata();
  inline void clear_has_mapdata();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_maxmp();
  inline void clear_has_maxmp();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_strength();
  inline void clear_has_strength();
  inline void set_has_dexterity();
  inline void clear_has_dexterity();
  inline void set_has_mentality();
  inline void clear_has_mentality();
  inline void set_has_constitution();
  inline void clear_has_constitution();
  inline void set_has_attrpoint();
  inline void clear_has_attrpoint();
  inline void set_has_attackspeed();
  inline void clear_has_attackspeed();
  inline void set_has_minphysics();
  inline void clear_has_minphysics();
  inline void set_has_maxphysics();
  inline void clear_has_maxphysics();
  inline void set_has_minmagic();
  inline void clear_has_minmagic();
  inline void set_has_maxmagic();
  inline void clear_has_maxmagic();
  inline void set_has_pdefence();
  inline void clear_has_pdefence();
  inline void set_has_mdefence();
  inline void clear_has_mdefence();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_bindmoney();
  inline void clear_has_bindmoney();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_bindgold();
  inline void clear_has_bindgold();
  inline void set_has_luckyrate();
  inline void clear_has_luckyrate();
  inline void set_has_antiluckyrate();
  inline void clear_has_antiluckyrate();
  inline void set_has_heavyrate();
  inline void clear_has_heavyrate();
  inline void set_has_antiheavyrate();
  inline void clear_has_antiheavyrate();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_funcvalue();
  inline void clear_has_funcvalue();
  inline void set_has_septaward();
  inline void clear_has_septaward();
  inline void set_has_septactive();
  inline void clear_has_septactive();
  inline void set_has_friendvalue();
  inline void clear_has_friendvalue();
  inline void set_has_subprofession();
  inline void clear_has_subprofession();
  inline void set_has_horseid();
  inline void clear_has_horseid();
  inline void set_has_totalexp();
  inline void clear_has_totalexp();
  inline void set_has_zonelimit();
  inline void clear_has_zonelimit();
  inline void set_has_countryzone();
  inline void clear_has_countryzone();
  inline void set_has_petskill();
  inline void clear_has_petskill();
  inline void set_has_autofight();
  inline void clear_has_autofight();
  inline void set_has_propertys();
  inline void clear_has_propertys();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::CharacterMapData* mapdata_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 maxmp_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 strength_;
  ::google::protobuf::uint32 dexterity_;
  ::google::protobuf::uint32 mentality_;
  ::google::protobuf::uint32 constitution_;
  ::google::protobuf::uint32 attrpoint_;
  ::google::protobuf::uint32 attackspeed_;
  ::google::protobuf::uint32 minphysics_;
  ::google::protobuf::uint32 maxphysics_;
  ::google::protobuf::uint32 minmagic_;
  ::google::protobuf::uint32 maxmagic_;
  ::google::protobuf::uint32 pdefence_;
  ::google::protobuf::uint32 mdefence_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 bindmoney_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 bindgold_;
  ::google::protobuf::uint32 luckyrate_;
  ::google::protobuf::uint32 antiluckyrate_;
  ::google::protobuf::uint32 heavyrate_;
  ::google::protobuf::uint32 antiheavyrate_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 funcvalue_;
  ::google::protobuf::uint32 septaward_;
  ::google::protobuf::uint32 septactive_;
  ::google::protobuf::uint32 friendvalue_;
  ::google::protobuf::uint32 subprofession_;
  ::google::protobuf::uint64 totalexp_;
  ::google::protobuf::uint32 horseid_;
  bool zonelimit_;
  bool countryzone_;
  bool autofight_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > resource_;
  ::PropertyValues* propertys_;
  ::google::protobuf::uint32 petskill_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CharacterMainData* default_instance_;
};
// -------------------------------------------------------------------

class NpcMapData : public ::google::protobuf::Message {
 public:
  NpcMapData();
  virtual ~NpcMapData();

  NpcMapData(const NpcMapData& from);

  inline NpcMapData& operator=(const NpcMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcMapData& default_instance();

  void Swap(NpcMapData* other);

  // implements Message ----------------------------------------------

  NpcMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcMapData& from);
  void MergeFrom(const NpcMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 tmpid = 2;
  inline bool has_tmpid() const;
  inline void clear_tmpid();
  static const int kTmpidFieldNumber = 2;
  inline ::google::protobuf::uint32 tmpid() const;
  inline void set_tmpid(::google::protobuf::uint32 value);

  // optional uint32 hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 x = 4;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 4;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 speed = 6;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 6;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);

  // optional uint32 dir = 7;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 7;
  inline ::google::protobuf::uint32 dir() const;
  inline void set_dir(::google::protobuf::uint32 value);

  // optional uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 visit = 9;
  inline bool has_visit() const;
  inline void clear_visit();
  static const int kVisitFieldNumber = 9;
  inline ::google::protobuf::uint32 visit() const;
  inline void set_visit(::google::protobuf::uint32 value);

  // optional uint32 countryId = 10;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIdFieldNumber = 10;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 teamid = 11;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 11;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint32 septid = 12;
  inline bool has_septid() const;
  inline void clear_septid();
  static const int kSeptidFieldNumber = 12;
  inline ::google::protobuf::uint32 septid() const;
  inline void set_septid(::google::protobuf::uint32 value);

  // optional uint32 unionid = 13;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionidFieldNumber = 13;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);

  // optional uint32 master_type = 14;
  inline bool has_master_type() const;
  inline void clear_master_type();
  static const int kMasterTypeFieldNumber = 14;
  inline ::google::protobuf::uint32 master_type() const;
  inline void set_master_type(::google::protobuf::uint32 value);

  // optional uint32 masterid = 15;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 15;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);

  // optional string mastername = 16;
  inline bool has_mastername() const;
  inline void clear_mastername();
  static const int kMasternameFieldNumber = 16;
  inline const ::std::string& mastername() const;
  inline void set_mastername(const ::std::string& value);
  inline void set_mastername(const char* value);
  inline void set_mastername(const char* value, size_t size);
  inline ::std::string* mutable_mastername();
  inline ::std::string* release_mastername();
  inline void set_allocated_mastername(::std::string* mastername);

  // optional string name = 17;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 17;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 skillcount = 18;
  inline bool has_skillcount() const;
  inline void clear_skillcount();
  static const int kSkillcountFieldNumber = 18;
  inline ::google::protobuf::uint32 skillcount() const;
  inline void set_skillcount(::google::protobuf::uint32 value);

  // repeated uint32 sign = 19;
  inline int sign_size() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 19;
  inline ::google::protobuf::uint32 sign(int index) const;
  inline void set_sign(int index, ::google::protobuf::uint32 value);
  inline void add_sign(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sign() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sign();

  // repeated .StateData ninestate = 20;
  inline int ninestate_size() const;
  inline void clear_ninestate();
  static const int kNinestateFieldNumber = 20;
  inline const ::StateData& ninestate(int index) const;
  inline ::StateData* mutable_ninestate(int index);
  inline ::StateData* add_ninestate();
  inline const ::google::protobuf::RepeatedPtrField< ::StateData >&
      ninestate() const;
  inline ::google::protobuf::RepeatedPtrField< ::StateData >*
      mutable_ninestate();

  // optional uint32 attacked_type = 21;
  inline bool has_attacked_type() const;
  inline void clear_attacked_type();
  static const int kAttackedTypeFieldNumber = 21;
  inline ::google::protobuf::uint32 attacked_type() const;
  inline void set_attacked_type(::google::protobuf::uint32 value);

  // optional uint32 maxhp = 22;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 22;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // optional uint32 pkcamp = 23;
  inline bool has_pkcamp() const;
  inline void clear_pkcamp();
  static const int kPkcampFieldNumber = 23;
  inline ::google::protobuf::uint32 pkcamp() const;
  inline void set_pkcamp(::google::protobuf::uint32 value);

  // optional string desname = 24;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesnameFieldNumber = 24;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  inline ::std::string* release_desname();
  inline void set_allocated_desname(::std::string* desname);

  // optional bool into = 25 [default = false];
  inline bool has_into() const;
  inline void clear_into();
  static const int kIntoFieldNumber = 25;
  inline bool into() const;
  inline void set_into(bool value);

  // optional uint32 killer = 26;
  inline bool has_killer() const;
  inline void clear_killer();
  static const int kKillerFieldNumber = 26;
  inline ::google::protobuf::uint32 killer() const;
  inline void set_killer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NpcMapData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_tmpid();
  inline void clear_has_tmpid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_visit();
  inline void clear_has_visit();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_septid();
  inline void clear_has_septid();
  inline void set_has_unionid();
  inline void clear_has_unionid();
  inline void set_has_master_type();
  inline void clear_has_master_type();
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_mastername();
  inline void clear_has_mastername();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_skillcount();
  inline void clear_has_skillcount();
  inline void set_has_attacked_type();
  inline void clear_has_attacked_type();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_pkcamp();
  inline void clear_has_pkcamp();
  inline void set_has_desname();
  inline void clear_has_desname();
  inline void set_has_into();
  inline void clear_has_into();
  inline void set_has_killer();
  inline void clear_has_killer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 tmpid_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 dir_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 visit_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint32 septid_;
  ::google::protobuf::uint32 unionid_;
  ::google::protobuf::uint32 master_type_;
  ::std::string* mastername_;
  ::google::protobuf::uint32 masterid_;
  ::google::protobuf::uint32 skillcount_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sign_;
  ::google::protobuf::RepeatedPtrField< ::StateData > ninestate_;
  ::google::protobuf::uint32 attacked_type_;
  ::google::protobuf::uint32 maxhp_;
  ::std::string* desname_;
  ::google::protobuf::uint32 pkcamp_;
  bool into_;
  ::google::protobuf::uint32 killer_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static NpcMapData* default_instance_;
};
// -------------------------------------------------------------------

class NpcDeathMapData : public ::google::protobuf::Message {
 public:
  NpcDeathMapData();
  virtual ~NpcDeathMapData();

  NpcDeathMapData(const NpcDeathMapData& from);

  inline NpcDeathMapData& operator=(const NpcDeathMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcDeathMapData& default_instance();

  void Swap(NpcDeathMapData* other);

  // implements Message ----------------------------------------------

  NpcDeathMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcDeathMapData& from);
  void MergeFrom(const NpcDeathMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 tmpid = 2;
  inline bool has_tmpid() const;
  inline void clear_tmpid();
  static const int kTmpidFieldNumber = 2;
  inline ::google::protobuf::uint32 tmpid() const;
  inline void set_tmpid(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline ::google::protobuf::uint32 dir() const;
  inline void set_dir(::google::protobuf::uint32 value);

  // optional uint32 disappearTime = 6;
  inline bool has_disappeartime() const;
  inline void clear_disappeartime();
  static const int kDisappearTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 disappeartime() const;
  inline void set_disappeartime(::google::protobuf::uint32 value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 killer = 8;
  inline bool has_killer() const;
  inline void clear_killer();
  static const int kKillerFieldNumber = 8;
  inline ::google::protobuf::uint32 killer() const;
  inline void set_killer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NpcDeathMapData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_tmpid();
  inline void clear_has_tmpid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_disappeartime();
  inline void clear_has_disappeartime();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_killer();
  inline void clear_has_killer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 tmpid_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 dir_;
  ::google::protobuf::uint32 disappeartime_;
  ::std::string* name_;
  ::google::protobuf::uint32 killer_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static NpcDeathMapData* default_instance_;
};
// -------------------------------------------------------------------

class EquipChangeMaterial : public ::google::protobuf::Message {
 public:
  EquipChangeMaterial();
  virtual ~EquipChangeMaterial();

  EquipChangeMaterial(const EquipChangeMaterial& from);

  inline EquipChangeMaterial& operator=(const EquipChangeMaterial& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipChangeMaterial& default_instance();

  void Swap(EquipChangeMaterial* other);

  // implements Message ----------------------------------------------

  EquipChangeMaterial* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipChangeMaterial& from);
  void MergeFrom(const EquipChangeMaterial& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 thisid = 1;
  inline bool has_thisid() const;
  inline void clear_thisid();
  static const int kThisidFieldNumber = 1;
  inline ::google::protobuf::uint32 thisid() const;
  inline void set_thisid(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipChangeMaterial)
 private:
  inline void set_has_thisid();
  inline void clear_has_thisid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 thisid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static EquipChangeMaterial* default_instance_;
};
// -------------------------------------------------------------------

class AddMaxCount_Count : public ::google::protobuf::Message {
 public:
  AddMaxCount_Count();
  virtual ~AddMaxCount_Count();

  AddMaxCount_Count(const AddMaxCount_Count& from);

  inline AddMaxCount_Count& operator=(const AddMaxCount_Count& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMaxCount_Count& default_instance();

  void Swap(AddMaxCount_Count* other);

  // implements Message ----------------------------------------------

  AddMaxCount_Count* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddMaxCount_Count& from);
  void MergeFrom(const AddMaxCount_Count& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CounterType type = 1 [default = COUNTERT_NONE];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::CounterType type() const;
  inline void set_type(::CounterType value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .TimeCycle cycle = 3 [default = TimeCycle_None];
  inline bool has_cycle() const;
  inline void clear_cycle();
  static const int kCycleFieldNumber = 3;
  inline ::TimeCycle cycle() const;
  inline void set_cycle(::TimeCycle value);

  // optional uint32 addcount = 4;
  inline bool has_addcount() const;
  inline void clear_addcount();
  static const int kAddcountFieldNumber = 4;
  inline ::google::protobuf::uint32 addcount() const;
  inline void set_addcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AddMaxCount.Count)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cycle();
  inline void clear_has_cycle();
  inline void set_has_addcount();
  inline void clear_has_addcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 id_;
  int cycle_;
  ::google::protobuf::uint32 addcount_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static AddMaxCount_Count* default_instance_;
};
// -------------------------------------------------------------------

class AddMaxCount : public ::google::protobuf::Message {
 public:
  AddMaxCount();
  virtual ~AddMaxCount();

  AddMaxCount(const AddMaxCount& from);

  inline AddMaxCount& operator=(const AddMaxCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMaxCount& default_instance();

  void Swap(AddMaxCount* other);

  // implements Message ----------------------------------------------

  AddMaxCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddMaxCount& from);
  void MergeFrom(const AddMaxCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AddMaxCount_Count Count;

  // accessors -------------------------------------------------------

  // repeated .AddMaxCount.Count count = 1;
  inline int count_size() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline const ::AddMaxCount_Count& count(int index) const;
  inline ::AddMaxCount_Count* mutable_count(int index);
  inline ::AddMaxCount_Count* add_count();
  inline const ::google::protobuf::RepeatedPtrField< ::AddMaxCount_Count >&
      count() const;
  inline ::google::protobuf::RepeatedPtrField< ::AddMaxCount_Count >*
      mutable_count();

  // @@protoc_insertion_point(class_scope:AddMaxCount)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AddMaxCount_Count > count_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static AddMaxCount* default_instance_;
};
// -------------------------------------------------------------------

class BossReliveInfo : public ::google::protobuf::Message {
 public:
  BossReliveInfo();
  virtual ~BossReliveInfo();

  BossReliveInfo(const BossReliveInfo& from);

  inline BossReliveInfo& operator=(const BossReliveInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossReliveInfo& default_instance();

  void Swap(BossReliveInfo* other);

  // implements Message ----------------------------------------------

  BossReliveInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossReliveInfo& from);
  void MergeFrom(const BossReliveInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 hppercent = 2;
  inline bool has_hppercent() const;
  inline void clear_hppercent();
  static const int kHppercentFieldNumber = 2;
  inline ::google::protobuf::uint32 hppercent() const;
  inline void set_hppercent(::google::protobuf::uint32 value);

  // optional string time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline const ::std::string& time() const;
  inline void set_time(const ::std::string& value);
  inline void set_time(const char* value);
  inline void set_time(const char* value, size_t size);
  inline ::std::string* mutable_time();
  inline ::std::string* release_time();
  inline void set_allocated_time(::std::string* time);

  // optional string map = 4;
  inline bool has_map() const;
  inline void clear_map();
  static const int kMapFieldNumber = 4;
  inline const ::std::string& map() const;
  inline void set_map(const ::std::string& value);
  inline void set_map(const char* value);
  inline void set_map(const char* value, size_t size);
  inline ::std::string* mutable_map();
  inline ::std::string* release_map();
  inline void set_allocated_map(::std::string* map);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 country = 6;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 6;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);

  // optional string desc = 7;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 7;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:BossReliveInfo)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_hppercent();
  inline void clear_has_hppercent();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_map();
  inline void clear_has_map();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_desc();
  inline void clear_has_desc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* time_;
  ::google::protobuf::uint32 hppercent_;
  ::google::protobuf::uint32 level_;
  ::std::string* map_;
  ::std::string* desc_;
  ::google::protobuf::uint32 country_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BossReliveInfo* default_instance_;
};
// -------------------------------------------------------------------

class ChangeZoneInfo : public ::google::protobuf::Message {
 public:
  ChangeZoneInfo();
  virtual ~ChangeZoneInfo();

  ChangeZoneInfo(const ChangeZoneInfo& from);

  inline ChangeZoneInfo& operator=(const ChangeZoneInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeZoneInfo& default_instance();

  void Swap(ChangeZoneInfo* other);

  // implements Message ----------------------------------------------

  ChangeZoneInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeZoneInfo& from);
  void MergeFrom(const ChangeZoneInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 newzoneid = 1;
  inline bool has_newzoneid() const;
  inline void clear_newzoneid();
  static const int kNewzoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 newzoneid() const;
  inline void set_newzoneid(::google::protobuf::uint32 value);

  // optional uint32 token = 4;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 4;
  inline ::google::protobuf::uint32 token() const;
  inline void set_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ChangeZoneInfo)
 private:
  inline void set_has_newzoneid();
  inline void clear_has_newzoneid();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 newzoneid_;
  ::google::protobuf::uint32 token_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ChangeZoneInfo* default_instance_;
};
// -------------------------------------------------------------------

class UserScore : public ::google::protobuf::Message {
 public:
  UserScore();
  virtual ~UserScore();

  UserScore(const UserScore& from);

  inline UserScore& operator=(const UserScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserScore& default_instance();

  void Swap(UserScore* other);

  // implements Message ----------------------------------------------

  UserScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserScore& from);
  void MergeFrom(const UserScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ScoreType type = 1 [default = Score_None];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::ScoreType type() const;
  inline void set_type(::ScoreType value);

  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 totalscore = 3;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalscoreFieldNumber = 3;
  inline ::google::protobuf::uint32 totalscore() const;
  inline void set_totalscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserScore)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 totalscore_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static UserScore* default_instance_;
};
// -------------------------------------------------------------------

class OneYaoQianItem : public ::google::protobuf::Message {
 public:
  OneYaoQianItem();
  virtual ~OneYaoQianItem();

  OneYaoQianItem(const OneYaoQianItem& from);

  inline OneYaoQianItem& operator=(const OneYaoQianItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneYaoQianItem& default_instance();

  void Swap(OneYaoQianItem* other);

  // implements Message ----------------------------------------------

  OneYaoQianItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneYaoQianItem& from);
  void MergeFrom(const OneYaoQianItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 buynum = 1;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuynumFieldNumber = 1;
  inline ::google::protobuf::uint32 buynum() const;
  inline void set_buynum(::google::protobuf::uint32 value);

  // optional uint32 buylevel = 2;
  inline bool has_buylevel() const;
  inline void clear_buylevel();
  static const int kBuylevelFieldNumber = 2;
  inline ::google::protobuf::uint32 buylevel() const;
  inline void set_buylevel(::google::protobuf::uint32 value);

  // repeated uint32 returnlevel = 3;
  inline int returnlevel_size() const;
  inline void clear_returnlevel();
  static const int kReturnlevelFieldNumber = 3;
  inline ::google::protobuf::uint32 returnlevel(int index) const;
  inline void set_returnlevel(int index, ::google::protobuf::uint32 value);
  inline void add_returnlevel(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      returnlevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_returnlevel();

  // @@protoc_insertion_point(class_scope:OneYaoQianItem)
 private:
  inline void set_has_buynum();
  inline void clear_has_buynum();
  inline void set_has_buylevel();
  inline void clear_has_buylevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 buynum_;
  ::google::protobuf::uint32 buylevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > returnlevel_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static OneYaoQianItem* default_instance_;
};
// -------------------------------------------------------------------

class YaoQianSaveData : public ::google::protobuf::Message {
 public:
  YaoQianSaveData();
  virtual ~YaoQianSaveData();

  YaoQianSaveData(const YaoQianSaveData& from);

  inline YaoQianSaveData& operator=(const YaoQianSaveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YaoQianSaveData& default_instance();

  void Swap(YaoQianSaveData* other);

  // implements Message ----------------------------------------------

  YaoQianSaveData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YaoQianSaveData& from);
  void MergeFrom(const YaoQianSaveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 havebuy = 1;
  inline bool has_havebuy() const;
  inline void clear_havebuy();
  static const int kHavebuyFieldNumber = 1;
  inline ::google::protobuf::uint32 havebuy() const;
  inline void set_havebuy(::google::protobuf::uint32 value);

  // optional uint32 returngold = 2;
  inline bool has_returngold() const;
  inline void clear_returngold();
  static const int kReturngoldFieldNumber = 2;
  inline ::google::protobuf::uint32 returngold() const;
  inline void set_returngold(::google::protobuf::uint32 value);

  // optional uint32 returnbindgold = 3;
  inline bool has_returnbindgold() const;
  inline void clear_returnbindgold();
  static const int kReturnbindgoldFieldNumber = 3;
  inline ::google::protobuf::uint32 returnbindgold() const;
  inline void set_returnbindgold(::google::protobuf::uint32 value);

  // repeated .OneYaoQianItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::OneYaoQianItem& items(int index) const;
  inline ::OneYaoQianItem* mutable_items(int index);
  inline ::OneYaoQianItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::OneYaoQianItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneYaoQianItem >*
      mutable_items();

  // optional uint32 stage = 5 [default = 1];
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 5;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:YaoQianSaveData)
 private:
  inline void set_has_havebuy();
  inline void clear_has_havebuy();
  inline void set_has_returngold();
  inline void clear_has_returngold();
  inline void set_has_returnbindgold();
  inline void clear_has_returnbindgold();
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 havebuy_;
  ::google::protobuf::uint32 returngold_;
  ::google::protobuf::RepeatedPtrField< ::OneYaoQianItem > items_;
  ::google::protobuf::uint32 returnbindgold_;
  ::google::protobuf::uint32 stage_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static YaoQianSaveData* default_instance_;
};
// -------------------------------------------------------------------

class DungeonSaveData : public ::google::protobuf::Message {
 public:
  DungeonSaveData();
  virtual ~DungeonSaveData();

  DungeonSaveData(const DungeonSaveData& from);

  inline DungeonSaveData& operator=(const DungeonSaveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonSaveData& default_instance();

  void Swap(DungeonSaveData* other);

  // implements Message ----------------------------------------------

  DungeonSaveData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DungeonSaveData& from);
  void MergeFrom(const DungeonSaveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // optional uint32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DungeonSaveData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static DungeonSaveData* default_instance_;
};
// -------------------------------------------------------------------

class VarInfo : public ::google::protobuf::Message {
 public:
  VarInfo();
  virtual ~VarInfo();

  VarInfo(const VarInfo& from);

  inline VarInfo& operator=(const VarInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VarInfo& default_instance();

  void Swap(VarInfo* other);

  // implements Message ----------------------------------------------

  VarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VarInfo& from);
  void MergeFrom(const VarInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VarInfo)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::std::string* value_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static VarInfo* default_instance_;
};
// -------------------------------------------------------------------

class BuildInfo : public ::google::protobuf::Message {
 public:
  BuildInfo();
  virtual ~BuildInfo();

  BuildInfo(const BuildInfo& from);

  inline BuildInfo& operator=(const BuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildInfo& default_instance();

  void Swap(BuildInfo* other);

  // implements Message ----------------------------------------------

  BuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildInfo& from);
  void MergeFrom(const BuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 lastcollecttime = 4;
  inline bool has_lastcollecttime() const;
  inline void clear_lastcollecttime();
  static const int kLastcollecttimeFieldNumber = 4;
  inline ::google::protobuf::uint32 lastcollecttime() const;
  inline void set_lastcollecttime(::google::protobuf::uint32 value);

  // optional uint32 upgradetime = 5;
  inline bool has_upgradetime() const;
  inline void clear_upgradetime();
  static const int kUpgradetimeFieldNumber = 5;
  inline ::google::protobuf::uint32 upgradetime() const;
  inline void set_upgradetime(::google::protobuf::uint32 value);

  // optional uint32 outputitemtimes = 6;
  inline bool has_outputitemtimes() const;
  inline void clear_outputitemtimes();
  static const int kOutputitemtimesFieldNumber = 6;
  inline ::google::protobuf::uint32 outputitemtimes() const;
  inline void set_outputitemtimes(::google::protobuf::uint32 value);

  // optional uint32 lastgetitemtime = 7;
  inline bool has_lastgetitemtime() const;
  inline void clear_lastgetitemtime();
  static const int kLastgetitemtimeFieldNumber = 7;
  inline ::google::protobuf::uint32 lastgetitemtime() const;
  inline void set_lastgetitemtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BuildInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_lastcollecttime();
  inline void clear_has_lastcollecttime();
  inline void set_has_upgradetime();
  inline void clear_has_upgradetime();
  inline void set_has_outputitemtimes();
  inline void clear_has_outputitemtimes();
  inline void set_has_lastgetitemtime();
  inline void clear_has_lastgetitemtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 lastcollecttime_;
  ::google::protobuf::uint32 upgradetime_;
  ::google::protobuf::uint32 outputitemtimes_;
  ::google::protobuf::uint32 lastgetitemtime_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class MakeEquipInfo : public ::google::protobuf::Message {
 public:
  MakeEquipInfo();
  virtual ~MakeEquipInfo();

  MakeEquipInfo(const MakeEquipInfo& from);

  inline MakeEquipInfo& operator=(const MakeEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MakeEquipInfo& default_instance();

  void Swap(MakeEquipInfo* other);

  // implements Message ----------------------------------------------

  MakeEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MakeEquipInfo& from);
  void MergeFrom(const MakeEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 iid = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIidFieldNumber = 1;
  inline ::google::protobuf::uint64 iid() const;
  inline void set_iid(::google::protobuf::uint64 value);

  // optional uint32 equipid = 2;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 2;
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);

  // optional uint32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // optional uint32 maketime = 4;
  inline bool has_maketime() const;
  inline void clear_maketime();
  static const int kMaketimeFieldNumber = 4;
  inline ::google::protobuf::uint32 maketime() const;
  inline void set_maketime(::google::protobuf::uint32 value);

  // optional uint32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MakeEquipInfo)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_maketime();
  inline void clear_has_maketime();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 iid_;
  ::google::protobuf::uint32 equipid_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 maketime_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MakeEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class CastleExploreInfo : public ::google::protobuf::Message {
 public:
  CastleExploreInfo();
  virtual ~CastleExploreInfo();

  CastleExploreInfo(const CastleExploreInfo& from);

  inline CastleExploreInfo& operator=(const CastleExploreInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastleExploreInfo& default_instance();

  void Swap(CastleExploreInfo* other);

  // implements Message ----------------------------------------------

  CastleExploreInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CastleExploreInfo& from);
  void MergeFrom(const CastleExploreInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 finishtime = 3;
  inline bool has_finishtime() const;
  inline void clear_finishtime();
  static const int kFinishtimeFieldNumber = 3;
  inline ::google::protobuf::uint32 finishtime() const;
  inline void set_finishtime(::google::protobuf::uint32 value);

  // optional bool issuc = 4;
  inline bool has_issuc() const;
  inline void clear_issuc();
  static const int kIssucFieldNumber = 4;
  inline bool issuc() const;
  inline void set_issuc(bool value);

  // repeated uint64 pets = 5;
  inline int pets_size() const;
  inline void clear_pets();
  static const int kPetsFieldNumber = 5;
  inline ::google::protobuf::uint64 pets(int index) const;
  inline void set_pets(int index, ::google::protobuf::uint64 value);
  inline void add_pets(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pets() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pets();

  // @@protoc_insertion_point(class_scope:CastleExploreInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_finishtime();
  inline void clear_has_finishtime();
  inline void set_has_issuc();
  inline void clear_has_issuc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 finishtime_;
  bool issuc_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pets_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CastleExploreInfo* default_instance_;
};
// -------------------------------------------------------------------

class BinaryCastle : public ::google::protobuf::Message {
 public:
  BinaryCastle();
  virtual ~BinaryCastle();

  BinaryCastle(const BinaryCastle& from);

  inline BinaryCastle& operator=(const BinaryCastle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryCastle& default_instance();

  void Swap(BinaryCastle* other);

  // implements Message ----------------------------------------------

  BinaryCastle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryCastle& from);
  void MergeFrom(const BinaryCastle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated uint32 dist = 2;
  inline int dist_size() const;
  inline void clear_dist();
  static const int kDistFieldNumber = 2;
  inline ::google::protobuf::uint32 dist(int index) const;
  inline void set_dist(int index, ::google::protobuf::uint32 value);
  inline void add_dist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dist();

  // repeated .BuildInfo info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::BuildInfo& info(int index) const;
  inline ::BuildInfo* mutable_info(int index);
  inline ::BuildInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::BuildInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuildInfo >*
      mutable_info();

  // optional uint32 open = 4;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 4;
  inline ::google::protobuf::uint32 open() const;
  inline void set_open(::google::protobuf::uint32 value);

  // repeated .CastleExploreInfo expinfo = 5;
  inline int expinfo_size() const;
  inline void clear_expinfo();
  static const int kExpinfoFieldNumber = 5;
  inline const ::CastleExploreInfo& expinfo(int index) const;
  inline ::CastleExploreInfo* mutable_expinfo(int index);
  inline ::CastleExploreInfo* add_expinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::CastleExploreInfo >&
      expinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::CastleExploreInfo >*
      mutable_expinfo();

  // @@protoc_insertion_point(class_scope:BinaryCastle)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dist_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 open_;
  ::google::protobuf::RepeatedPtrField< ::BuildInfo > info_;
  ::google::protobuf::RepeatedPtrField< ::CastleExploreInfo > expinfo_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BinaryCastle* default_instance_;
};
// -------------------------------------------------------------------

class BinaryMakeEquip : public ::google::protobuf::Message {
 public:
  BinaryMakeEquip();
  virtual ~BinaryMakeEquip();

  BinaryMakeEquip(const BinaryMakeEquip& from);

  inline BinaryMakeEquip& operator=(const BinaryMakeEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryMakeEquip& default_instance();

  void Swap(BinaryMakeEquip* other);

  // implements Message ----------------------------------------------

  BinaryMakeEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryMakeEquip& from);
  void MergeFrom(const BinaryMakeEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MakeEquipInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::MakeEquipInfo& info(int index) const;
  inline ::MakeEquipInfo* mutable_info(int index);
  inline ::MakeEquipInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MakeEquipInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MakeEquipInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:BinaryMakeEquip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MakeEquipInfo > info_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BinaryMakeEquip* default_instance_;
};
// -------------------------------------------------------------------

class CastlePetInfo : public ::google::protobuf::Message {
 public:
  CastlePetInfo();
  virtual ~CastlePetInfo();

  CastlePetInfo(const CastlePetInfo& from);

  inline CastlePetInfo& operator=(const CastlePetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastlePetInfo& default_instance();

  void Swap(CastlePetInfo* other);

  // implements Message ----------------------------------------------

  CastlePetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CastlePetInfo& from);
  void MergeFrom(const CastlePetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 iid = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIidFieldNumber = 1;
  inline ::google::protobuf::uint64 iid() const;
  inline void set_iid(::google::protobuf::uint64 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 baseskill = 3;
  inline bool has_baseskill() const;
  inline void clear_baseskill();
  static const int kBaseskillFieldNumber = 3;
  inline ::google::protobuf::uint32 baseskill() const;
  inline void set_baseskill(::google::protobuf::uint32 value);

  // repeated uint32 randomskill = 4;
  inline int randomskill_size() const;
  inline void clear_randomskill();
  static const int kRandomskillFieldNumber = 4;
  inline ::google::protobuf::uint32 randomskill(int index) const;
  inline void set_randomskill(int index, ::google::protobuf::uint32 value);
  inline void add_randomskill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      randomskill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_randomskill();

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint32 stars = 7;
  inline bool has_stars() const;
  inline void clear_stars();
  static const int kStarsFieldNumber = 7;
  inline ::google::protobuf::uint32 stars() const;
  inline void set_stars(::google::protobuf::uint32 value);

  // optional uint32 souls = 8;
  inline bool has_souls() const;
  inline void clear_souls();
  static const int kSoulsFieldNumber = 8;
  inline ::google::protobuf::uint32 souls() const;
  inline void set_souls(::google::protobuf::uint32 value);

  // optional uint32 phyatt = 9;
  inline bool has_phyatt() const;
  inline void clear_phyatt();
  static const int kPhyattFieldNumber = 9;
  inline ::google::protobuf::uint32 phyatt() const;
  inline void set_phyatt(::google::protobuf::uint32 value);

  // optional uint32 phydef = 10;
  inline bool has_phydef() const;
  inline void clear_phydef();
  static const int kPhydefFieldNumber = 10;
  inline ::google::protobuf::uint32 phydef() const;
  inline void set_phydef(::google::protobuf::uint32 value);

  // optional uint32 magatt = 11;
  inline bool has_magatt() const;
  inline void clear_magatt();
  static const int kMagattFieldNumber = 11;
  inline ::google::protobuf::uint32 magatt() const;
  inline void set_magatt(::google::protobuf::uint32 value);

  // optional uint32 magdef = 12;
  inline bool has_magdef() const;
  inline void clear_magdef();
  static const int kMagdefFieldNumber = 12;
  inline ::google::protobuf::uint32 magdef() const;
  inline void set_magdef(::google::protobuf::uint32 value);

  // optional uint32 hp = 13;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 13;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 mp = 14;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 14;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // optional uint32 experttype = 15;
  inline bool has_experttype() const;
  inline void clear_experttype();
  static const int kExperttypeFieldNumber = 15;
  inline ::google::protobuf::uint32 experttype() const;
  inline void set_experttype(::google::protobuf::uint32 value);

  // optional uint32 workability = 16;
  inline bool has_workability() const;
  inline void clear_workability();
  static const int kWorkabilityFieldNumber = 16;
  inline ::google::protobuf::uint32 workability() const;
  inline void set_workability(::google::protobuf::uint32 value);

  // optional uint32 state = 17;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 17;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 allsouls = 18;
  inline bool has_allsouls() const;
  inline void clear_allsouls();
  static const int kAllsoulsFieldNumber = 18;
  inline ::google::protobuf::uint32 allsouls() const;
  inline void set_allsouls(::google::protobuf::uint32 value);

  // optional string name = 19;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 19;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 stateid = 20;
  inline bool has_stateid() const;
  inline void clear_stateid();
  static const int kStateidFieldNumber = 20;
  inline ::google::protobuf::uint32 stateid() const;
  inline void set_stateid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CastlePetInfo)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_baseskill();
  inline void clear_has_baseskill();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_stars();
  inline void clear_has_stars();
  inline void set_has_souls();
  inline void clear_has_souls();
  inline void set_has_phyatt();
  inline void clear_has_phyatt();
  inline void set_has_phydef();
  inline void clear_has_phydef();
  inline void set_has_magatt();
  inline void clear_has_magatt();
  inline void set_has_magdef();
  inline void clear_has_magdef();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_experttype();
  inline void clear_has_experttype();
  inline void set_has_workability();
  inline void clear_has_workability();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_allsouls();
  inline void clear_has_allsouls();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_stateid();
  inline void clear_has_stateid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 iid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 baseskill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > randomskill_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 stars_;
  ::google::protobuf::uint32 souls_;
  ::google::protobuf::uint32 phyatt_;
  ::google::protobuf::uint32 phydef_;
  ::google::protobuf::uint32 magatt_;
  ::google::protobuf::uint32 magdef_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 experttype_;
  ::google::protobuf::uint32 workability_;
  ::google::protobuf::uint32 state_;
  ::std::string* name_;
  ::google::protobuf::uint32 allsouls_;
  ::google::protobuf::uint32 stateid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CastlePetInfo* default_instance_;
};
// -------------------------------------------------------------------

class CastleWorkPet : public ::google::protobuf::Message {
 public:
  CastleWorkPet();
  virtual ~CastleWorkPet();

  CastleWorkPet(const CastleWorkPet& from);

  inline CastleWorkPet& operator=(const CastleWorkPet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastleWorkPet& default_instance();

  void Swap(CastleWorkPet* other);

  // implements Message ----------------------------------------------

  CastleWorkPet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CastleWorkPet& from);
  void MergeFrom(const CastleWorkPet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 iid = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIidFieldNumber = 1;
  inline ::google::protobuf::uint64 iid() const;
  inline void set_iid(::google::protobuf::uint64 value);

  // optional uint32 buildid = 2;
  inline bool has_buildid() const;
  inline void clear_buildid();
  static const int kBuildidFieldNumber = 2;
  inline ::google::protobuf::uint32 buildid() const;
  inline void set_buildid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CastleWorkPet)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_buildid();
  inline void clear_has_buildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 iid_;
  ::google::protobuf::uint32 buildid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CastleWorkPet* default_instance_;
};
// -------------------------------------------------------------------

class BinaryCastlePet : public ::google::protobuf::Message {
 public:
  BinaryCastlePet();
  virtual ~BinaryCastlePet();

  BinaryCastlePet(const BinaryCastlePet& from);

  inline BinaryCastlePet& operator=(const BinaryCastlePet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryCastlePet& default_instance();

  void Swap(BinaryCastlePet* other);

  // implements Message ----------------------------------------------

  BinaryCastlePet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryCastlePet& from);
  void MergeFrom(const BinaryCastlePet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CastlePetInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::CastlePetInfo& info(int index) const;
  inline ::CastlePetInfo* mutable_info(int index);
  inline ::CastlePetInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::CastlePetInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::CastlePetInfo >*
      mutable_info();

  // repeated uint64 fightpet = 2;
  inline int fightpet_size() const;
  inline void clear_fightpet();
  static const int kFightpetFieldNumber = 2;
  inline ::google::protobuf::uint64 fightpet(int index) const;
  inline void set_fightpet(int index, ::google::protobuf::uint64 value);
  inline void add_fightpet(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      fightpet() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_fightpet();

  // repeated .CastleWorkPet workpet = 3;
  inline int workpet_size() const;
  inline void clear_workpet();
  static const int kWorkpetFieldNumber = 3;
  inline const ::CastleWorkPet& workpet(int index) const;
  inline ::CastleWorkPet* mutable_workpet(int index);
  inline ::CastleWorkPet* add_workpet();
  inline const ::google::protobuf::RepeatedPtrField< ::CastleWorkPet >&
      workpet() const;
  inline ::google::protobuf::RepeatedPtrField< ::CastleWorkPet >*
      mutable_workpet();

  // repeated uint32 collection = 4;
  inline int collection_size() const;
  inline void clear_collection();
  static const int kCollectionFieldNumber = 4;
  inline ::google::protobuf::uint32 collection(int index) const;
  inline void set_collection(int index, ::google::protobuf::uint32 value);
  inline void add_collection(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      collection() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_collection();

  // @@protoc_insertion_point(class_scope:BinaryCastlePet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CastlePetInfo > info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > fightpet_;
  ::google::protobuf::RepeatedPtrField< ::CastleWorkPet > workpet_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > collection_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BinaryCastlePet* default_instance_;
};
// -------------------------------------------------------------------

class CastlePetState : public ::google::protobuf::Message {
 public:
  CastlePetState();
  virtual ~CastlePetState();

  CastlePetState(const CastlePetState& from);

  inline CastlePetState& operator=(const CastlePetState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastlePetState& default_instance();

  void Swap(CastlePetState* other);

  // implements Message ----------------------------------------------

  CastlePetState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CastlePetState& from);
  void MergeFrom(const CastlePetState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 iid = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIidFieldNumber = 1;
  inline ::google::protobuf::uint64 iid() const;
  inline void set_iid(::google::protobuf::uint64 value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 stateid = 3;
  inline bool has_stateid() const;
  inline void clear_stateid();
  static const int kStateidFieldNumber = 3;
  inline ::google::protobuf::uint32 stateid() const;
  inline void set_stateid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CastlePetState)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_stateid();
  inline void clear_has_stateid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 iid_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 stateid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CastlePetState* default_instance_;
};
// -------------------------------------------------------------------

class CastleStatueInfo : public ::google::protobuf::Message {
 public:
  CastleStatueInfo();
  virtual ~CastleStatueInfo();

  CastleStatueInfo(const CastleStatueInfo& from);

  inline CastleStatueInfo& operator=(const CastleStatueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastleStatueInfo& default_instance();

  void Swap(CastleStatueInfo* other);

  // implements Message ----------------------------------------------

  CastleStatueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CastleStatueInfo& from);
  void MergeFrom(const CastleStatueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional bool select = 4 [default = true];
  inline bool has_select() const;
  inline void clear_select();
  static const int kSelectFieldNumber = 4;
  inline bool select() const;
  inline void set_select(bool value);

  // @@protoc_insertion_point(class_scope:CastleStatueInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_select();
  inline void clear_has_select();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  bool select_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CastleStatueInfo* default_instance_;
};
// -------------------------------------------------------------------

class BinaryCastleStatue : public ::google::protobuf::Message {
 public:
  BinaryCastleStatue();
  virtual ~BinaryCastleStatue();

  BinaryCastleStatue(const BinaryCastleStatue& from);

  inline BinaryCastleStatue& operator=(const BinaryCastleStatue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryCastleStatue& default_instance();

  void Swap(BinaryCastleStatue* other);

  // implements Message ----------------------------------------------

  BinaryCastleStatue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryCastleStatue& from);
  void MergeFrom(const BinaryCastleStatue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CastleStatueInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::CastleStatueInfo& info(int index) const;
  inline ::CastleStatueInfo* mutable_info(int index);
  inline ::CastleStatueInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::CastleStatueInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::CastleStatueInfo >*
      mutable_info();

  // optional uint32 select = 2;
  inline bool has_select() const;
  inline void clear_select();
  static const int kSelectFieldNumber = 2;
  inline ::google::protobuf::uint32 select() const;
  inline void set_select(::google::protobuf::uint32 value);

  // optional uint32 skill = 3;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 3;
  inline ::google::protobuf::uint32 skill() const;
  inline void set_skill(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BinaryCastleStatue)
 private:
  inline void set_has_select();
  inline void clear_has_select();
  inline void set_has_skill();
  inline void clear_has_skill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CastleStatueInfo > info_;
  ::google::protobuf::uint32 select_;
  ::google::protobuf::uint32 skill_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BinaryCastleStatue* default_instance_;
};
// -------------------------------------------------------------------

class ReplaceSkill : public ::google::protobuf::Message {
 public:
  ReplaceSkill();
  virtual ~ReplaceSkill();

  ReplaceSkill(const ReplaceSkill& from);

  inline ReplaceSkill& operator=(const ReplaceSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplaceSkill& default_instance();

  void Swap(ReplaceSkill* other);

  // implements Message ----------------------------------------------

  ReplaceSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplaceSkill& from);
  void MergeFrom(const ReplaceSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcskill = 1;
  inline bool has_srcskill() const;
  inline void clear_srcskill();
  static const int kSrcskillFieldNumber = 1;
  inline ::google::protobuf::uint32 srcskill() const;
  inline void set_srcskill(::google::protobuf::uint32 value);

  // optional uint32 desskill = 2;
  inline bool has_desskill() const;
  inline void clear_desskill();
  static const int kDesskillFieldNumber = 2;
  inline ::google::protobuf::uint32 desskill() const;
  inline void set_desskill(::google::protobuf::uint32 value);

  // optional uint32 studysucc = 3;
  inline bool has_studysucc() const;
  inline void clear_studysucc();
  static const int kStudysuccFieldNumber = 3;
  inline ::google::protobuf::uint32 studysucc() const;
  inline void set_studysucc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ReplaceSkill)
 private:
  inline void set_has_srcskill();
  inline void clear_has_srcskill();
  inline void set_has_desskill();
  inline void clear_has_desskill();
  inline void set_has_studysucc();
  inline void clear_has_studysucc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 srcskill_;
  ::google::protobuf::uint32 desskill_;
  ::google::protobuf::uint32 studysucc_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ReplaceSkill* default_instance_;
};
// -------------------------------------------------------------------

class RelicUserPos : public ::google::protobuf::Message {
 public:
  RelicUserPos();
  virtual ~RelicUserPos();

  RelicUserPos(const RelicUserPos& from);

  inline RelicUserPos& operator=(const RelicUserPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelicUserPos& default_instance();

  void Swap(RelicUserPos* other);

  // implements Message ----------------------------------------------

  RelicUserPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelicUserPos& from);
  void MergeFrom(const RelicUserPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // optional uint32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 septid = 4;
  inline bool has_septid() const;
  inline void clear_septid();
  static const int kSeptidFieldNumber = 4;
  inline ::google::protobuf::uint32 septid() const;
  inline void set_septid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RelicUserPos)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_septid();
  inline void clear_has_septid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 septid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static RelicUserPos* default_instance_;
};
// -------------------------------------------------------------------

class RiskTaskInfo : public ::google::protobuf::Message {
 public:
  RiskTaskInfo();
  virtual ~RiskTaskInfo();

  RiskTaskInfo(const RiskTaskInfo& from);

  inline RiskTaskInfo& operator=(const RiskTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RiskTaskInfo& default_instance();

  void Swap(RiskTaskInfo* other);

  // implements Message ----------------------------------------------

  RiskTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RiskTaskInfo& from);
  void MergeFrom(const RiskTaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline ::google::protobuf::uint32 task() const;
  inline void set_task(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RiskTaskInfo)
 private:
  inline void set_has_task();
  inline void clear_has_task();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 task_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static RiskTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class BinaryRiskTaskInfo : public ::google::protobuf::Message {
 public:
  BinaryRiskTaskInfo();
  virtual ~BinaryRiskTaskInfo();

  BinaryRiskTaskInfo(const BinaryRiskTaskInfo& from);

  inline BinaryRiskTaskInfo& operator=(const BinaryRiskTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryRiskTaskInfo& default_instance();

  void Swap(BinaryRiskTaskInfo* other);

  // implements Message ----------------------------------------------

  BinaryRiskTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryRiskTaskInfo& from);
  void MergeFrom(const BinaryRiskTaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // repeated .RiskTaskInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::RiskTaskInfo& info(int index) const;
  inline ::RiskTaskInfo* mutable_info(int index);
  inline ::RiskTaskInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::RiskTaskInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::RiskTaskInfo >*
      mutable_info();

  // optional uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BinaryRiskTaskInfo)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RiskTaskInfo > info_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BinaryRiskTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class LifeSkillInfo : public ::google::protobuf::Message {
 public:
  LifeSkillInfo();
  virtual ~LifeSkillInfo();

  LifeSkillInfo(const LifeSkillInfo& from);

  inline LifeSkillInfo& operator=(const LifeSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LifeSkillInfo& default_instance();

  void Swap(LifeSkillInfo* other);

  // implements Message ----------------------------------------------

  LifeSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LifeSkillInfo& from);
  void MergeFrom(const LifeSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 stage = 3;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 3;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LifeSkillInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 stage_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static LifeSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class BinaryLifeSkill : public ::google::protobuf::Message {
 public:
  BinaryLifeSkill();
  virtual ~BinaryLifeSkill();

  BinaryLifeSkill(const BinaryLifeSkill& from);

  inline BinaryLifeSkill& operator=(const BinaryLifeSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryLifeSkill& default_instance();

  void Swap(BinaryLifeSkill* other);

  // implements Message ----------------------------------------------

  BinaryLifeSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryLifeSkill& from);
  void MergeFrom(const BinaryLifeSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LifeSkillInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::LifeSkillInfo& info(int index) const;
  inline ::LifeSkillInfo* mutable_info(int index);
  inline ::LifeSkillInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::LifeSkillInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::LifeSkillInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:BinaryLifeSkill)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::LifeSkillInfo > info_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static BinaryLifeSkill* default_instance_;
};
// -------------------------------------------------------------------

class DayGuideInfo : public ::google::protobuf::Message {
 public:
  DayGuideInfo();
  virtual ~DayGuideInfo();

  DayGuideInfo(const DayGuideInfo& from);

  inline DayGuideInfo& operator=(const DayGuideInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DayGuideInfo& default_instance();

  void Swap(DayGuideInfo* other);

  // implements Message ----------------------------------------------

  DayGuideInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DayGuideInfo& from);
  void MergeFrom(const DayGuideInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 targettimes = 2;
  inline bool has_targettimes() const;
  inline void clear_targettimes();
  static const int kTargettimesFieldNumber = 2;
  inline ::google::protobuf::uint32 targettimes() const;
  inline void set_targettimes(::google::protobuf::uint32 value);

  // optional uint32 curtimes = 3;
  inline bool has_curtimes() const;
  inline void clear_curtimes();
  static const int kCurtimesFieldNumber = 3;
  inline ::google::protobuf::uint32 curtimes() const;
  inline void set_curtimes(::google::protobuf::uint32 value);

  // optional uint32 para1 = 4;
  inline bool has_para1() const;
  inline void clear_para1();
  static const int kPara1FieldNumber = 4;
  inline ::google::protobuf::uint32 para1() const;
  inline void set_para1(::google::protobuf::uint32 value);

  // optional uint32 para2 = 5;
  inline bool has_para2() const;
  inline void clear_para2();
  static const int kPara2FieldNumber = 5;
  inline ::google::protobuf::uint32 para2() const;
  inline void set_para2(::google::protobuf::uint32 value);

  // optional uint32 para3 = 6;
  inline bool has_para3() const;
  inline void clear_para3();
  static const int kPara3FieldNumber = 6;
  inline ::google::protobuf::uint32 para3() const;
  inline void set_para3(::google::protobuf::uint32 value);

  // optional bool acceptbonus = 7;
  inline bool has_acceptbonus() const;
  inline void clear_acceptbonus();
  static const int kAcceptbonusFieldNumber = 7;
  inline bool acceptbonus() const;
  inline void set_acceptbonus(bool value);

  // optional uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DayGuideInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_targettimes();
  inline void clear_has_targettimes();
  inline void set_has_curtimes();
  inline void clear_has_curtimes();
  inline void set_has_para1();
  inline void clear_has_para1();
  inline void set_has_para2();
  inline void clear_has_para2();
  inline void set_has_para3();
  inline void clear_has_para3();
  inline void set_has_acceptbonus();
  inline void clear_has_acceptbonus();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 targettimes_;
  ::google::protobuf::uint32 curtimes_;
  ::google::protobuf::uint32 para1_;
  ::google::protobuf::uint32 para2_;
  ::google::protobuf::uint32 para3_;
  bool acceptbonus_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static DayGuideInfo* default_instance_;
};
// -------------------------------------------------------------------

class TitleData : public ::google::protobuf::Message {
 public:
  TitleData();
  virtual ~TitleData();

  TitleData(const TitleData& from);

  inline TitleData& operator=(const TitleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleData& default_instance();

  void Swap(TitleData* other);

  // implements Message ----------------------------------------------

  TitleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleData& from);
  void MergeFrom(const TitleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TitleData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TitleData* default_instance_;
};
// -------------------------------------------------------------------

class MonthCardData : public ::google::protobuf::Message {
 public:
  MonthCardData();
  virtual ~MonthCardData();

  MonthCardData(const MonthCardData& from);

  inline MonthCardData& operator=(const MonthCardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonthCardData& default_instance();

  void Swap(MonthCardData* other);

  // implements Message ----------------------------------------------

  MonthCardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonthCardData& from);
  void MergeFrom(const MonthCardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 buytime = 2;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuytimeFieldNumber = 2;
  inline ::google::protobuf::uint32 buytime() const;
  inline void set_buytime(::google::protobuf::uint32 value);

  // optional uint32 obtaintime = 3;
  inline bool has_obtaintime() const;
  inline void clear_obtaintime();
  static const int kObtaintimeFieldNumber = 3;
  inline ::google::protobuf::uint32 obtaintime() const;
  inline void set_obtaintime(::google::protobuf::uint32 value);

  // optional uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MonthCardData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buytime();
  inline void clear_has_buytime();
  inline void set_has_obtaintime();
  inline void clear_has_obtaintime();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 buytime_;
  ::google::protobuf::uint32 obtaintime_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static MonthCardData* default_instance_;
};
// -------------------------------------------------------------------

class WingSystemData : public ::google::protobuf::Message {
 public:
  WingSystemData();
  virtual ~WingSystemData();

  WingSystemData(const WingSystemData& from);

  inline WingSystemData& operator=(const WingSystemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WingSystemData& default_instance();

  void Swap(WingSystemData* other);

  // implements Message ----------------------------------------------

  WingSystemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WingSystemData& from);
  void MergeFrom(const WingSystemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 attphymin = 2;
  inline bool has_attphymin() const;
  inline void clear_attphymin();
  static const int kAttphyminFieldNumber = 2;
  inline ::google::protobuf::uint32 attphymin() const;
  inline void set_attphymin(::google::protobuf::uint32 value);

  // optional uint32 attphymax = 3;
  inline bool has_attphymax() const;
  inline void clear_attphymax();
  static const int kAttphymaxFieldNumber = 3;
  inline ::google::protobuf::uint32 attphymax() const;
  inline void set_attphymax(::google::protobuf::uint32 value);

  // optional uint32 phydef = 4;
  inline bool has_phydef() const;
  inline void clear_phydef();
  static const int kPhydefFieldNumber = 4;
  inline ::google::protobuf::uint32 phydef() const;
  inline void set_phydef(::google::protobuf::uint32 value);

  // optional uint32 magdef = 5;
  inline bool has_magdef() const;
  inline void clear_magdef();
  static const int kMagdefFieldNumber = 5;
  inline ::google::protobuf::uint32 magdef() const;
  inline void set_magdef(::google::protobuf::uint32 value);

  // optional uint32 hp = 6;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 6;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 mp = 7;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 7;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // optional uint32 enhancemaxtimes = 8;
  inline bool has_enhancemaxtimes() const;
  inline void clear_enhancemaxtimes();
  static const int kEnhancemaxtimesFieldNumber = 8;
  inline ::google::protobuf::uint32 enhancemaxtimes() const;
  inline void set_enhancemaxtimes(::google::protobuf::uint32 value);

  // optional uint32 enhancemintimes = 9;
  inline bool has_enhancemintimes() const;
  inline void clear_enhancemintimes();
  static const int kEnhancemintimesFieldNumber = 9;
  inline ::google::protobuf::uint32 enhancemintimes() const;
  inline void set_enhancemintimes(::google::protobuf::uint32 value);

  // repeated uint32 releaseskills = 10;
  inline int releaseskills_size() const;
  inline void clear_releaseskills();
  static const int kReleaseskillsFieldNumber = 10;
  inline ::google::protobuf::uint32 releaseskills(int index) const;
  inline void set_releaseskills(int index, ::google::protobuf::uint32 value);
  inline void add_releaseskills(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      releaseskills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_releaseskills();

  // optional uint32 fighting = 11;
  inline bool has_fighting() const;
  inline void clear_fighting();
  static const int kFightingFieldNumber = 11;
  inline ::google::protobuf::uint32 fighting() const;
  inline void set_fighting(::google::protobuf::uint32 value);

  // optional uint64 curexp = 12;
  inline bool has_curexp() const;
  inline void clear_curexp();
  static const int kCurexpFieldNumber = 12;
  inline ::google::protobuf::uint64 curexp() const;
  inline void set_curexp(::google::protobuf::uint64 value);

  // optional uint64 maxexp = 13;
  inline bool has_maxexp() const;
  inline void clear_maxexp();
  static const int kMaxexpFieldNumber = 13;
  inline ::google::protobuf::uint64 maxexp() const;
  inline void set_maxexp(::google::protobuf::uint64 value);

  // optional uint32 attmagmin = 14;
  inline bool has_attmagmin() const;
  inline void clear_attmagmin();
  static const int kAttmagminFieldNumber = 14;
  inline ::google::protobuf::uint32 attmagmin() const;
  inline void set_attmagmin(::google::protobuf::uint32 value);

  // optional uint32 attmagmax = 15;
  inline bool has_attmagmax() const;
  inline void clear_attmagmax();
  static const int kAttmagmaxFieldNumber = 15;
  inline ::google::protobuf::uint32 attmagmax() const;
  inline void set_attmagmax(::google::protobuf::uint32 value);

  // optional uint32 lefttimes = 16;
  inline bool has_lefttimes() const;
  inline void clear_lefttimes();
  static const int kLefttimesFieldNumber = 16;
  inline ::google::protobuf::uint32 lefttimes() const;
  inline void set_lefttimes(::google::protobuf::uint32 value);

  // optional bool open = 17;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 17;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:WingSystemData)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_attphymin();
  inline void clear_has_attphymin();
  inline void set_has_attphymax();
  inline void clear_has_attphymax();
  inline void set_has_phydef();
  inline void clear_has_phydef();
  inline void set_has_magdef();
  inline void clear_has_magdef();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_enhancemaxtimes();
  inline void clear_has_enhancemaxtimes();
  inline void set_has_enhancemintimes();
  inline void clear_has_enhancemintimes();
  inline void set_has_fighting();
  inline void clear_has_fighting();
  inline void set_has_curexp();
  inline void clear_has_curexp();
  inline void set_has_maxexp();
  inline void clear_has_maxexp();
  inline void set_has_attmagmin();
  inline void clear_has_attmagmin();
  inline void set_has_attmagmax();
  inline void clear_has_attmagmax();
  inline void set_has_lefttimes();
  inline void clear_has_lefttimes();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 attphymin_;
  ::google::protobuf::uint32 attphymax_;
  ::google::protobuf::uint32 phydef_;
  ::google::protobuf::uint32 magdef_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 enhancemaxtimes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > releaseskills_;
  ::google::protobuf::uint32 enhancemintimes_;
  ::google::protobuf::uint32 fighting_;
  ::google::protobuf::uint64 curexp_;
  ::google::protobuf::uint64 maxexp_;
  ::google::protobuf::uint32 attmagmin_;
  ::google::protobuf::uint32 attmagmax_;
  ::google::protobuf::uint32 lefttimes_;
  bool open_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static WingSystemData* default_instance_;
};
// -------------------------------------------------------------------

class StatHurtData : public ::google::protobuf::Message {
 public:
  StatHurtData();
  virtual ~StatHurtData();

  StatHurtData(const StatHurtData& from);

  inline StatHurtData& operator=(const StatHurtData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatHurtData& default_instance();

  void Swap(StatHurtData* other);

  // implements Message ----------------------------------------------

  StatHurtData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatHurtData& from);
  void MergeFrom(const StatHurtData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hurt = 1;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 1;
  inline ::google::protobuf::uint32 hurt() const;
  inline void set_hurt(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:StatHurtData)
 private:
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 hurt_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static StatHurtData* default_instance_;
};
// -------------------------------------------------------------------

class TitleInfo : public ::google::protobuf::Message {
 public:
  TitleInfo();
  virtual ~TitleInfo();

  TitleInfo(const TitleInfo& from);

  inline TitleInfo& operator=(const TitleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleInfo& default_instance();

  void Swap(TitleInfo* other);

  // implements Message ----------------------------------------------

  TitleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleInfo& from);
  void MergeFrom(const TitleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TitleInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TitleInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemInfo : public ::google::protobuf::Message {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  ItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::uint32 bind() const;
  inline void set_bind(::google::protobuf::uint32 value);

  // optional uint32 kind = 4;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 4;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ItemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 bind_;
  ::google::protobuf::uint32 kind_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class LimitShopData : public ::google::protobuf::Message {
 public:
  LimitShopData();
  virtual ~LimitShopData();

  LimitShopData(const LimitShopData& from);

  inline LimitShopData& operator=(const LimitShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitShopData& default_instance();

  void Swap(LimitShopData* other);

  // implements Message ----------------------------------------------

  LimitShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitShopData& from);
  void MergeFrom(const LimitShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // repeated .ItemInfo itemdata = 4;
  inline int itemdata_size() const;
  inline void clear_itemdata();
  static const int kItemdataFieldNumber = 4;
  inline const ::ItemInfo& itemdata(int index) const;
  inline ::ItemInfo* mutable_itemdata(int index);
  inline ::ItemInfo* add_itemdata();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      itemdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_itemdata();

  // @@protoc_insertion_point(class_scope:LimitShopData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_price();
  inline void clear_has_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::RepeatedPtrField< ::ItemInfo > itemdata_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static LimitShopData* default_instance_;
};
// -------------------------------------------------------------------

class FundData : public ::google::protobuf::Message {
 public:
  FundData();
  virtual ~FundData();

  FundData(const FundData& from);

  inline FundData& operator=(const FundData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FundData& default_instance();

  void Swap(FundData* other);

  // implements Message ----------------------------------------------

  FundData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FundData& from);
  void MergeFrom(const FundData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hasbuy = 1;
  inline int hasbuy_size() const;
  inline void clear_hasbuy();
  static const int kHasbuyFieldNumber = 1;
  inline ::google::protobuf::uint32 hasbuy(int index) const;
  inline void set_hasbuy(int index, ::google::protobuf::uint32 value);
  inline void add_hasbuy(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hasbuy() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hasbuy();

  // repeated .PairDataDWORD levelfund = 2;
  inline int levelfund_size() const;
  inline void clear_levelfund();
  static const int kLevelfundFieldNumber = 2;
  inline const ::PairDataDWORD& levelfund(int index) const;
  inline ::PairDataDWORD* mutable_levelfund(int index);
  inline ::PairDataDWORD* add_levelfund();
  inline const ::google::protobuf::RepeatedPtrField< ::PairDataDWORD >&
      levelfund() const;
  inline ::google::protobuf::RepeatedPtrField< ::PairDataDWORD >*
      mutable_levelfund();

  // @@protoc_insertion_point(class_scope:FundData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hasbuy_;
  ::google::protobuf::RepeatedPtrField< ::PairDataDWORD > levelfund_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FundData* default_instance_;
};
// -------------------------------------------------------------------

class TotalReSpData : public ::google::protobuf::Message {
 public:
  TotalReSpData();
  virtual ~TotalReSpData();

  TotalReSpData(const TotalReSpData& from);

  inline TotalReSpData& operator=(const TotalReSpData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TotalReSpData& default_instance();

  void Swap(TotalReSpData* other);

  // implements Message ----------------------------------------------

  TotalReSpData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TotalReSpData& from);
  void MergeFrom(const TotalReSpData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // repeated uint32 totalget = 2;
  inline int totalget_size() const;
  inline void clear_totalget();
  static const int kTotalgetFieldNumber = 2;
  inline ::google::protobuf::uint32 totalget(int index) const;
  inline void set_totalget(int index, ::google::protobuf::uint32 value);
  inline void add_totalget(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      totalget() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_totalget();

  // optional uint32 days = 3;
  inline bool has_days() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 3;
  inline ::google::protobuf::uint32 days() const;
  inline void set_days(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TotalReSpData)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_days();
  inline void clear_has_days();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > totalget_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 days_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TotalReSpData* default_instance_;
};
// -------------------------------------------------------------------

class RechargeSpendData : public ::google::protobuf::Message {
 public:
  RechargeSpendData();
  virtual ~RechargeSpendData();

  RechargeSpendData(const RechargeSpendData& from);

  inline RechargeSpendData& operator=(const RechargeSpendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeSpendData& default_instance();

  void Swap(RechargeSpendData* other);

  // implements Message ----------------------------------------------

  RechargeSpendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeSpendData& from);
  void MergeFrom(const RechargeSpendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reacttime = 1;
  inline bool has_reacttime() const;
  inline void clear_reacttime();
  static const int kReacttimeFieldNumber = 1;
  inline ::google::protobuf::uint32 reacttime() const;
  inline void set_reacttime(::google::protobuf::uint32 value);

  // repeated uint32 redaybonus = 2;
  inline int redaybonus_size() const;
  inline void clear_redaybonus();
  static const int kRedaybonusFieldNumber = 2;
  inline ::google::protobuf::uint32 redaybonus(int index) const;
  inline void set_redaybonus(int index, ::google::protobuf::uint32 value);
  inline void add_redaybonus(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      redaybonus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_redaybonus();

  // repeated .TotalReSpData retotalbonus = 3;
  inline int retotalbonus_size() const;
  inline void clear_retotalbonus();
  static const int kRetotalbonusFieldNumber = 3;
  inline const ::TotalReSpData& retotalbonus(int index) const;
  inline ::TotalReSpData* mutable_retotalbonus(int index);
  inline ::TotalReSpData* add_retotalbonus();
  inline const ::google::protobuf::RepeatedPtrField< ::TotalReSpData >&
      retotalbonus() const;
  inline ::google::protobuf::RepeatedPtrField< ::TotalReSpData >*
      mutable_retotalbonus();

  // optional uint32 spacttime = 4;
  inline bool has_spacttime() const;
  inline void clear_spacttime();
  static const int kSpacttimeFieldNumber = 4;
  inline ::google::protobuf::uint32 spacttime() const;
  inline void set_spacttime(::google::protobuf::uint32 value);

  // repeated uint32 spdaybonus = 5;
  inline int spdaybonus_size() const;
  inline void clear_spdaybonus();
  static const int kSpdaybonusFieldNumber = 5;
  inline ::google::protobuf::uint32 spdaybonus(int index) const;
  inline void set_spdaybonus(int index, ::google::protobuf::uint32 value);
  inline void add_spdaybonus(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      spdaybonus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_spdaybonus();

  // repeated .TotalReSpData sptotalbonus = 6;
  inline int sptotalbonus_size() const;
  inline void clear_sptotalbonus();
  static const int kSptotalbonusFieldNumber = 6;
  inline const ::TotalReSpData& sptotalbonus(int index) const;
  inline ::TotalReSpData* mutable_sptotalbonus(int index);
  inline ::TotalReSpData* add_sptotalbonus();
  inline const ::google::protobuf::RepeatedPtrField< ::TotalReSpData >&
      sptotalbonus() const;
  inline ::google::protobuf::RepeatedPtrField< ::TotalReSpData >*
      mutable_sptotalbonus();

  // @@protoc_insertion_point(class_scope:RechargeSpendData)
 private:
  inline void set_has_reacttime();
  inline void clear_has_reacttime();
  inline void set_has_spacttime();
  inline void clear_has_spacttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > redaybonus_;
  ::google::protobuf::uint32 reacttime_;
  ::google::protobuf::uint32 spacttime_;
  ::google::protobuf::RepeatedPtrField< ::TotalReSpData > retotalbonus_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > spdaybonus_;
  ::google::protobuf::RepeatedPtrField< ::TotalReSpData > sptotalbonus_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static RechargeSpendData* default_instance_;
};
// -------------------------------------------------------------------

class DeclareWarData : public ::google::protobuf::Message {
 public:
  DeclareWarData();
  virtual ~DeclareWarData();

  DeclareWarData(const DeclareWarData& from);

  inline DeclareWarData& operator=(const DeclareWarData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeclareWarData& default_instance();

  void Swap(DeclareWarData* other);

  // implements Message ----------------------------------------------

  DeclareWarData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeclareWarData& from);
  void MergeFrom(const DeclareWarData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 septid = 1;
  inline bool has_septid() const;
  inline void clear_septid();
  static const int kSeptidFieldNumber = 1;
  inline ::google::protobuf::uint32 septid() const;
  inline void set_septid(::google::protobuf::uint32 value);

  // optional string septname = 2;
  inline bool has_septname() const;
  inline void clear_septname();
  static const int kSeptnameFieldNumber = 2;
  inline const ::std::string& septname() const;
  inline void set_septname(const ::std::string& value);
  inline void set_septname(const char* value);
  inline void set_septname(const char* value, size_t size);
  inline ::std::string* mutable_septname();
  inline ::std::string* release_septname();
  inline void set_allocated_septname(::std::string* septname);

  // optional uint32 lefttime = 3;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLefttimeFieldNumber = 3;
  inline ::google::protobuf::uint32 lefttime() const;
  inline void set_lefttime(::google::protobuf::uint32 value);

  // optional uint32 leftcd = 4;
  inline bool has_leftcd() const;
  inline void clear_leftcd();
  static const int kLeftcdFieldNumber = 4;
  inline ::google::protobuf::uint32 leftcd() const;
  inline void set_leftcd(::google::protobuf::uint32 value);

  // optional string leadername = 5;
  inline bool has_leadername() const;
  inline void clear_leadername();
  static const int kLeadernameFieldNumber = 5;
  inline const ::std::string& leadername() const;
  inline void set_leadername(const ::std::string& value);
  inline void set_leadername(const char* value);
  inline void set_leadername(const char* value, size_t size);
  inline ::std::string* mutable_leadername();
  inline ::std::string* release_leadername();
  inline void set_allocated_leadername(::std::string* leadername);

  // optional uint32 count = 6;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 6;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DeclareWarData)
 private:
  inline void set_has_septid();
  inline void clear_has_septid();
  inline void set_has_septname();
  inline void clear_has_septname();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();
  inline void set_has_leftcd();
  inline void clear_has_leftcd();
  inline void set_has_leadername();
  inline void clear_has_leadername();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* septname_;
  ::google::protobuf::uint32 septid_;
  ::google::protobuf::uint32 lefttime_;
  ::std::string* leadername_;
  ::google::protobuf::uint32 leftcd_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static DeclareWarData* default_instance_;
};
// -------------------------------------------------------------------

class PropValues : public ::google::protobuf::Message {
 public:
  PropValues();
  virtual ~PropValues();

  PropValues(const PropValues& from);

  inline PropValues& operator=(const PropValues& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropValues& default_instance();

  void Swap(PropValues* other);

  // implements Message ----------------------------------------------

  PropValues* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropValues& from);
  void MergeFrom(const PropValues& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PropValues)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static PropValues* default_instance_;
};
// -------------------------------------------------------------------

class FPairDataDWORD : public ::google::protobuf::Message {
 public:
  FPairDataDWORD();
  virtual ~FPairDataDWORD();

  FPairDataDWORD(const FPairDataDWORD& from);

  inline FPairDataDWORD& operator=(const FPairDataDWORD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FPairDataDWORD& default_instance();

  void Swap(FPairDataDWORD* other);

  // implements Message ----------------------------------------------

  FPairDataDWORD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FPairDataDWORD& from);
  void MergeFrom(const FPairDataDWORD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 para1 = 1;
  inline bool has_para1() const;
  inline void clear_para1();
  static const int kPara1FieldNumber = 1;
  inline ::google::protobuf::uint32 para1() const;
  inline void set_para1(::google::protobuf::uint32 value);

  // optional uint32 para2 = 2;
  inline bool has_para2() const;
  inline void clear_para2();
  static const int kPara2FieldNumber = 2;
  inline ::google::protobuf::uint32 para2() const;
  inline void set_para2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FPairDataDWORD)
 private:
  inline void set_has_para1();
  inline void clear_has_para1();
  inline void set_has_para2();
  inline void clear_has_para2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 para1_;
  ::google::protobuf::uint32 para2_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FPairDataDWORD* default_instance_;
};
// -------------------------------------------------------------------

class FPairDataStrDW : public ::google::protobuf::Message {
 public:
  FPairDataStrDW();
  virtual ~FPairDataStrDW();

  FPairDataStrDW(const FPairDataStrDW& from);

  inline FPairDataStrDW& operator=(const FPairDataStrDW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FPairDataStrDW& default_instance();

  void Swap(FPairDataStrDW* other);

  // implements Message ----------------------------------------------

  FPairDataStrDW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FPairDataStrDW& from);
  void MergeFrom(const FPairDataStrDW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FPairDataStrDW)
 private:
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* str_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FPairDataStrDW* default_instance_;
};
// -------------------------------------------------------------------

class FTripleDataDWORD : public ::google::protobuf::Message {
 public:
  FTripleDataDWORD();
  virtual ~FTripleDataDWORD();

  FTripleDataDWORD(const FTripleDataDWORD& from);

  inline FTripleDataDWORD& operator=(const FTripleDataDWORD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FTripleDataDWORD& default_instance();

  void Swap(FTripleDataDWORD* other);

  // implements Message ----------------------------------------------

  FTripleDataDWORD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FTripleDataDWORD& from);
  void MergeFrom(const FTripleDataDWORD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 para1 = 1;
  inline bool has_para1() const;
  inline void clear_para1();
  static const int kPara1FieldNumber = 1;
  inline ::google::protobuf::uint32 para1() const;
  inline void set_para1(::google::protobuf::uint32 value);

  // optional uint32 para2 = 2;
  inline bool has_para2() const;
  inline void clear_para2();
  static const int kPara2FieldNumber = 2;
  inline ::google::protobuf::uint32 para2() const;
  inline void set_para2(::google::protobuf::uint32 value);

  // optional uint32 para3 = 3;
  inline bool has_para3() const;
  inline void clear_para3();
  static const int kPara3FieldNumber = 3;
  inline ::google::protobuf::uint32 para3() const;
  inline void set_para3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FTripleDataDWORD)
 private:
  inline void set_has_para1();
  inline void clear_has_para1();
  inline void set_has_para2();
  inline void clear_has_para2();
  inline void set_has_para3();
  inline void clear_has_para3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 para1_;
  ::google::protobuf::uint32 para2_;
  ::google::protobuf::uint32 para3_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FTripleDataDWORD* default_instance_;
};
// -------------------------------------------------------------------

class StpObjectNode : public ::google::protobuf::Message {
 public:
  StpObjectNode();
  virtual ~StpObjectNode();

  StpObjectNode(const StpObjectNode& from);

  inline StpObjectNode& operator=(const StpObjectNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StpObjectNode& default_instance();

  void Swap(StpObjectNode* other);

  // implements Message ----------------------------------------------

  StpObjectNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StpObjectNode& from);
  void MergeFrom(const StpObjectNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gridType = 1;
  inline bool has_gridtype() const;
  inline void clear_gridtype();
  static const int kGridTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 gridtype() const;
  inline void set_gridtype(::google::protobuf::uint32 value);

  // optional uint32 tempid = 2;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 2;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bool del = 6;
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 6;
  inline bool del() const;
  inline void set_del(bool value);

  // @@protoc_insertion_point(class_scope:StpObjectNode)
 private:
  inline void set_has_gridtype();
  inline void clear_has_gridtype();
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_del();
  inline void clear_has_del();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gridtype_;
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 num_;
  bool del_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static StpObjectNode* default_instance_;
};
// -------------------------------------------------------------------

class FMsgNpcFunction : public ::google::protobuf::Message {
 public:
  FMsgNpcFunction();
  virtual ~FMsgNpcFunction();

  FMsgNpcFunction(const FMsgNpcFunction& from);

  inline FMsgNpcFunction& operator=(const FMsgNpcFunction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FMsgNpcFunction& default_instance();

  void Swap(FMsgNpcFunction* other);

  // implements Message ----------------------------------------------

  FMsgNpcFunction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FMsgNpcFunction& from);
  void MergeFrom(const FMsgNpcFunction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 funcid = 1;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncidFieldNumber = 1;
  inline ::google::protobuf::uint32 funcid() const;
  inline void set_funcid(::google::protobuf::uint32 value);

  // optional string funcname = 2;
  inline bool has_funcname() const;
  inline void clear_funcname();
  static const int kFuncnameFieldNumber = 2;
  inline const ::std::string& funcname() const;
  inline void set_funcname(const ::std::string& value);
  inline void set_funcname(const char* value);
  inline void set_funcname(const char* value, size_t size);
  inline ::std::string* mutable_funcname();
  inline ::std::string* release_funcname();
  inline void set_allocated_funcname(::std::string* funcname);

  // optional string funcevent = 3;
  inline bool has_funcevent() const;
  inline void clear_funcevent();
  static const int kFunceventFieldNumber = 3;
  inline const ::std::string& funcevent() const;
  inline void set_funcevent(const ::std::string& value);
  inline void set_funcevent(const char* value);
  inline void set_funcevent(const char* value, size_t size);
  inline ::std::string* mutable_funcevent();
  inline ::std::string* release_funcevent();
  inline void set_allocated_funcevent(::std::string* funcevent);

  // optional string funcicon = 4;
  inline bool has_funcicon() const;
  inline void clear_funcicon();
  static const int kFunciconFieldNumber = 4;
  inline const ::std::string& funcicon() const;
  inline void set_funcicon(const ::std::string& value);
  inline void set_funcicon(const char* value);
  inline void set_funcicon(const char* value, size_t size);
  inline ::std::string* mutable_funcicon();
  inline ::std::string* release_funcicon();
  inline void set_allocated_funcicon(::std::string* funcicon);

  // optional bool funcopen = 5;
  inline bool has_funcopen() const;
  inline void clear_funcopen();
  static const int kFuncopenFieldNumber = 5;
  inline bool funcopen() const;
  inline void set_funcopen(bool value);

  // @@protoc_insertion_point(class_scope:FMsgNpcFunction)
 private:
  inline void set_has_funcid();
  inline void clear_has_funcid();
  inline void set_has_funcname();
  inline void clear_has_funcname();
  inline void set_has_funcevent();
  inline void clear_has_funcevent();
  inline void set_has_funcicon();
  inline void clear_has_funcicon();
  inline void set_has_funcopen();
  inline void clear_has_funcopen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* funcname_;
  ::std::string* funcevent_;
  ::google::protobuf::uint32 funcid_;
  bool funcopen_;
  ::std::string* funcicon_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FMsgNpcFunction* default_instance_;
};
// -------------------------------------------------------------------

class FNpcDlgPara : public ::google::protobuf::Message {
 public:
  FNpcDlgPara();
  virtual ~FNpcDlgPara();

  FNpcDlgPara(const FNpcDlgPara& from);

  inline FNpcDlgPara& operator=(const FNpcDlgPara& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FNpcDlgPara& default_instance();

  void Swap(FNpcDlgPara* other);

  // implements Message ----------------------------------------------

  FNpcDlgPara* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FNpcDlgPara& from);
  void MergeFrom(const FNpcDlgPara& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag = 1;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 1;
  inline const ::std::string& tag() const;
  inline void set_tag(const ::std::string& value);
  inline void set_tag(const char* value);
  inline void set_tag(const char* value, size_t size);
  inline ::std::string* mutable_tag();
  inline ::std::string* release_tag();
  inline void set_allocated_tag(::std::string* tag);

  // repeated .FValueCell value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::FValueCell& value(int index) const;
  inline ::FValueCell* mutable_value(int index);
  inline ::FValueCell* add_value();
  inline const ::google::protobuf::RepeatedPtrField< ::FValueCell >&
      value() const;
  inline ::google::protobuf::RepeatedPtrField< ::FValueCell >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:FNpcDlgPara)
 private:
  inline void set_has_tag();
  inline void clear_has_tag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tag_;
  ::google::protobuf::RepeatedPtrField< ::FValueCell > value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FNpcDlgPara* default_instance_;
};
// -------------------------------------------------------------------

class FValueCell : public ::google::protobuf::Message {
 public:
  FValueCell();
  virtual ~FValueCell();

  FValueCell(const FValueCell& from);

  inline FValueCell& operator=(const FValueCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FValueCell& default_instance();

  void Swap(FValueCell* other);

  // implements Message ----------------------------------------------

  FValueCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FValueCell& from);
  void MergeFrom(const FValueCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 intvalue = 1;
  inline bool has_intvalue() const;
  inline void clear_intvalue();
  static const int kIntvalueFieldNumber = 1;
  inline ::google::protobuf::uint32 intvalue() const;
  inline void set_intvalue(::google::protobuf::uint32 value);

  // optional string strvalue = 2;
  inline bool has_strvalue() const;
  inline void clear_strvalue();
  static const int kStrvalueFieldNumber = 2;
  inline const ::std::string& strvalue() const;
  inline void set_strvalue(const ::std::string& value);
  inline void set_strvalue(const char* value);
  inline void set_strvalue(const char* value, size_t size);
  inline ::std::string* mutable_strvalue();
  inline ::std::string* release_strvalue();
  inline void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:FValueCell)
 private:
  inline void set_has_intvalue();
  inline void clear_has_intvalue();
  inline void set_has_strvalue();
  inline void clear_has_strvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* strvalue_;
  ::google::protobuf::uint32 intvalue_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FValueCell* default_instance_;
};
// -------------------------------------------------------------------

class FPropertyValues_FValue : public ::google::protobuf::Message {
 public:
  FPropertyValues_FValue();
  virtual ~FPropertyValues_FValue();

  FPropertyValues_FValue(const FPropertyValues_FValue& from);

  inline FPropertyValues_FValue& operator=(const FPropertyValues_FValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FPropertyValues_FValue& default_instance();

  void Swap(FPropertyValues_FValue* other);

  // implements Message ----------------------------------------------

  FPropertyValues_FValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FPropertyValues_FValue& from);
  void MergeFrom(const FPropertyValues_FValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .FPropValueType key = 1 [default = FValueType_none];
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::FPropValueType key() const;
  inline void set_key(::FPropValueType value);

  // repeated uint32 value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::uint32 value);
  inline void add_value(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:FPropertyValues.FValue)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_;
  int key_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FPropertyValues_FValue* default_instance_;
};
// -------------------------------------------------------------------

class FPropertyValues : public ::google::protobuf::Message {
 public:
  FPropertyValues();
  virtual ~FPropertyValues();

  FPropertyValues(const FPropertyValues& from);

  inline FPropertyValues& operator=(const FPropertyValues& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FPropertyValues& default_instance();

  void Swap(FPropertyValues* other);

  // implements Message ----------------------------------------------

  FPropertyValues* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FPropertyValues& from);
  void MergeFrom(const FPropertyValues& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FPropertyValues_FValue FValue;

  // accessors -------------------------------------------------------

  // repeated .FPropertyValues.FValue value = 1;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::FPropertyValues_FValue& value(int index) const;
  inline ::FPropertyValues_FValue* mutable_value(int index);
  inline ::FPropertyValues_FValue* add_value();
  inline const ::google::protobuf::RepeatedPtrField< ::FPropertyValues_FValue >&
      value() const;
  inline ::google::protobuf::RepeatedPtrField< ::FPropertyValues_FValue >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:FPropertyValues)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::FPropertyValues_FValue > value_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FPropertyValues* default_instance_;
};
// -------------------------------------------------------------------

class FNpcMapData : public ::google::protobuf::Message {
 public:
  FNpcMapData();
  virtual ~FNpcMapData();

  FNpcMapData(const FNpcMapData& from);

  inline FNpcMapData& operator=(const FNpcMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FNpcMapData& default_instance();

  void Swap(FNpcMapData* other);

  // implements Message ----------------------------------------------

  FNpcMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FNpcMapData& from);
  void MergeFrom(const FNpcMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 tmpid = 2;
  inline bool has_tmpid() const;
  inline void clear_tmpid();
  static const int kTmpidFieldNumber = 2;
  inline ::google::protobuf::uint32 tmpid() const;
  inline void set_tmpid(::google::protobuf::uint32 value);

  // optional uint32 hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 x = 4;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 4;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 speed = 6;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 6;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);

  // optional uint32 dir = 7;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 7;
  inline ::google::protobuf::uint32 dir() const;
  inline void set_dir(::google::protobuf::uint32 value);

  // optional uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 visit = 9;
  inline bool has_visit() const;
  inline void clear_visit();
  static const int kVisitFieldNumber = 9;
  inline ::google::protobuf::uint32 visit() const;
  inline void set_visit(::google::protobuf::uint32 value);

  // optional uint32 countryId = 10;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIdFieldNumber = 10;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 teamid = 11;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 11;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint32 septid = 12;
  inline bool has_septid() const;
  inline void clear_septid();
  static const int kSeptidFieldNumber = 12;
  inline ::google::protobuf::uint32 septid() const;
  inline void set_septid(::google::protobuf::uint32 value);

  // optional uint32 unionid = 13;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionidFieldNumber = 13;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);

  // optional uint32 master_type = 14;
  inline bool has_master_type() const;
  inline void clear_master_type();
  static const int kMasterTypeFieldNumber = 14;
  inline ::google::protobuf::uint32 master_type() const;
  inline void set_master_type(::google::protobuf::uint32 value);

  // optional uint32 masterid = 15;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 15;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);

  // optional string mastername = 16;
  inline bool has_mastername() const;
  inline void clear_mastername();
  static const int kMasternameFieldNumber = 16;
  inline const ::std::string& mastername() const;
  inline void set_mastername(const ::std::string& value);
  inline void set_mastername(const char* value);
  inline void set_mastername(const char* value, size_t size);
  inline ::std::string* mutable_mastername();
  inline ::std::string* release_mastername();
  inline void set_allocated_mastername(::std::string* mastername);

  // optional string name = 17;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 17;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 skillcount = 18;
  inline bool has_skillcount() const;
  inline void clear_skillcount();
  static const int kSkillcountFieldNumber = 18;
  inline ::google::protobuf::uint32 skillcount() const;
  inline void set_skillcount(::google::protobuf::uint32 value);

  // repeated uint32 sign = 19;
  inline int sign_size() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 19;
  inline ::google::protobuf::uint32 sign(int index) const;
  inline void set_sign(int index, ::google::protobuf::uint32 value);
  inline void add_sign(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sign() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sign();

  // repeated .FStateData ninestate = 20;
  inline int ninestate_size() const;
  inline void clear_ninestate();
  static const int kNinestateFieldNumber = 20;
  inline const ::FStateData& ninestate(int index) const;
  inline ::FStateData* mutable_ninestate(int index);
  inline ::FStateData* add_ninestate();
  inline const ::google::protobuf::RepeatedPtrField< ::FStateData >&
      ninestate() const;
  inline ::google::protobuf::RepeatedPtrField< ::FStateData >*
      mutable_ninestate();

  // optional uint32 attacked_type = 21;
  inline bool has_attacked_type() const;
  inline void clear_attacked_type();
  static const int kAttackedTypeFieldNumber = 21;
  inline ::google::protobuf::uint32 attacked_type() const;
  inline void set_attacked_type(::google::protobuf::uint32 value);

  // optional uint32 maxhp = 22;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 22;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // optional uint32 pkcamp = 23;
  inline bool has_pkcamp() const;
  inline void clear_pkcamp();
  static const int kPkcampFieldNumber = 23;
  inline ::google::protobuf::uint32 pkcamp() const;
  inline void set_pkcamp(::google::protobuf::uint32 value);

  // optional string desname = 24;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesnameFieldNumber = 24;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  inline ::std::string* release_desname();
  inline void set_allocated_desname(::std::string* desname);

  // optional bool into = 25 [default = false];
  inline bool has_into() const;
  inline void clear_into();
  static const int kIntoFieldNumber = 25;
  inline bool into() const;
  inline void set_into(bool value);

  // optional uint32 killer = 26;
  inline bool has_killer() const;
  inline void clear_killer();
  static const int kKillerFieldNumber = 26;
  inline ::google::protobuf::uint32 killer() const;
  inline void set_killer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FNpcMapData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_tmpid();
  inline void clear_has_tmpid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_visit();
  inline void clear_has_visit();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_septid();
  inline void clear_has_septid();
  inline void set_has_unionid();
  inline void clear_has_unionid();
  inline void set_has_master_type();
  inline void clear_has_master_type();
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_mastername();
  inline void clear_has_mastername();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_skillcount();
  inline void clear_has_skillcount();
  inline void set_has_attacked_type();
  inline void clear_has_attacked_type();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_pkcamp();
  inline void clear_has_pkcamp();
  inline void set_has_desname();
  inline void clear_has_desname();
  inline void set_has_into();
  inline void clear_has_into();
  inline void set_has_killer();
  inline void clear_has_killer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 tmpid_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 dir_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 visit_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint32 septid_;
  ::google::protobuf::uint32 unionid_;
  ::google::protobuf::uint32 master_type_;
  ::std::string* mastername_;
  ::google::protobuf::uint32 masterid_;
  ::google::protobuf::uint32 skillcount_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sign_;
  ::google::protobuf::RepeatedPtrField< ::FStateData > ninestate_;
  ::google::protobuf::uint32 attacked_type_;
  ::google::protobuf::uint32 maxhp_;
  ::std::string* desname_;
  ::google::protobuf::uint32 pkcamp_;
  bool into_;
  ::google::protobuf::uint32 killer_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FNpcMapData* default_instance_;
};
// -------------------------------------------------------------------

class FStateData : public ::google::protobuf::Message {
 public:
  FStateData();
  virtual ~FStateData();

  FStateData(const FStateData& from);

  inline FStateData& operator=(const FStateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FStateData& default_instance();

  void Swap(FStateData* other);

  // implements Message ----------------------------------------------

  FStateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FStateData& from);
  void MergeFrom(const FStateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 stateid = 1;
  inline bool has_stateid() const;
  inline void clear_stateid();
  static const int kStateidFieldNumber = 1;
  inline ::google::protobuf::uint64 stateid() const;
  inline void set_stateid(::google::protobuf::uint64 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional uint32 linkpoint = 4;
  inline bool has_linkpoint() const;
  inline void clear_linkpoint();
  static const int kLinkpointFieldNumber = 4;
  inline ::google::protobuf::uint32 linkpoint() const;
  inline void set_linkpoint(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FStateData)
 private:
  inline void set_has_stateid();
  inline void clear_has_stateid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_linkpoint();
  inline void clear_has_linkpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 stateid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::uint32 linkpoint_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FStateData* default_instance_;
};
// -------------------------------------------------------------------

class FCharacterMapShow : public ::google::protobuf::Message {
 public:
  FCharacterMapShow();
  virtual ~FCharacterMapShow();

  FCharacterMapShow(const FCharacterMapShow& from);

  inline FCharacterMapShow& operator=(const FCharacterMapShow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FCharacterMapShow& default_instance();

  void Swap(FCharacterMapShow* other);

  // implements Message ----------------------------------------------

  FCharacterMapShow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FCharacterMapShow& from);
  void MergeFrom(const FCharacterMapShow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 face = 1;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 1;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);

  // optional uint32 hairstyle = 2;
  inline bool has_hairstyle() const;
  inline void clear_hairstyle();
  static const int kHairstyleFieldNumber = 2;
  inline ::google::protobuf::uint32 hairstyle() const;
  inline void set_hairstyle(::google::protobuf::uint32 value);

  // optional uint32 haircolor = 3;
  inline bool has_haircolor() const;
  inline void clear_haircolor();
  static const int kHaircolorFieldNumber = 3;
  inline ::google::protobuf::uint32 haircolor() const;
  inline void set_haircolor(::google::protobuf::uint32 value);

  // optional uint32 weapon = 4;
  inline bool has_weapon() const;
  inline void clear_weapon();
  static const int kWeaponFieldNumber = 4;
  inline ::google::protobuf::uint32 weapon() const;
  inline void set_weapon(::google::protobuf::uint32 value);

  // optional uint32 coat = 5;
  inline bool has_coat() const;
  inline void clear_coat();
  static const int kCoatFieldNumber = 5;
  inline ::google::protobuf::uint32 coat() const;
  inline void set_coat(::google::protobuf::uint32 value);

  // optional uint32 horse = 6;
  inline bool has_horse() const;
  inline void clear_horse();
  static const int kHorseFieldNumber = 6;
  inline ::google::protobuf::uint32 horse() const;
  inline void set_horse(::google::protobuf::uint32 value);

  // optional uint32 wing = 7;
  inline bool has_wing() const;
  inline void clear_wing();
  static const int kWingFieldNumber = 7;
  inline ::google::protobuf::uint32 wing() const;
  inline void set_wing(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FCharacterMapShow)
 private:
  inline void set_has_face();
  inline void clear_has_face();
  inline void set_has_hairstyle();
  inline void clear_has_hairstyle();
  inline void set_has_haircolor();
  inline void clear_has_haircolor();
  inline void set_has_weapon();
  inline void clear_has_weapon();
  inline void set_has_coat();
  inline void clear_has_coat();
  inline void set_has_horse();
  inline void clear_has_horse();
  inline void set_has_wing();
  inline void clear_has_wing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 hairstyle_;
  ::google::protobuf::uint32 haircolor_;
  ::google::protobuf::uint32 weapon_;
  ::google::protobuf::uint32 coat_;
  ::google::protobuf::uint32 horse_;
  ::google::protobuf::uint32 wing_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FCharacterMapShow* default_instance_;
};
// -------------------------------------------------------------------

class FCharacterMapData : public ::google::protobuf::Message {
 public:
  FCharacterMapData();
  virtual ~FCharacterMapData();

  FCharacterMapData(const FCharacterMapData& from);

  inline FCharacterMapData& operator=(const FCharacterMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FCharacterMapData& default_instance();

  void Swap(FCharacterMapData* other);

  // implements Message ----------------------------------------------

  FCharacterMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FCharacterMapData& from);
  void MergeFrom(const FCharacterMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .FCharacterMapShow mapShow = 1;
  inline bool has_mapshow() const;
  inline void clear_mapshow();
  static const int kMapShowFieldNumber = 1;
  inline const ::FCharacterMapShow& mapshow() const;
  inline ::FCharacterMapShow* mutable_mapshow();
  inline ::FCharacterMapShow* release_mapshow();
  inline void set_allocated_mapshow(::FCharacterMapShow* mapshow);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 country = 3;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 3;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);

  // optional uint32 septOfficer = 4;
  inline bool has_septofficer() const;
  inline void clear_septofficer();
  static const int kSeptOfficerFieldNumber = 4;
  inline ::google::protobuf::uint32 septofficer() const;
  inline void set_septofficer(::google::protobuf::uint32 value);

  // optional uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 x = 7;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 7;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 8;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 8;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 z = 38;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 38;
  inline ::google::protobuf::uint32 z() const;
  inline void set_z(::google::protobuf::uint32 value);

  // optional uint32 dir = 9;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 9;
  inline ::google::protobuf::uint32 dir() const;
  inline void set_dir(::google::protobuf::uint32 value);

  // optional uint32 moveSpeed = 10;
  inline bool has_movespeed() const;
  inline void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 10;
  inline ::google::protobuf::uint32 movespeed() const;
  inline void set_movespeed(::google::protobuf::uint32 value);

  // optional uint32 evilvalue = 11;
  inline bool has_evilvalue() const;
  inline void clear_evilvalue();
  static const int kEvilvalueFieldNumber = 11;
  inline ::google::protobuf::uint32 evilvalue() const;
  inline void set_evilvalue(::google::protobuf::uint32 value);

  // optional uint32 questState = 12;
  inline bool has_queststate() const;
  inline void clear_queststate();
  static const int kQuestStateFieldNumber = 12;
  inline ::google::protobuf::uint32 queststate() const;
  inline void set_queststate(::google::protobuf::uint32 value);

  // optional string shopName = 13;
  inline bool has_shopname() const;
  inline void clear_shopname();
  static const int kShopNameFieldNumber = 13;
  inline const ::std::string& shopname() const;
  inline void set_shopname(const ::std::string& value);
  inline void set_shopname(const char* value);
  inline void set_shopname(const char* value, size_t size);
  inline ::std::string* mutable_shopname();
  inline ::std::string* release_shopname();
  inline void set_allocated_shopname(::std::string* shopname);

  // optional uint32 shopState = 14;
  inline bool has_shopstate() const;
  inline void clear_shopstate();
  static const int kShopStateFieldNumber = 14;
  inline ::google::protobuf::uint32 shopstate() const;
  inline void set_shopstate(::google::protobuf::uint32 value);

  // optional uint32 shopNameColor = 15;
  inline bool has_shopnamecolor() const;
  inline void clear_shopnamecolor();
  static const int kShopNameColorFieldNumber = 15;
  inline ::google::protobuf::uint32 shopnamecolor() const;
  inline void set_shopnamecolor(::google::protobuf::uint32 value);

  // repeated .FStateData ninestate = 16;
  inline int ninestate_size() const;
  inline void clear_ninestate();
  static const int kNinestateFieldNumber = 16;
  inline const ::FStateData& ninestate(int index) const;
  inline ::FStateData* mutable_ninestate(int index);
  inline ::FStateData* add_ninestate();
  inline const ::google::protobuf::RepeatedPtrField< ::FStateData >&
      ninestate() const;
  inline ::google::protobuf::RepeatedPtrField< ::FStateData >*
      mutable_ninestate();

  // optional string name = 17;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 17;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string septname = 18;
  inline bool has_septname() const;
  inline void clear_septname();
  static const int kSeptnameFieldNumber = 18;
  inline const ::std::string& septname() const;
  inline void set_septname(const ::std::string& value);
  inline void set_septname(const char* value);
  inline void set_septname(const char* value, size_t size);
  inline ::std::string* mutable_septname();
  inline ::std::string* release_septname();
  inline void set_allocated_septname(::std::string* septname);

  // optional string title = 20;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 20;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string teamName = 21;
  inline bool has_teamname() const;
  inline void clear_teamname();
  static const int kTeamNameFieldNumber = 21;
  inline const ::std::string& teamname() const;
  inline void set_teamname(const ::std::string& value);
  inline void set_teamname(const char* value);
  inline void set_teamname(const char* value, size_t size);
  inline ::std::string* mutable_teamname();
  inline ::std::string* release_teamname();
  inline void set_allocated_teamname(::std::string* teamname);

  // optional uint32 worldLevel = 22;
  inline bool has_worldlevel() const;
  inline void clear_worldlevel();
  static const int kWorldLevelFieldNumber = 22;
  inline ::google::protobuf::uint32 worldlevel() const;
  inline void set_worldlevel(::google::protobuf::uint32 value);

  // optional uint32 gohome = 23;
  inline bool has_gohome() const;
  inline void clear_gohome();
  static const int kGohomeFieldNumber = 23;
  inline ::google::protobuf::uint32 gohome() const;
  inline void set_gohome(::google::protobuf::uint32 value);

  // optional uint32 chariot_tempid = 24;
  inline bool has_chariot_tempid() const;
  inline void clear_chariot_tempid();
  static const int kChariotTempidFieldNumber = 24;
  inline ::google::protobuf::uint32 chariot_tempid() const;
  inline void set_chariot_tempid(::google::protobuf::uint32 value);

  // optional uint32 chariot_mastertype = 25;
  inline bool has_chariot_mastertype() const;
  inline void clear_chariot_mastertype();
  static const int kChariotMastertypeFieldNumber = 25;
  inline ::google::protobuf::uint32 chariot_mastertype() const;
  inline void set_chariot_mastertype(::google::protobuf::uint32 value);

  // optional .FProfessionType profession = 26 [default = FProfession_None];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 26;
  inline ::FProfessionType profession() const;
  inline void set_profession(::FProfessionType value);

  // optional bool is_gold_shop = 27 [default = false];
  inline bool has_is_gold_shop() const;
  inline void clear_is_gold_shop();
  static const int kIsGoldShopFieldNumber = 27;
  inline bool is_gold_shop() const;
  inline void set_is_gold_shop(bool value);

  // optional uint32 hp = 28;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 28;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 maxhp = 29;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 29;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // optional uint32 pkcamp = 30;
  inline bool has_pkcamp() const;
  inline void clear_pkcamp();
  static const int kPkcampFieldNumber = 30;
  inline ::google::protobuf::uint32 pkcamp() const;
  inline void set_pkcamp(::google::protobuf::uint32 value);

  // optional bool citywarwinner = 31;
  inline bool has_citywarwinner() const;
  inline void clear_citywarwinner();
  static const int kCitywarwinnerFieldNumber = 31;
  inline bool citywarwinner() const;
  inline void set_citywarwinner(bool value);

  // optional uint32 duelmode = 32;
  inline bool has_duelmode() const;
  inline void clear_duelmode();
  static const int kDuelmodeFieldNumber = 32;
  inline ::google::protobuf::uint32 duelmode() const;
  inline void set_duelmode(::google::protobuf::uint32 value);

  // optional uint32 castle_level = 33;
  inline bool has_castle_level() const;
  inline void clear_castle_level();
  static const int kCastleLevelFieldNumber = 33;
  inline ::google::protobuf::uint32 castle_level() const;
  inline void set_castle_level(::google::protobuf::uint32 value);

  // optional uint32 wingid = 34;
  inline bool has_wingid() const;
  inline void clear_wingid();
  static const int kWingidFieldNumber = 34;
  inline ::google::protobuf::uint32 wingid() const;
  inline void set_wingid(::google::protobuf::uint32 value);

  // optional uint32 winglevel = 35;
  inline bool has_winglevel() const;
  inline void clear_winglevel();
  static const int kWinglevelFieldNumber = 35;
  inline ::google::protobuf::uint32 winglevel() const;
  inline void set_winglevel(::google::protobuf::uint32 value);

  // optional uint32 wingstrenglevel = 36;
  inline bool has_wingstrenglevel() const;
  inline void clear_wingstrenglevel();
  static const int kWingstrenglevelFieldNumber = 36;
  inline ::google::protobuf::uint32 wingstrenglevel() const;
  inline void set_wingstrenglevel(::google::protobuf::uint32 value);

  // optional uint32 subprofession = 37;
  inline bool has_subprofession() const;
  inline void clear_subprofession();
  static const int kSubprofessionFieldNumber = 37;
  inline ::google::protobuf::uint32 subprofession() const;
  inline void set_subprofession(::google::protobuf::uint32 value);

  // optional uint32 newtitle = 39;
  inline bool has_newtitle() const;
  inline void clear_newtitle();
  static const int kNewtitleFieldNumber = 39;
  inline ::google::protobuf::uint32 newtitle() const;
  inline void set_newtitle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FCharacterMapData)
 private:
  inline void set_has_mapshow();
  inline void clear_has_mapshow();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_septofficer();
  inline void clear_has_septofficer();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_movespeed();
  inline void clear_has_movespeed();
  inline void set_has_evilvalue();
  inline void clear_has_evilvalue();
  inline void set_has_queststate();
  inline void clear_has_queststate();
  inline void set_has_shopname();
  inline void clear_has_shopname();
  inline void set_has_shopstate();
  inline void clear_has_shopstate();
  inline void set_has_shopnamecolor();
  inline void clear_has_shopnamecolor();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_septname();
  inline void clear_has_septname();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_teamname();
  inline void clear_has_teamname();
  inline void set_has_worldlevel();
  inline void clear_has_worldlevel();
  inline void set_has_gohome();
  inline void clear_has_gohome();
  inline void set_has_chariot_tempid();
  inline void clear_has_chariot_tempid();
  inline void set_has_chariot_mastertype();
  inline void clear_has_chariot_mastertype();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_is_gold_shop();
  inline void clear_has_is_gold_shop();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_pkcamp();
  inline void clear_has_pkcamp();
  inline void set_has_citywarwinner();
  inline void clear_has_citywarwinner();
  inline void set_has_duelmode();
  inline void clear_has_duelmode();
  inline void set_has_castle_level();
  inline void clear_has_castle_level();
  inline void set_has_wingid();
  inline void clear_has_wingid();
  inline void set_has_winglevel();
  inline void clear_has_winglevel();
  inline void set_has_wingstrenglevel();
  inline void clear_has_wingstrenglevel();
  inline void set_has_subprofession();
  inline void clear_has_subprofession();
  inline void set_has_newtitle();
  inline void clear_has_newtitle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::FCharacterMapShow* mapshow_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::uint32 septofficer_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 z_;
  ::google::protobuf::uint32 dir_;
  ::google::protobuf::uint32 movespeed_;
  ::google::protobuf::uint32 evilvalue_;
  ::std::string* shopname_;
  ::google::protobuf::uint32 queststate_;
  ::google::protobuf::uint32 shopstate_;
  ::google::protobuf::RepeatedPtrField< ::FStateData > ninestate_;
  ::std::string* name_;
  ::std::string* septname_;
  ::google::protobuf::uint32 shopnamecolor_;
  ::google::protobuf::uint32 worldlevel_;
  ::std::string* title_;
  ::std::string* teamname_;
  ::google::protobuf::uint32 gohome_;
  ::google::protobuf::uint32 chariot_tempid_;
  ::google::protobuf::uint32 chariot_mastertype_;
  int profession_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 maxhp_;
  bool is_gold_shop_;
  bool citywarwinner_;
  ::google::protobuf::uint32 pkcamp_;
  ::google::protobuf::uint32 duelmode_;
  ::google::protobuf::uint32 castle_level_;
  ::google::protobuf::uint32 wingid_;
  ::google::protobuf::uint32 winglevel_;
  ::google::protobuf::uint32 wingstrenglevel_;
  ::google::protobuf::uint32 subprofession_;
  ::google::protobuf::uint32 newtitle_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FCharacterMapData* default_instance_;
};
// -------------------------------------------------------------------

class FNpcDeathMapData : public ::google::protobuf::Message {
 public:
  FNpcDeathMapData();
  virtual ~FNpcDeathMapData();

  FNpcDeathMapData(const FNpcDeathMapData& from);

  inline FNpcDeathMapData& operator=(const FNpcDeathMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FNpcDeathMapData& default_instance();

  void Swap(FNpcDeathMapData* other);

  // implements Message ----------------------------------------------

  FNpcDeathMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FNpcDeathMapData& from);
  void MergeFrom(const FNpcDeathMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 tmpid = 2;
  inline bool has_tmpid() const;
  inline void clear_tmpid();
  static const int kTmpidFieldNumber = 2;
  inline ::google::protobuf::uint32 tmpid() const;
  inline void set_tmpid(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline ::google::protobuf::uint32 dir() const;
  inline void set_dir(::google::protobuf::uint32 value);

  // optional uint32 disappearTime = 6;
  inline bool has_disappeartime() const;
  inline void clear_disappeartime();
  static const int kDisappearTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 disappeartime() const;
  inline void set_disappeartime(::google::protobuf::uint32 value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 killer = 8;
  inline bool has_killer() const;
  inline void clear_killer();
  static const int kKillerFieldNumber = 8;
  inline ::google::protobuf::uint32 killer() const;
  inline void set_killer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FNpcDeathMapData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_tmpid();
  inline void clear_has_tmpid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_disappeartime();
  inline void clear_has_disappeartime();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_killer();
  inline void clear_has_killer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 tmpid_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 dir_;
  ::google::protobuf::uint32 disappeartime_;
  ::std::string* name_;
  ::google::protobuf::uint32 killer_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FNpcDeathMapData* default_instance_;
};
// -------------------------------------------------------------------

class FCharacterMainData : public ::google::protobuf::Message {
 public:
  FCharacterMainData();
  virtual ~FCharacterMainData();

  FCharacterMainData(const FCharacterMainData& from);

  inline FCharacterMainData& operator=(const FCharacterMainData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FCharacterMainData& default_instance();

  void Swap(FCharacterMainData* other);

  // implements Message ----------------------------------------------

  FCharacterMainData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FCharacterMainData& from);
  void MergeFrom(const FCharacterMainData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .FCharacterMapData mapData = 1;
  inline bool has_mapdata() const;
  inline void clear_mapdata();
  static const int kMapDataFieldNumber = 1;
  inline const ::FCharacterMapData& mapdata() const;
  inline ::FCharacterMapData* mutable_mapdata();
  inline ::FCharacterMapData* release_mapdata();
  inline void set_allocated_mapdata(::FCharacterMapData* mapdata);

  // optional uint32 mp = 4;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 4;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // optional uint32 maxmp = 5;
  inline bool has_maxmp() const;
  inline void clear_maxmp();
  static const int kMaxmpFieldNumber = 5;
  inline ::google::protobuf::uint32 maxmp() const;
  inline void set_maxmp(::google::protobuf::uint32 value);

  // optional uint64 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint32 strength = 7;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 7;
  inline ::google::protobuf::uint32 strength() const;
  inline void set_strength(::google::protobuf::uint32 value);

  // optional uint32 dexterity = 8;
  inline bool has_dexterity() const;
  inline void clear_dexterity();
  static const int kDexterityFieldNumber = 8;
  inline ::google::protobuf::uint32 dexterity() const;
  inline void set_dexterity(::google::protobuf::uint32 value);

  // optional uint32 mentality = 9;
  inline bool has_mentality() const;
  inline void clear_mentality();
  static const int kMentalityFieldNumber = 9;
  inline ::google::protobuf::uint32 mentality() const;
  inline void set_mentality(::google::protobuf::uint32 value);

  // optional uint32 constitution = 10;
  inline bool has_constitution() const;
  inline void clear_constitution();
  static const int kConstitutionFieldNumber = 10;
  inline ::google::protobuf::uint32 constitution() const;
  inline void set_constitution(::google::protobuf::uint32 value);

  // optional uint32 attrpoint = 12;
  inline bool has_attrpoint() const;
  inline void clear_attrpoint();
  static const int kAttrpointFieldNumber = 12;
  inline ::google::protobuf::uint32 attrpoint() const;
  inline void set_attrpoint(::google::protobuf::uint32 value);

  // optional uint32 attackSpeed = 13;
  inline bool has_attackspeed() const;
  inline void clear_attackspeed();
  static const int kAttackSpeedFieldNumber = 13;
  inline ::google::protobuf::uint32 attackspeed() const;
  inline void set_attackspeed(::google::protobuf::uint32 value);

  // optional uint32 minPhysics = 14;
  inline bool has_minphysics() const;
  inline void clear_minphysics();
  static const int kMinPhysicsFieldNumber = 14;
  inline ::google::protobuf::uint32 minphysics() const;
  inline void set_minphysics(::google::protobuf::uint32 value);

  // optional uint32 maxPhysics = 15;
  inline bool has_maxphysics() const;
  inline void clear_maxphysics();
  static const int kMaxPhysicsFieldNumber = 15;
  inline ::google::protobuf::uint32 maxphysics() const;
  inline void set_maxphysics(::google::protobuf::uint32 value);

  // optional uint32 minMagic = 16;
  inline bool has_minmagic() const;
  inline void clear_minmagic();
  static const int kMinMagicFieldNumber = 16;
  inline ::google::protobuf::uint32 minmagic() const;
  inline void set_minmagic(::google::protobuf::uint32 value);

  // optional uint32 maxMagic = 17;
  inline bool has_maxmagic() const;
  inline void clear_maxmagic();
  static const int kMaxMagicFieldNumber = 17;
  inline ::google::protobuf::uint32 maxmagic() const;
  inline void set_maxmagic(::google::protobuf::uint32 value);

  // optional uint32 pDefence = 18;
  inline bool has_pdefence() const;
  inline void clear_pdefence();
  static const int kPDefenceFieldNumber = 18;
  inline ::google::protobuf::uint32 pdefence() const;
  inline void set_pdefence(::google::protobuf::uint32 value);

  // optional uint32 mDefence = 19;
  inline bool has_mdefence() const;
  inline void clear_mdefence();
  static const int kMDefenceFieldNumber = 19;
  inline ::google::protobuf::uint32 mdefence() const;
  inline void set_mdefence(::google::protobuf::uint32 value);

  // optional uint32 money = 20;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 20;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // optional uint32 bindMoney = 21;
  inline bool has_bindmoney() const;
  inline void clear_bindmoney();
  static const int kBindMoneyFieldNumber = 21;
  inline ::google::protobuf::uint32 bindmoney() const;
  inline void set_bindmoney(::google::protobuf::uint32 value);

  // optional uint32 gold = 22;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 22;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 bindGold = 23;
  inline bool has_bindgold() const;
  inline void clear_bindgold();
  static const int kBindGoldFieldNumber = 23;
  inline ::google::protobuf::uint32 bindgold() const;
  inline void set_bindgold(::google::protobuf::uint32 value);

  // optional uint32 luckyRate = 24;
  inline bool has_luckyrate() const;
  inline void clear_luckyrate();
  static const int kLuckyRateFieldNumber = 24;
  inline ::google::protobuf::uint32 luckyrate() const;
  inline void set_luckyrate(::google::protobuf::uint32 value);

  // optional uint32 antiLuckyRate = 25;
  inline bool has_antiluckyrate() const;
  inline void clear_antiluckyrate();
  static const int kAntiLuckyRateFieldNumber = 25;
  inline ::google::protobuf::uint32 antiluckyrate() const;
  inline void set_antiluckyrate(::google::protobuf::uint32 value);

  // optional uint32 heavyRate = 26;
  inline bool has_heavyrate() const;
  inline void clear_heavyrate();
  static const int kHeavyRateFieldNumber = 26;
  inline ::google::protobuf::uint32 heavyrate() const;
  inline void set_heavyrate(::google::protobuf::uint32 value);

  // optional uint32 antiHeavyRate = 27;
  inline bool has_antiheavyrate() const;
  inline void clear_antiheavyrate();
  static const int kAntiHeavyRateFieldNumber = 27;
  inline ::google::protobuf::uint32 antiheavyrate() const;
  inline void set_antiheavyrate(::google::protobuf::uint32 value);

  // optional uint32 honor = 28;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 28;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // optional uint32 funcvalue = 30;
  inline bool has_funcvalue() const;
  inline void clear_funcvalue();
  static const int kFuncvalueFieldNumber = 30;
  inline ::google::protobuf::uint32 funcvalue() const;
  inline void set_funcvalue(::google::protobuf::uint32 value);

  // optional uint32 septaward = 31;
  inline bool has_septaward() const;
  inline void clear_septaward();
  static const int kSeptawardFieldNumber = 31;
  inline ::google::protobuf::uint32 septaward() const;
  inline void set_septaward(::google::protobuf::uint32 value);

  // optional uint32 septactive = 32;
  inline bool has_septactive() const;
  inline void clear_septactive();
  static const int kSeptactiveFieldNumber = 32;
  inline ::google::protobuf::uint32 septactive() const;
  inline void set_septactive(::google::protobuf::uint32 value);

  // optional uint32 friendvalue = 33;
  inline bool has_friendvalue() const;
  inline void clear_friendvalue();
  static const int kFriendvalueFieldNumber = 33;
  inline ::google::protobuf::uint32 friendvalue() const;
  inline void set_friendvalue(::google::protobuf::uint32 value);

  // optional uint32 subprofession = 34;
  inline bool has_subprofession() const;
  inline void clear_subprofession();
  static const int kSubprofessionFieldNumber = 34;
  inline ::google::protobuf::uint32 subprofession() const;
  inline void set_subprofession(::google::protobuf::uint32 value);

  // optional uint32 horseid = 35;
  inline bool has_horseid() const;
  inline void clear_horseid();
  static const int kHorseidFieldNumber = 35;
  inline ::google::protobuf::uint32 horseid() const;
  inline void set_horseid(::google::protobuf::uint32 value);

  // optional uint64 totalexp = 36;
  inline bool has_totalexp() const;
  inline void clear_totalexp();
  static const int kTotalexpFieldNumber = 36;
  inline ::google::protobuf::uint64 totalexp() const;
  inline void set_totalexp(::google::protobuf::uint64 value);

  // optional bool zonelimit = 37;
  inline bool has_zonelimit() const;
  inline void clear_zonelimit();
  static const int kZonelimitFieldNumber = 37;
  inline bool zonelimit() const;
  inline void set_zonelimit(bool value);

  // optional bool countryzone = 38;
  inline bool has_countryzone() const;
  inline void clear_countryzone();
  static const int kCountryzoneFieldNumber = 38;
  inline bool countryzone() const;
  inline void set_countryzone(bool value);

  // repeated uint64 resource = 39;
  inline int resource_size() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 39;
  inline ::google::protobuf::uint64 resource(int index) const;
  inline void set_resource(int index, ::google::protobuf::uint64 value);
  inline void add_resource(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      resource() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_resource();

  // optional uint32 petskill = 40;
  inline bool has_petskill() const;
  inline void clear_petskill();
  static const int kPetskillFieldNumber = 40;
  inline ::google::protobuf::uint32 petskill() const;
  inline void set_petskill(::google::protobuf::uint32 value);

  // optional bool autofight = 41;
  inline bool has_autofight() const;
  inline void clear_autofight();
  static const int kAutofightFieldNumber = 41;
  inline bool autofight() const;
  inline void set_autofight(bool value);

  // optional .FPropertyValues propertys = 100;
  inline bool has_propertys() const;
  inline void clear_propertys();
  static const int kPropertysFieldNumber = 100;
  inline const ::FPropertyValues& propertys() const;
  inline ::FPropertyValues* mutable_propertys();
  inline ::FPropertyValues* release_propertys();
  inline void set_allocated_propertys(::FPropertyValues* propertys);

  // @@protoc_insertion_point(class_scope:FCharacterMainData)
 private:
  inline void set_has_mapdata();
  inline void clear_has_mapdata();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_maxmp();
  inline void clear_has_maxmp();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_strength();
  inline void clear_has_strength();
  inline void set_has_dexterity();
  inline void clear_has_dexterity();
  inline void set_has_mentality();
  inline void clear_has_mentality();
  inline void set_has_constitution();
  inline void clear_has_constitution();
  inline void set_has_attrpoint();
  inline void clear_has_attrpoint();
  inline void set_has_attackspeed();
  inline void clear_has_attackspeed();
  inline void set_has_minphysics();
  inline void clear_has_minphysics();
  inline void set_has_maxphysics();
  inline void clear_has_maxphysics();
  inline void set_has_minmagic();
  inline void clear_has_minmagic();
  inline void set_has_maxmagic();
  inline void clear_has_maxmagic();
  inline void set_has_pdefence();
  inline void clear_has_pdefence();
  inline void set_has_mdefence();
  inline void clear_has_mdefence();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_bindmoney();
  inline void clear_has_bindmoney();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_bindgold();
  inline void clear_has_bindgold();
  inline void set_has_luckyrate();
  inline void clear_has_luckyrate();
  inline void set_has_antiluckyrate();
  inline void clear_has_antiluckyrate();
  inline void set_has_heavyrate();
  inline void clear_has_heavyrate();
  inline void set_has_antiheavyrate();
  inline void clear_has_antiheavyrate();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_funcvalue();
  inline void clear_has_funcvalue();
  inline void set_has_septaward();
  inline void clear_has_septaward();
  inline void set_has_septactive();
  inline void clear_has_septactive();
  inline void set_has_friendvalue();
  inline void clear_has_friendvalue();
  inline void set_has_subprofession();
  inline void clear_has_subprofession();
  inline void set_has_horseid();
  inline void clear_has_horseid();
  inline void set_has_totalexp();
  inline void clear_has_totalexp();
  inline void set_has_zonelimit();
  inline void clear_has_zonelimit();
  inline void set_has_countryzone();
  inline void clear_has_countryzone();
  inline void set_has_petskill();
  inline void clear_has_petskill();
  inline void set_has_autofight();
  inline void clear_has_autofight();
  inline void set_has_propertys();
  inline void clear_has_propertys();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::FCharacterMapData* mapdata_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 maxmp_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 strength_;
  ::google::protobuf::uint32 dexterity_;
  ::google::protobuf::uint32 mentality_;
  ::google::protobuf::uint32 constitution_;
  ::google::protobuf::uint32 attrpoint_;
  ::google::protobuf::uint32 attackspeed_;
  ::google::protobuf::uint32 minphysics_;
  ::google::protobuf::uint32 maxphysics_;
  ::google::protobuf::uint32 minmagic_;
  ::google::protobuf::uint32 maxmagic_;
  ::google::protobuf::uint32 pdefence_;
  ::google::protobuf::uint32 mdefence_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 bindmoney_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 bindgold_;
  ::google::protobuf::uint32 luckyrate_;
  ::google::protobuf::uint32 antiluckyrate_;
  ::google::protobuf::uint32 heavyrate_;
  ::google::protobuf::uint32 antiheavyrate_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 funcvalue_;
  ::google::protobuf::uint32 septaward_;
  ::google::protobuf::uint32 septactive_;
  ::google::protobuf::uint32 friendvalue_;
  ::google::protobuf::uint32 subprofession_;
  ::google::protobuf::uint64 totalexp_;
  ::google::protobuf::uint32 horseid_;
  bool zonelimit_;
  bool countryzone_;
  bool autofight_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > resource_;
  ::FPropertyValues* propertys_;
  ::google::protobuf::uint32 petskill_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static FCharacterMainData* default_instance_;
};
// ===================================================================


// ===================================================================

// II_PairData

// optional uint32 first = 1 [default = 0];
inline bool II_PairData::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void II_PairData::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void II_PairData::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void II_PairData::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 II_PairData::first() const {
  // @@protoc_insertion_point(field_get:II_PairData.first)
  return first_;
}
inline void II_PairData::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
  // @@protoc_insertion_point(field_set:II_PairData.first)
}

// optional uint32 second = 2 [default = 0];
inline bool II_PairData::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void II_PairData::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void II_PairData::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void II_PairData::clear_second() {
  second_ = 0u;
  clear_has_second();
}
inline ::google::protobuf::uint32 II_PairData::second() const {
  // @@protoc_insertion_point(field_get:II_PairData.second)
  return second_;
}
inline void II_PairData::set_second(::google::protobuf::uint32 value) {
  set_has_second();
  second_ = value;
  // @@protoc_insertion_point(field_set:II_PairData.second)
}

// -------------------------------------------------------------------

// QuestVar

// optional uint32 subid = 1;
inline bool QuestVar::has_subid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestVar::set_has_subid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestVar::clear_has_subid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestVar::clear_subid() {
  subid_ = 0u;
  clear_has_subid();
}
inline ::google::protobuf::uint32 QuestVar::subid() const {
  // @@protoc_insertion_point(field_get:QuestVar.subid)
  return subid_;
}
inline void QuestVar::set_subid(::google::protobuf::uint32 value) {
  set_has_subid();
  subid_ = value;
  // @@protoc_insertion_point(field_set:QuestVar.subid)
}

// optional int32 value = 2;
inline bool QuestVar::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestVar::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestVar::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestVar::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 QuestVar::value() const {
  // @@protoc_insertion_point(field_get:QuestVar.value)
  return value_;
}
inline void QuestVar::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:QuestVar.value)
}

// -------------------------------------------------------------------

// PairDataDWORD

// optional uint32 para1 = 1;
inline bool PairDataDWORD::has_para1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PairDataDWORD::set_has_para1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PairDataDWORD::clear_has_para1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PairDataDWORD::clear_para1() {
  para1_ = 0u;
  clear_has_para1();
}
inline ::google::protobuf::uint32 PairDataDWORD::para1() const {
  // @@protoc_insertion_point(field_get:PairDataDWORD.para1)
  return para1_;
}
inline void PairDataDWORD::set_para1(::google::protobuf::uint32 value) {
  set_has_para1();
  para1_ = value;
  // @@protoc_insertion_point(field_set:PairDataDWORD.para1)
}

// optional uint32 para2 = 2;
inline bool PairDataDWORD::has_para2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PairDataDWORD::set_has_para2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PairDataDWORD::clear_has_para2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PairDataDWORD::clear_para2() {
  para2_ = 0u;
  clear_has_para2();
}
inline ::google::protobuf::uint32 PairDataDWORD::para2() const {
  // @@protoc_insertion_point(field_get:PairDataDWORD.para2)
  return para2_;
}
inline void PairDataDWORD::set_para2(::google::protobuf::uint32 value) {
  set_has_para2();
  para2_ = value;
  // @@protoc_insertion_point(field_set:PairDataDWORD.para2)
}

// -------------------------------------------------------------------

// TripleDataDWORD

// optional uint32 para1 = 1;
inline bool TripleDataDWORD::has_para1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TripleDataDWORD::set_has_para1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TripleDataDWORD::clear_has_para1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TripleDataDWORD::clear_para1() {
  para1_ = 0u;
  clear_has_para1();
}
inline ::google::protobuf::uint32 TripleDataDWORD::para1() const {
  // @@protoc_insertion_point(field_get:TripleDataDWORD.para1)
  return para1_;
}
inline void TripleDataDWORD::set_para1(::google::protobuf::uint32 value) {
  set_has_para1();
  para1_ = value;
  // @@protoc_insertion_point(field_set:TripleDataDWORD.para1)
}

// optional uint32 para2 = 2;
inline bool TripleDataDWORD::has_para2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TripleDataDWORD::set_has_para2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TripleDataDWORD::clear_has_para2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TripleDataDWORD::clear_para2() {
  para2_ = 0u;
  clear_has_para2();
}
inline ::google::protobuf::uint32 TripleDataDWORD::para2() const {
  // @@protoc_insertion_point(field_get:TripleDataDWORD.para2)
  return para2_;
}
inline void TripleDataDWORD::set_para2(::google::protobuf::uint32 value) {
  set_has_para2();
  para2_ = value;
  // @@protoc_insertion_point(field_set:TripleDataDWORD.para2)
}

// optional uint32 para3 = 3;
inline bool TripleDataDWORD::has_para3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TripleDataDWORD::set_has_para3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TripleDataDWORD::clear_has_para3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TripleDataDWORD::clear_para3() {
  para3_ = 0u;
  clear_has_para3();
}
inline ::google::protobuf::uint32 TripleDataDWORD::para3() const {
  // @@protoc_insertion_point(field_get:TripleDataDWORD.para3)
  return para3_;
}
inline void TripleDataDWORD::set_para3(::google::protobuf::uint32 value) {
  set_has_para3();
  para3_ = value;
  // @@protoc_insertion_point(field_set:TripleDataDWORD.para3)
}

// -------------------------------------------------------------------

// QuestData

// optional uint32 questid = 1;
inline bool QuestData::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestData::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestData::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestData::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 QuestData::questid() const {
  // @@protoc_insertion_point(field_get:QuestData.questid)
  return questid_;
}
inline void QuestData::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:QuestData.questid)
}

// optional .QuestStateType state = 2 [default = QUESTSTATE_NONE];
inline bool QuestData::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestData::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestData::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestData::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::QuestStateType QuestData::state() const {
  // @@protoc_insertion_point(field_get:QuestData.state)
  return static_cast< ::QuestStateType >(state_);
}
inline void QuestData::set_state(::QuestStateType value) {
  assert(::QuestStateType_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:QuestData.state)
}

// optional bool addvar = 3 [default = true];
inline bool QuestData::has_addvar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestData::set_has_addvar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestData::clear_has_addvar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestData::clear_addvar() {
  addvar_ = true;
  clear_has_addvar();
}
inline bool QuestData::addvar() const {
  // @@protoc_insertion_point(field_get:QuestData.addvar)
  return addvar_;
}
inline void QuestData::set_addvar(bool value) {
  set_has_addvar();
  addvar_ = value;
  // @@protoc_insertion_point(field_set:QuestData.addvar)
}

// repeated .QuestVar vars = 4;
inline int QuestData::vars_size() const {
  return vars_.size();
}
inline void QuestData::clear_vars() {
  vars_.Clear();
}
inline const ::QuestVar& QuestData::vars(int index) const {
  // @@protoc_insertion_point(field_get:QuestData.vars)
  return vars_.Get(index);
}
inline ::QuestVar* QuestData::mutable_vars(int index) {
  // @@protoc_insertion_point(field_mutable:QuestData.vars)
  return vars_.Mutable(index);
}
inline ::QuestVar* QuestData::add_vars() {
  // @@protoc_insertion_point(field_add:QuestData.vars)
  return vars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuestVar >&
QuestData::vars() const {
  // @@protoc_insertion_point(field_list:QuestData.vars)
  return vars_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuestVar >*
QuestData::mutable_vars() {
  // @@protoc_insertion_point(field_mutable_list:QuestData.vars)
  return &vars_;
}

// optional uint32 acceptTime = 5;
inline bool QuestData::has_accepttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QuestData::set_has_accepttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QuestData::clear_has_accepttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QuestData::clear_accepttime() {
  accepttime_ = 0u;
  clear_has_accepttime();
}
inline ::google::protobuf::uint32 QuestData::accepttime() const {
  // @@protoc_insertion_point(field_get:QuestData.acceptTime)
  return accepttime_;
}
inline void QuestData::set_accepttime(::google::protobuf::uint32 value) {
  set_has_accepttime();
  accepttime_ = value;
  // @@protoc_insertion_point(field_set:QuestData.acceptTime)
}

// optional uint32 completeSubNum = 6 [default = 0];
inline bool QuestData::has_completesubnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QuestData::set_has_completesubnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QuestData::clear_has_completesubnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QuestData::clear_completesubnum() {
  completesubnum_ = 0u;
  clear_has_completesubnum();
}
inline ::google::protobuf::uint32 QuestData::completesubnum() const {
  // @@protoc_insertion_point(field_get:QuestData.completeSubNum)
  return completesubnum_;
}
inline void QuestData::set_completesubnum(::google::protobuf::uint32 value) {
  set_has_completesubnum();
  completesubnum_ = value;
  // @@protoc_insertion_point(field_set:QuestData.completeSubNum)
}

// repeated uint32 subquestid = 7 [packed = true];
inline int QuestData::subquestid_size() const {
  return subquestid_.size();
}
inline void QuestData::clear_subquestid() {
  subquestid_.Clear();
}
inline ::google::protobuf::uint32 QuestData::subquestid(int index) const {
  // @@protoc_insertion_point(field_get:QuestData.subquestid)
  return subquestid_.Get(index);
}
inline void QuestData::set_subquestid(int index, ::google::protobuf::uint32 value) {
  subquestid_.Set(index, value);
  // @@protoc_insertion_point(field_set:QuestData.subquestid)
}
inline void QuestData::add_subquestid(::google::protobuf::uint32 value) {
  subquestid_.Add(value);
  // @@protoc_insertion_point(field_add:QuestData.subquestid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QuestData::subquestid() const {
  // @@protoc_insertion_point(field_list:QuestData.subquestid)
  return subquestid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QuestData::mutable_subquestid() {
  // @@protoc_insertion_point(field_mutable_list:QuestData.subquestid)
  return &subquestid_;
}

// optional uint32 questdataid = 8;
inline bool QuestData::has_questdataid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QuestData::set_has_questdataid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QuestData::clear_has_questdataid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QuestData::clear_questdataid() {
  questdataid_ = 0u;
  clear_has_questdataid();
}
inline ::google::protobuf::uint32 QuestData::questdataid() const {
  // @@protoc_insertion_point(field_get:QuestData.questdataid)
  return questdataid_;
}
inline void QuestData::set_questdataid(::google::protobuf::uint32 value) {
  set_has_questdataid();
  questdataid_ = value;
  // @@protoc_insertion_point(field_set:QuestData.questdataid)
}

// optional float cartceof = 9;
inline bool QuestData::has_cartceof() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QuestData::set_has_cartceof() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QuestData::clear_has_cartceof() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QuestData::clear_cartceof() {
  cartceof_ = 0;
  clear_has_cartceof();
}
inline float QuestData::cartceof() const {
  // @@protoc_insertion_point(field_get:QuestData.cartceof)
  return cartceof_;
}
inline void QuestData::set_cartceof(float value) {
  set_has_cartceof();
  cartceof_ = value;
  // @@protoc_insertion_point(field_set:QuestData.cartceof)
}

// optional bool is_accept_double = 10;
inline bool QuestData::has_is_accept_double() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QuestData::set_has_is_accept_double() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QuestData::clear_has_is_accept_double() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QuestData::clear_is_accept_double() {
  is_accept_double_ = false;
  clear_has_is_accept_double();
}
inline bool QuestData::is_accept_double() const {
  // @@protoc_insertion_point(field_get:QuestData.is_accept_double)
  return is_accept_double_;
}
inline void QuestData::set_is_accept_double(bool value) {
  set_has_is_accept_double();
  is_accept_double_ = value;
  // @@protoc_insertion_point(field_set:QuestData.is_accept_double)
}

// -------------------------------------------------------------------

// DoingQuestData

// optional bool dirty = 1;
inline bool DoingQuestData::has_dirty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DoingQuestData::set_has_dirty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DoingQuestData::clear_has_dirty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DoingQuestData::clear_dirty() {
  dirty_ = false;
  clear_has_dirty();
}
inline bool DoingQuestData::dirty() const {
  // @@protoc_insertion_point(field_get:DoingQuestData.dirty)
  return dirty_;
}
inline void DoingQuestData::set_dirty(bool value) {
  set_has_dirty();
  dirty_ = value;
  // @@protoc_insertion_point(field_set:DoingQuestData.dirty)
}

// repeated .QuestData quest = 2;
inline int DoingQuestData::quest_size() const {
  return quest_.size();
}
inline void DoingQuestData::clear_quest() {
  quest_.Clear();
}
inline const ::QuestData& DoingQuestData::quest(int index) const {
  // @@protoc_insertion_point(field_get:DoingQuestData.quest)
  return quest_.Get(index);
}
inline ::QuestData* DoingQuestData::mutable_quest(int index) {
  // @@protoc_insertion_point(field_mutable:DoingQuestData.quest)
  return quest_.Mutable(index);
}
inline ::QuestData* DoingQuestData::add_quest() {
  // @@protoc_insertion_point(field_add:DoingQuestData.quest)
  return quest_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuestData >&
DoingQuestData::quest() const {
  // @@protoc_insertion_point(field_list:DoingQuestData.quest)
  return quest_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuestData >*
DoingQuestData::mutable_quest() {
  // @@protoc_insertion_point(field_mutable_list:DoingQuestData.quest)
  return &quest_;
}

// -------------------------------------------------------------------

// QuestCompleteData

// optional bool dirty = 1;
inline bool QuestCompleteData::has_dirty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestCompleteData::set_has_dirty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestCompleteData::clear_has_dirty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestCompleteData::clear_dirty() {
  dirty_ = false;
  clear_has_dirty();
}
inline bool QuestCompleteData::dirty() const {
  // @@protoc_insertion_point(field_get:QuestCompleteData.dirty)
  return dirty_;
}
inline void QuestCompleteData::set_dirty(bool value) {
  set_has_dirty();
  dirty_ = value;
  // @@protoc_insertion_point(field_set:QuestCompleteData.dirty)
}

// repeated uint32 quest = 2 [packed = true];
inline int QuestCompleteData::quest_size() const {
  return quest_.size();
}
inline void QuestCompleteData::clear_quest() {
  quest_.Clear();
}
inline ::google::protobuf::uint32 QuestCompleteData::quest(int index) const {
  // @@protoc_insertion_point(field_get:QuestCompleteData.quest)
  return quest_.Get(index);
}
inline void QuestCompleteData::set_quest(int index, ::google::protobuf::uint32 value) {
  quest_.Set(index, value);
  // @@protoc_insertion_point(field_set:QuestCompleteData.quest)
}
inline void QuestCompleteData::add_quest(::google::protobuf::uint32 value) {
  quest_.Add(value);
  // @@protoc_insertion_point(field_add:QuestCompleteData.quest)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QuestCompleteData::quest() const {
  // @@protoc_insertion_point(field_list:QuestCompleteData.quest)
  return quest_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QuestCompleteData::mutable_quest() {
  // @@protoc_insertion_point(field_mutable_list:QuestCompleteData.quest)
  return &quest_;
}

// -------------------------------------------------------------------

// QuestPairData

// optional bool dirty = 1;
inline bool QuestPairData::has_dirty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestPairData::set_has_dirty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestPairData::clear_has_dirty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestPairData::clear_dirty() {
  dirty_ = false;
  clear_has_dirty();
}
inline bool QuestPairData::dirty() const {
  // @@protoc_insertion_point(field_get:QuestPairData.dirty)
  return dirty_;
}
inline void QuestPairData::set_dirty(bool value) {
  set_has_dirty();
  dirty_ = value;
  // @@protoc_insertion_point(field_set:QuestPairData.dirty)
}

// repeated .II_PairData data = 2;
inline int QuestPairData::data_size() const {
  return data_.size();
}
inline void QuestPairData::clear_data() {
  data_.Clear();
}
inline const ::II_PairData& QuestPairData::data(int index) const {
  // @@protoc_insertion_point(field_get:QuestPairData.data)
  return data_.Get(index);
}
inline ::II_PairData* QuestPairData::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:QuestPairData.data)
  return data_.Mutable(index);
}
inline ::II_PairData* QuestPairData::add_data() {
  // @@protoc_insertion_point(field_add:QuestPairData.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::II_PairData >&
QuestPairData::data() const {
  // @@protoc_insertion_point(field_list:QuestPairData.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::II_PairData >*
QuestPairData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:QuestPairData.data)
  return &data_;
}

// -------------------------------------------------------------------

// QuestId

// optional uint32 questid = 1;
inline bool QuestId::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestId::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestId::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestId::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 QuestId::questid() const {
  // @@protoc_insertion_point(field_get:QuestId.questid)
  return questid_;
}
inline void QuestId::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:QuestId.questid)
}

// repeated uint32 subid = 2 [packed = true];
inline int QuestId::subid_size() const {
  return subid_.size();
}
inline void QuestId::clear_subid() {
  subid_.Clear();
}
inline ::google::protobuf::uint32 QuestId::subid(int index) const {
  // @@protoc_insertion_point(field_get:QuestId.subid)
  return subid_.Get(index);
}
inline void QuestId::set_subid(int index, ::google::protobuf::uint32 value) {
  subid_.Set(index, value);
  // @@protoc_insertion_point(field_set:QuestId.subid)
}
inline void QuestId::add_subid(::google::protobuf::uint32 value) {
  subid_.Add(value);
  // @@protoc_insertion_point(field_add:QuestId.subid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QuestId::subid() const {
  // @@protoc_insertion_point(field_list:QuestId.subid)
  return subid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QuestId::mutable_subid() {
  // @@protoc_insertion_point(field_mutable_list:QuestId.subid)
  return &subid_;
}

// -------------------------------------------------------------------

// BinarySaveQuest

// optional .DoingQuestData questsdata = 1;
inline bool BinarySaveQuest::has_questsdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BinarySaveQuest::set_has_questsdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BinarySaveQuest::clear_has_questsdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BinarySaveQuest::clear_questsdata() {
  if (questsdata_ != NULL) questsdata_->::DoingQuestData::Clear();
  clear_has_questsdata();
}
inline const ::DoingQuestData& BinarySaveQuest::questsdata() const {
  // @@protoc_insertion_point(field_get:BinarySaveQuest.questsdata)
  return questsdata_ != NULL ? *questsdata_ : *default_instance_->questsdata_;
}
inline ::DoingQuestData* BinarySaveQuest::mutable_questsdata() {
  set_has_questsdata();
  if (questsdata_ == NULL) questsdata_ = new ::DoingQuestData;
  // @@protoc_insertion_point(field_mutable:BinarySaveQuest.questsdata)
  return questsdata_;
}
inline ::DoingQuestData* BinarySaveQuest::release_questsdata() {
  clear_has_questsdata();
  ::DoingQuestData* temp = questsdata_;
  questsdata_ = NULL;
  return temp;
}
inline void BinarySaveQuest::set_allocated_questsdata(::DoingQuestData* questsdata) {
  delete questsdata_;
  questsdata_ = questsdata;
  if (questsdata) {
    set_has_questsdata();
  } else {
    clear_has_questsdata();
  }
  // @@protoc_insertion_point(field_set_allocated:BinarySaveQuest.questsdata)
}

// optional .QuestCompleteData completedquests = 2;
inline bool BinarySaveQuest::has_completedquests() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BinarySaveQuest::set_has_completedquests() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BinarySaveQuest::clear_has_completedquests() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BinarySaveQuest::clear_completedquests() {
  if (completedquests_ != NULL) completedquests_->::QuestCompleteData::Clear();
  clear_has_completedquests();
}
inline const ::QuestCompleteData& BinarySaveQuest::completedquests() const {
  // @@protoc_insertion_point(field_get:BinarySaveQuest.completedquests)
  return completedquests_ != NULL ? *completedquests_ : *default_instance_->completedquests_;
}
inline ::QuestCompleteData* BinarySaveQuest::mutable_completedquests() {
  set_has_completedquests();
  if (completedquests_ == NULL) completedquests_ = new ::QuestCompleteData;
  // @@protoc_insertion_point(field_mutable:BinarySaveQuest.completedquests)
  return completedquests_;
}
inline ::QuestCompleteData* BinarySaveQuest::release_completedquests() {
  clear_has_completedquests();
  ::QuestCompleteData* temp = completedquests_;
  completedquests_ = NULL;
  return temp;
}
inline void BinarySaveQuest::set_allocated_completedquests(::QuestCompleteData* completedquests) {
  delete completedquests_;
  completedquests_ = completedquests;
  if (completedquests) {
    set_has_completedquests();
  } else {
    clear_has_completedquests();
  }
  // @@protoc_insertion_point(field_set_allocated:BinarySaveQuest.completedquests)
}

// optional .QuestPairData globleQuestVars = 3;
inline bool BinarySaveQuest::has_globlequestvars() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BinarySaveQuest::set_has_globlequestvars() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BinarySaveQuest::clear_has_globlequestvars() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BinarySaveQuest::clear_globlequestvars() {
  if (globlequestvars_ != NULL) globlequestvars_->::QuestPairData::Clear();
  clear_has_globlequestvars();
}
inline const ::QuestPairData& BinarySaveQuest::globlequestvars() const {
  // @@protoc_insertion_point(field_get:BinarySaveQuest.globleQuestVars)
  return globlequestvars_ != NULL ? *globlequestvars_ : *default_instance_->globlequestvars_;
}
inline ::QuestPairData* BinarySaveQuest::mutable_globlequestvars() {
  set_has_globlequestvars();
  if (globlequestvars_ == NULL) globlequestvars_ = new ::QuestPairData;
  // @@protoc_insertion_point(field_mutable:BinarySaveQuest.globleQuestVars)
  return globlequestvars_;
}
inline ::QuestPairData* BinarySaveQuest::release_globlequestvars() {
  clear_has_globlequestvars();
  ::QuestPairData* temp = globlequestvars_;
  globlequestvars_ = NULL;
  return temp;
}
inline void BinarySaveQuest::set_allocated_globlequestvars(::QuestPairData* globlequestvars) {
  delete globlequestvars_;
  globlequestvars_ = globlequestvars;
  if (globlequestvars) {
    set_has_globlequestvars();
  } else {
    clear_has_globlequestvars();
  }
  // @@protoc_insertion_point(field_set_allocated:BinarySaveQuest.globleQuestVars)
}

// optional .QuestPairData dailyQuestsCompleted = 4;
inline bool BinarySaveQuest::has_dailyquestscompleted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BinarySaveQuest::set_has_dailyquestscompleted() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BinarySaveQuest::clear_has_dailyquestscompleted() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BinarySaveQuest::clear_dailyquestscompleted() {
  if (dailyquestscompleted_ != NULL) dailyquestscompleted_->::QuestPairData::Clear();
  clear_has_dailyquestscompleted();
}
inline const ::QuestPairData& BinarySaveQuest::dailyquestscompleted() const {
  // @@protoc_insertion_point(field_get:BinarySaveQuest.dailyQuestsCompleted)
  return dailyquestscompleted_ != NULL ? *dailyquestscompleted_ : *default_instance_->dailyquestscompleted_;
}
inline ::QuestPairData* BinarySaveQuest::mutable_dailyquestscompleted() {
  set_has_dailyquestscompleted();
  if (dailyquestscompleted_ == NULL) dailyquestscompleted_ = new ::QuestPairData;
  // @@protoc_insertion_point(field_mutable:BinarySaveQuest.dailyQuestsCompleted)
  return dailyquestscompleted_;
}
inline ::QuestPairData* BinarySaveQuest::release_dailyquestscompleted() {
  clear_has_dailyquestscompleted();
  ::QuestPairData* temp = dailyquestscompleted_;
  dailyquestscompleted_ = NULL;
  return temp;
}
inline void BinarySaveQuest::set_allocated_dailyquestscompleted(::QuestPairData* dailyquestscompleted) {
  delete dailyquestscompleted_;
  dailyquestscompleted_ = dailyquestscompleted;
  if (dailyquestscompleted) {
    set_has_dailyquestscompleted();
  } else {
    clear_has_dailyquestscompleted();
  }
  // @@protoc_insertion_point(field_set_allocated:BinarySaveQuest.dailyQuestsCompleted)
}

// optional .QuestPairData cycleQuestsCompleted = 5;
inline bool BinarySaveQuest::has_cyclequestscompleted() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BinarySaveQuest::set_has_cyclequestscompleted() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BinarySaveQuest::clear_has_cyclequestscompleted() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BinarySaveQuest::clear_cyclequestscompleted() {
  if (cyclequestscompleted_ != NULL) cyclequestscompleted_->::QuestPairData::Clear();
  clear_has_cyclequestscompleted();
}
inline const ::QuestPairData& BinarySaveQuest::cyclequestscompleted() const {
  // @@protoc_insertion_point(field_get:BinarySaveQuest.cycleQuestsCompleted)
  return cyclequestscompleted_ != NULL ? *cyclequestscompleted_ : *default_instance_->cyclequestscompleted_;
}
inline ::QuestPairData* BinarySaveQuest::mutable_cyclequestscompleted() {
  set_has_cyclequestscompleted();
  if (cyclequestscompleted_ == NULL) cyclequestscompleted_ = new ::QuestPairData;
  // @@protoc_insertion_point(field_mutable:BinarySaveQuest.cycleQuestsCompleted)
  return cyclequestscompleted_;
}
inline ::QuestPairData* BinarySaveQuest::release_cyclequestscompleted() {
  clear_has_cyclequestscompleted();
  ::QuestPairData* temp = cyclequestscompleted_;
  cyclequestscompleted_ = NULL;
  return temp;
}
inline void BinarySaveQuest::set_allocated_cyclequestscompleted(::QuestPairData* cyclequestscompleted) {
  delete cyclequestscompleted_;
  cyclequestscompleted_ = cyclequestscompleted;
  if (cyclequestscompleted) {
    set_has_cyclequestscompleted();
  } else {
    clear_has_cyclequestscompleted();
  }
  // @@protoc_insertion_point(field_set_allocated:BinarySaveQuest.cycleQuestsCompleted)
}

// repeated .QuestId cancelquestid = 6;
inline int BinarySaveQuest::cancelquestid_size() const {
  return cancelquestid_.size();
}
inline void BinarySaveQuest::clear_cancelquestid() {
  cancelquestid_.Clear();
}
inline const ::QuestId& BinarySaveQuest::cancelquestid(int index) const {
  // @@protoc_insertion_point(field_get:BinarySaveQuest.cancelquestid)
  return cancelquestid_.Get(index);
}
inline ::QuestId* BinarySaveQuest::mutable_cancelquestid(int index) {
  // @@protoc_insertion_point(field_mutable:BinarySaveQuest.cancelquestid)
  return cancelquestid_.Mutable(index);
}
inline ::QuestId* BinarySaveQuest::add_cancelquestid() {
  // @@protoc_insertion_point(field_add:BinarySaveQuest.cancelquestid)
  return cancelquestid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuestId >&
BinarySaveQuest::cancelquestid() const {
  // @@protoc_insertion_point(field_list:BinarySaveQuest.cancelquestid)
  return cancelquestid_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuestId >*
BinarySaveQuest::mutable_cancelquestid() {
  // @@protoc_insertion_point(field_mutable_list:BinarySaveQuest.cancelquestid)
  return &cancelquestid_;
}

// -------------------------------------------------------------------

// ChangeEquipAccType

// optional uint32 id = 1;
inline bool ChangeEquipAccType::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeEquipAccType::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeEquipAccType::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeEquipAccType::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ChangeEquipAccType::id() const {
  // @@protoc_insertion_point(field_get:ChangeEquipAccType.id)
  return id_;
}
inline void ChangeEquipAccType::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipAccType.id)
}

// optional uint32 type = 2;
inline bool ChangeEquipAccType::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeEquipAccType::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeEquipAccType::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeEquipAccType::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ChangeEquipAccType::type() const {
  // @@protoc_insertion_point(field_get:ChangeEquipAccType.type)
  return type_;
}
inline void ChangeEquipAccType::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipAccType.type)
}

// optional uint32 index = 3;
inline bool ChangeEquipAccType::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeEquipAccType::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeEquipAccType::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeEquipAccType::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ChangeEquipAccType::index() const {
  // @@protoc_insertion_point(field_get:ChangeEquipAccType.index)
  return index_;
}
inline void ChangeEquipAccType::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipAccType.index)
}

// -------------------------------------------------------------------

// ChangeEquip_stCE

// optional uint32 x = 1;
inline bool ChangeEquip_stCE::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeEquip_stCE::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeEquip_stCE::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeEquip_stCE::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 ChangeEquip_stCE::x() const {
  // @@protoc_insertion_point(field_get:ChangeEquip.stCE.x)
  return x_;
}
inline void ChangeEquip_stCE::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquip.stCE.x)
}

// optional uint32 y = 2;
inline bool ChangeEquip_stCE::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeEquip_stCE::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeEquip_stCE::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeEquip_stCE::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 ChangeEquip_stCE::y() const {
  // @@protoc_insertion_point(field_get:ChangeEquip.stCE.y)
  return y_;
}
inline void ChangeEquip_stCE::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquip.stCE.y)
}

// optional uint32 id = 3;
inline bool ChangeEquip_stCE::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeEquip_stCE::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeEquip_stCE::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeEquip_stCE::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ChangeEquip_stCE::id() const {
  // @@protoc_insertion_point(field_get:ChangeEquip.stCE.id)
  return id_;
}
inline void ChangeEquip_stCE::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquip.stCE.id)
}

// -------------------------------------------------------------------

// ChangeEquip

// optional uint32 index = 1;
inline bool ChangeEquip::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeEquip::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeEquip::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeEquip::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ChangeEquip::index() const {
  // @@protoc_insertion_point(field_get:ChangeEquip.index)
  return index_;
}
inline void ChangeEquip::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquip.index)
}

// repeated .ChangeEquip.stCE changeEquips = 2;
inline int ChangeEquip::changeequips_size() const {
  return changeequips_.size();
}
inline void ChangeEquip::clear_changeequips() {
  changeequips_.Clear();
}
inline const ::ChangeEquip_stCE& ChangeEquip::changeequips(int index) const {
  // @@protoc_insertion_point(field_get:ChangeEquip.changeEquips)
  return changeequips_.Get(index);
}
inline ::ChangeEquip_stCE* ChangeEquip::mutable_changeequips(int index) {
  // @@protoc_insertion_point(field_mutable:ChangeEquip.changeEquips)
  return changeequips_.Mutable(index);
}
inline ::ChangeEquip_stCE* ChangeEquip::add_changeequips() {
  // @@protoc_insertion_point(field_add:ChangeEquip.changeEquips)
  return changeequips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChangeEquip_stCE >&
ChangeEquip::changeequips() const {
  // @@protoc_insertion_point(field_list:ChangeEquip.changeEquips)
  return changeequips_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChangeEquip_stCE >*
ChangeEquip::mutable_changeequips() {
  // @@protoc_insertion_point(field_mutable_list:ChangeEquip.changeEquips)
  return &changeequips_;
}

// repeated .ChangeEquipAccType changeEquipAccs = 3;
inline int ChangeEquip::changeequipaccs_size() const {
  return changeequipaccs_.size();
}
inline void ChangeEquip::clear_changeequipaccs() {
  changeequipaccs_.Clear();
}
inline const ::ChangeEquipAccType& ChangeEquip::changeequipaccs(int index) const {
  // @@protoc_insertion_point(field_get:ChangeEquip.changeEquipAccs)
  return changeequipaccs_.Get(index);
}
inline ::ChangeEquipAccType* ChangeEquip::mutable_changeequipaccs(int index) {
  // @@protoc_insertion_point(field_mutable:ChangeEquip.changeEquipAccs)
  return changeequipaccs_.Mutable(index);
}
inline ::ChangeEquipAccType* ChangeEquip::add_changeequipaccs() {
  // @@protoc_insertion_point(field_add:ChangeEquip.changeEquipAccs)
  return changeequipaccs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType >&
ChangeEquip::changeequipaccs() const {
  // @@protoc_insertion_point(field_list:ChangeEquip.changeEquipAccs)
  return changeequipaccs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType >*
ChangeEquip::mutable_changeequipaccs() {
  // @@protoc_insertion_point(field_mutable_list:ChangeEquip.changeEquipAccs)
  return &changeequipaccs_;
}

// -------------------------------------------------------------------

// stChangeEquip

// optional uint32 index = 1;
inline bool stChangeEquip::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stChangeEquip::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stChangeEquip::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stChangeEquip::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 stChangeEquip::index() const {
  // @@protoc_insertion_point(field_get:stChangeEquip.index)
  return index_;
}
inline void stChangeEquip::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:stChangeEquip.index)
}

// repeated uint32 equipID = 2 [packed = true];
inline int stChangeEquip::equipid_size() const {
  return equipid_.size();
}
inline void stChangeEquip::clear_equipid() {
  equipid_.Clear();
}
inline ::google::protobuf::uint32 stChangeEquip::equipid(int index) const {
  // @@protoc_insertion_point(field_get:stChangeEquip.equipID)
  return equipid_.Get(index);
}
inline void stChangeEquip::set_equipid(int index, ::google::protobuf::uint32 value) {
  equipid_.Set(index, value);
  // @@protoc_insertion_point(field_set:stChangeEquip.equipID)
}
inline void stChangeEquip::add_equipid(::google::protobuf::uint32 value) {
  equipid_.Add(value);
  // @@protoc_insertion_point(field_add:stChangeEquip.equipID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
stChangeEquip::equipid() const {
  // @@protoc_insertion_point(field_list:stChangeEquip.equipID)
  return equipid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
stChangeEquip::mutable_equipid() {
  // @@protoc_insertion_point(field_mutable_list:stChangeEquip.equipID)
  return &equipid_;
}

// repeated .ChangeEquipAccType accKeyID = 3;
inline int stChangeEquip::acckeyid_size() const {
  return acckeyid_.size();
}
inline void stChangeEquip::clear_acckeyid() {
  acckeyid_.Clear();
}
inline const ::ChangeEquipAccType& stChangeEquip::acckeyid(int index) const {
  // @@protoc_insertion_point(field_get:stChangeEquip.accKeyID)
  return acckeyid_.Get(index);
}
inline ::ChangeEquipAccType* stChangeEquip::mutable_acckeyid(int index) {
  // @@protoc_insertion_point(field_mutable:stChangeEquip.accKeyID)
  return acckeyid_.Mutable(index);
}
inline ::ChangeEquipAccType* stChangeEquip::add_acckeyid() {
  // @@protoc_insertion_point(field_add:stChangeEquip.accKeyID)
  return acckeyid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType >&
stChangeEquip::acckeyid() const {
  // @@protoc_insertion_point(field_list:stChangeEquip.accKeyID)
  return acckeyid_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChangeEquipAccType >*
stChangeEquip::mutable_acckeyid() {
  // @@protoc_insertion_point(field_mutable_list:stChangeEquip.accKeyID)
  return &acckeyid_;
}

// -------------------------------------------------------------------

// TalismanStar_Prop

// optional uint32 key = 1;
inline bool TalismanStar_Prop::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TalismanStar_Prop::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TalismanStar_Prop::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TalismanStar_Prop::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 TalismanStar_Prop::key() const {
  // @@protoc_insertion_point(field_get:TalismanStar.Prop.key)
  return key_;
}
inline void TalismanStar_Prop::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:TalismanStar.Prop.key)
}

// optional uint32 value = 2;
inline bool TalismanStar_Prop::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TalismanStar_Prop::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TalismanStar_Prop::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TalismanStar_Prop::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 TalismanStar_Prop::value() const {
  // @@protoc_insertion_point(field_get:TalismanStar.Prop.value)
  return value_;
}
inline void TalismanStar_Prop::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TalismanStar.Prop.value)
}

// optional uint32 star = 3;
inline bool TalismanStar_Prop::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TalismanStar_Prop::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TalismanStar_Prop::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TalismanStar_Prop::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 TalismanStar_Prop::star() const {
  // @@protoc_insertion_point(field_get:TalismanStar.Prop.star)
  return star_;
}
inline void TalismanStar_Prop::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:TalismanStar.Prop.star)
}

// -------------------------------------------------------------------

// TalismanStar

// repeated .TalismanStar.Prop prop = 1;
inline int TalismanStar::prop_size() const {
  return prop_.size();
}
inline void TalismanStar::clear_prop() {
  prop_.Clear();
}
inline const ::TalismanStar_Prop& TalismanStar::prop(int index) const {
  // @@protoc_insertion_point(field_get:TalismanStar.prop)
  return prop_.Get(index);
}
inline ::TalismanStar_Prop* TalismanStar::mutable_prop(int index) {
  // @@protoc_insertion_point(field_mutable:TalismanStar.prop)
  return prop_.Mutable(index);
}
inline ::TalismanStar_Prop* TalismanStar::add_prop() {
  // @@protoc_insertion_point(field_add:TalismanStar.prop)
  return prop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TalismanStar_Prop >&
TalismanStar::prop() const {
  // @@protoc_insertion_point(field_list:TalismanStar.prop)
  return prop_;
}
inline ::google::protobuf::RepeatedPtrField< ::TalismanStar_Prop >*
TalismanStar::mutable_prop() {
  // @@protoc_insertion_point(field_mutable_list:TalismanStar.prop)
  return &prop_;
}

// optional uint32 index = 2;
inline bool TalismanStar::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TalismanStar::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TalismanStar::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TalismanStar::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 TalismanStar::index() const {
  // @@protoc_insertion_point(field_get:TalismanStar.index)
  return index_;
}
inline void TalismanStar::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TalismanStar.index)
}

// -------------------------------------------------------------------

// TalismanData_Skill

// optional uint32 id = 1;
inline bool TalismanData_Skill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TalismanData_Skill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TalismanData_Skill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TalismanData_Skill::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TalismanData_Skill::id() const {
  // @@protoc_insertion_point(field_get:TalismanData.Skill.id)
  return id_;
}
inline void TalismanData_Skill::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.Skill.id)
}

// -------------------------------------------------------------------

// TalismanData

// optional bool borne = 1;
inline bool TalismanData::has_borne() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TalismanData::set_has_borne() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TalismanData::clear_has_borne() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TalismanData::clear_borne() {
  borne_ = false;
  clear_has_borne();
}
inline bool TalismanData::borne() const {
  // @@protoc_insertion_point(field_get:TalismanData.borne)
  return borne_;
}
inline void TalismanData::set_borne(bool value) {
  set_has_borne();
  borne_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.borne)
}

// optional uint64 exp = 2;
inline bool TalismanData::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TalismanData::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TalismanData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TalismanData::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 TalismanData::exp() const {
  // @@protoc_insertion_point(field_get:TalismanData.exp)
  return exp_;
}
inline void TalismanData::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.exp)
}

// optional uint32 level = 3;
inline bool TalismanData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TalismanData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TalismanData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TalismanData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TalismanData::level() const {
  // @@protoc_insertion_point(field_get:TalismanData.level)
  return level_;
}
inline void TalismanData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.level)
}

// optional uint32 hp = 4;
inline bool TalismanData::has_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TalismanData::set_has_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TalismanData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TalismanData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 TalismanData::hp() const {
  // @@protoc_insertion_point(field_get:TalismanData.hp)
  return hp_;
}
inline void TalismanData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.hp)
}

// optional uint32 mp = 5;
inline bool TalismanData::has_mp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TalismanData::set_has_mp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TalismanData::clear_has_mp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TalismanData::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 TalismanData::mp() const {
  // @@protoc_insertion_point(field_get:TalismanData.mp)
  return mp_;
}
inline void TalismanData::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.mp)
}

// optional uint32 attack = 6;
inline bool TalismanData::has_attack() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TalismanData::set_has_attack() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TalismanData::clear_has_attack() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TalismanData::clear_attack() {
  attack_ = 0u;
  clear_has_attack();
}
inline ::google::protobuf::uint32 TalismanData::attack() const {
  // @@protoc_insertion_point(field_get:TalismanData.attack)
  return attack_;
}
inline void TalismanData::set_attack(::google::protobuf::uint32 value) {
  set_has_attack();
  attack_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.attack)
}

// optional uint32 defence = 7;
inline bool TalismanData::has_defence() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TalismanData::set_has_defence() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TalismanData::clear_has_defence() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TalismanData::clear_defence() {
  defence_ = 0u;
  clear_has_defence();
}
inline ::google::protobuf::uint32 TalismanData::defence() const {
  // @@protoc_insertion_point(field_get:TalismanData.defence)
  return defence_;
}
inline void TalismanData::set_defence(::google::protobuf::uint32 value) {
  set_has_defence();
  defence_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.defence)
}

// repeated .TalismanData.Skill skill = 9;
inline int TalismanData::skill_size() const {
  return skill_.size();
}
inline void TalismanData::clear_skill() {
  skill_.Clear();
}
inline const ::TalismanData_Skill& TalismanData::skill(int index) const {
  // @@protoc_insertion_point(field_get:TalismanData.skill)
  return skill_.Get(index);
}
inline ::TalismanData_Skill* TalismanData::mutable_skill(int index) {
  // @@protoc_insertion_point(field_mutable:TalismanData.skill)
  return skill_.Mutable(index);
}
inline ::TalismanData_Skill* TalismanData::add_skill() {
  // @@protoc_insertion_point(field_add:TalismanData.skill)
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TalismanData_Skill >&
TalismanData::skill() const {
  // @@protoc_insertion_point(field_list:TalismanData.skill)
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::TalismanData_Skill >*
TalismanData::mutable_skill() {
  // @@protoc_insertion_point(field_mutable_list:TalismanData.skill)
  return &skill_;
}

// optional uint32 star = 10;
inline bool TalismanData::has_star() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TalismanData::set_has_star() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TalismanData::clear_has_star() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TalismanData::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 TalismanData::star() const {
  // @@protoc_insertion_point(field_get:TalismanData.star)
  return star_;
}
inline void TalismanData::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.star)
}

// optional .TalismanStar starprop = 11;
inline bool TalismanData::has_starprop() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TalismanData::set_has_starprop() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TalismanData::clear_has_starprop() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TalismanData::clear_starprop() {
  if (starprop_ != NULL) starprop_->::TalismanStar::Clear();
  clear_has_starprop();
}
inline const ::TalismanStar& TalismanData::starprop() const {
  // @@protoc_insertion_point(field_get:TalismanData.starprop)
  return starprop_ != NULL ? *starprop_ : *default_instance_->starprop_;
}
inline ::TalismanStar* TalismanData::mutable_starprop() {
  set_has_starprop();
  if (starprop_ == NULL) starprop_ = new ::TalismanStar;
  // @@protoc_insertion_point(field_mutable:TalismanData.starprop)
  return starprop_;
}
inline ::TalismanStar* TalismanData::release_starprop() {
  clear_has_starprop();
  ::TalismanStar* temp = starprop_;
  starprop_ = NULL;
  return temp;
}
inline void TalismanData::set_allocated_starprop(::TalismanStar* starprop) {
  delete starprop_;
  starprop_ = starprop;
  if (starprop) {
    set_has_starprop();
  } else {
    clear_has_starprop();
  }
  // @@protoc_insertion_point(field_set_allocated:TalismanData.starprop)
}

// optional uint32 freshnum = 12;
inline bool TalismanData::has_freshnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TalismanData::set_has_freshnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TalismanData::clear_has_freshnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TalismanData::clear_freshnum() {
  freshnum_ = 0u;
  clear_has_freshnum();
}
inline ::google::protobuf::uint32 TalismanData::freshnum() const {
  // @@protoc_insertion_point(field_get:TalismanData.freshnum)
  return freshnum_;
}
inline void TalismanData::set_freshnum(::google::protobuf::uint32 value) {
  set_has_freshnum();
  freshnum_ = value;
  // @@protoc_insertion_point(field_set:TalismanData.freshnum)
}

// -------------------------------------------------------------------

// ScenePetAutoFun

// optional bool canAutoPickup = 1;
inline bool ScenePetAutoFun::has_canautopickup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScenePetAutoFun::set_has_canautopickup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScenePetAutoFun::clear_has_canautopickup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScenePetAutoFun::clear_canautopickup() {
  canautopickup_ = false;
  clear_has_canautopickup();
}
inline bool ScenePetAutoFun::canautopickup() const {
  // @@protoc_insertion_point(field_get:ScenePetAutoFun.canAutoPickup)
  return canautopickup_;
}
inline void ScenePetAutoFun::set_canautopickup(bool value) {
  set_has_canautopickup();
  canautopickup_ = value;
  // @@protoc_insertion_point(field_set:ScenePetAutoFun.canAutoPickup)
}

// optional bool canAutoAddHpMp = 2;
inline bool ScenePetAutoFun::has_canautoaddhpmp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScenePetAutoFun::set_has_canautoaddhpmp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScenePetAutoFun::clear_has_canautoaddhpmp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScenePetAutoFun::clear_canautoaddhpmp() {
  canautoaddhpmp_ = false;
  clear_has_canautoaddhpmp();
}
inline bool ScenePetAutoFun::canautoaddhpmp() const {
  // @@protoc_insertion_point(field_get:ScenePetAutoFun.canAutoAddHpMp)
  return canautoaddhpmp_;
}
inline void ScenePetAutoFun::set_canautoaddhpmp(bool value) {
  set_has_canautoaddhpmp();
  canautoaddhpmp_ = value;
  // @@protoc_insertion_point(field_set:ScenePetAutoFun.canAutoAddHpMp)
}

// optional uint32 lessHpPer = 3;
inline bool ScenePetAutoFun::has_lesshpper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScenePetAutoFun::set_has_lesshpper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScenePetAutoFun::clear_has_lesshpper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScenePetAutoFun::clear_lesshpper() {
  lesshpper_ = 0u;
  clear_has_lesshpper();
}
inline ::google::protobuf::uint32 ScenePetAutoFun::lesshpper() const {
  // @@protoc_insertion_point(field_get:ScenePetAutoFun.lessHpPer)
  return lesshpper_;
}
inline void ScenePetAutoFun::set_lesshpper(::google::protobuf::uint32 value) {
  set_has_lesshpper();
  lesshpper_ = value;
  // @@protoc_insertion_point(field_set:ScenePetAutoFun.lessHpPer)
}

// optional uint32 useHpObj = 4;
inline bool ScenePetAutoFun::has_usehpobj() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScenePetAutoFun::set_has_usehpobj() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScenePetAutoFun::clear_has_usehpobj() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScenePetAutoFun::clear_usehpobj() {
  usehpobj_ = 0u;
  clear_has_usehpobj();
}
inline ::google::protobuf::uint32 ScenePetAutoFun::usehpobj() const {
  // @@protoc_insertion_point(field_get:ScenePetAutoFun.useHpObj)
  return usehpobj_;
}
inline void ScenePetAutoFun::set_usehpobj(::google::protobuf::uint32 value) {
  set_has_usehpobj();
  usehpobj_ = value;
  // @@protoc_insertion_point(field_set:ScenePetAutoFun.useHpObj)
}

// optional uint32 lessMpPer = 5;
inline bool ScenePetAutoFun::has_lessmpper() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScenePetAutoFun::set_has_lessmpper() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScenePetAutoFun::clear_has_lessmpper() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScenePetAutoFun::clear_lessmpper() {
  lessmpper_ = 0u;
  clear_has_lessmpper();
}
inline ::google::protobuf::uint32 ScenePetAutoFun::lessmpper() const {
  // @@protoc_insertion_point(field_get:ScenePetAutoFun.lessMpPer)
  return lessmpper_;
}
inline void ScenePetAutoFun::set_lessmpper(::google::protobuf::uint32 value) {
  set_has_lessmpper();
  lessmpper_ = value;
  // @@protoc_insertion_point(field_set:ScenePetAutoFun.lessMpPer)
}

// optional uint32 useMpObj = 6;
inline bool ScenePetAutoFun::has_usempobj() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScenePetAutoFun::set_has_usempobj() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScenePetAutoFun::clear_has_usempobj() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScenePetAutoFun::clear_usempobj() {
  usempobj_ = 0u;
  clear_has_usempobj();
}
inline ::google::protobuf::uint32 ScenePetAutoFun::usempobj() const {
  // @@protoc_insertion_point(field_get:ScenePetAutoFun.useMpObj)
  return usempobj_;
}
inline void ScenePetAutoFun::set_usempobj(::google::protobuf::uint32 value) {
  set_has_usempobj();
  usempobj_ = value;
  // @@protoc_insertion_point(field_set:ScenePetAutoFun.useMpObj)
}

// optional uint32 usePetHpObj = 7;
inline bool ScenePetAutoFun::has_usepethpobj() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ScenePetAutoFun::set_has_usepethpobj() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ScenePetAutoFun::clear_has_usepethpobj() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ScenePetAutoFun::clear_usepethpobj() {
  usepethpobj_ = 0u;
  clear_has_usepethpobj();
}
inline ::google::protobuf::uint32 ScenePetAutoFun::usepethpobj() const {
  // @@protoc_insertion_point(field_get:ScenePetAutoFun.usePetHpObj)
  return usepethpobj_;
}
inline void ScenePetAutoFun::set_usepethpobj(::google::protobuf::uint32 value) {
  set_has_usepethpobj();
  usepethpobj_ = value;
  // @@protoc_insertion_point(field_set:ScenePetAutoFun.usePetHpObj)
}

// optional uint32 lessPetHpPer = 8;
inline bool ScenePetAutoFun::has_lesspethpper() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ScenePetAutoFun::set_has_lesspethpper() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ScenePetAutoFun::clear_has_lesspethpper() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ScenePetAutoFun::clear_lesspethpper() {
  lesspethpper_ = 0u;
  clear_has_lesspethpper();
}
inline ::google::protobuf::uint32 ScenePetAutoFun::lesspethpper() const {
  // @@protoc_insertion_point(field_get:ScenePetAutoFun.lessPetHpPer)
  return lesspethpper_;
}
inline void ScenePetAutoFun::set_lesspethpper(::google::protobuf::uint32 value) {
  set_has_lesspethpper();
  lesspethpper_ = value;
  // @@protoc_insertion_point(field_set:ScenePetAutoFun.lessPetHpPer)
}

// -------------------------------------------------------------------

// ScenePetSkillData

// optional uint32 petskillid = 1;
inline bool ScenePetSkillData::has_petskillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScenePetSkillData::set_has_petskillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScenePetSkillData::clear_has_petskillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScenePetSkillData::clear_petskillid() {
  petskillid_ = 0u;
  clear_has_petskillid();
}
inline ::google::protobuf::uint32 ScenePetSkillData::petskillid() const {
  // @@protoc_insertion_point(field_get:ScenePetSkillData.petskillid)
  return petskillid_;
}
inline void ScenePetSkillData::set_petskillid(::google::protobuf::uint32 value) {
  set_has_petskillid();
  petskillid_ = value;
  // @@protoc_insertion_point(field_set:ScenePetSkillData.petskillid)
}

// optional uint32 skillid = 2;
inline bool ScenePetSkillData::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScenePetSkillData::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScenePetSkillData::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScenePetSkillData::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 ScenePetSkillData::skillid() const {
  // @@protoc_insertion_point(field_get:ScenePetSkillData.skillid)
  return skillid_;
}
inline void ScenePetSkillData::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:ScenePetSkillData.skillid)
}

// optional uint32 skilllevel = 3;
inline bool ScenePetSkillData::has_skilllevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScenePetSkillData::set_has_skilllevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScenePetSkillData::clear_has_skilllevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScenePetSkillData::clear_skilllevel() {
  skilllevel_ = 0u;
  clear_has_skilllevel();
}
inline ::google::protobuf::uint32 ScenePetSkillData::skilllevel() const {
  // @@protoc_insertion_point(field_get:ScenePetSkillData.skilllevel)
  return skilllevel_;
}
inline void ScenePetSkillData::set_skilllevel(::google::protobuf::uint32 value) {
  set_has_skilllevel();
  skilllevel_ = value;
  // @@protoc_insertion_point(field_set:ScenePetSkillData.skilllevel)
}

// optional uint32 usertype = 4;
inline bool ScenePetSkillData::has_usertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScenePetSkillData::set_has_usertype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScenePetSkillData::clear_has_usertype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScenePetSkillData::clear_usertype() {
  usertype_ = 0u;
  clear_has_usertype();
}
inline ::google::protobuf::uint32 ScenePetSkillData::usertype() const {
  // @@protoc_insertion_point(field_get:ScenePetSkillData.usertype)
  return usertype_;
}
inline void ScenePetSkillData::set_usertype(::google::protobuf::uint32 value) {
  set_has_usertype();
  usertype_ = value;
  // @@protoc_insertion_point(field_set:ScenePetSkillData.usertype)
}

// -------------------------------------------------------------------

// ScenePetDoSkill

// optional uint32 useRate = 1;
inline bool ScenePetDoSkill::has_userate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScenePetDoSkill::set_has_userate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScenePetDoSkill::clear_has_userate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScenePetDoSkill::clear_userate() {
  userate_ = 0u;
  clear_has_userate();
}
inline ::google::protobuf::uint32 ScenePetDoSkill::userate() const {
  // @@protoc_insertion_point(field_get:ScenePetDoSkill.useRate)
  return userate_;
}
inline void ScenePetDoSkill::set_userate(::google::protobuf::uint32 value) {
  set_has_userate();
  userate_ = value;
  // @@protoc_insertion_point(field_set:ScenePetDoSkill.useRate)
}

// optional uint32 target = 2;
inline bool ScenePetDoSkill::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScenePetDoSkill::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScenePetDoSkill::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScenePetDoSkill::clear_target() {
  target_ = 0u;
  clear_has_target();
}
inline ::google::protobuf::uint32 ScenePetDoSkill::target() const {
  // @@protoc_insertion_point(field_get:ScenePetDoSkill.target)
  return target_;
}
inline void ScenePetDoSkill::set_target(::google::protobuf::uint32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:ScenePetDoSkill.target)
}

// -------------------------------------------------------------------

// ScenePetData

// optional uint32 baseId = 1;
inline bool ScenePetData::has_baseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScenePetData::set_has_baseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScenePetData::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScenePetData::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
inline ::google::protobuf::uint32 ScenePetData::baseid() const {
  // @@protoc_insertion_point(field_get:ScenePetData.baseId)
  return baseid_;
}
inline void ScenePetData::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.baseId)
}

// optional uint32 masterId = 2;
inline bool ScenePetData::has_masterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScenePetData::set_has_masterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScenePetData::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScenePetData::clear_masterid() {
  masterid_ = 0u;
  clear_has_masterid();
}
inline ::google::protobuf::uint32 ScenePetData::masterid() const {
  // @@protoc_insertion_point(field_get:ScenePetData.masterId)
  return masterid_;
}
inline void ScenePetData::set_masterid(::google::protobuf::uint32 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.masterId)
}

// optional uint32 resId = 3;
inline bool ScenePetData::has_resid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScenePetData::set_has_resid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScenePetData::clear_has_resid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScenePetData::clear_resid() {
  resid_ = 0u;
  clear_has_resid();
}
inline ::google::protobuf::uint32 ScenePetData::resid() const {
  // @@protoc_insertion_point(field_get:ScenePetData.resId)
  return resid_;
}
inline void ScenePetData::set_resid(::google::protobuf::uint32 value) {
  set_has_resid();
  resid_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.resId)
}

// optional uint32 index = 4;
inline bool ScenePetData::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScenePetData::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScenePetData::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScenePetData::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ScenePetData::index() const {
  // @@protoc_insertion_point(field_get:ScenePetData.index)
  return index_;
}
inline void ScenePetData::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.index)
}

// optional string name = 5;
inline bool ScenePetData::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScenePetData::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScenePetData::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScenePetData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ScenePetData::name() const {
  // @@protoc_insertion_point(field_get:ScenePetData.name)
  return *name_;
}
inline void ScenePetData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ScenePetData.name)
}
inline void ScenePetData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ScenePetData.name)
}
inline void ScenePetData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ScenePetData.name)
}
inline ::std::string* ScenePetData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ScenePetData.name)
  return name_;
}
inline ::std::string* ScenePetData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ScenePetData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ScenePetData.name)
}

// optional uint32 level = 6;
inline bool ScenePetData::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScenePetData::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScenePetData::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScenePetData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ScenePetData::level() const {
  // @@protoc_insertion_point(field_get:ScenePetData.level)
  return level_;
}
inline void ScenePetData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.level)
}

// optional uint32 useLevel = 7;
inline bool ScenePetData::has_uselevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ScenePetData::set_has_uselevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ScenePetData::clear_has_uselevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ScenePetData::clear_uselevel() {
  uselevel_ = 0u;
  clear_has_uselevel();
}
inline ::google::protobuf::uint32 ScenePetData::uselevel() const {
  // @@protoc_insertion_point(field_get:ScenePetData.useLevel)
  return uselevel_;
}
inline void ScenePetData::set_uselevel(::google::protobuf::uint32 value) {
  set_has_uselevel();
  uselevel_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.useLevel)
}

// optional bool petbind = 8;
inline bool ScenePetData::has_petbind() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ScenePetData::set_has_petbind() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ScenePetData::clear_has_petbind() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ScenePetData::clear_petbind() {
  petbind_ = false;
  clear_has_petbind();
}
inline bool ScenePetData::petbind() const {
  // @@protoc_insertion_point(field_get:ScenePetData.petbind)
  return petbind_;
}
inline void ScenePetData::set_petbind(bool value) {
  set_has_petbind();
  petbind_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.petbind)
}

// optional uint32 enhanceLevel = 9;
inline bool ScenePetData::has_enhancelevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ScenePetData::set_has_enhancelevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ScenePetData::clear_has_enhancelevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ScenePetData::clear_enhancelevel() {
  enhancelevel_ = 0u;
  clear_has_enhancelevel();
}
inline ::google::protobuf::uint32 ScenePetData::enhancelevel() const {
  // @@protoc_insertion_point(field_get:ScenePetData.enhanceLevel)
  return enhancelevel_;
}
inline void ScenePetData::set_enhancelevel(::google::protobuf::uint32 value) {
  set_has_enhancelevel();
  enhancelevel_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.enhanceLevel)
}

// optional uint32 sex = 11;
inline bool ScenePetData::has_sex() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ScenePetData::set_has_sex() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ScenePetData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ScenePetData::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 ScenePetData::sex() const {
  // @@protoc_insertion_point(field_get:ScenePetData.sex)
  return sex_;
}
inline void ScenePetData::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.sex)
}

// optional uint32 mettle = 12;
inline bool ScenePetData::has_mettle() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ScenePetData::set_has_mettle() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ScenePetData::clear_has_mettle() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ScenePetData::clear_mettle() {
  mettle_ = 0u;
  clear_has_mettle();
}
inline ::google::protobuf::uint32 ScenePetData::mettle() const {
  // @@protoc_insertion_point(field_get:ScenePetData.mettle)
  return mettle_;
}
inline void ScenePetData::set_mettle(::google::protobuf::uint32 value) {
  set_has_mettle();
  mettle_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.mettle)
}

// optional uint64 exp = 13;
inline bool ScenePetData::has_exp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ScenePetData::set_has_exp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ScenePetData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ScenePetData::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 ScenePetData::exp() const {
  // @@protoc_insertion_point(field_get:ScenePetData.exp)
  return exp_;
}
inline void ScenePetData::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.exp)
}

// optional uint32 hp = 14;
inline bool ScenePetData::has_hp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ScenePetData::set_has_hp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ScenePetData::clear_has_hp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ScenePetData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 ScenePetData::hp() const {
  // @@protoc_insertion_point(field_get:ScenePetData.hp)
  return hp_;
}
inline void ScenePetData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.hp)
}

// optional uint32 maxhp = 15;
inline bool ScenePetData::has_maxhp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ScenePetData::set_has_maxhp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ScenePetData::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ScenePetData::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 ScenePetData::maxhp() const {
  // @@protoc_insertion_point(field_get:ScenePetData.maxhp)
  return maxhp_;
}
inline void ScenePetData::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.maxhp)
}

// optional uint32 life = 16;
inline bool ScenePetData::has_life() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ScenePetData::set_has_life() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ScenePetData::clear_has_life() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ScenePetData::clear_life() {
  life_ = 0u;
  clear_has_life();
}
inline ::google::protobuf::uint32 ScenePetData::life() const {
  // @@protoc_insertion_point(field_get:ScenePetData.life)
  return life_;
}
inline void ScenePetData::set_life(::google::protobuf::uint32 value) {
  set_has_life();
  life_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.life)
}

// optional uint32 happy = 17;
inline bool ScenePetData::has_happy() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ScenePetData::set_has_happy() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ScenePetData::clear_has_happy() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ScenePetData::clear_happy() {
  happy_ = 0u;
  clear_has_happy();
}
inline ::google::protobuf::uint32 ScenePetData::happy() const {
  // @@protoc_insertion_point(field_get:ScenePetData.happy)
  return happy_;
}
inline void ScenePetData::set_happy(::google::protobuf::uint32 value) {
  set_has_happy();
  happy_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.happy)
}

// optional uint32 strength = 18;
inline bool ScenePetData::has_strength() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ScenePetData::set_has_strength() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ScenePetData::clear_has_strength() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ScenePetData::clear_strength() {
  strength_ = 0u;
  clear_has_strength();
}
inline ::google::protobuf::uint32 ScenePetData::strength() const {
  // @@protoc_insertion_point(field_get:ScenePetData.strength)
  return strength_;
}
inline void ScenePetData::set_strength(::google::protobuf::uint32 value) {
  set_has_strength();
  strength_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.strength)
}

// optional uint32 dexterity = 19;
inline bool ScenePetData::has_dexterity() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ScenePetData::set_has_dexterity() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ScenePetData::clear_has_dexterity() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ScenePetData::clear_dexterity() {
  dexterity_ = 0u;
  clear_has_dexterity();
}
inline ::google::protobuf::uint32 ScenePetData::dexterity() const {
  // @@protoc_insertion_point(field_get:ScenePetData.dexterity)
  return dexterity_;
}
inline void ScenePetData::set_dexterity(::google::protobuf::uint32 value) {
  set_has_dexterity();
  dexterity_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.dexterity)
}

// optional uint32 mentality = 20;
inline bool ScenePetData::has_mentality() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ScenePetData::set_has_mentality() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ScenePetData::clear_has_mentality() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ScenePetData::clear_mentality() {
  mentality_ = 0u;
  clear_has_mentality();
}
inline ::google::protobuf::uint32 ScenePetData::mentality() const {
  // @@protoc_insertion_point(field_get:ScenePetData.mentality)
  return mentality_;
}
inline void ScenePetData::set_mentality(::google::protobuf::uint32 value) {
  set_has_mentality();
  mentality_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.mentality)
}

// optional uint32 constitution = 21;
inline bool ScenePetData::has_constitution() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ScenePetData::set_has_constitution() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ScenePetData::clear_has_constitution() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ScenePetData::clear_constitution() {
  constitution_ = 0u;
  clear_has_constitution();
}
inline ::google::protobuf::uint32 ScenePetData::constitution() const {
  // @@protoc_insertion_point(field_get:ScenePetData.constitution)
  return constitution_;
}
inline void ScenePetData::set_constitution(::google::protobuf::uint32 value) {
  set_has_constitution();
  constitution_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.constitution)
}

// optional uint32 growupLevel = 22;
inline bool ScenePetData::has_growuplevel() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ScenePetData::set_has_growuplevel() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ScenePetData::clear_has_growuplevel() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ScenePetData::clear_growuplevel() {
  growuplevel_ = 0u;
  clear_has_growuplevel();
}
inline ::google::protobuf::uint32 ScenePetData::growuplevel() const {
  // @@protoc_insertion_point(field_get:ScenePetData.growupLevel)
  return growuplevel_;
}
inline void ScenePetData::set_growuplevel(::google::protobuf::uint32 value) {
  set_has_growuplevel();
  growuplevel_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.growupLevel)
}

// optional uint32 streAptitude = 23;
inline bool ScenePetData::has_streaptitude() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ScenePetData::set_has_streaptitude() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ScenePetData::clear_has_streaptitude() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ScenePetData::clear_streaptitude() {
  streaptitude_ = 0u;
  clear_has_streaptitude();
}
inline ::google::protobuf::uint32 ScenePetData::streaptitude() const {
  // @@protoc_insertion_point(field_get:ScenePetData.streAptitude)
  return streaptitude_;
}
inline void ScenePetData::set_streaptitude(::google::protobuf::uint32 value) {
  set_has_streaptitude();
  streaptitude_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.streAptitude)
}

// optional uint32 dextAptitude = 24;
inline bool ScenePetData::has_dextaptitude() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ScenePetData::set_has_dextaptitude() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ScenePetData::clear_has_dextaptitude() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ScenePetData::clear_dextaptitude() {
  dextaptitude_ = 0u;
  clear_has_dextaptitude();
}
inline ::google::protobuf::uint32 ScenePetData::dextaptitude() const {
  // @@protoc_insertion_point(field_get:ScenePetData.dextAptitude)
  return dextaptitude_;
}
inline void ScenePetData::set_dextaptitude(::google::protobuf::uint32 value) {
  set_has_dextaptitude();
  dextaptitude_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.dextAptitude)
}

// optional uint32 mentAptitude = 25;
inline bool ScenePetData::has_mentaptitude() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ScenePetData::set_has_mentaptitude() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ScenePetData::clear_has_mentaptitude() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ScenePetData::clear_mentaptitude() {
  mentaptitude_ = 0u;
  clear_has_mentaptitude();
}
inline ::google::protobuf::uint32 ScenePetData::mentaptitude() const {
  // @@protoc_insertion_point(field_get:ScenePetData.mentAptitude)
  return mentaptitude_;
}
inline void ScenePetData::set_mentaptitude(::google::protobuf::uint32 value) {
  set_has_mentaptitude();
  mentaptitude_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.mentAptitude)
}

// optional uint32 consAptitude = 26;
inline bool ScenePetData::has_consaptitude() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ScenePetData::set_has_consaptitude() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ScenePetData::clear_has_consaptitude() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ScenePetData::clear_consaptitude() {
  consaptitude_ = 0u;
  clear_has_consaptitude();
}
inline ::google::protobuf::uint32 ScenePetData::consaptitude() const {
  // @@protoc_insertion_point(field_get:ScenePetData.consAptitude)
  return consaptitude_;
}
inline void ScenePetData::set_consaptitude(::google::protobuf::uint32 value) {
  set_has_consaptitude();
  consaptitude_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.consAptitude)
}

// optional uint32 pmaxAttack = 27;
inline bool ScenePetData::has_pmaxattack() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ScenePetData::set_has_pmaxattack() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ScenePetData::clear_has_pmaxattack() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ScenePetData::clear_pmaxattack() {
  pmaxattack_ = 0u;
  clear_has_pmaxattack();
}
inline ::google::protobuf::uint32 ScenePetData::pmaxattack() const {
  // @@protoc_insertion_point(field_get:ScenePetData.pmaxAttack)
  return pmaxattack_;
}
inline void ScenePetData::set_pmaxattack(::google::protobuf::uint32 value) {
  set_has_pmaxattack();
  pmaxattack_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.pmaxAttack)
}

// optional uint32 mmaxAttack = 28;
inline bool ScenePetData::has_mmaxattack() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ScenePetData::set_has_mmaxattack() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ScenePetData::clear_has_mmaxattack() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ScenePetData::clear_mmaxattack() {
  mmaxattack_ = 0u;
  clear_has_mmaxattack();
}
inline ::google::protobuf::uint32 ScenePetData::mmaxattack() const {
  // @@protoc_insertion_point(field_get:ScenePetData.mmaxAttack)
  return mmaxattack_;
}
inline void ScenePetData::set_mmaxattack(::google::protobuf::uint32 value) {
  set_has_mmaxattack();
  mmaxattack_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.mmaxAttack)
}

// optional uint32 pminAttack = 29;
inline bool ScenePetData::has_pminattack() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ScenePetData::set_has_pminattack() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ScenePetData::clear_has_pminattack() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ScenePetData::clear_pminattack() {
  pminattack_ = 0u;
  clear_has_pminattack();
}
inline ::google::protobuf::uint32 ScenePetData::pminattack() const {
  // @@protoc_insertion_point(field_get:ScenePetData.pminAttack)
  return pminattack_;
}
inline void ScenePetData::set_pminattack(::google::protobuf::uint32 value) {
  set_has_pminattack();
  pminattack_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.pminAttack)
}

// optional uint32 mminAttack = 30;
inline bool ScenePetData::has_mminattack() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ScenePetData::set_has_mminattack() {
  _has_bits_[0] |= 0x10000000u;
}
inline void ScenePetData::clear_has_mminattack() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void ScenePetData::clear_mminattack() {
  mminattack_ = 0u;
  clear_has_mminattack();
}
inline ::google::protobuf::uint32 ScenePetData::mminattack() const {
  // @@protoc_insertion_point(field_get:ScenePetData.mminAttack)
  return mminattack_;
}
inline void ScenePetData::set_mminattack(::google::protobuf::uint32 value) {
  set_has_mminattack();
  mminattack_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.mminAttack)
}

// optional uint32 pDefence = 31;
inline bool ScenePetData::has_pdefence() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ScenePetData::set_has_pdefence() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ScenePetData::clear_has_pdefence() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ScenePetData::clear_pdefence() {
  pdefence_ = 0u;
  clear_has_pdefence();
}
inline ::google::protobuf::uint32 ScenePetData::pdefence() const {
  // @@protoc_insertion_point(field_get:ScenePetData.pDefence)
  return pdefence_;
}
inline void ScenePetData::set_pdefence(::google::protobuf::uint32 value) {
  set_has_pdefence();
  pdefence_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.pDefence)
}

// optional uint32 mDefence = 32;
inline bool ScenePetData::has_mdefence() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ScenePetData::set_has_mdefence() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ScenePetData::clear_has_mdefence() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ScenePetData::clear_mdefence() {
  mdefence_ = 0u;
  clear_has_mdefence();
}
inline ::google::protobuf::uint32 ScenePetData::mdefence() const {
  // @@protoc_insertion_point(field_get:ScenePetData.mDefence)
  return mdefence_;
}
inline void ScenePetData::set_mdefence(::google::protobuf::uint32 value) {
  set_has_mdefence();
  mdefence_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.mDefence)
}

// optional uint32 heavyRate = 33;
inline bool ScenePetData::has_heavyrate() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void ScenePetData::set_has_heavyrate() {
  _has_bits_[0] |= 0x80000000u;
}
inline void ScenePetData::clear_has_heavyrate() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void ScenePetData::clear_heavyrate() {
  heavyrate_ = 0u;
  clear_has_heavyrate();
}
inline ::google::protobuf::uint32 ScenePetData::heavyrate() const {
  // @@protoc_insertion_point(field_get:ScenePetData.heavyRate)
  return heavyrate_;
}
inline void ScenePetData::set_heavyrate(::google::protobuf::uint32 value) {
  set_has_heavyrate();
  heavyrate_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.heavyRate)
}

// optional uint32 luckyRate = 34;
inline bool ScenePetData::has_luckyrate() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void ScenePetData::set_has_luckyrate() {
  _has_bits_[1] |= 0x00000001u;
}
inline void ScenePetData::clear_has_luckyrate() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void ScenePetData::clear_luckyrate() {
  luckyrate_ = 0u;
  clear_has_luckyrate();
}
inline ::google::protobuf::uint32 ScenePetData::luckyrate() const {
  // @@protoc_insertion_point(field_get:ScenePetData.luckyRate)
  return luckyrate_;
}
inline void ScenePetData::set_luckyrate(::google::protobuf::uint32 value) {
  set_has_luckyrate();
  luckyrate_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.luckyRate)
}

// optional uint32 attackSpeedLevel = 35;
inline bool ScenePetData::has_attackspeedlevel() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void ScenePetData::set_has_attackspeedlevel() {
  _has_bits_[1] |= 0x00000002u;
}
inline void ScenePetData::clear_has_attackspeedlevel() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void ScenePetData::clear_attackspeedlevel() {
  attackspeedlevel_ = 0u;
  clear_has_attackspeedlevel();
}
inline ::google::protobuf::uint32 ScenePetData::attackspeedlevel() const {
  // @@protoc_insertion_point(field_get:ScenePetData.attackSpeedLevel)
  return attackspeedlevel_;
}
inline void ScenePetData::set_attackspeedlevel(::google::protobuf::uint32 value) {
  set_has_attackspeedlevel();
  attackspeedlevel_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.attackSpeedLevel)
}

// optional uint32 moveSpeedLevel = 36;
inline bool ScenePetData::has_movespeedlevel() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void ScenePetData::set_has_movespeedlevel() {
  _has_bits_[1] |= 0x00000004u;
}
inline void ScenePetData::clear_has_movespeedlevel() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void ScenePetData::clear_movespeedlevel() {
  movespeedlevel_ = 0u;
  clear_has_movespeedlevel();
}
inline ::google::protobuf::uint32 ScenePetData::movespeedlevel() const {
  // @@protoc_insertion_point(field_get:ScenePetData.moveSpeedLevel)
  return movespeedlevel_;
}
inline void ScenePetData::set_movespeedlevel(::google::protobuf::uint32 value) {
  set_has_movespeedlevel();
  movespeedlevel_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.moveSpeedLevel)
}

// optional uint64 memory_exp = 37;
inline bool ScenePetData::has_memory_exp() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void ScenePetData::set_has_memory_exp() {
  _has_bits_[1] |= 0x00000008u;
}
inline void ScenePetData::clear_has_memory_exp() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void ScenePetData::clear_memory_exp() {
  memory_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_memory_exp();
}
inline ::google::protobuf::uint64 ScenePetData::memory_exp() const {
  // @@protoc_insertion_point(field_get:ScenePetData.memory_exp)
  return memory_exp_;
}
inline void ScenePetData::set_memory_exp(::google::protobuf::uint64 value) {
  set_has_memory_exp();
  memory_exp_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.memory_exp)
}

// optional uint32 equipGrid = 40;
inline bool ScenePetData::has_equipgrid() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void ScenePetData::set_has_equipgrid() {
  _has_bits_[1] |= 0x00000010u;
}
inline void ScenePetData::clear_has_equipgrid() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void ScenePetData::clear_equipgrid() {
  equipgrid_ = 0u;
  clear_has_equipgrid();
}
inline ::google::protobuf::uint32 ScenePetData::equipgrid() const {
  // @@protoc_insertion_point(field_get:ScenePetData.equipGrid)
  return equipgrid_;
}
inline void ScenePetData::set_equipgrid(::google::protobuf::uint32 value) {
  set_has_equipgrid();
  equipgrid_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.equipGrid)
}

// optional uint32 activeSkillGrid = 41;
inline bool ScenePetData::has_activeskillgrid() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void ScenePetData::set_has_activeskillgrid() {
  _has_bits_[1] |= 0x00000020u;
}
inline void ScenePetData::clear_has_activeskillgrid() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void ScenePetData::clear_activeskillgrid() {
  activeskillgrid_ = 0u;
  clear_has_activeskillgrid();
}
inline ::google::protobuf::uint32 ScenePetData::activeskillgrid() const {
  // @@protoc_insertion_point(field_get:ScenePetData.activeSkillGrid)
  return activeskillgrid_;
}
inline void ScenePetData::set_activeskillgrid(::google::protobuf::uint32 value) {
  set_has_activeskillgrid();
  activeskillgrid_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.activeSkillGrid)
}

// repeated .ScenePetSkillData skill = 43;
inline int ScenePetData::skill_size() const {
  return skill_.size();
}
inline void ScenePetData::clear_skill() {
  skill_.Clear();
}
inline const ::ScenePetSkillData& ScenePetData::skill(int index) const {
  // @@protoc_insertion_point(field_get:ScenePetData.skill)
  return skill_.Get(index);
}
inline ::ScenePetSkillData* ScenePetData::mutable_skill(int index) {
  // @@protoc_insertion_point(field_mutable:ScenePetData.skill)
  return skill_.Mutable(index);
}
inline ::ScenePetSkillData* ScenePetData::add_skill() {
  // @@protoc_insertion_point(field_add:ScenePetData.skill)
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData >&
ScenePetData::skill() const {
  // @@protoc_insertion_point(field_list:ScenePetData.skill)
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData >*
ScenePetData::mutable_skill() {
  // @@protoc_insertion_point(field_mutable_list:ScenePetData.skill)
  return &skill_;
}

// repeated .ScenePetSkillData activeskill = 44;
inline int ScenePetData::activeskill_size() const {
  return activeskill_.size();
}
inline void ScenePetData::clear_activeskill() {
  activeskill_.Clear();
}
inline const ::ScenePetSkillData& ScenePetData::activeskill(int index) const {
  // @@protoc_insertion_point(field_get:ScenePetData.activeskill)
  return activeskill_.Get(index);
}
inline ::ScenePetSkillData* ScenePetData::mutable_activeskill(int index) {
  // @@protoc_insertion_point(field_mutable:ScenePetData.activeskill)
  return activeskill_.Mutable(index);
}
inline ::ScenePetSkillData* ScenePetData::add_activeskill() {
  // @@protoc_insertion_point(field_add:ScenePetData.activeskill)
  return activeskill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData >&
ScenePetData::activeskill() const {
  // @@protoc_insertion_point(field_list:ScenePetData.activeskill)
  return activeskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::ScenePetSkillData >*
ScenePetData::mutable_activeskill() {
  // @@protoc_insertion_point(field_mutable_list:ScenePetData.activeskill)
  return &activeskill_;
}

// repeated uint32 equipItems = 45;
inline int ScenePetData::equipitems_size() const {
  return equipitems_.size();
}
inline void ScenePetData::clear_equipitems() {
  equipitems_.Clear();
}
inline ::google::protobuf::uint32 ScenePetData::equipitems(int index) const {
  // @@protoc_insertion_point(field_get:ScenePetData.equipItems)
  return equipitems_.Get(index);
}
inline void ScenePetData::set_equipitems(int index, ::google::protobuf::uint32 value) {
  equipitems_.Set(index, value);
  // @@protoc_insertion_point(field_set:ScenePetData.equipItems)
}
inline void ScenePetData::add_equipitems(::google::protobuf::uint32 value) {
  equipitems_.Add(value);
  // @@protoc_insertion_point(field_add:ScenePetData.equipItems)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePetData::equipitems() const {
  // @@protoc_insertion_point(field_list:ScenePetData.equipItems)
  return equipitems_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePetData::mutable_equipitems() {
  // @@protoc_insertion_point(field_mutable_list:ScenePetData.equipItems)
  return &equipitems_;
}

// optional uint32 killEnemyCount = 46;
inline bool ScenePetData::has_killenemycount() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void ScenePetData::set_has_killenemycount() {
  _has_bits_[1] |= 0x00000200u;
}
inline void ScenePetData::clear_has_killenemycount() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void ScenePetData::clear_killenemycount() {
  killenemycount_ = 0u;
  clear_has_killenemycount();
}
inline ::google::protobuf::uint32 ScenePetData::killenemycount() const {
  // @@protoc_insertion_point(field_get:ScenePetData.killEnemyCount)
  return killenemycount_;
}
inline void ScenePetData::set_killenemycount(::google::protobuf::uint32 value) {
  set_has_killenemycount();
  killenemycount_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.killEnemyCount)
}

// repeated uint32 sign = 60 [packed = true];
inline int ScenePetData::sign_size() const {
  return sign_.size();
}
inline void ScenePetData::clear_sign() {
  sign_.Clear();
}
inline ::google::protobuf::uint32 ScenePetData::sign(int index) const {
  // @@protoc_insertion_point(field_get:ScenePetData.sign)
  return sign_.Get(index);
}
inline void ScenePetData::set_sign(int index, ::google::protobuf::uint32 value) {
  sign_.Set(index, value);
  // @@protoc_insertion_point(field_set:ScenePetData.sign)
}
inline void ScenePetData::add_sign(::google::protobuf::uint32 value) {
  sign_.Add(value);
  // @@protoc_insertion_point(field_add:ScenePetData.sign)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePetData::sign() const {
  // @@protoc_insertion_point(field_list:ScenePetData.sign)
  return sign_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePetData::mutable_sign() {
  // @@protoc_insertion_point(field_mutable_list:ScenePetData.sign)
  return &sign_;
}

// optional uint32 kind = 71;
inline bool ScenePetData::has_kind() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void ScenePetData::set_has_kind() {
  _has_bits_[1] |= 0x00000800u;
}
inline void ScenePetData::clear_has_kind() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void ScenePetData::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 ScenePetData::kind() const {
  // @@protoc_insertion_point(field_get:ScenePetData.kind)
  return kind_;
}
inline void ScenePetData::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.kind)
}

// optional uint32 growup = 72;
inline bool ScenePetData::has_growup() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void ScenePetData::set_has_growup() {
  _has_bits_[1] |= 0x00001000u;
}
inline void ScenePetData::clear_has_growup() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void ScenePetData::clear_growup() {
  growup_ = 0u;
  clear_has_growup();
}
inline ::google::protobuf::uint32 ScenePetData::growup() const {
  // @@protoc_insertion_point(field_get:ScenePetData.growup)
  return growup_;
}
inline void ScenePetData::set_growup(::google::protobuf::uint32 value) {
  set_has_growup();
  growup_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.growup)
}

// optional uint32 freePoint = 73;
inline bool ScenePetData::has_freepoint() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void ScenePetData::set_has_freepoint() {
  _has_bits_[1] |= 0x00002000u;
}
inline void ScenePetData::clear_has_freepoint() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void ScenePetData::clear_freepoint() {
  freepoint_ = 0u;
  clear_has_freepoint();
}
inline ::google::protobuf::uint32 ScenePetData::freepoint() const {
  // @@protoc_insertion_point(field_get:ScenePetData.freePoint)
  return freepoint_;
}
inline void ScenePetData::set_freepoint(::google::protobuf::uint32 value) {
  set_has_freepoint();
  freepoint_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.freePoint)
}

// optional uint32 aptitudeLevel = 74;
inline bool ScenePetData::has_aptitudelevel() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void ScenePetData::set_has_aptitudelevel() {
  _has_bits_[1] |= 0x00004000u;
}
inline void ScenePetData::clear_has_aptitudelevel() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void ScenePetData::clear_aptitudelevel() {
  aptitudelevel_ = 0u;
  clear_has_aptitudelevel();
}
inline ::google::protobuf::uint32 ScenePetData::aptitudelevel() const {
  // @@protoc_insertion_point(field_get:ScenePetData.aptitudeLevel)
  return aptitudelevel_;
}
inline void ScenePetData::set_aptitudelevel(::google::protobuf::uint32 value) {
  set_has_aptitudelevel();
  aptitudelevel_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.aptitudeLevel)
}

// optional uint32 activeskill_cooltime = 75;
inline bool ScenePetData::has_activeskill_cooltime() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void ScenePetData::set_has_activeskill_cooltime() {
  _has_bits_[1] |= 0x00008000u;
}
inline void ScenePetData::clear_has_activeskill_cooltime() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void ScenePetData::clear_activeskill_cooltime() {
  activeskill_cooltime_ = 0u;
  clear_has_activeskill_cooltime();
}
inline ::google::protobuf::uint32 ScenePetData::activeskill_cooltime() const {
  // @@protoc_insertion_point(field_get:ScenePetData.activeskill_cooltime)
  return activeskill_cooltime_;
}
inline void ScenePetData::set_activeskill_cooltime(::google::protobuf::uint32 value) {
  set_has_activeskill_cooltime();
  activeskill_cooltime_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.activeskill_cooltime)
}

// optional bool indentify_growup = 76 [default = false];
inline bool ScenePetData::has_indentify_growup() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void ScenePetData::set_has_indentify_growup() {
  _has_bits_[1] |= 0x00010000u;
}
inline void ScenePetData::clear_has_indentify_growup() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void ScenePetData::clear_indentify_growup() {
  indentify_growup_ = false;
  clear_has_indentify_growup();
}
inline bool ScenePetData::indentify_growup() const {
  // @@protoc_insertion_point(field_get:ScenePetData.indentify_growup)
  return indentify_growup_;
}
inline void ScenePetData::set_indentify_growup(bool value) {
  set_has_indentify_growup();
  indentify_growup_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.indentify_growup)
}

// optional uint32 lingqi = 77;
inline bool ScenePetData::has_lingqi() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void ScenePetData::set_has_lingqi() {
  _has_bits_[1] |= 0x00020000u;
}
inline void ScenePetData::clear_has_lingqi() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void ScenePetData::clear_lingqi() {
  lingqi_ = 0u;
  clear_has_lingqi();
}
inline ::google::protobuf::uint32 ScenePetData::lingqi() const {
  // @@protoc_insertion_point(field_get:ScenePetData.lingqi)
  return lingqi_;
}
inline void ScenePetData::set_lingqi(::google::protobuf::uint32 value) {
  set_has_lingqi();
  lingqi_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.lingqi)
}

// optional uint32 lingqiattr = 78;
inline bool ScenePetData::has_lingqiattr() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void ScenePetData::set_has_lingqiattr() {
  _has_bits_[1] |= 0x00040000u;
}
inline void ScenePetData::clear_has_lingqiattr() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void ScenePetData::clear_lingqiattr() {
  lingqiattr_ = 0u;
  clear_has_lingqiattr();
}
inline ::google::protobuf::uint32 ScenePetData::lingqiattr() const {
  // @@protoc_insertion_point(field_get:ScenePetData.lingqiattr)
  return lingqiattr_;
}
inline void ScenePetData::set_lingqiattr(::google::protobuf::uint32 value) {
  set_has_lingqiattr();
  lingqiattr_ = value;
  // @@protoc_insertion_point(field_set:ScenePetData.lingqiattr)
}

// -------------------------------------------------------------------

// ScenePetServerData

// optional .ScenePetData common = 1;
inline bool ScenePetServerData::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScenePetServerData::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScenePetServerData::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScenePetServerData::clear_common() {
  if (common_ != NULL) common_->::ScenePetData::Clear();
  clear_has_common();
}
inline const ::ScenePetData& ScenePetServerData::common() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.common)
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::ScenePetData* ScenePetServerData::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::ScenePetData;
  // @@protoc_insertion_point(field_mutable:ScenePetServerData.common)
  return common_;
}
inline ::ScenePetData* ScenePetServerData::release_common() {
  clear_has_common();
  ::ScenePetData* temp = common_;
  common_ = NULL;
  return temp;
}
inline void ScenePetServerData::set_allocated_common(::ScenePetData* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
  // @@protoc_insertion_point(field_set_allocated:ScenePetServerData.common)
}

// optional uint32 tmpId = 2;
inline bool ScenePetServerData::has_tmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScenePetServerData::set_has_tmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScenePetServerData::clear_has_tmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScenePetServerData::clear_tmpid() {
  tmpid_ = 0u;
  clear_has_tmpid();
}
inline ::google::protobuf::uint32 ScenePetServerData::tmpid() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.tmpId)
  return tmpid_;
}
inline void ScenePetServerData::set_tmpid(::google::protobuf::uint32 value) {
  set_has_tmpid();
  tmpid_ = value;
  // @@protoc_insertion_point(field_set:ScenePetServerData.tmpId)
}

// optional string firstName = 3;
inline bool ScenePetServerData::has_firstname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScenePetServerData::set_has_firstname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScenePetServerData::clear_has_firstname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScenePetServerData::clear_firstname() {
  if (firstname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstname_->clear();
  }
  clear_has_firstname();
}
inline const ::std::string& ScenePetServerData::firstname() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.firstName)
  return *firstname_;
}
inline void ScenePetServerData::set_firstname(const ::std::string& value) {
  set_has_firstname();
  if (firstname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstname_ = new ::std::string;
  }
  firstname_->assign(value);
  // @@protoc_insertion_point(field_set:ScenePetServerData.firstName)
}
inline void ScenePetServerData::set_firstname(const char* value) {
  set_has_firstname();
  if (firstname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstname_ = new ::std::string;
  }
  firstname_->assign(value);
  // @@protoc_insertion_point(field_set_char:ScenePetServerData.firstName)
}
inline void ScenePetServerData::set_firstname(const char* value, size_t size) {
  set_has_firstname();
  if (firstname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstname_ = new ::std::string;
  }
  firstname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ScenePetServerData.firstName)
}
inline ::std::string* ScenePetServerData::mutable_firstname() {
  set_has_firstname();
  if (firstname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ScenePetServerData.firstName)
  return firstname_;
}
inline ::std::string* ScenePetServerData::release_firstname() {
  clear_has_firstname();
  if (firstname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = firstname_;
    firstname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ScenePetServerData::set_allocated_firstname(::std::string* firstname) {
  if (firstname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete firstname_;
  }
  if (firstname) {
    set_has_firstname();
    firstname_ = firstname;
  } else {
    clear_has_firstname();
    firstname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ScenePetServerData.firstName)
}

// optional uint32 x = 4;
inline bool ScenePetServerData::has_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScenePetServerData::set_has_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScenePetServerData::clear_has_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScenePetServerData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 ScenePetServerData::x() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.x)
  return x_;
}
inline void ScenePetServerData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ScenePetServerData.x)
}

// optional uint32 y = 5;
inline bool ScenePetServerData::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScenePetServerData::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScenePetServerData::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScenePetServerData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 ScenePetServerData::y() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.y)
  return y_;
}
inline void ScenePetServerData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:ScenePetServerData.y)
}

// optional uint32 maxlife = 6;
inline bool ScenePetServerData::has_maxlife() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScenePetServerData::set_has_maxlife() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScenePetServerData::clear_has_maxlife() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScenePetServerData::clear_maxlife() {
  maxlife_ = 0u;
  clear_has_maxlife();
}
inline ::google::protobuf::uint32 ScenePetServerData::maxlife() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.maxlife)
  return maxlife_;
}
inline void ScenePetServerData::set_maxlife(::google::protobuf::uint32 value) {
  set_has_maxlife();
  maxlife_ = value;
  // @@protoc_insertion_point(field_set:ScenePetServerData.maxlife)
}

// optional uint32 skillMax = 14;
inline bool ScenePetServerData::has_skillmax() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ScenePetServerData::set_has_skillmax() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ScenePetServerData::clear_has_skillmax() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ScenePetServerData::clear_skillmax() {
  skillmax_ = 0u;
  clear_has_skillmax();
}
inline ::google::protobuf::uint32 ScenePetServerData::skillmax() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.skillMax)
  return skillmax_;
}
inline void ScenePetServerData::set_skillmax(::google::protobuf::uint32 value) {
  set_has_skillmax();
  skillmax_ = value;
  // @@protoc_insertion_point(field_set:ScenePetServerData.skillMax)
}

// optional uint32 create_item_id = 17;
inline bool ScenePetServerData::has_create_item_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ScenePetServerData::set_has_create_item_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ScenePetServerData::clear_has_create_item_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ScenePetServerData::clear_create_item_id() {
  create_item_id_ = 0u;
  clear_has_create_item_id();
}
inline ::google::protobuf::uint32 ScenePetServerData::create_item_id() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.create_item_id)
  return create_item_id_;
}
inline void ScenePetServerData::set_create_item_id(::google::protobuf::uint32 value) {
  set_has_create_item_id();
  create_item_id_ = value;
  // @@protoc_insertion_point(field_set:ScenePetServerData.create_item_id)
}

// repeated uint32 ai = 9 [packed = true];
inline int ScenePetServerData::ai_size() const {
  return ai_.size();
}
inline void ScenePetServerData::clear_ai() {
  ai_.Clear();
}
inline ::google::protobuf::uint32 ScenePetServerData::ai(int index) const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.ai)
  return ai_.Get(index);
}
inline void ScenePetServerData::set_ai(int index, ::google::protobuf::uint32 value) {
  ai_.Set(index, value);
  // @@protoc_insertion_point(field_set:ScenePetServerData.ai)
}
inline void ScenePetServerData::add_ai(::google::protobuf::uint32 value) {
  ai_.Add(value);
  // @@protoc_insertion_point(field_add:ScenePetServerData.ai)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePetServerData::ai() const {
  // @@protoc_insertion_point(field_list:ScenePetServerData.ai)
  return ai_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePetServerData::mutable_ai() {
  // @@protoc_insertion_point(field_mutable_list:ScenePetServerData.ai)
  return &ai_;
}

// optional uint32 initLevel = 10;
inline bool ScenePetServerData::has_initlevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ScenePetServerData::set_has_initlevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ScenePetServerData::clear_has_initlevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ScenePetServerData::clear_initlevel() {
  initlevel_ = 0u;
  clear_has_initlevel();
}
inline ::google::protobuf::uint32 ScenePetServerData::initlevel() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.initLevel)
  return initlevel_;
}
inline void ScenePetServerData::set_initlevel(::google::protobuf::uint32 value) {
  set_has_initlevel();
  initlevel_ = value;
  // @@protoc_insertion_point(field_set:ScenePetServerData.initLevel)
}

// repeated uint32 intiAttr = 11 [packed = true];
inline int ScenePetServerData::intiattr_size() const {
  return intiattr_.size();
}
inline void ScenePetServerData::clear_intiattr() {
  intiattr_.Clear();
}
inline ::google::protobuf::uint32 ScenePetServerData::intiattr(int index) const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.intiAttr)
  return intiattr_.Get(index);
}
inline void ScenePetServerData::set_intiattr(int index, ::google::protobuf::uint32 value) {
  intiattr_.Set(index, value);
  // @@protoc_insertion_point(field_set:ScenePetServerData.intiAttr)
}
inline void ScenePetServerData::add_intiattr(::google::protobuf::uint32 value) {
  intiattr_.Add(value);
  // @@protoc_insertion_point(field_add:ScenePetServerData.intiAttr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePetServerData::intiattr() const {
  // @@protoc_insertion_point(field_list:ScenePetServerData.intiAttr)
  return intiattr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePetServerData::mutable_intiattr() {
  // @@protoc_insertion_point(field_mutable_list:ScenePetServerData.intiAttr)
  return &intiattr_;
}

// optional uint32 retrnAptiLevel = 12;
inline bool ScenePetServerData::has_retrnaptilevel() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ScenePetServerData::set_has_retrnaptilevel() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ScenePetServerData::clear_has_retrnaptilevel() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ScenePetServerData::clear_retrnaptilevel() {
  retrnaptilevel_ = 0u;
  clear_has_retrnaptilevel();
}
inline ::google::protobuf::uint32 ScenePetServerData::retrnaptilevel() const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.retrnAptiLevel)
  return retrnaptilevel_;
}
inline void ScenePetServerData::set_retrnaptilevel(::google::protobuf::uint32 value) {
  set_has_retrnaptilevel();
  retrnaptilevel_ = value;
  // @@protoc_insertion_point(field_set:ScenePetServerData.retrnAptiLevel)
}

// repeated uint32 retrnApti = 13 [packed = true];
inline int ScenePetServerData::retrnapti_size() const {
  return retrnapti_.size();
}
inline void ScenePetServerData::clear_retrnapti() {
  retrnapti_.Clear();
}
inline ::google::protobuf::uint32 ScenePetServerData::retrnapti(int index) const {
  // @@protoc_insertion_point(field_get:ScenePetServerData.retrnApti)
  return retrnapti_.Get(index);
}
inline void ScenePetServerData::set_retrnapti(int index, ::google::protobuf::uint32 value) {
  retrnapti_.Set(index, value);
  // @@protoc_insertion_point(field_set:ScenePetServerData.retrnApti)
}
inline void ScenePetServerData::add_retrnapti(::google::protobuf::uint32 value) {
  retrnapti_.Add(value);
  // @@protoc_insertion_point(field_add:ScenePetServerData.retrnApti)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePetServerData::retrnapti() const {
  // @@protoc_insertion_point(field_list:ScenePetServerData.retrnApti)
  return retrnapti_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePetServerData::mutable_retrnapti() {
  // @@protoc_insertion_point(field_mutable_list:ScenePetServerData.retrnApti)
  return &retrnapti_;
}

// -------------------------------------------------------------------

// optionBaseAutoTeamMember

// optional uint32 charid = 1;
inline bool optionBaseAutoTeamMember::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void optionBaseAutoTeamMember::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void optionBaseAutoTeamMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void optionBaseAutoTeamMember::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 optionBaseAutoTeamMember::charid() const {
  // @@protoc_insertion_point(field_get:optionBaseAutoTeamMember.charid)
  return charid_;
}
inline void optionBaseAutoTeamMember::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:optionBaseAutoTeamMember.charid)
}

// optional string name = 2;
inline bool optionBaseAutoTeamMember::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void optionBaseAutoTeamMember::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void optionBaseAutoTeamMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void optionBaseAutoTeamMember::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& optionBaseAutoTeamMember::name() const {
  // @@protoc_insertion_point(field_get:optionBaseAutoTeamMember.name)
  return *name_;
}
inline void optionBaseAutoTeamMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:optionBaseAutoTeamMember.name)
}
inline void optionBaseAutoTeamMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:optionBaseAutoTeamMember.name)
}
inline void optionBaseAutoTeamMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:optionBaseAutoTeamMember.name)
}
inline ::std::string* optionBaseAutoTeamMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:optionBaseAutoTeamMember.name)
  return name_;
}
inline ::std::string* optionBaseAutoTeamMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void optionBaseAutoTeamMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:optionBaseAutoTeamMember.name)
}

// -------------------------------------------------------------------

// stOptionBase

// optional bool allowTeam = 1 [default = true];
inline bool stOptionBase::has_allowteam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stOptionBase::set_has_allowteam() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stOptionBase::clear_has_allowteam() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stOptionBase::clear_allowteam() {
  allowteam_ = true;
  clear_has_allowteam();
}
inline bool stOptionBase::allowteam() const {
  // @@protoc_insertion_point(field_get:stOptionBase.allowTeam)
  return allowteam_;
}
inline void stOptionBase::set_allowteam(bool value) {
  set_has_allowteam();
  allowteam_ = value;
  // @@protoc_insertion_point(field_set:stOptionBase.allowTeam)
}

// optional bool allowTrade = 2 [default = true];
inline bool stOptionBase::has_allowtrade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stOptionBase::set_has_allowtrade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stOptionBase::clear_has_allowtrade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stOptionBase::clear_allowtrade() {
  allowtrade_ = true;
  clear_has_allowtrade();
}
inline bool stOptionBase::allowtrade() const {
  // @@protoc_insertion_point(field_get:stOptionBase.allowTrade)
  return allowtrade_;
}
inline void stOptionBase::set_allowtrade(bool value) {
  set_has_allowtrade();
  allowtrade_ = value;
  // @@protoc_insertion_point(field_set:stOptionBase.allowTrade)
}

// optional bool allowSept = 3 [default = true];
inline bool stOptionBase::has_allowsept() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stOptionBase::set_has_allowsept() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stOptionBase::clear_has_allowsept() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stOptionBase::clear_allowsept() {
  allowsept_ = true;
  clear_has_allowsept();
}
inline bool stOptionBase::allowsept() const {
  // @@protoc_insertion_point(field_get:stOptionBase.allowSept)
  return allowsept_;
}
inline void stOptionBase::set_allowsept(bool value) {
  set_has_allowsept();
  allowsept_ = value;
  // @@protoc_insertion_point(field_set:stOptionBase.allowSept)
}

// optional bool allowGang = 4 [default = true];
inline bool stOptionBase::has_allowgang() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stOptionBase::set_has_allowgang() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stOptionBase::clear_has_allowgang() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stOptionBase::clear_allowgang() {
  allowgang_ = true;
  clear_has_allowgang();
}
inline bool stOptionBase::allowgang() const {
  // @@protoc_insertion_point(field_get:stOptionBase.allowGang)
  return allowgang_;
}
inline void stOptionBase::set_allowgang(bool value) {
  set_has_allowgang();
  allowgang_ = value;
  // @@protoc_insertion_point(field_set:stOptionBase.allowGang)
}

// optional bool allowFriend = 5 [default = true];
inline bool stOptionBase::has_allowfriend() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stOptionBase::set_has_allowfriend() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stOptionBase::clear_has_allowfriend() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stOptionBase::clear_allowfriend() {
  allowfriend_ = true;
  clear_has_allowfriend();
}
inline bool stOptionBase::allowfriend() const {
  // @@protoc_insertion_point(field_get:stOptionBase.allowFriend)
  return allowfriend_;
}
inline void stOptionBase::set_allowfriend(bool value) {
  set_has_allowfriend();
  allowfriend_ = value;
  // @@protoc_insertion_point(field_set:stOptionBase.allowFriend)
}

// optional bool allowBanName = 6 [default = true];
inline bool stOptionBase::has_allowbanname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stOptionBase::set_has_allowbanname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stOptionBase::clear_has_allowbanname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stOptionBase::clear_allowbanname() {
  allowbanname_ = true;
  clear_has_allowbanname();
}
inline bool stOptionBase::allowbanname() const {
  // @@protoc_insertion_point(field_get:stOptionBase.allowBanName)
  return allowbanname_;
}
inline void stOptionBase::set_allowbanname(bool value) {
  set_has_allowbanname();
  allowbanname_ = value;
  // @@protoc_insertion_point(field_set:stOptionBase.allowBanName)
}

// optional bool allowintoteam = 7 [default = false];
inline bool stOptionBase::has_allowintoteam() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stOptionBase::set_has_allowintoteam() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stOptionBase::clear_has_allowintoteam() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stOptionBase::clear_allowintoteam() {
  allowintoteam_ = false;
  clear_has_allowintoteam();
}
inline bool stOptionBase::allowintoteam() const {
  // @@protoc_insertion_point(field_get:stOptionBase.allowintoteam)
  return allowintoteam_;
}
inline void stOptionBase::set_allowintoteam(bool value) {
  set_has_allowintoteam();
  allowintoteam_ = value;
  // @@protoc_insertion_point(field_set:stOptionBase.allowintoteam)
}

// optional uint32 intoteam_level = 8 [default = 0];
inline bool stOptionBase::has_intoteam_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stOptionBase::set_has_intoteam_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stOptionBase::clear_has_intoteam_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stOptionBase::clear_intoteam_level() {
  intoteam_level_ = 0u;
  clear_has_intoteam_level();
}
inline ::google::protobuf::uint32 stOptionBase::intoteam_level() const {
  // @@protoc_insertion_point(field_get:stOptionBase.intoteam_level)
  return intoteam_level_;
}
inline void stOptionBase::set_intoteam_level(::google::protobuf::uint32 value) {
  set_has_intoteam_level();
  intoteam_level_ = value;
  // @@protoc_insertion_point(field_set:stOptionBase.intoteam_level)
}

// repeated .optionBaseAutoTeamMember teammember = 9;
inline int stOptionBase::teammember_size() const {
  return teammember_.size();
}
inline void stOptionBase::clear_teammember() {
  teammember_.Clear();
}
inline const ::optionBaseAutoTeamMember& stOptionBase::teammember(int index) const {
  // @@protoc_insertion_point(field_get:stOptionBase.teammember)
  return teammember_.Get(index);
}
inline ::optionBaseAutoTeamMember* stOptionBase::mutable_teammember(int index) {
  // @@protoc_insertion_point(field_mutable:stOptionBase.teammember)
  return teammember_.Mutable(index);
}
inline ::optionBaseAutoTeamMember* stOptionBase::add_teammember() {
  // @@protoc_insertion_point(field_add:stOptionBase.teammember)
  return teammember_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::optionBaseAutoTeamMember >&
stOptionBase::teammember() const {
  // @@protoc_insertion_point(field_list:stOptionBase.teammember)
  return teammember_;
}
inline ::google::protobuf::RepeatedPtrField< ::optionBaseAutoTeamMember >*
stOptionBase::mutable_teammember() {
  // @@protoc_insertion_point(field_mutable_list:stOptionBase.teammember)
  return &teammember_;
}

// optional bool autoride = 10 [default = true];
inline bool stOptionBase::has_autoride() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void stOptionBase::set_has_autoride() {
  _has_bits_[0] |= 0x00000200u;
}
inline void stOptionBase::clear_has_autoride() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void stOptionBase::clear_autoride() {
  autoride_ = true;
  clear_has_autoride();
}
inline bool stOptionBase::autoride() const {
  // @@protoc_insertion_point(field_get:stOptionBase.autoride)
  return autoride_;
}
inline void stOptionBase::set_autoride(bool value) {
  set_has_autoride();
  autoride_ = value;
  // @@protoc_insertion_point(field_set:stOptionBase.autoride)
}

// -------------------------------------------------------------------

// stDayHonor

// optional uint32 honor = 1;
inline bool stDayHonor::has_honor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stDayHonor::set_has_honor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stDayHonor::clear_has_honor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stDayHonor::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 stDayHonor::honor() const {
  // @@protoc_insertion_point(field_get:stDayHonor.honor)
  return honor_;
}
inline void stDayHonor::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
  // @@protoc_insertion_point(field_set:stDayHonor.honor)
}

// optional uint32 time = 2;
inline bool stDayHonor::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stDayHonor::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stDayHonor::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stDayHonor::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 stDayHonor::time() const {
  // @@protoc_insertion_point(field_get:stDayHonor.time)
  return time_;
}
inline void stDayHonor::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:stDayHonor.time)
}

// -------------------------------------------------------------------

// stHonorKill

// optional uint32 revenUserId = 1;
inline bool stHonorKill::has_revenuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stHonorKill::set_has_revenuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stHonorKill::clear_has_revenuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stHonorKill::clear_revenuserid() {
  revenuserid_ = 0u;
  clear_has_revenuserid();
}
inline ::google::protobuf::uint32 stHonorKill::revenuserid() const {
  // @@protoc_insertion_point(field_get:stHonorKill.revenUserId)
  return revenuserid_;
}
inline void stHonorKill::set_revenuserid(::google::protobuf::uint32 value) {
  set_has_revenuserid();
  revenuserid_ = value;
  // @@protoc_insertion_point(field_set:stHonorKill.revenUserId)
}

// optional uint32 honorKillTime = 2;
inline bool stHonorKill::has_honorkilltime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stHonorKill::set_has_honorkilltime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stHonorKill::clear_has_honorkilltime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stHonorKill::clear_honorkilltime() {
  honorkilltime_ = 0u;
  clear_has_honorkilltime();
}
inline ::google::protobuf::uint32 stHonorKill::honorkilltime() const {
  // @@protoc_insertion_point(field_get:stHonorKill.honorKillTime)
  return honorkilltime_;
}
inline void stHonorKill::set_honorkilltime(::google::protobuf::uint32 value) {
  set_has_honorkilltime();
  honorkilltime_ = value;
  // @@protoc_insertion_point(field_set:stHonorKill.honorKillTime)
}

// optional uint32 revenKillTime = 3;
inline bool stHonorKill::has_revenkilltime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stHonorKill::set_has_revenkilltime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stHonorKill::clear_has_revenkilltime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stHonorKill::clear_revenkilltime() {
  revenkilltime_ = 0u;
  clear_has_revenkilltime();
}
inline ::google::protobuf::uint32 stHonorKill::revenkilltime() const {
  // @@protoc_insertion_point(field_get:stHonorKill.revenKillTime)
  return revenkilltime_;
}
inline void stHonorKill::set_revenkilltime(::google::protobuf::uint32 value) {
  set_has_revenkilltime();
  revenkilltime_ = value;
  // @@protoc_insertion_point(field_set:stHonorKill.revenKillTime)
}

// optional uint32 killCounter = 4;
inline bool stHonorKill::has_killcounter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stHonorKill::set_has_killcounter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stHonorKill::clear_has_killcounter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stHonorKill::clear_killcounter() {
  killcounter_ = 0u;
  clear_has_killcounter();
}
inline ::google::protobuf::uint32 stHonorKill::killcounter() const {
  // @@protoc_insertion_point(field_get:stHonorKill.killCounter)
  return killcounter_;
}
inline void stHonorKill::set_killcounter(::google::protobuf::uint32 value) {
  set_has_killcounter();
  killcounter_ = value;
  // @@protoc_insertion_point(field_set:stHonorKill.killCounter)
}

// -------------------------------------------------------------------

// stHonorData

// optional uint32 honor = 1;
inline bool stHonorData::has_honor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stHonorData::set_has_honor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stHonorData::clear_has_honor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stHonorData::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 stHonorData::honor() const {
  // @@protoc_insertion_point(field_get:stHonorData.honor)
  return honor_;
}
inline void stHonorData::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
  // @@protoc_insertion_point(field_set:stHonorData.honor)
}

// -------------------------------------------------------------------

// stHonorLimit

// optional uint32 mapid = 1;
inline bool stHonorLimit::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stHonorLimit::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stHonorLimit::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stHonorLimit::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 stHonorLimit::mapid() const {
  // @@protoc_insertion_point(field_get:stHonorLimit.mapid)
  return mapid_;
}
inline void stHonorLimit::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:stHonorLimit.mapid)
}

// optional uint32 charid = 2;
inline bool stHonorLimit::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stHonorLimit::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stHonorLimit::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stHonorLimit::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 stHonorLimit::charid() const {
  // @@protoc_insertion_point(field_get:stHonorLimit.charid)
  return charid_;
}
inline void stHonorLimit::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:stHonorLimit.charid)
}

// optional uint32 killtime = 3;
inline bool stHonorLimit::has_killtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stHonorLimit::set_has_killtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stHonorLimit::clear_has_killtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stHonorLimit::clear_killtime() {
  killtime_ = 0u;
  clear_has_killtime();
}
inline ::google::protobuf::uint32 stHonorLimit::killtime() const {
  // @@protoc_insertion_point(field_get:stHonorLimit.killtime)
  return killtime_;
}
inline void stHonorLimit::set_killtime(::google::protobuf::uint32 value) {
  set_has_killtime();
  killtime_ = value;
  // @@protoc_insertion_point(field_set:stHonorLimit.killtime)
}

// -------------------------------------------------------------------

// stAddPointLimit

// optional uint32 charid = 1;
inline bool stAddPointLimit::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stAddPointLimit::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stAddPointLimit::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stAddPointLimit::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 stAddPointLimit::charid() const {
  // @@protoc_insertion_point(field_get:stAddPointLimit.charid)
  return charid_;
}
inline void stAddPointLimit::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:stAddPointLimit.charid)
}

// optional uint32 add_time = 2;
inline bool stAddPointLimit::has_add_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stAddPointLimit::set_has_add_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stAddPointLimit::clear_has_add_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stAddPointLimit::clear_add_time() {
  add_time_ = 0u;
  clear_has_add_time();
}
inline ::google::protobuf::uint32 stAddPointLimit::add_time() const {
  // @@protoc_insertion_point(field_get:stAddPointLimit.add_time)
  return add_time_;
}
inline void stAddPointLimit::set_add_time(::google::protobuf::uint32 value) {
  set_has_add_time();
  add_time_ = value;
  // @@protoc_insertion_point(field_set:stAddPointLimit.add_time)
}

// -------------------------------------------------------------------

// SaveGuard

// optional uint32 cartBaseId = 1;
inline bool SaveGuard::has_cartbaseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveGuard::set_has_cartbaseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveGuard::clear_has_cartbaseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveGuard::clear_cartbaseid() {
  cartbaseid_ = 0u;
  clear_has_cartbaseid();
}
inline ::google::protobuf::uint32 SaveGuard::cartbaseid() const {
  // @@protoc_insertion_point(field_get:SaveGuard.cartBaseId)
  return cartbaseid_;
}
inline void SaveGuard::set_cartbaseid(::google::protobuf::uint32 value) {
  set_has_cartbaseid();
  cartbaseid_ = value;
  // @@protoc_insertion_point(field_set:SaveGuard.cartBaseId)
}

// optional uint32 cartTmpId = 2;
inline bool SaveGuard::has_carttmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SaveGuard::set_has_carttmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SaveGuard::clear_has_carttmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SaveGuard::clear_carttmpid() {
  carttmpid_ = 0u;
  clear_has_carttmpid();
}
inline ::google::protobuf::uint32 SaveGuard::carttmpid() const {
  // @@protoc_insertion_point(field_get:SaveGuard.cartTmpId)
  return carttmpid_;
}
inline void SaveGuard::set_carttmpid(::google::protobuf::uint32 value) {
  set_has_carttmpid();
  carttmpid_ = value;
  // @@protoc_insertion_point(field_set:SaveGuard.cartTmpId)
}

// optional uint32 cartSceneId = 3;
inline bool SaveGuard::has_cartsceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SaveGuard::set_has_cartsceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SaveGuard::clear_has_cartsceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SaveGuard::clear_cartsceneid() {
  cartsceneid_ = 0u;
  clear_has_cartsceneid();
}
inline ::google::protobuf::uint32 SaveGuard::cartsceneid() const {
  // @@protoc_insertion_point(field_get:SaveGuard.cartSceneId)
  return cartsceneid_;
}
inline void SaveGuard::set_cartsceneid(::google::protobuf::uint32 value) {
  set_has_cartsceneid();
  cartsceneid_ = value;
  // @@protoc_insertion_point(field_set:SaveGuard.cartSceneId)
}

// optional uint32 cartTimeEnd = 4;
inline bool SaveGuard::has_carttimeend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SaveGuard::set_has_carttimeend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SaveGuard::clear_has_carttimeend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SaveGuard::clear_carttimeend() {
  carttimeend_ = 0u;
  clear_has_carttimeend();
}
inline ::google::protobuf::uint32 SaveGuard::carttimeend() const {
  // @@protoc_insertion_point(field_get:SaveGuard.cartTimeEnd)
  return carttimeend_;
}
inline void SaveGuard::set_carttimeend(::google::protobuf::uint32 value) {
  set_has_carttimeend();
  carttimeend_ = value;
  // @@protoc_insertion_point(field_set:SaveGuard.cartTimeEnd)
}

// -------------------------------------------------------------------

// SaveDropIncreaseTime

// optional uint32 timeLeftForIncRate = 1;
inline bool SaveDropIncreaseTime::has_timeleftforincrate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveDropIncreaseTime::set_has_timeleftforincrate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveDropIncreaseTime::clear_has_timeleftforincrate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveDropIncreaseTime::clear_timeleftforincrate() {
  timeleftforincrate_ = 0u;
  clear_has_timeleftforincrate();
}
inline ::google::protobuf::uint32 SaveDropIncreaseTime::timeleftforincrate() const {
  // @@protoc_insertion_point(field_get:SaveDropIncreaseTime.timeLeftForIncRate)
  return timeleftforincrate_;
}
inline void SaveDropIncreaseTime::set_timeleftforincrate(::google::protobuf::uint32 value) {
  set_has_timeleftforincrate();
  timeleftforincrate_ = value;
  // @@protoc_insertion_point(field_set:SaveDropIncreaseTime.timeLeftForIncRate)
}

// optional uint32 savetime = 2;
inline bool SaveDropIncreaseTime::has_savetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SaveDropIncreaseTime::set_has_savetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SaveDropIncreaseTime::clear_has_savetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SaveDropIncreaseTime::clear_savetime() {
  savetime_ = 0u;
  clear_has_savetime();
}
inline ::google::protobuf::uint32 SaveDropIncreaseTime::savetime() const {
  // @@protoc_insertion_point(field_get:SaveDropIncreaseTime.savetime)
  return savetime_;
}
inline void SaveDropIncreaseTime::set_savetime(::google::protobuf::uint32 value) {
  set_has_savetime();
  savetime_ = value;
  // @@protoc_insertion_point(field_set:SaveDropIncreaseTime.savetime)
}

// -------------------------------------------------------------------

// stAccelKey

// optional uint32 type = 1;
inline bool stAccelKey::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stAccelKey::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stAccelKey::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stAccelKey::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 stAccelKey::type() const {
  // @@protoc_insertion_point(field_get:stAccelKey.type)
  return type_;
}
inline void stAccelKey::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:stAccelKey.type)
}

// optional uint32 eAccelType = 2;
inline bool stAccelKey::has_eacceltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stAccelKey::set_has_eacceltype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stAccelKey::clear_has_eacceltype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stAccelKey::clear_eacceltype() {
  eacceltype_ = 0u;
  clear_has_eacceltype();
}
inline ::google::protobuf::uint32 stAccelKey::eacceltype() const {
  // @@protoc_insertion_point(field_get:stAccelKey.eAccelType)
  return eacceltype_;
}
inline void stAccelKey::set_eacceltype(::google::protobuf::uint32 value) {
  set_has_eacceltype();
  eacceltype_ = value;
  // @@protoc_insertion_point(field_set:stAccelKey.eAccelType)
}

// optional uint32 dwID = 3;
inline bool stAccelKey::has_dwid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stAccelKey::set_has_dwid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stAccelKey::clear_has_dwid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stAccelKey::clear_dwid() {
  dwid_ = 0u;
  clear_has_dwid();
}
inline ::google::protobuf::uint32 stAccelKey::dwid() const {
  // @@protoc_insertion_point(field_get:stAccelKey.dwID)
  return dwid_;
}
inline void stAccelKey::set_dwid(::google::protobuf::uint32 value) {
  set_has_dwid();
  dwid_ = value;
  // @@protoc_insertion_point(field_set:stAccelKey.dwID)
}

// optional uint32 index = 4;
inline bool stAccelKey::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stAccelKey::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stAccelKey::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stAccelKey::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 stAccelKey::index() const {
  // @@protoc_insertion_point(field_get:stAccelKey.index)
  return index_;
}
inline void stAccelKey::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:stAccelKey.index)
}

// -------------------------------------------------------------------

// stMapTermData

// optional uint32 mapid = 1;
inline bool stMapTermData::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stMapTermData::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stMapTermData::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stMapTermData::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 stMapTermData::mapid() const {
  // @@protoc_insertion_point(field_get:stMapTermData.mapid)
  return mapid_;
}
inline void stMapTermData::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:stMapTermData.mapid)
}

// optional uint32 time = 2;
inline bool stMapTermData::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stMapTermData::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stMapTermData::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stMapTermData::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 stMapTermData::time() const {
  // @@protoc_insertion_point(field_get:stMapTermData.time)
  return time_;
}
inline void stMapTermData::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:stMapTermData.time)
}

// -------------------------------------------------------------------

// OrderSysPresent

// repeated uint32 orderid = 1;
inline int OrderSysPresent::orderid_size() const {
  return orderid_.size();
}
inline void OrderSysPresent::clear_orderid() {
  orderid_.Clear();
}
inline ::google::protobuf::uint32 OrderSysPresent::orderid(int index) const {
  // @@protoc_insertion_point(field_get:OrderSysPresent.orderid)
  return orderid_.Get(index);
}
inline void OrderSysPresent::set_orderid(int index, ::google::protobuf::uint32 value) {
  orderid_.Set(index, value);
  // @@protoc_insertion_point(field_set:OrderSysPresent.orderid)
}
inline void OrderSysPresent::add_orderid(::google::protobuf::uint32 value) {
  orderid_.Add(value);
  // @@protoc_insertion_point(field_add:OrderSysPresent.orderid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OrderSysPresent::orderid() const {
  // @@protoc_insertion_point(field_list:OrderSysPresent.orderid)
  return orderid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OrderSysPresent::mutable_orderid() {
  // @@protoc_insertion_point(field_mutable_list:OrderSysPresent.orderid)
  return &orderid_;
}

// -------------------------------------------------------------------

// UserCopyID

// optional .enumCopySceneType type = 1 [default = enumCopyScene_None];
inline bool UserCopyID::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCopyID::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCopyID::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCopyID::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::enumCopySceneType UserCopyID::type() const {
  // @@protoc_insertion_point(field_get:UserCopyID.type)
  return static_cast< ::enumCopySceneType >(type_);
}
inline void UserCopyID::set_type(::enumCopySceneType value) {
  assert(::enumCopySceneType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:UserCopyID.type)
}

// optional uint32 copytypeid = 2;
inline bool UserCopyID::has_copytypeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCopyID::set_has_copytypeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCopyID::clear_has_copytypeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCopyID::clear_copytypeid() {
  copytypeid_ = 0u;
  clear_has_copytypeid();
}
inline ::google::protobuf::uint32 UserCopyID::copytypeid() const {
  // @@protoc_insertion_point(field_get:UserCopyID.copytypeid)
  return copytypeid_;
}
inline void UserCopyID::set_copytypeid(::google::protobuf::uint32 value) {
  set_has_copytypeid();
  copytypeid_ = value;
  // @@protoc_insertion_point(field_set:UserCopyID.copytypeid)
}

// optional uint32 copyid = 3;
inline bool UserCopyID::has_copyid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCopyID::set_has_copyid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserCopyID::clear_has_copyid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserCopyID::clear_copyid() {
  copyid_ = 0u;
  clear_has_copyid();
}
inline ::google::protobuf::uint32 UserCopyID::copyid() const {
  // @@protoc_insertion_point(field_get:UserCopyID.copyid)
  return copyid_;
}
inline void UserCopyID::set_copyid(::google::protobuf::uint32 value) {
  set_has_copyid();
  copyid_ = value;
  // @@protoc_insertion_point(field_set:UserCopyID.copyid)
}

// -------------------------------------------------------------------

// UserCopyTimes

// optional .enumCopySceneType type = 1 [default = enumCopyScene_None];
inline bool UserCopyTimes::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCopyTimes::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCopyTimes::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCopyTimes::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::enumCopySceneType UserCopyTimes::type() const {
  // @@protoc_insertion_point(field_get:UserCopyTimes.type)
  return static_cast< ::enumCopySceneType >(type_);
}
inline void UserCopyTimes::set_type(::enumCopySceneType value) {
  assert(::enumCopySceneType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:UserCopyTimes.type)
}

// optional uint32 copytypeid = 4;
inline bool UserCopyTimes::has_copytypeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCopyTimes::set_has_copytypeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCopyTimes::clear_has_copytypeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCopyTimes::clear_copytypeid() {
  copytypeid_ = 0u;
  clear_has_copytypeid();
}
inline ::google::protobuf::uint32 UserCopyTimes::copytypeid() const {
  // @@protoc_insertion_point(field_get:UserCopyTimes.copytypeid)
  return copytypeid_;
}
inline void UserCopyTimes::set_copytypeid(::google::protobuf::uint32 value) {
  set_has_copytypeid();
  copytypeid_ = value;
  // @@protoc_insertion_point(field_set:UserCopyTimes.copytypeid)
}

// optional uint32 time = 2;
inline bool UserCopyTimes::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCopyTimes::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserCopyTimes::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserCopyTimes::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 UserCopyTimes::time() const {
  // @@protoc_insertion_point(field_get:UserCopyTimes.time)
  return time_;
}
inline void UserCopyTimes::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:UserCopyTimes.time)
}

// optional .TimeCycle cyctype = 3 [default = TimeCycle_None];
inline bool UserCopyTimes::has_cyctype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserCopyTimes::set_has_cyctype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserCopyTimes::clear_has_cyctype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserCopyTimes::clear_cyctype() {
  cyctype_ = 0;
  clear_has_cyctype();
}
inline ::TimeCycle UserCopyTimes::cyctype() const {
  // @@protoc_insertion_point(field_get:UserCopyTimes.cyctype)
  return static_cast< ::TimeCycle >(cyctype_);
}
inline void UserCopyTimes::set_cyctype(::TimeCycle value) {
  assert(::TimeCycle_IsValid(value));
  set_has_cyctype();
  cyctype_ = value;
  // @@protoc_insertion_point(field_set:UserCopyTimes.cyctype)
}

// optional uint32 state = 5;
inline bool UserCopyTimes::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserCopyTimes::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserCopyTimes::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserCopyTimes::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 UserCopyTimes::state() const {
  // @@protoc_insertion_point(field_get:UserCopyTimes.state)
  return state_;
}
inline void UserCopyTimes::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:UserCopyTimes.state)
}

// -------------------------------------------------------------------

// UserCopyScore

// optional .enumCopySceneType type = 1 [default = enumCopyScene_None];
inline bool UserCopyScore::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCopyScore::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCopyScore::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCopyScore::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::enumCopySceneType UserCopyScore::type() const {
  // @@protoc_insertion_point(field_get:UserCopyScore.type)
  return static_cast< ::enumCopySceneType >(type_);
}
inline void UserCopyScore::set_type(::enumCopySceneType value) {
  assert(::enumCopySceneType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:UserCopyScore.type)
}

// optional uint32 copytypeid = 5;
inline bool UserCopyScore::has_copytypeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCopyScore::set_has_copytypeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCopyScore::clear_has_copytypeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCopyScore::clear_copytypeid() {
  copytypeid_ = 0u;
  clear_has_copytypeid();
}
inline ::google::protobuf::uint32 UserCopyScore::copytypeid() const {
  // @@protoc_insertion_point(field_get:UserCopyScore.copytypeid)
  return copytypeid_;
}
inline void UserCopyScore::set_copytypeid(::google::protobuf::uint32 value) {
  set_has_copytypeid();
  copytypeid_ = value;
  // @@protoc_insertion_point(field_set:UserCopyScore.copytypeid)
}

// optional uint32 score = 2;
inline bool UserCopyScore::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCopyScore::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserCopyScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserCopyScore::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 UserCopyScore::score() const {
  // @@protoc_insertion_point(field_get:UserCopyScore.score)
  return score_;
}
inline void UserCopyScore::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:UserCopyScore.score)
}

// optional uint32 number = 3;
inline bool UserCopyScore::has_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserCopyScore::set_has_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserCopyScore::clear_has_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserCopyScore::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 UserCopyScore::number() const {
  // @@protoc_insertion_point(field_get:UserCopyScore.number)
  return number_;
}
inline void UserCopyScore::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:UserCopyScore.number)
}

// optional .TimeCycle cyctype = 4 [default = TimeCycle_None];
inline bool UserCopyScore::has_cyctype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserCopyScore::set_has_cyctype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserCopyScore::clear_has_cyctype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserCopyScore::clear_cyctype() {
  cyctype_ = 0;
  clear_has_cyctype();
}
inline ::TimeCycle UserCopyScore::cyctype() const {
  // @@protoc_insertion_point(field_get:UserCopyScore.cyctype)
  return static_cast< ::TimeCycle >(cyctype_);
}
inline void UserCopyScore::set_cyctype(::TimeCycle value) {
  assert(::TimeCycle_IsValid(value));
  set_has_cyctype();
  cyctype_ = value;
  // @@protoc_insertion_point(field_set:UserCopyScore.cyctype)
}

// -------------------------------------------------------------------

// UserCopySceneTimes

// optional uint32 teammonster = 1;
inline bool UserCopySceneTimes::has_teammonster() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCopySceneTimes::set_has_teammonster() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCopySceneTimes::clear_has_teammonster() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCopySceneTimes::clear_teammonster() {
  teammonster_ = 0u;
  clear_has_teammonster();
}
inline ::google::protobuf::uint32 UserCopySceneTimes::teammonster() const {
  // @@protoc_insertion_point(field_get:UserCopySceneTimes.teammonster)
  return teammonster_;
}
inline void UserCopySceneTimes::set_teammonster(::google::protobuf::uint32 value) {
  set_has_teammonster();
  teammonster_ = value;
  // @@protoc_insertion_point(field_set:UserCopySceneTimes.teammonster)
}

// -------------------------------------------------------------------

// SaveSkill

// required uint32 skillid = 1;
inline bool SaveSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 SaveSkill::skillid() const {
  // @@protoc_insertion_point(field_get:SaveSkill.skillid)
  return skillid_;
}
inline void SaveSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SaveSkill.skillid)
}

// required uint32 level = 2;
inline bool SaveSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SaveSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SaveSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SaveSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SaveSkill::level() const {
  // @@protoc_insertion_point(field_get:SaveSkill.level)
  return level_;
}
inline void SaveSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SaveSkill.level)
}

// -------------------------------------------------------------------

// BinarySaveSkill

// repeated .SaveSkill skills = 1;
inline int BinarySaveSkill::skills_size() const {
  return skills_.size();
}
inline void BinarySaveSkill::clear_skills() {
  skills_.Clear();
}
inline const ::SaveSkill& BinarySaveSkill::skills(int index) const {
  // @@protoc_insertion_point(field_get:BinarySaveSkill.skills)
  return skills_.Get(index);
}
inline ::SaveSkill* BinarySaveSkill::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:BinarySaveSkill.skills)
  return skills_.Mutable(index);
}
inline ::SaveSkill* BinarySaveSkill::add_skills() {
  // @@protoc_insertion_point(field_add:BinarySaveSkill.skills)
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SaveSkill >&
BinarySaveSkill::skills() const {
  // @@protoc_insertion_point(field_list:BinarySaveSkill.skills)
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::SaveSkill >*
BinarySaveSkill::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:BinarySaveSkill.skills)
  return &skills_;
}

// -------------------------------------------------------------------

// NoPropertyIconState

// optional uint32 stateid = 1;
inline bool NoPropertyIconState::has_stateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NoPropertyIconState::set_has_stateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NoPropertyIconState::clear_has_stateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NoPropertyIconState::clear_stateid() {
  stateid_ = 0u;
  clear_has_stateid();
}
inline ::google::protobuf::uint32 NoPropertyIconState::stateid() const {
  // @@protoc_insertion_point(field_get:NoPropertyIconState.stateid)
  return stateid_;
}
inline void NoPropertyIconState::set_stateid(::google::protobuf::uint32 value) {
  set_has_stateid();
  stateid_ = value;
  // @@protoc_insertion_point(field_set:NoPropertyIconState.stateid)
}

// optional uint32 endtime = 2 [default = 0];
inline bool NoPropertyIconState::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NoPropertyIconState::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NoPropertyIconState::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NoPropertyIconState::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 NoPropertyIconState::endtime() const {
  // @@protoc_insertion_point(field_get:NoPropertyIconState.endtime)
  return endtime_;
}
inline void NoPropertyIconState::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:NoPropertyIconState.endtime)
}

// -------------------------------------------------------------------

// SkillStatusElement_Pos

// optional uint32 x = 1;
inline bool SkillStatusElement_Pos::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillStatusElement_Pos::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillStatusElement_Pos::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillStatusElement_Pos::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 SkillStatusElement_Pos::x() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.Pos.x)
  return x_;
}
inline void SkillStatusElement_Pos::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.Pos.x)
}

// optional uint32 y = 2;
inline bool SkillStatusElement_Pos::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillStatusElement_Pos::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillStatusElement_Pos::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillStatusElement_Pos::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 SkillStatusElement_Pos::y() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.Pos.y)
  return y_;
}
inline void SkillStatusElement_Pos::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.Pos.y)
}

// -------------------------------------------------------------------

// SkillStatusElement

// optional uint64 keyid = 1;
inline bool SkillStatusElement::has_keyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillStatusElement::set_has_keyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillStatusElement::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillStatusElement::clear_keyid() {
  keyid_ = GOOGLE_ULONGLONG(0);
  clear_has_keyid();
}
inline ::google::protobuf::uint64 SkillStatusElement::keyid() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.keyid)
  return keyid_;
}
inline void SkillStatusElement::set_keyid(::google::protobuf::uint64 value) {
  set_has_keyid();
  keyid_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.keyid)
}

// optional uint32 skillid = 2;
inline bool SkillStatusElement::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillStatusElement::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillStatusElement::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillStatusElement::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 SkillStatusElement::skillid() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.skillid)
  return skillid_;
}
inline void SkillStatusElement::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.skillid)
}

// optional uint32 id = 3;
inline bool SkillStatusElement::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillStatusElement::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillStatusElement::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillStatusElement::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SkillStatusElement::id() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.id)
  return id_;
}
inline void SkillStatusElement::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.id)
}

// optional uint32 state = 4;
inline bool SkillStatusElement::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillStatusElement::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillStatusElement::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillStatusElement::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 SkillStatusElement::state() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.state)
  return state_;
}
inline void SkillStatusElement::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.state)
}

// optional uint32 percent = 5;
inline bool SkillStatusElement::has_percent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillStatusElement::set_has_percent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillStatusElement::clear_has_percent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillStatusElement::clear_percent() {
  percent_ = 0u;
  clear_has_percent();
}
inline ::google::protobuf::uint32 SkillStatusElement::percent() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.percent)
  return percent_;
}
inline void SkillStatusElement::set_percent(::google::protobuf::uint32 value) {
  set_has_percent();
  percent_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.percent)
}

// optional int32 value = 6;
inline bool SkillStatusElement::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillStatusElement::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillStatusElement::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillStatusElement::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 SkillStatusElement::value() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.value)
  return value_;
}
inline void SkillStatusElement::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.value)
}

// optional uint32 backvalue = 7;
inline bool SkillStatusElement::has_backvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillStatusElement::set_has_backvalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillStatusElement::clear_has_backvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillStatusElement::clear_backvalue() {
  backvalue_ = 0u;
  clear_has_backvalue();
}
inline ::google::protobuf::uint32 SkillStatusElement::backvalue() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.backvalue)
  return backvalue_;
}
inline void SkillStatusElement::set_backvalue(::google::protobuf::uint32 value) {
  set_has_backvalue();
  backvalue_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.backvalue)
}

// optional uint64 time = 8;
inline bool SkillStatusElement::has_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SkillStatusElement::set_has_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SkillStatusElement::clear_has_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SkillStatusElement::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 SkillStatusElement::time() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.time)
  return time_;
}
inline void SkillStatusElement::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.time)
}

// optional uint64 endtime = 9;
inline bool SkillStatusElement::has_endtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SkillStatusElement::set_has_endtime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SkillStatusElement::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SkillStatusElement::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 SkillStatusElement::endtime() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.endtime)
  return endtime_;
}
inline void SkillStatusElement::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.endtime)
}

// optional uint32 step = 10;
inline bool SkillStatusElement::has_step() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SkillStatusElement::set_has_step() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SkillStatusElement::clear_has_step() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SkillStatusElement::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 SkillStatusElement::step() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.step)
  return step_;
}
inline void SkillStatusElement::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.step)
}

// optional uint32 skillType = 11;
inline bool SkillStatusElement::has_skilltype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SkillStatusElement::set_has_skilltype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SkillStatusElement::clear_has_skilltype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SkillStatusElement::clear_skilltype() {
  skilltype_ = 0u;
  clear_has_skilltype();
}
inline ::google::protobuf::uint32 SkillStatusElement::skilltype() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.skillType)
  return skilltype_;
}
inline void SkillStatusElement::set_skilltype(::google::protobuf::uint32 value) {
  set_has_skilltype();
  skilltype_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.skillType)
}

// optional bool refresh = 12;
inline bool SkillStatusElement::has_refresh() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SkillStatusElement::set_has_refresh() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SkillStatusElement::clear_has_refresh() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SkillStatusElement::clear_refresh() {
  refresh_ = false;
  clear_has_refresh();
}
inline bool SkillStatusElement::refresh() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.refresh)
  return refresh_;
}
inline void SkillStatusElement::set_refresh(bool value) {
  set_has_refresh();
  refresh_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.refresh)
}

// optional uint32 dir = 13;
inline bool SkillStatusElement::has_dir() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SkillStatusElement::set_has_dir() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SkillStatusElement::clear_has_dir() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SkillStatusElement::clear_dir() {
  dir_ = 0u;
  clear_has_dir();
}
inline ::google::protobuf::uint32 SkillStatusElement::dir() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.dir)
  return dir_;
}
inline void SkillStatusElement::set_dir(::google::protobuf::uint32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.dir)
}

// optional .SkillStatusElement.Pos pos = 14;
inline bool SkillStatusElement::has_pos() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SkillStatusElement::set_has_pos() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SkillStatusElement::clear_has_pos() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SkillStatusElement::clear_pos() {
  if (pos_ != NULL) pos_->::SkillStatusElement_Pos::Clear();
  clear_has_pos();
}
inline const ::SkillStatusElement_Pos& SkillStatusElement::pos() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::SkillStatusElement_Pos* SkillStatusElement::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::SkillStatusElement_Pos;
  // @@protoc_insertion_point(field_mutable:SkillStatusElement.pos)
  return pos_;
}
inline ::SkillStatusElement_Pos* SkillStatusElement::release_pos() {
  clear_has_pos();
  ::SkillStatusElement_Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void SkillStatusElement::set_allocated_pos(::SkillStatusElement_Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:SkillStatusElement.pos)
}

// optional uint32 attackerID = 15;
inline bool SkillStatusElement::has_attackerid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SkillStatusElement::set_has_attackerid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SkillStatusElement::clear_has_attackerid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SkillStatusElement::clear_attackerid() {
  attackerid_ = 0u;
  clear_has_attackerid();
}
inline ::google::protobuf::uint32 SkillStatusElement::attackerid() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.attackerID)
  return attackerid_;
}
inline void SkillStatusElement::set_attackerid(::google::protobuf::uint32 value) {
  set_has_attackerid();
  attackerid_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.attackerID)
}

// optional uint32 attacktype = 16;
inline bool SkillStatusElement::has_attacktype() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SkillStatusElement::set_has_attacktype() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SkillStatusElement::clear_has_attacktype() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SkillStatusElement::clear_attacktype() {
  attacktype_ = 0u;
  clear_has_attacktype();
}
inline ::google::protobuf::uint32 SkillStatusElement::attacktype() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.attacktype)
  return attacktype_;
}
inline void SkillStatusElement::set_attacktype(::google::protobuf::uint32 value) {
  set_has_attacktype();
  attacktype_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.attacktype)
}

// optional uint32 targetID = 17;
inline bool SkillStatusElement::has_targetid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SkillStatusElement::set_has_targetid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SkillStatusElement::clear_has_targetid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SkillStatusElement::clear_targetid() {
  targetid_ = 0u;
  clear_has_targetid();
}
inline ::google::protobuf::uint32 SkillStatusElement::targetid() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.targetID)
  return targetid_;
}
inline void SkillStatusElement::set_targetid(::google::protobuf::uint32 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.targetID)
}

// optional uint32 targetType = 18;
inline bool SkillStatusElement::has_targettype() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SkillStatusElement::set_has_targettype() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SkillStatusElement::clear_has_targettype() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SkillStatusElement::clear_targettype() {
  targettype_ = 0u;
  clear_has_targettype();
}
inline ::google::protobuf::uint32 SkillStatusElement::targettype() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.targetType)
  return targettype_;
}
inline void SkillStatusElement::set_targettype(::google::protobuf::uint32 value) {
  set_has_targettype();
  targettype_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.targetType)
}

// optional uint32 layers = 19;
inline bool SkillStatusElement::has_layers() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SkillStatusElement::set_has_layers() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SkillStatusElement::clear_has_layers() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SkillStatusElement::clear_layers() {
  layers_ = 0u;
  clear_has_layers();
}
inline ::google::protobuf::uint32 SkillStatusElement::layers() const {
  // @@protoc_insertion_point(field_get:SkillStatusElement.layers)
  return layers_;
}
inline void SkillStatusElement::set_layers(::google::protobuf::uint32 value) {
  set_has_layers();
  layers_ = value;
  // @@protoc_insertion_point(field_set:SkillStatusElement.layers)
}

// -------------------------------------------------------------------

// ObjectLocation

// optional uint32 location = 1;
inline bool ObjectLocation::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectLocation::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectLocation::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectLocation::clear_location() {
  location_ = 0u;
  clear_has_location();
}
inline ::google::protobuf::uint32 ObjectLocation::location() const {
  // @@protoc_insertion_point(field_get:ObjectLocation.location)
  return location_;
}
inline void ObjectLocation::set_location(::google::protobuf::uint32 value) {
  set_has_location();
  location_ = value;
  // @@protoc_insertion_point(field_set:ObjectLocation.location)
}

// optional uint32 table = 2;
inline bool ObjectLocation::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectLocation::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectLocation::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectLocation::clear_table() {
  table_ = 0u;
  clear_has_table();
}
inline ::google::protobuf::uint32 ObjectLocation::table() const {
  // @@protoc_insertion_point(field_get:ObjectLocation.table)
  return table_;
}
inline void ObjectLocation::set_table(::google::protobuf::uint32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:ObjectLocation.table)
}

// optional uint32 x = 3;
inline bool ObjectLocation::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectLocation::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ObjectLocation::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ObjectLocation::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 ObjectLocation::x() const {
  // @@protoc_insertion_point(field_get:ObjectLocation.x)
  return x_;
}
inline void ObjectLocation::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ObjectLocation.x)
}

// optional uint32 y = 4;
inline bool ObjectLocation::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectLocation::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ObjectLocation::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ObjectLocation::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 ObjectLocation::y() const {
  // @@protoc_insertion_point(field_get:ObjectLocation.y)
  return y_;
}
inline void ObjectLocation::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:ObjectLocation.y)
}

// -------------------------------------------------------------------

// stoneSocket

// optional uint32 stoneID = 1;
inline bool stoneSocket::has_stoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stoneSocket::set_has_stoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stoneSocket::clear_has_stoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stoneSocket::clear_stoneid() {
  stoneid_ = 0u;
  clear_has_stoneid();
}
inline ::google::protobuf::uint32 stoneSocket::stoneid() const {
  // @@protoc_insertion_point(field_get:stoneSocket.stoneID)
  return stoneid_;
}
inline void stoneSocket::set_stoneid(::google::protobuf::uint32 value) {
  set_has_stoneid();
  stoneid_ = value;
  // @@protoc_insertion_point(field_set:stoneSocket.stoneID)
}

// optional uint32 stoneRank = 2;
inline bool stoneSocket::has_stonerank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stoneSocket::set_has_stonerank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stoneSocket::clear_has_stonerank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stoneSocket::clear_stonerank() {
  stonerank_ = 0u;
  clear_has_stonerank();
}
inline ::google::protobuf::uint32 stoneSocket::stonerank() const {
  // @@protoc_insertion_point(field_get:stoneSocket.stoneRank)
  return stonerank_;
}
inline void stoneSocket::set_stonerank(::google::protobuf::uint32 value) {
  set_has_stonerank();
  stonerank_ = value;
  // @@protoc_insertion_point(field_set:stoneSocket.stoneRank)
}

// repeated uint32 value = 3 [packed = true];
inline int stoneSocket::value_size() const {
  return value_.size();
}
inline void stoneSocket::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::uint32 stoneSocket::value(int index) const {
  // @@protoc_insertion_point(field_get:stoneSocket.value)
  return value_.Get(index);
}
inline void stoneSocket::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:stoneSocket.value)
}
inline void stoneSocket::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:stoneSocket.value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
stoneSocket::value() const {
  // @@protoc_insertion_point(field_list:stoneSocket.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
stoneSocket::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:stoneSocket.value)
  return &value_;
}

// -------------------------------------------------------------------

// diamondSoket_Diamond

// optional uint32 index = 6;
inline bool diamondSoket_Diamond::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void diamondSoket_Diamond::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void diamondSoket_Diamond::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void diamondSoket_Diamond::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 diamondSoket_Diamond::index() const {
  // @@protoc_insertion_point(field_get:diamondSoket.Diamond.index)
  return index_;
}
inline void diamondSoket_Diamond::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:diamondSoket.Diamond.index)
}

// optional uint32 status = 1;
inline bool diamondSoket_Diamond::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void diamondSoket_Diamond::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void diamondSoket_Diamond::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void diamondSoket_Diamond::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 diamondSoket_Diamond::status() const {
  // @@protoc_insertion_point(field_get:diamondSoket.Diamond.status)
  return status_;
}
inline void diamondSoket_Diamond::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:diamondSoket.Diamond.status)
}

// optional uint32 baseid = 2;
inline bool diamondSoket_Diamond::has_baseid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void diamondSoket_Diamond::set_has_baseid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void diamondSoket_Diamond::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void diamondSoket_Diamond::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
inline ::google::protobuf::uint32 diamondSoket_Diamond::baseid() const {
  // @@protoc_insertion_point(field_get:diamondSoket.Diamond.baseid)
  return baseid_;
}
inline void diamondSoket_Diamond::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:diamondSoket.Diamond.baseid)
}

// optional uint32 upgrade = 3;
inline bool diamondSoket_Diamond::has_upgrade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void diamondSoket_Diamond::set_has_upgrade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void diamondSoket_Diamond::clear_has_upgrade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void diamondSoket_Diamond::clear_upgrade() {
  upgrade_ = 0u;
  clear_has_upgrade();
}
inline ::google::protobuf::uint32 diamondSoket_Diamond::upgrade() const {
  // @@protoc_insertion_point(field_get:diamondSoket.Diamond.upgrade)
  return upgrade_;
}
inline void diamondSoket_Diamond::set_upgrade(::google::protobuf::uint32 value) {
  set_has_upgrade();
  upgrade_ = value;
  // @@protoc_insertion_point(field_set:diamondSoket.Diamond.upgrade)
}

// optional uint32 type = 4;
inline bool diamondSoket_Diamond::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void diamondSoket_Diamond::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void diamondSoket_Diamond::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void diamondSoket_Diamond::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 diamondSoket_Diamond::type() const {
  // @@protoc_insertion_point(field_get:diamondSoket.Diamond.type)
  return type_;
}
inline void diamondSoket_Diamond::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:diamondSoket.Diamond.type)
}

// optional uint32 value = 5;
inline bool diamondSoket_Diamond::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void diamondSoket_Diamond::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void diamondSoket_Diamond::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void diamondSoket_Diamond::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 diamondSoket_Diamond::value() const {
  // @@protoc_insertion_point(field_get:diamondSoket.Diamond.value)
  return value_;
}
inline void diamondSoket_Diamond::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:diamondSoket.Diamond.value)
}

// -------------------------------------------------------------------

// diamondSoket

// repeated .diamondSoket.Diamond diamond = 1;
inline int diamondSoket::diamond_size() const {
  return diamond_.size();
}
inline void diamondSoket::clear_diamond() {
  diamond_.Clear();
}
inline const ::diamondSoket_Diamond& diamondSoket::diamond(int index) const {
  // @@protoc_insertion_point(field_get:diamondSoket.diamond)
  return diamond_.Get(index);
}
inline ::diamondSoket_Diamond* diamondSoket::mutable_diamond(int index) {
  // @@protoc_insertion_point(field_mutable:diamondSoket.diamond)
  return diamond_.Mutable(index);
}
inline ::diamondSoket_Diamond* diamondSoket::add_diamond() {
  // @@protoc_insertion_point(field_add:diamondSoket.diamond)
  return diamond_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::diamondSoket_Diamond >&
diamondSoket::diamond() const {
  // @@protoc_insertion_point(field_list:diamondSoket.diamond)
  return diamond_;
}
inline ::google::protobuf::RepeatedPtrField< ::diamondSoket_Diamond >*
diamondSoket::mutable_diamond() {
  // @@protoc_insertion_point(field_mutable_list:diamondSoket.diamond)
  return &diamond_;
}

// -------------------------------------------------------------------

// wingData_Diamond

// optional uint32 baseid = 1;
inline bool wingData_Diamond::has_baseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void wingData_Diamond::set_has_baseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void wingData_Diamond::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void wingData_Diamond::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
inline ::google::protobuf::uint32 wingData_Diamond::baseid() const {
  // @@protoc_insertion_point(field_get:wingData.Diamond.baseid)
  return baseid_;
}
inline void wingData_Diamond::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:wingData.Diamond.baseid)
}

// optional uint32 level = 2;
inline bool wingData_Diamond::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void wingData_Diamond::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void wingData_Diamond::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void wingData_Diamond::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 wingData_Diamond::level() const {
  // @@protoc_insertion_point(field_get:wingData.Diamond.level)
  return level_;
}
inline void wingData_Diamond::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:wingData.Diamond.level)
}

// optional uint32 exp = 3;
inline bool wingData_Diamond::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void wingData_Diamond::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void wingData_Diamond::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void wingData_Diamond::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 wingData_Diamond::exp() const {
  // @@protoc_insertion_point(field_get:wingData.Diamond.exp)
  return exp_;
}
inline void wingData_Diamond::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:wingData.Diamond.exp)
}

// -------------------------------------------------------------------

// wingData_ActiveSkill

// optional uint32 skillid = 1;
inline bool wingData_ActiveSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void wingData_ActiveSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void wingData_ActiveSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void wingData_ActiveSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 wingData_ActiveSkill::skillid() const {
  // @@protoc_insertion_point(field_get:wingData.ActiveSkill.skillid)
  return skillid_;
}
inline void wingData_ActiveSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:wingData.ActiveSkill.skillid)
}

// optional uint32 level = 2;
inline bool wingData_ActiveSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void wingData_ActiveSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void wingData_ActiveSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void wingData_ActiveSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 wingData_ActiveSkill::level() const {
  // @@protoc_insertion_point(field_get:wingData.ActiveSkill.level)
  return level_;
}
inline void wingData_ActiveSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:wingData.ActiveSkill.level)
}

// -------------------------------------------------------------------

// wingData

// repeated .wingData.Diamond diamond = 1;
inline int wingData::diamond_size() const {
  return diamond_.size();
}
inline void wingData::clear_diamond() {
  diamond_.Clear();
}
inline const ::wingData_Diamond& wingData::diamond(int index) const {
  // @@protoc_insertion_point(field_get:wingData.diamond)
  return diamond_.Get(index);
}
inline ::wingData_Diamond* wingData::mutable_diamond(int index) {
  // @@protoc_insertion_point(field_mutable:wingData.diamond)
  return diamond_.Mutable(index);
}
inline ::wingData_Diamond* wingData::add_diamond() {
  // @@protoc_insertion_point(field_add:wingData.diamond)
  return diamond_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::wingData_Diamond >&
wingData::diamond() const {
  // @@protoc_insertion_point(field_list:wingData.diamond)
  return diamond_;
}
inline ::google::protobuf::RepeatedPtrField< ::wingData_Diamond >*
wingData::mutable_diamond() {
  // @@protoc_insertion_point(field_mutable_list:wingData.diamond)
  return &diamond_;
}

// optional .wingData.ActiveSkill skill = 2;
inline bool wingData::has_skill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void wingData::set_has_skill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void wingData::clear_has_skill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void wingData::clear_skill() {
  if (skill_ != NULL) skill_->::wingData_ActiveSkill::Clear();
  clear_has_skill();
}
inline const ::wingData_ActiveSkill& wingData::skill() const {
  // @@protoc_insertion_point(field_get:wingData.skill)
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::wingData_ActiveSkill* wingData::mutable_skill() {
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::wingData_ActiveSkill;
  // @@protoc_insertion_point(field_mutable:wingData.skill)
  return skill_;
}
inline ::wingData_ActiveSkill* wingData::release_skill() {
  clear_has_skill();
  ::wingData_ActiveSkill* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline void wingData::set_allocated_skill(::wingData_ActiveSkill* skill) {
  delete skill_;
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
  // @@protoc_insertion_point(field_set_allocated:wingData.skill)
}

// optional .wingData.Diamond diamonditem = 3;
inline bool wingData::has_diamonditem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void wingData::set_has_diamonditem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void wingData::clear_has_diamonditem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void wingData::clear_diamonditem() {
  if (diamonditem_ != NULL) diamonditem_->::wingData_Diamond::Clear();
  clear_has_diamonditem();
}
inline const ::wingData_Diamond& wingData::diamonditem() const {
  // @@protoc_insertion_point(field_get:wingData.diamonditem)
  return diamonditem_ != NULL ? *diamonditem_ : *default_instance_->diamonditem_;
}
inline ::wingData_Diamond* wingData::mutable_diamonditem() {
  set_has_diamonditem();
  if (diamonditem_ == NULL) diamonditem_ = new ::wingData_Diamond;
  // @@protoc_insertion_point(field_mutable:wingData.diamonditem)
  return diamonditem_;
}
inline ::wingData_Diamond* wingData::release_diamonditem() {
  clear_has_diamonditem();
  ::wingData_Diamond* temp = diamonditem_;
  diamonditem_ = NULL;
  return temp;
}
inline void wingData::set_allocated_diamonditem(::wingData_Diamond* diamonditem) {
  delete diamonditem_;
  diamonditem_ = diamonditem;
  if (diamonditem) {
    set_has_diamonditem();
  } else {
    clear_has_diamonditem();
  }
  // @@protoc_insertion_point(field_set_allocated:wingData.diamonditem)
}

// -------------------------------------------------------------------

// flyPos

// optional string scene_name = 1;
inline bool flyPos::has_scene_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flyPos::set_has_scene_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flyPos::clear_has_scene_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flyPos::clear_scene_name() {
  if (scene_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_->clear();
  }
  clear_has_scene_name();
}
inline const ::std::string& flyPos::scene_name() const {
  // @@protoc_insertion_point(field_get:flyPos.scene_name)
  return *scene_name_;
}
inline void flyPos::set_scene_name(const ::std::string& value) {
  set_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_ = new ::std::string;
  }
  scene_name_->assign(value);
  // @@protoc_insertion_point(field_set:flyPos.scene_name)
}
inline void flyPos::set_scene_name(const char* value) {
  set_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_ = new ::std::string;
  }
  scene_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:flyPos.scene_name)
}
inline void flyPos::set_scene_name(const char* value, size_t size) {
  set_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_ = new ::std::string;
  }
  scene_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:flyPos.scene_name)
}
inline ::std::string* flyPos::mutable_scene_name() {
  set_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:flyPos.scene_name)
  return scene_name_;
}
inline ::std::string* flyPos::release_scene_name() {
  clear_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = scene_name_;
    scene_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void flyPos::set_allocated_scene_name(::std::string* scene_name) {
  if (scene_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scene_name_;
  }
  if (scene_name) {
    set_has_scene_name();
    scene_name_ = scene_name;
  } else {
    clear_has_scene_name();
    scene_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:flyPos.scene_name)
}

// optional uint32 x = 2;
inline bool flyPos::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flyPos::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flyPos::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flyPos::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 flyPos::x() const {
  // @@protoc_insertion_point(field_get:flyPos.x)
  return x_;
}
inline void flyPos::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:flyPos.x)
}

// optional uint32 y = 3;
inline bool flyPos::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flyPos::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flyPos::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flyPos::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 flyPos::y() const {
  // @@protoc_insertion_point(field_get:flyPos.y)
  return y_;
}
inline void flyPos::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:flyPos.y)
}

// -------------------------------------------------------------------

// flyMessage

// repeated .flyPos flypos = 1;
inline int flyMessage::flypos_size() const {
  return flypos_.size();
}
inline void flyMessage::clear_flypos() {
  flypos_.Clear();
}
inline const ::flyPos& flyMessage::flypos(int index) const {
  // @@protoc_insertion_point(field_get:flyMessage.flypos)
  return flypos_.Get(index);
}
inline ::flyPos* flyMessage::mutable_flypos(int index) {
  // @@protoc_insertion_point(field_mutable:flyMessage.flypos)
  return flypos_.Mutable(index);
}
inline ::flyPos* flyMessage::add_flypos() {
  // @@protoc_insertion_point(field_add:flyMessage.flypos)
  return flypos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::flyPos >&
flyMessage::flypos() const {
  // @@protoc_insertion_point(field_list:flyMessage.flypos)
  return flypos_;
}
inline ::google::protobuf::RepeatedPtrField< ::flyPos >*
flyMessage::mutable_flypos() {
  // @@protoc_insertion_point(field_mutable_list:flyMessage.flypos)
  return &flypos_;
}

// optional uint32 avail_times = 2;
inline bool flyMessage::has_avail_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flyMessage::set_has_avail_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flyMessage::clear_has_avail_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flyMessage::clear_avail_times() {
  avail_times_ = 0u;
  clear_has_avail_times();
}
inline ::google::protobuf::uint32 flyMessage::avail_times() const {
  // @@protoc_insertion_point(field_get:flyMessage.avail_times)
  return avail_times_;
}
inline void flyMessage::set_avail_times(::google::protobuf::uint32 value) {
  set_has_avail_times();
  avail_times_ = value;
  // @@protoc_insertion_point(field_set:flyMessage.avail_times)
}

// -------------------------------------------------------------------

// PropertyValues_Value

// optional .PropValueType key = 1 [default = ValueType_none];
inline bool PropertyValues_Value::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropertyValues_Value::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropertyValues_Value::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropertyValues_Value::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::PropValueType PropertyValues_Value::key() const {
  // @@protoc_insertion_point(field_get:PropertyValues.Value.key)
  return static_cast< ::PropValueType >(key_);
}
inline void PropertyValues_Value::set_key(::PropValueType value) {
  assert(::PropValueType_IsValid(value));
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:PropertyValues.Value.key)
}

// repeated uint32 value = 2;
inline int PropertyValues_Value::value_size() const {
  return value_.size();
}
inline void PropertyValues_Value::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::uint32 PropertyValues_Value::value(int index) const {
  // @@protoc_insertion_point(field_get:PropertyValues.Value.value)
  return value_.Get(index);
}
inline void PropertyValues_Value::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:PropertyValues.Value.value)
}
inline void PropertyValues_Value::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:PropertyValues.Value.value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PropertyValues_Value::value() const {
  // @@protoc_insertion_point(field_list:PropertyValues.Value.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PropertyValues_Value::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PropertyValues.Value.value)
  return &value_;
}

// -------------------------------------------------------------------

// PropertyValues

// repeated .PropertyValues.Value value = 1;
inline int PropertyValues::value_size() const {
  return value_.size();
}
inline void PropertyValues::clear_value() {
  value_.Clear();
}
inline const ::PropertyValues_Value& PropertyValues::value(int index) const {
  // @@protoc_insertion_point(field_get:PropertyValues.value)
  return value_.Get(index);
}
inline ::PropertyValues_Value* PropertyValues::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PropertyValues.value)
  return value_.Mutable(index);
}
inline ::PropertyValues_Value* PropertyValues::add_value() {
  // @@protoc_insertion_point(field_add:PropertyValues.value)
  return value_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PropertyValues_Value >&
PropertyValues::value() const {
  // @@protoc_insertion_point(field_list:PropertyValues.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::PropertyValues_Value >*
PropertyValues::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PropertyValues.value)
  return &value_;
}

// -------------------------------------------------------------------

// PropertyValuesEx_Value

// optional .PropValueType key = 1 [default = ValueType_none];
inline bool PropertyValuesEx_Value::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropertyValuesEx_Value::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropertyValuesEx_Value::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropertyValuesEx_Value::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::PropValueType PropertyValuesEx_Value::key() const {
  // @@protoc_insertion_point(field_get:PropertyValuesEx.Value.key)
  return static_cast< ::PropValueType >(key_);
}
inline void PropertyValuesEx_Value::set_key(::PropValueType value) {
  assert(::PropValueType_IsValid(value));
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:PropertyValuesEx.Value.key)
}

// repeated .PairDataDWORD value = 2;
inline int PropertyValuesEx_Value::value_size() const {
  return value_.size();
}
inline void PropertyValuesEx_Value::clear_value() {
  value_.Clear();
}
inline const ::PairDataDWORD& PropertyValuesEx_Value::value(int index) const {
  // @@protoc_insertion_point(field_get:PropertyValuesEx.Value.value)
  return value_.Get(index);
}
inline ::PairDataDWORD* PropertyValuesEx_Value::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PropertyValuesEx.Value.value)
  return value_.Mutable(index);
}
inline ::PairDataDWORD* PropertyValuesEx_Value::add_value() {
  // @@protoc_insertion_point(field_add:PropertyValuesEx.Value.value)
  return value_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PairDataDWORD >&
PropertyValuesEx_Value::value() const {
  // @@protoc_insertion_point(field_list:PropertyValuesEx.Value.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::PairDataDWORD >*
PropertyValuesEx_Value::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PropertyValuesEx.Value.value)
  return &value_;
}

// -------------------------------------------------------------------

// PropertyValuesEx

// repeated .PropertyValuesEx.Value value = 1;
inline int PropertyValuesEx::value_size() const {
  return value_.size();
}
inline void PropertyValuesEx::clear_value() {
  value_.Clear();
}
inline const ::PropertyValuesEx_Value& PropertyValuesEx::value(int index) const {
  // @@protoc_insertion_point(field_get:PropertyValuesEx.value)
  return value_.Get(index);
}
inline ::PropertyValuesEx_Value* PropertyValuesEx::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PropertyValuesEx.value)
  return value_.Mutable(index);
}
inline ::PropertyValuesEx_Value* PropertyValuesEx::add_value() {
  // @@protoc_insertion_point(field_add:PropertyValuesEx.value)
  return value_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PropertyValuesEx_Value >&
PropertyValuesEx::value() const {
  // @@protoc_insertion_point(field_list:PropertyValuesEx.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::PropertyValuesEx_Value >*
PropertyValuesEx::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PropertyValuesEx.value)
  return &value_;
}

// -------------------------------------------------------------------

// EquipBaseValue

// optional uint32 strength = 1;
inline bool EquipBaseValue::has_strength() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipBaseValue::set_has_strength() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipBaseValue::clear_has_strength() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipBaseValue::clear_strength() {
  strength_ = 0u;
  clear_has_strength();
}
inline ::google::protobuf::uint32 EquipBaseValue::strength() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.strength)
  return strength_;
}
inline void EquipBaseValue::set_strength(::google::protobuf::uint32 value) {
  set_has_strength();
  strength_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.strength)
}

// optional uint32 dexterity = 2;
inline bool EquipBaseValue::has_dexterity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipBaseValue::set_has_dexterity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipBaseValue::clear_has_dexterity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipBaseValue::clear_dexterity() {
  dexterity_ = 0u;
  clear_has_dexterity();
}
inline ::google::protobuf::uint32 EquipBaseValue::dexterity() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.dexterity)
  return dexterity_;
}
inline void EquipBaseValue::set_dexterity(::google::protobuf::uint32 value) {
  set_has_dexterity();
  dexterity_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.dexterity)
}

// optional uint32 mentality = 3;
inline bool EquipBaseValue::has_mentality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipBaseValue::set_has_mentality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipBaseValue::clear_has_mentality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipBaseValue::clear_mentality() {
  mentality_ = 0u;
  clear_has_mentality();
}
inline ::google::protobuf::uint32 EquipBaseValue::mentality() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.mentality)
  return mentality_;
}
inline void EquipBaseValue::set_mentality(::google::protobuf::uint32 value) {
  set_has_mentality();
  mentality_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.mentality)
}

// optional uint32 constitution = 4;
inline bool EquipBaseValue::has_constitution() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipBaseValue::set_has_constitution() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipBaseValue::clear_has_constitution() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipBaseValue::clear_constitution() {
  constitution_ = 0u;
  clear_has_constitution();
}
inline ::google::protobuf::uint32 EquipBaseValue::constitution() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.constitution)
  return constitution_;
}
inline void EquipBaseValue::set_constitution(::google::protobuf::uint32 value) {
  set_has_constitution();
  constitution_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.constitution)
}

// optional uint32 maxhp = 5;
inline bool EquipBaseValue::has_maxhp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipBaseValue::set_has_maxhp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipBaseValue::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipBaseValue::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 EquipBaseValue::maxhp() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.maxhp)
  return maxhp_;
}
inline void EquipBaseValue::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.maxhp)
}

// optional uint32 maxmp = 6;
inline bool EquipBaseValue::has_maxmp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EquipBaseValue::set_has_maxmp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EquipBaseValue::clear_has_maxmp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EquipBaseValue::clear_maxmp() {
  maxmp_ = 0u;
  clear_has_maxmp();
}
inline ::google::protobuf::uint32 EquipBaseValue::maxmp() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.maxmp)
  return maxmp_;
}
inline void EquipBaseValue::set_maxmp(::google::protobuf::uint32 value) {
  set_has_maxmp();
  maxmp_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.maxmp)
}

// optional uint32 minpdamage = 7;
inline bool EquipBaseValue::has_minpdamage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EquipBaseValue::set_has_minpdamage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EquipBaseValue::clear_has_minpdamage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EquipBaseValue::clear_minpdamage() {
  minpdamage_ = 0u;
  clear_has_minpdamage();
}
inline ::google::protobuf::uint32 EquipBaseValue::minpdamage() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.minpdamage)
  return minpdamage_;
}
inline void EquipBaseValue::set_minpdamage(::google::protobuf::uint32 value) {
  set_has_minpdamage();
  minpdamage_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.minpdamage)
}

// optional uint32 maxpdamage = 8;
inline bool EquipBaseValue::has_maxpdamage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EquipBaseValue::set_has_maxpdamage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EquipBaseValue::clear_has_maxpdamage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EquipBaseValue::clear_maxpdamage() {
  maxpdamage_ = 0u;
  clear_has_maxpdamage();
}
inline ::google::protobuf::uint32 EquipBaseValue::maxpdamage() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.maxpdamage)
  return maxpdamage_;
}
inline void EquipBaseValue::set_maxpdamage(::google::protobuf::uint32 value) {
  set_has_maxpdamage();
  maxpdamage_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.maxpdamage)
}

// optional uint32 minmdamage = 9;
inline bool EquipBaseValue::has_minmdamage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EquipBaseValue::set_has_minmdamage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EquipBaseValue::clear_has_minmdamage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EquipBaseValue::clear_minmdamage() {
  minmdamage_ = 0u;
  clear_has_minmdamage();
}
inline ::google::protobuf::uint32 EquipBaseValue::minmdamage() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.minmdamage)
  return minmdamage_;
}
inline void EquipBaseValue::set_minmdamage(::google::protobuf::uint32 value) {
  set_has_minmdamage();
  minmdamage_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.minmdamage)
}

// optional uint32 maxmdamage = 10;
inline bool EquipBaseValue::has_maxmdamage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EquipBaseValue::set_has_maxmdamage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EquipBaseValue::clear_has_maxmdamage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EquipBaseValue::clear_maxmdamage() {
  maxmdamage_ = 0u;
  clear_has_maxmdamage();
}
inline ::google::protobuf::uint32 EquipBaseValue::maxmdamage() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.maxmdamage)
  return maxmdamage_;
}
inline void EquipBaseValue::set_maxmdamage(::google::protobuf::uint32 value) {
  set_has_maxmdamage();
  maxmdamage_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.maxmdamage)
}

// optional uint32 pdefence = 11;
inline bool EquipBaseValue::has_pdefence() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EquipBaseValue::set_has_pdefence() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EquipBaseValue::clear_has_pdefence() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EquipBaseValue::clear_pdefence() {
  pdefence_ = 0u;
  clear_has_pdefence();
}
inline ::google::protobuf::uint32 EquipBaseValue::pdefence() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.pdefence)
  return pdefence_;
}
inline void EquipBaseValue::set_pdefence(::google::protobuf::uint32 value) {
  set_has_pdefence();
  pdefence_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.pdefence)
}

// optional uint32 mdefence = 12;
inline bool EquipBaseValue::has_mdefence() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EquipBaseValue::set_has_mdefence() {
  _has_bits_[0] |= 0x00000800u;
}
inline void EquipBaseValue::clear_has_mdefence() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void EquipBaseValue::clear_mdefence() {
  mdefence_ = 0u;
  clear_has_mdefence();
}
inline ::google::protobuf::uint32 EquipBaseValue::mdefence() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.mdefence)
  return mdefence_;
}
inline void EquipBaseValue::set_mdefence(::google::protobuf::uint32 value) {
  set_has_mdefence();
  mdefence_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.mdefence)
}

// optional uint32 pdamagep = 13;
inline bool EquipBaseValue::has_pdamagep() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void EquipBaseValue::set_has_pdamagep() {
  _has_bits_[0] |= 0x00001000u;
}
inline void EquipBaseValue::clear_has_pdamagep() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void EquipBaseValue::clear_pdamagep() {
  pdamagep_ = 0u;
  clear_has_pdamagep();
}
inline ::google::protobuf::uint32 EquipBaseValue::pdamagep() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.pdamagep)
  return pdamagep_;
}
inline void EquipBaseValue::set_pdamagep(::google::protobuf::uint32 value) {
  set_has_pdamagep();
  pdamagep_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.pdamagep)
}

// optional uint32 mdamagep = 14;
inline bool EquipBaseValue::has_mdamagep() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void EquipBaseValue::set_has_mdamagep() {
  _has_bits_[0] |= 0x00002000u;
}
inline void EquipBaseValue::clear_has_mdamagep() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void EquipBaseValue::clear_mdamagep() {
  mdamagep_ = 0u;
  clear_has_mdamagep();
}
inline ::google::protobuf::uint32 EquipBaseValue::mdamagep() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.mdamagep)
  return mdamagep_;
}
inline void EquipBaseValue::set_mdamagep(::google::protobuf::uint32 value) {
  set_has_mdamagep();
  mdamagep_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.mdamagep)
}

// optional uint32 pdefencep = 15;
inline bool EquipBaseValue::has_pdefencep() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void EquipBaseValue::set_has_pdefencep() {
  _has_bits_[0] |= 0x00004000u;
}
inline void EquipBaseValue::clear_has_pdefencep() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void EquipBaseValue::clear_pdefencep() {
  pdefencep_ = 0u;
  clear_has_pdefencep();
}
inline ::google::protobuf::uint32 EquipBaseValue::pdefencep() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.pdefencep)
  return pdefencep_;
}
inline void EquipBaseValue::set_pdefencep(::google::protobuf::uint32 value) {
  set_has_pdefencep();
  pdefencep_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.pdefencep)
}

// optional uint32 mdefencep = 16;
inline bool EquipBaseValue::has_mdefencep() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void EquipBaseValue::set_has_mdefencep() {
  _has_bits_[0] |= 0x00008000u;
}
inline void EquipBaseValue::clear_has_mdefencep() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void EquipBaseValue::clear_mdefencep() {
  mdefencep_ = 0u;
  clear_has_mdefencep();
}
inline ::google::protobuf::uint32 EquipBaseValue::mdefencep() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.mdefencep)
  return mdefencep_;
}
inline void EquipBaseValue::set_mdefencep(::google::protobuf::uint32 value) {
  set_has_mdefencep();
  mdefencep_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.mdefencep)
}

// optional uint32 attlevel = 17;
inline bool EquipBaseValue::has_attlevel() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void EquipBaseValue::set_has_attlevel() {
  _has_bits_[0] |= 0x00010000u;
}
inline void EquipBaseValue::clear_has_attlevel() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void EquipBaseValue::clear_attlevel() {
  attlevel_ = 0u;
  clear_has_attlevel();
}
inline ::google::protobuf::uint32 EquipBaseValue::attlevel() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.attlevel)
  return attlevel_;
}
inline void EquipBaseValue::set_attlevel(::google::protobuf::uint32 value) {
  set_has_attlevel();
  attlevel_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.attlevel)
}

// optional uint32 deflevel = 18;
inline bool EquipBaseValue::has_deflevel() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void EquipBaseValue::set_has_deflevel() {
  _has_bits_[0] |= 0x00020000u;
}
inline void EquipBaseValue::clear_has_deflevel() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void EquipBaseValue::clear_deflevel() {
  deflevel_ = 0u;
  clear_has_deflevel();
}
inline ::google::protobuf::uint32 EquipBaseValue::deflevel() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.deflevel)
  return deflevel_;
}
inline void EquipBaseValue::set_deflevel(::google::protobuf::uint32 value) {
  set_has_deflevel();
  deflevel_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.deflevel)
}

// optional uint32 hplevel = 19;
inline bool EquipBaseValue::has_hplevel() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void EquipBaseValue::set_has_hplevel() {
  _has_bits_[0] |= 0x00040000u;
}
inline void EquipBaseValue::clear_has_hplevel() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void EquipBaseValue::clear_hplevel() {
  hplevel_ = 0u;
  clear_has_hplevel();
}
inline ::google::protobuf::uint32 EquipBaseValue::hplevel() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.hplevel)
  return hplevel_;
}
inline void EquipBaseValue::set_hplevel(::google::protobuf::uint32 value) {
  set_has_hplevel();
  hplevel_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.hplevel)
}

// optional int32 mvspeed = 25;
inline bool EquipBaseValue::has_mvspeed() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void EquipBaseValue::set_has_mvspeed() {
  _has_bits_[0] |= 0x00080000u;
}
inline void EquipBaseValue::clear_has_mvspeed() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void EquipBaseValue::clear_mvspeed() {
  mvspeed_ = 0;
  clear_has_mvspeed();
}
inline ::google::protobuf::int32 EquipBaseValue::mvspeed() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.mvspeed)
  return mvspeed_;
}
inline void EquipBaseValue::set_mvspeed(::google::protobuf::int32 value) {
  set_has_mvspeed();
  mvspeed_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.mvspeed)
}

// optional uint32 luckRate = 26;
inline bool EquipBaseValue::has_luckrate() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void EquipBaseValue::set_has_luckrate() {
  _has_bits_[0] |= 0x00100000u;
}
inline void EquipBaseValue::clear_has_luckrate() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void EquipBaseValue::clear_luckrate() {
  luckrate_ = 0u;
  clear_has_luckrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::luckrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.luckRate)
  return luckrate_;
}
inline void EquipBaseValue::set_luckrate(::google::protobuf::uint32 value) {
  set_has_luckrate();
  luckrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.luckRate)
}

// optional uint32 hitRate = 27;
inline bool EquipBaseValue::has_hitrate() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void EquipBaseValue::set_has_hitrate() {
  _has_bits_[0] |= 0x00200000u;
}
inline void EquipBaseValue::clear_has_hitrate() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void EquipBaseValue::clear_hitrate() {
  hitrate_ = 0u;
  clear_has_hitrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::hitrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.hitRate)
  return hitrate_;
}
inline void EquipBaseValue::set_hitrate(::google::protobuf::uint32 value) {
  set_has_hitrate();
  hitrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.hitRate)
}

// optional uint32 missRate = 28;
inline bool EquipBaseValue::has_missrate() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void EquipBaseValue::set_has_missrate() {
  _has_bits_[0] |= 0x00400000u;
}
inline void EquipBaseValue::clear_has_missrate() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void EquipBaseValue::clear_missrate() {
  missrate_ = 0u;
  clear_has_missrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::missrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.missRate)
  return missrate_;
}
inline void EquipBaseValue::set_missrate(::google::protobuf::uint32 value) {
  set_has_missrate();
  missrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.missRate)
}

// optional uint32 smiteRate = 29;
inline bool EquipBaseValue::has_smiterate() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void EquipBaseValue::set_has_smiterate() {
  _has_bits_[0] |= 0x00800000u;
}
inline void EquipBaseValue::clear_has_smiterate() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void EquipBaseValue::clear_smiterate() {
  smiterate_ = 0u;
  clear_has_smiterate();
}
inline ::google::protobuf::uint32 EquipBaseValue::smiterate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.smiteRate)
  return smiterate_;
}
inline void EquipBaseValue::set_smiterate(::google::protobuf::uint32 value) {
  set_has_smiterate();
  smiterate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.smiteRate)
}

// optional uint32 reSmiteRate = 30;
inline bool EquipBaseValue::has_resmiterate() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void EquipBaseValue::set_has_resmiterate() {
  _has_bits_[0] |= 0x01000000u;
}
inline void EquipBaseValue::clear_has_resmiterate() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void EquipBaseValue::clear_resmiterate() {
  resmiterate_ = 0u;
  clear_has_resmiterate();
}
inline ::google::protobuf::uint32 EquipBaseValue::resmiterate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.reSmiteRate)
  return resmiterate_;
}
inline void EquipBaseValue::set_resmiterate(::google::protobuf::uint32 value) {
  set_has_resmiterate();
  resmiterate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.reSmiteRate)
}

// optional uint32 beatRate = 31;
inline bool EquipBaseValue::has_beatrate() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void EquipBaseValue::set_has_beatrate() {
  _has_bits_[0] |= 0x02000000u;
}
inline void EquipBaseValue::clear_has_beatrate() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void EquipBaseValue::clear_beatrate() {
  beatrate_ = 0u;
  clear_has_beatrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::beatrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.beatRate)
  return beatrate_;
}
inline void EquipBaseValue::set_beatrate(::google::protobuf::uint32 value) {
  set_has_beatrate();
  beatrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.beatRate)
}

// optional uint32 reBeatRate = 32;
inline bool EquipBaseValue::has_rebeatrate() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void EquipBaseValue::set_has_rebeatrate() {
  _has_bits_[0] |= 0x04000000u;
}
inline void EquipBaseValue::clear_has_rebeatrate() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void EquipBaseValue::clear_rebeatrate() {
  rebeatrate_ = 0u;
  clear_has_rebeatrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::rebeatrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.reBeatRate)
  return rebeatrate_;
}
inline void EquipBaseValue::set_rebeatrate(::google::protobuf::uint32 value) {
  set_has_rebeatrate();
  rebeatrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.reBeatRate)
}

// optional uint32 paralysisRate = 33;
inline bool EquipBaseValue::has_paralysisrate() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void EquipBaseValue::set_has_paralysisrate() {
  _has_bits_[0] |= 0x08000000u;
}
inline void EquipBaseValue::clear_has_paralysisrate() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void EquipBaseValue::clear_paralysisrate() {
  paralysisrate_ = 0u;
  clear_has_paralysisrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::paralysisrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.paralysisRate)
  return paralysisrate_;
}
inline void EquipBaseValue::set_paralysisrate(::google::protobuf::uint32 value) {
  set_has_paralysisrate();
  paralysisrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.paralysisRate)
}

// optional uint32 reParalysisRate = 34;
inline bool EquipBaseValue::has_reparalysisrate() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void EquipBaseValue::set_has_reparalysisrate() {
  _has_bits_[0] |= 0x10000000u;
}
inline void EquipBaseValue::clear_has_reparalysisrate() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void EquipBaseValue::clear_reparalysisrate() {
  reparalysisrate_ = 0u;
  clear_has_reparalysisrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::reparalysisrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.reParalysisRate)
  return reparalysisrate_;
}
inline void EquipBaseValue::set_reparalysisrate(::google::protobuf::uint32 value) {
  set_has_reparalysisrate();
  reparalysisrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.reParalysisRate)
}

// optional uint32 coldRate = 35;
inline bool EquipBaseValue::has_coldrate() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void EquipBaseValue::set_has_coldrate() {
  _has_bits_[0] |= 0x20000000u;
}
inline void EquipBaseValue::clear_has_coldrate() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void EquipBaseValue::clear_coldrate() {
  coldrate_ = 0u;
  clear_has_coldrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::coldrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.coldRate)
  return coldrate_;
}
inline void EquipBaseValue::set_coldrate(::google::protobuf::uint32 value) {
  set_has_coldrate();
  coldrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.coldRate)
}

// optional uint32 reColdRate = 36;
inline bool EquipBaseValue::has_recoldrate() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void EquipBaseValue::set_has_recoldrate() {
  _has_bits_[0] |= 0x40000000u;
}
inline void EquipBaseValue::clear_has_recoldrate() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void EquipBaseValue::clear_recoldrate() {
  recoldrate_ = 0u;
  clear_has_recoldrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::recoldrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.reColdRate)
  return recoldrate_;
}
inline void EquipBaseValue::set_recoldrate(::google::protobuf::uint32 value) {
  set_has_recoldrate();
  recoldrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.reColdRate)
}

// optional uint32 reAllRate = 37;
inline bool EquipBaseValue::has_reallrate() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void EquipBaseValue::set_has_reallrate() {
  _has_bits_[0] |= 0x80000000u;
}
inline void EquipBaseValue::clear_has_reallrate() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void EquipBaseValue::clear_reallrate() {
  reallrate_ = 0u;
  clear_has_reallrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::reallrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.reAllRate)
  return reallrate_;
}
inline void EquipBaseValue::set_reallrate(::google::protobuf::uint32 value) {
  set_has_reallrate();
  reallrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.reAllRate)
}

// optional uint32 neglectRate = 38;
inline bool EquipBaseValue::has_neglectrate() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void EquipBaseValue::set_has_neglectrate() {
  _has_bits_[1] |= 0x00000001u;
}
inline void EquipBaseValue::clear_has_neglectrate() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void EquipBaseValue::clear_neglectrate() {
  neglectrate_ = 0u;
  clear_has_neglectrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::neglectrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.neglectRate)
  return neglectrate_;
}
inline void EquipBaseValue::set_neglectrate(::google::protobuf::uint32 value) {
  set_has_neglectrate();
  neglectrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.neglectRate)
}

// optional uint32 damageInc = 39;
inline bool EquipBaseValue::has_damageinc() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void EquipBaseValue::set_has_damageinc() {
  _has_bits_[1] |= 0x00000002u;
}
inline void EquipBaseValue::clear_has_damageinc() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void EquipBaseValue::clear_damageinc() {
  damageinc_ = 0u;
  clear_has_damageinc();
}
inline ::google::protobuf::uint32 EquipBaseValue::damageinc() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.damageInc)
  return damageinc_;
}
inline void EquipBaseValue::set_damageinc(::google::protobuf::uint32 value) {
  set_has_damageinc();
  damageinc_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.damageInc)
}

// optional uint32 hpsucker = 40;
inline bool EquipBaseValue::has_hpsucker() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void EquipBaseValue::set_has_hpsucker() {
  _has_bits_[1] |= 0x00000004u;
}
inline void EquipBaseValue::clear_has_hpsucker() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void EquipBaseValue::clear_hpsucker() {
  hpsucker_ = 0u;
  clear_has_hpsucker();
}
inline ::google::protobuf::uint32 EquipBaseValue::hpsucker() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.hpsucker)
  return hpsucker_;
}
inline void EquipBaseValue::set_hpsucker(::google::protobuf::uint32 value) {
  set_has_hpsucker();
  hpsucker_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.hpsucker)
}

// optional uint32 mpsucker = 41;
inline bool EquipBaseValue::has_mpsucker() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void EquipBaseValue::set_has_mpsucker() {
  _has_bits_[1] |= 0x00000008u;
}
inline void EquipBaseValue::clear_has_mpsucker() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void EquipBaseValue::clear_mpsucker() {
  mpsucker_ = 0u;
  clear_has_mpsucker();
}
inline ::google::protobuf::uint32 EquipBaseValue::mpsucker() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.mpsucker)
  return mpsucker_;
}
inline void EquipBaseValue::set_mpsucker(::google::protobuf::uint32 value) {
  set_has_mpsucker();
  mpsucker_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.mpsucker)
}

// optional uint32 hpsuckerrate = 42;
inline bool EquipBaseValue::has_hpsuckerrate() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void EquipBaseValue::set_has_hpsuckerrate() {
  _has_bits_[1] |= 0x00000010u;
}
inline void EquipBaseValue::clear_has_hpsuckerrate() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void EquipBaseValue::clear_hpsuckerrate() {
  hpsuckerrate_ = 0u;
  clear_has_hpsuckerrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::hpsuckerrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.hpsuckerrate)
  return hpsuckerrate_;
}
inline void EquipBaseValue::set_hpsuckerrate(::google::protobuf::uint32 value) {
  set_has_hpsuckerrate();
  hpsuckerrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.hpsuckerrate)
}

// optional uint32 mpsuckerrate = 43;
inline bool EquipBaseValue::has_mpsuckerrate() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void EquipBaseValue::set_has_mpsuckerrate() {
  _has_bits_[1] |= 0x00000020u;
}
inline void EquipBaseValue::clear_has_mpsuckerrate() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void EquipBaseValue::clear_mpsuckerrate() {
  mpsuckerrate_ = 0u;
  clear_has_mpsuckerrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::mpsuckerrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.mpsuckerrate)
  return mpsuckerrate_;
}
inline void EquipBaseValue::set_mpsuckerrate(::google::protobuf::uint32 value) {
  set_has_mpsuckerrate();
  mpsuckerrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.mpsuckerrate)
}

// optional uint32 hpresume = 44;
inline bool EquipBaseValue::has_hpresume() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void EquipBaseValue::set_has_hpresume() {
  _has_bits_[1] |= 0x00000040u;
}
inline void EquipBaseValue::clear_has_hpresume() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void EquipBaseValue::clear_hpresume() {
  hpresume_ = 0u;
  clear_has_hpresume();
}
inline ::google::protobuf::uint32 EquipBaseValue::hpresume() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.hpresume)
  return hpresume_;
}
inline void EquipBaseValue::set_hpresume(::google::protobuf::uint32 value) {
  set_has_hpresume();
  hpresume_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.hpresume)
}

// optional uint32 mpresume = 45;
inline bool EquipBaseValue::has_mpresume() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void EquipBaseValue::set_has_mpresume() {
  _has_bits_[1] |= 0x00000080u;
}
inline void EquipBaseValue::clear_has_mpresume() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void EquipBaseValue::clear_mpresume() {
  mpresume_ = 0u;
  clear_has_mpresume();
}
inline ::google::protobuf::uint32 EquipBaseValue::mpresume() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.mpresume)
  return mpresume_;
}
inline void EquipBaseValue::set_mpresume(::google::protobuf::uint32 value) {
  set_has_mpresume();
  mpresume_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.mpresume)
}

// optional uint32 moneyLostRate = 46;
inline bool EquipBaseValue::has_moneylostrate() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void EquipBaseValue::set_has_moneylostrate() {
  _has_bits_[1] |= 0x00000100u;
}
inline void EquipBaseValue::clear_has_moneylostrate() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void EquipBaseValue::clear_moneylostrate() {
  moneylostrate_ = 0u;
  clear_has_moneylostrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::moneylostrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.moneyLostRate)
  return moneylostrate_;
}
inline void EquipBaseValue::set_moneylostrate(::google::protobuf::uint32 value) {
  set_has_moneylostrate();
  moneylostrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.moneyLostRate)
}

// optional uint32 equipLostRate = 47;
inline bool EquipBaseValue::has_equiplostrate() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void EquipBaseValue::set_has_equiplostrate() {
  _has_bits_[1] |= 0x00000200u;
}
inline void EquipBaseValue::clear_has_equiplostrate() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void EquipBaseValue::clear_equiplostrate() {
  equiplostrate_ = 0u;
  clear_has_equiplostrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::equiplostrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.equipLostRate)
  return equiplostrate_;
}
inline void EquipBaseValue::set_equiplostrate(::google::protobuf::uint32 value) {
  set_has_equiplostrate();
  equiplostrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.equipLostRate)
}

// optional uint32 smiteAdd = 48;
inline bool EquipBaseValue::has_smiteadd() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void EquipBaseValue::set_has_smiteadd() {
  _has_bits_[1] |= 0x00000400u;
}
inline void EquipBaseValue::clear_has_smiteadd() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void EquipBaseValue::clear_smiteadd() {
  smiteadd_ = 0u;
  clear_has_smiteadd();
}
inline ::google::protobuf::uint32 EquipBaseValue::smiteadd() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.smiteAdd)
  return smiteadd_;
}
inline void EquipBaseValue::set_smiteadd(::google::protobuf::uint32 value) {
  set_has_smiteadd();
  smiteadd_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.smiteAdd)
}

// optional uint32 fixedhurtadd = 49;
inline bool EquipBaseValue::has_fixedhurtadd() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void EquipBaseValue::set_has_fixedhurtadd() {
  _has_bits_[1] |= 0x00000800u;
}
inline void EquipBaseValue::clear_has_fixedhurtadd() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void EquipBaseValue::clear_fixedhurtadd() {
  fixedhurtadd_ = 0u;
  clear_has_fixedhurtadd();
}
inline ::google::protobuf::uint32 EquipBaseValue::fixedhurtadd() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.fixedhurtadd)
  return fixedhurtadd_;
}
inline void EquipBaseValue::set_fixedhurtadd(::google::protobuf::uint32 value) {
  set_has_fixedhurtadd();
  fixedhurtadd_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.fixedhurtadd)
}

// optional uint32 fixedhurtsub = 50;
inline bool EquipBaseValue::has_fixedhurtsub() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void EquipBaseValue::set_has_fixedhurtsub() {
  _has_bits_[1] |= 0x00001000u;
}
inline void EquipBaseValue::clear_has_fixedhurtsub() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void EquipBaseValue::clear_fixedhurtsub() {
  fixedhurtsub_ = 0u;
  clear_has_fixedhurtsub();
}
inline ::google::protobuf::uint32 EquipBaseValue::fixedhurtsub() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.fixedhurtsub)
  return fixedhurtsub_;
}
inline void EquipBaseValue::set_fixedhurtsub(::google::protobuf::uint32 value) {
  set_has_fixedhurtsub();
  fixedhurtsub_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.fixedhurtsub)
}

// optional uint32 reflect = 51;
inline bool EquipBaseValue::has_reflect() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void EquipBaseValue::set_has_reflect() {
  _has_bits_[1] |= 0x00002000u;
}
inline void EquipBaseValue::clear_has_reflect() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void EquipBaseValue::clear_reflect() {
  reflect_ = 0u;
  clear_has_reflect();
}
inline ::google::protobuf::uint32 EquipBaseValue::reflect() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.reflect)
  return reflect_;
}
inline void EquipBaseValue::set_reflect(::google::protobuf::uint32 value) {
  set_has_reflect();
  reflect_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.reflect)
}

// optional uint32 shield = 52;
inline bool EquipBaseValue::has_shield() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void EquipBaseValue::set_has_shield() {
  _has_bits_[1] |= 0x00004000u;
}
inline void EquipBaseValue::clear_has_shield() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void EquipBaseValue::clear_shield() {
  shield_ = 0u;
  clear_has_shield();
}
inline ::google::protobuf::uint32 EquipBaseValue::shield() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.shield)
  return shield_;
}
inline void EquipBaseValue::set_shield(::google::protobuf::uint32 value) {
  set_has_shield();
  shield_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.shield)
}

// optional uint32 resist = 53;
inline bool EquipBaseValue::has_resist() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void EquipBaseValue::set_has_resist() {
  _has_bits_[1] |= 0x00008000u;
}
inline void EquipBaseValue::clear_has_resist() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void EquipBaseValue::clear_resist() {
  resist_ = 0u;
  clear_has_resist();
}
inline ::google::protobuf::uint32 EquipBaseValue::resist() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.resist)
  return resist_;
}
inline void EquipBaseValue::set_resist(::google::protobuf::uint32 value) {
  set_has_resist();
  resist_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.resist)
}

// optional uint32 butterfly = 54;
inline bool EquipBaseValue::has_butterfly() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void EquipBaseValue::set_has_butterfly() {
  _has_bits_[1] |= 0x00010000u;
}
inline void EquipBaseValue::clear_has_butterfly() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void EquipBaseValue::clear_butterfly() {
  butterfly_ = 0u;
  clear_has_butterfly();
}
inline ::google::protobuf::uint32 EquipBaseValue::butterfly() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.butterfly)
  return butterfly_;
}
inline void EquipBaseValue::set_butterfly(::google::protobuf::uint32 value) {
  set_has_butterfly();
  butterfly_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.butterfly)
}

// optional uint32 reneglectrate = 55;
inline bool EquipBaseValue::has_reneglectrate() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void EquipBaseValue::set_has_reneglectrate() {
  _has_bits_[1] |= 0x00020000u;
}
inline void EquipBaseValue::clear_has_reneglectrate() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void EquipBaseValue::clear_reneglectrate() {
  reneglectrate_ = 0u;
  clear_has_reneglectrate();
}
inline ::google::protobuf::uint32 EquipBaseValue::reneglectrate() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.reneglectrate)
  return reneglectrate_;
}
inline void EquipBaseValue::set_reneglectrate(::google::protobuf::uint32 value) {
  set_has_reneglectrate();
  reneglectrate_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.reneglectrate)
}

// optional uint32 phyresist = 56;
inline bool EquipBaseValue::has_phyresist() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void EquipBaseValue::set_has_phyresist() {
  _has_bits_[1] |= 0x00040000u;
}
inline void EquipBaseValue::clear_has_phyresist() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void EquipBaseValue::clear_phyresist() {
  phyresist_ = 0u;
  clear_has_phyresist();
}
inline ::google::protobuf::uint32 EquipBaseValue::phyresist() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.phyresist)
  return phyresist_;
}
inline void EquipBaseValue::set_phyresist(::google::protobuf::uint32 value) {
  set_has_phyresist();
  phyresist_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.phyresist)
}

// optional uint32 magresist = 57;
inline bool EquipBaseValue::has_magresist() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void EquipBaseValue::set_has_magresist() {
  _has_bits_[1] |= 0x00080000u;
}
inline void EquipBaseValue::clear_has_magresist() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void EquipBaseValue::clear_magresist() {
  magresist_ = 0u;
  clear_has_magresist();
}
inline ::google::protobuf::uint32 EquipBaseValue::magresist() const {
  // @@protoc_insertion_point(field_get:EquipBaseValue.magresist)
  return magresist_;
}
inline void EquipBaseValue::set_magresist(::google::protobuf::uint32 value) {
  set_has_magresist();
  magresist_ = value;
  // @@protoc_insertion_point(field_set:EquipBaseValue.magresist)
}

// -------------------------------------------------------------------

// EquipSplitData

// optional uint32 pos = 1;
inline bool EquipSplitData::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSplitData::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSplitData::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSplitData::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 EquipSplitData::pos() const {
  // @@protoc_insertion_point(field_get:EquipSplitData.pos)
  return pos_;
}
inline void EquipSplitData::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:EquipSplitData.pos)
}

// optional uint32 type = 2;
inline bool EquipSplitData::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSplitData::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSplitData::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSplitData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 EquipSplitData::type() const {
  // @@protoc_insertion_point(field_get:EquipSplitData.type)
  return type_;
}
inline void EquipSplitData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:EquipSplitData.type)
}

// optional uint32 value = 3;
inline bool EquipSplitData::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSplitData::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSplitData::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSplitData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 EquipSplitData::value() const {
  // @@protoc_insertion_point(field_get:EquipSplitData.value)
  return value_;
}
inline void EquipSplitData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:EquipSplitData.value)
}

// optional uint32 level = 4;
inline bool EquipSplitData::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipSplitData::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipSplitData::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipSplitData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 EquipSplitData::level() const {
  // @@protoc_insertion_point(field_get:EquipSplitData.level)
  return level_;
}
inline void EquipSplitData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:EquipSplitData.level)
}

// -------------------------------------------------------------------

// t_Object

// optional uint32 thisID = 1;
inline bool t_Object::has_thisid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t_Object::set_has_thisid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t_Object::clear_has_thisid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t_Object::clear_thisid() {
  thisid_ = 0u;
  clear_has_thisid();
}
inline ::google::protobuf::uint32 t_Object::thisid() const {
  // @@protoc_insertion_point(field_get:t_Object.thisID)
  return thisid_;
}
inline void t_Object::set_thisid(::google::protobuf::uint32 value) {
  set_has_thisid();
  thisid_ = value;
  // @@protoc_insertion_point(field_set:t_Object.thisID)
}

// optional uint32 objID = 2;
inline bool t_Object::has_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t_Object::set_has_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t_Object::clear_has_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t_Object::clear_objid() {
  objid_ = 0u;
  clear_has_objid();
}
inline ::google::protobuf::uint32 t_Object::objid() const {
  // @@protoc_insertion_point(field_get:t_Object.objID)
  return objid_;
}
inline void t_Object::set_objid(::google::protobuf::uint32 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:t_Object.objID)
}

// optional string name = 3;
inline bool t_Object::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t_Object::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t_Object::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t_Object::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& t_Object::name() const {
  // @@protoc_insertion_point(field_get:t_Object.name)
  return *name_;
}
inline void t_Object::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:t_Object.name)
}
inline void t_Object::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:t_Object.name)
}
inline void t_Object::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:t_Object.name)
}
inline ::std::string* t_Object::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:t_Object.name)
  return name_;
}
inline ::std::string* t_Object::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void t_Object::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:t_Object.name)
}

// optional string maker = 4;
inline bool t_Object::has_maker() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t_Object::set_has_maker() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t_Object::clear_has_maker() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t_Object::clear_maker() {
  if (maker_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    maker_->clear();
  }
  clear_has_maker();
}
inline const ::std::string& t_Object::maker() const {
  // @@protoc_insertion_point(field_get:t_Object.maker)
  return *maker_;
}
inline void t_Object::set_maker(const ::std::string& value) {
  set_has_maker();
  if (maker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    maker_ = new ::std::string;
  }
  maker_->assign(value);
  // @@protoc_insertion_point(field_set:t_Object.maker)
}
inline void t_Object::set_maker(const char* value) {
  set_has_maker();
  if (maker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    maker_ = new ::std::string;
  }
  maker_->assign(value);
  // @@protoc_insertion_point(field_set_char:t_Object.maker)
}
inline void t_Object::set_maker(const char* value, size_t size) {
  set_has_maker();
  if (maker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    maker_ = new ::std::string;
  }
  maker_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:t_Object.maker)
}
inline ::std::string* t_Object::mutable_maker() {
  set_has_maker();
  if (maker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    maker_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:t_Object.maker)
  return maker_;
}
inline ::std::string* t_Object::release_maker() {
  clear_has_maker();
  if (maker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = maker_;
    maker_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void t_Object::set_allocated_maker(::std::string* maker) {
  if (maker_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete maker_;
  }
  if (maker) {
    set_has_maker();
    maker_ = maker;
  } else {
    clear_has_maker();
    maker_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:t_Object.maker)
}

// optional .ObjectLocation pos = 5;
inline bool t_Object::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void t_Object::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void t_Object::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void t_Object::clear_pos() {
  if (pos_ != NULL) pos_->::ObjectLocation::Clear();
  clear_has_pos();
}
inline const ::ObjectLocation& t_Object::pos() const {
  // @@protoc_insertion_point(field_get:t_Object.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::ObjectLocation* t_Object::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::ObjectLocation;
  // @@protoc_insertion_point(field_mutable:t_Object.pos)
  return pos_;
}
inline ::ObjectLocation* t_Object::release_pos() {
  clear_has_pos();
  ::ObjectLocation* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void t_Object::set_allocated_pos(::ObjectLocation* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:t_Object.pos)
}

// optional uint32 num = 6;
inline bool t_Object::has_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void t_Object::set_has_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void t_Object::clear_has_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void t_Object::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 t_Object::num() const {
  // @@protoc_insertion_point(field_get:t_Object.num)
  return num_;
}
inline void t_Object::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:t_Object.num)
}

// optional uint32 upgrade = 7;
inline bool t_Object::has_upgrade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void t_Object::set_has_upgrade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void t_Object::clear_has_upgrade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void t_Object::clear_upgrade() {
  upgrade_ = 0u;
  clear_has_upgrade();
}
inline ::google::protobuf::uint32 t_Object::upgrade() const {
  // @@protoc_insertion_point(field_get:t_Object.upgrade)
  return upgrade_;
}
inline void t_Object::set_upgrade(::google::protobuf::uint32 value) {
  set_has_upgrade();
  upgrade_ = value;
  // @@protoc_insertion_point(field_set:t_Object.upgrade)
}

// optional uint32 kind = 8;
inline bool t_Object::has_kind() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void t_Object::set_has_kind() {
  _has_bits_[0] |= 0x00000080u;
}
inline void t_Object::clear_has_kind() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void t_Object::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 t_Object::kind() const {
  // @@protoc_insertion_point(field_get:t_Object.kind)
  return kind_;
}
inline void t_Object::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:t_Object.kind)
}

// optional uint32 level = 15;
inline bool t_Object::has_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void t_Object::set_has_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void t_Object::clear_has_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void t_Object::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 t_Object::level() const {
  // @@protoc_insertion_point(field_get:t_Object.level)
  return level_;
}
inline void t_Object::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:t_Object.level)
}

// optional uint32 needlevel = 9;
inline bool t_Object::has_needlevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void t_Object::set_has_needlevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void t_Object::clear_has_needlevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void t_Object::clear_needlevel() {
  needlevel_ = 0u;
  clear_has_needlevel();
}
inline ::google::protobuf::uint32 t_Object::needlevel() const {
  // @@protoc_insertion_point(field_get:t_Object.needlevel)
  return needlevel_;
}
inline void t_Object::set_needlevel(::google::protobuf::uint32 value) {
  set_has_needlevel();
  needlevel_ = value;
  // @@protoc_insertion_point(field_set:t_Object.needlevel)
}

// optional uint32 maxDur = 10;
inline bool t_Object::has_maxdur() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void t_Object::set_has_maxdur() {
  _has_bits_[0] |= 0x00000400u;
}
inline void t_Object::clear_has_maxdur() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void t_Object::clear_maxdur() {
  maxdur_ = 0u;
  clear_has_maxdur();
}
inline ::google::protobuf::uint32 t_Object::maxdur() const {
  // @@protoc_insertion_point(field_get:t_Object.maxDur)
  return maxdur_;
}
inline void t_Object::set_maxdur(::google::protobuf::uint32 value) {
  set_has_maxdur();
  maxdur_ = value;
  // @@protoc_insertion_point(field_set:t_Object.maxDur)
}

// optional uint32 dur = 11;
inline bool t_Object::has_dur() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void t_Object::set_has_dur() {
  _has_bits_[0] |= 0x00000800u;
}
inline void t_Object::clear_has_dur() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void t_Object::clear_dur() {
  dur_ = 0u;
  clear_has_dur();
}
inline ::google::protobuf::uint32 t_Object::dur() const {
  // @@protoc_insertion_point(field_get:t_Object.dur)
  return dur_;
}
inline void t_Object::set_dur(::google::protobuf::uint32 value) {
  set_has_dur();
  dur_ = value;
  // @@protoc_insertion_point(field_set:t_Object.dur)
}

// optional uint32 bind = 12;
inline bool t_Object::has_bind() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void t_Object::set_has_bind() {
  _has_bits_[0] |= 0x00001000u;
}
inline void t_Object::clear_has_bind() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void t_Object::clear_bind() {
  bind_ = 0u;
  clear_has_bind();
}
inline ::google::protobuf::uint32 t_Object::bind() const {
  // @@protoc_insertion_point(field_get:t_Object.bind)
  return bind_;
}
inline void t_Object::set_bind(::google::protobuf::uint32 value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:t_Object.bind)
}

// optional uint32 timertype = 13;
inline bool t_Object::has_timertype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void t_Object::set_has_timertype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void t_Object::clear_has_timertype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void t_Object::clear_timertype() {
  timertype_ = 0u;
  clear_has_timertype();
}
inline ::google::protobuf::uint32 t_Object::timertype() const {
  // @@protoc_insertion_point(field_get:t_Object.timertype)
  return timertype_;
}
inline void t_Object::set_timertype(::google::protobuf::uint32 value) {
  set_has_timertype();
  timertype_ = value;
  // @@protoc_insertion_point(field_set:t_Object.timertype)
}

// optional uint32 lifetime = 14;
inline bool t_Object::has_lifetime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void t_Object::set_has_lifetime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void t_Object::clear_has_lifetime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void t_Object::clear_lifetime() {
  lifetime_ = 0u;
  clear_has_lifetime();
}
inline ::google::protobuf::uint32 t_Object::lifetime() const {
  // @@protoc_insertion_point(field_get:t_Object.lifetime)
  return lifetime_;
}
inline void t_Object::set_lifetime(::google::protobuf::uint32 value) {
  set_has_lifetime();
  lifetime_ = value;
  // @@protoc_insertion_point(field_set:t_Object.lifetime)
}

// optional uint64 createID = 16;
inline bool t_Object::has_createid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void t_Object::set_has_createid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void t_Object::clear_has_createid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void t_Object::clear_createid() {
  createid_ = GOOGLE_ULONGLONG(0);
  clear_has_createid();
}
inline ::google::protobuf::uint64 t_Object::createid() const {
  // @@protoc_insertion_point(field_get:t_Object.createID)
  return createid_;
}
inline void t_Object::set_createid(::google::protobuf::uint64 value) {
  set_has_createid();
  createid_ = value;
  // @@protoc_insertion_point(field_set:t_Object.createID)
}

// optional uint32 makeruleid = 20;
inline bool t_Object::has_makeruleid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void t_Object::set_has_makeruleid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void t_Object::clear_has_makeruleid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void t_Object::clear_makeruleid() {
  makeruleid_ = 0u;
  clear_has_makeruleid();
}
inline ::google::protobuf::uint32 t_Object::makeruleid() const {
  // @@protoc_insertion_point(field_get:t_Object.makeruleid)
  return makeruleid_;
}
inline void t_Object::set_makeruleid(::google::protobuf::uint32 value) {
  set_has_makeruleid();
  makeruleid_ = value;
  // @@protoc_insertion_point(field_set:t_Object.makeruleid)
}

// optional .PropertyValues equipProp = 22;
inline bool t_Object::has_equipprop() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void t_Object::set_has_equipprop() {
  _has_bits_[0] |= 0x00020000u;
}
inline void t_Object::clear_has_equipprop() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void t_Object::clear_equipprop() {
  if (equipprop_ != NULL) equipprop_->::PropertyValues::Clear();
  clear_has_equipprop();
}
inline const ::PropertyValues& t_Object::equipprop() const {
  // @@protoc_insertion_point(field_get:t_Object.equipProp)
  return equipprop_ != NULL ? *equipprop_ : *default_instance_->equipprop_;
}
inline ::PropertyValues* t_Object::mutable_equipprop() {
  set_has_equipprop();
  if (equipprop_ == NULL) equipprop_ = new ::PropertyValues;
  // @@protoc_insertion_point(field_mutable:t_Object.equipProp)
  return equipprop_;
}
inline ::PropertyValues* t_Object::release_equipprop() {
  clear_has_equipprop();
  ::PropertyValues* temp = equipprop_;
  equipprop_ = NULL;
  return temp;
}
inline void t_Object::set_allocated_equipprop(::PropertyValues* equipprop) {
  delete equipprop_;
  equipprop_ = equipprop;
  if (equipprop) {
    set_has_equipprop();
  } else {
    clear_has_equipprop();
  }
  // @@protoc_insertion_point(field_set_allocated:t_Object.equipProp)
}

// optional .PropertyValuesEx equippropex = 23;
inline bool t_Object::has_equippropex() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void t_Object::set_has_equippropex() {
  _has_bits_[0] |= 0x00040000u;
}
inline void t_Object::clear_has_equippropex() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void t_Object::clear_equippropex() {
  if (equippropex_ != NULL) equippropex_->::PropertyValuesEx::Clear();
  clear_has_equippropex();
}
inline const ::PropertyValuesEx& t_Object::equippropex() const {
  // @@protoc_insertion_point(field_get:t_Object.equippropex)
  return equippropex_ != NULL ? *equippropex_ : *default_instance_->equippropex_;
}
inline ::PropertyValuesEx* t_Object::mutable_equippropex() {
  set_has_equippropex();
  if (equippropex_ == NULL) equippropex_ = new ::PropertyValuesEx;
  // @@protoc_insertion_point(field_mutable:t_Object.equippropex)
  return equippropex_;
}
inline ::PropertyValuesEx* t_Object::release_equippropex() {
  clear_has_equippropex();
  ::PropertyValuesEx* temp = equippropex_;
  equippropex_ = NULL;
  return temp;
}
inline void t_Object::set_allocated_equippropex(::PropertyValuesEx* equippropex) {
  delete equippropex_;
  equippropex_ = equippropex;
  if (equippropex) {
    set_has_equippropex();
  } else {
    clear_has_equippropex();
  }
  // @@protoc_insertion_point(field_set_allocated:t_Object.equippropex)
}

// repeated uint32 skill = 25;
inline int t_Object::skill_size() const {
  return skill_.size();
}
inline void t_Object::clear_skill() {
  skill_.Clear();
}
inline ::google::protobuf::uint32 t_Object::skill(int index) const {
  // @@protoc_insertion_point(field_get:t_Object.skill)
  return skill_.Get(index);
}
inline void t_Object::set_skill(int index, ::google::protobuf::uint32 value) {
  skill_.Set(index, value);
  // @@protoc_insertion_point(field_set:t_Object.skill)
}
inline void t_Object::add_skill(::google::protobuf::uint32 value) {
  skill_.Add(value);
  // @@protoc_insertion_point(field_add:t_Object.skill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
t_Object::skill() const {
  // @@protoc_insertion_point(field_list:t_Object.skill)
  return skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
t_Object::mutable_skill() {
  // @@protoc_insertion_point(field_mutable_list:t_Object.skill)
  return &skill_;
}

// optional uint32 subneedlevel = 26;
inline bool t_Object::has_subneedlevel() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void t_Object::set_has_subneedlevel() {
  _has_bits_[0] |= 0x00100000u;
}
inline void t_Object::clear_has_subneedlevel() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void t_Object::clear_subneedlevel() {
  subneedlevel_ = 0u;
  clear_has_subneedlevel();
}
inline ::google::protobuf::uint32 t_Object::subneedlevel() const {
  // @@protoc_insertion_point(field_get:t_Object.subneedlevel)
  return subneedlevel_;
}
inline void t_Object::set_subneedlevel(::google::protobuf::uint32 value) {
  set_has_subneedlevel();
  subneedlevel_ = value;
  // @@protoc_insertion_point(field_set:t_Object.subneedlevel)
}

// optional uint32 fivetype = 31;
inline bool t_Object::has_fivetype() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void t_Object::set_has_fivetype() {
  _has_bits_[0] |= 0x00200000u;
}
inline void t_Object::clear_has_fivetype() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void t_Object::clear_fivetype() {
  fivetype_ = 0u;
  clear_has_fivetype();
}
inline ::google::protobuf::uint32 t_Object::fivetype() const {
  // @@protoc_insertion_point(field_get:t_Object.fivetype)
  return fivetype_;
}
inline void t_Object::set_fivetype(::google::protobuf::uint32 value) {
  set_has_fivetype();
  fivetype_ = value;
  // @@protoc_insertion_point(field_set:t_Object.fivetype)
}

// optional uint32 fivepoint = 32;
inline bool t_Object::has_fivepoint() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void t_Object::set_has_fivepoint() {
  _has_bits_[0] |= 0x00400000u;
}
inline void t_Object::clear_has_fivepoint() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void t_Object::clear_fivepoint() {
  fivepoint_ = 0u;
  clear_has_fivepoint();
}
inline ::google::protobuf::uint32 t_Object::fivepoint() const {
  // @@protoc_insertion_point(field_get:t_Object.fivepoint)
  return fivepoint_;
}
inline void t_Object::set_fivepoint(::google::protobuf::uint32 value) {
  set_has_fivepoint();
  fivepoint_ = value;
  // @@protoc_insertion_point(field_set:t_Object.fivepoint)
}

// optional uint32 star = 33;
inline bool t_Object::has_star() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void t_Object::set_has_star() {
  _has_bits_[0] |= 0x00800000u;
}
inline void t_Object::clear_has_star() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void t_Object::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 t_Object::star() const {
  // @@protoc_insertion_point(field_get:t_Object.star)
  return star_;
}
inline void t_Object::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:t_Object.star)
}

// optional uint32 diamondbonus = 36;
inline bool t_Object::has_diamondbonus() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void t_Object::set_has_diamondbonus() {
  _has_bits_[0] |= 0x01000000u;
}
inline void t_Object::clear_has_diamondbonus() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void t_Object::clear_diamondbonus() {
  diamondbonus_ = 0u;
  clear_has_diamondbonus();
}
inline ::google::protobuf::uint32 t_Object::diamondbonus() const {
  // @@protoc_insertion_point(field_get:t_Object.diamondbonus)
  return diamondbonus_;
}
inline void t_Object::set_diamondbonus(::google::protobuf::uint32 value) {
  set_has_diamondbonus();
  diamondbonus_ = value;
  // @@protoc_insertion_point(field_set:t_Object.diamondbonus)
}

// optional .diamondSoket diamondsoket = 37;
inline bool t_Object::has_diamondsoket() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void t_Object::set_has_diamondsoket() {
  _has_bits_[0] |= 0x02000000u;
}
inline void t_Object::clear_has_diamondsoket() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void t_Object::clear_diamondsoket() {
  if (diamondsoket_ != NULL) diamondsoket_->::diamondSoket::Clear();
  clear_has_diamondsoket();
}
inline const ::diamondSoket& t_Object::diamondsoket() const {
  // @@protoc_insertion_point(field_get:t_Object.diamondsoket)
  return diamondsoket_ != NULL ? *diamondsoket_ : *default_instance_->diamondsoket_;
}
inline ::diamondSoket* t_Object::mutable_diamondsoket() {
  set_has_diamondsoket();
  if (diamondsoket_ == NULL) diamondsoket_ = new ::diamondSoket;
  // @@protoc_insertion_point(field_mutable:t_Object.diamondsoket)
  return diamondsoket_;
}
inline ::diamondSoket* t_Object::release_diamondsoket() {
  clear_has_diamondsoket();
  ::diamondSoket* temp = diamondsoket_;
  diamondsoket_ = NULL;
  return temp;
}
inline void t_Object::set_allocated_diamondsoket(::diamondSoket* diamondsoket) {
  delete diamondsoket_;
  diamondsoket_ = diamondsoket;
  if (diamondsoket) {
    set_has_diamondsoket();
  } else {
    clear_has_diamondsoket();
  }
  // @@protoc_insertion_point(field_set_allocated:t_Object.diamondsoket)
}

// optional .wingData wing = 38;
inline bool t_Object::has_wing() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void t_Object::set_has_wing() {
  _has_bits_[0] |= 0x04000000u;
}
inline void t_Object::clear_has_wing() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void t_Object::clear_wing() {
  if (wing_ != NULL) wing_->::wingData::Clear();
  clear_has_wing();
}
inline const ::wingData& t_Object::wing() const {
  // @@protoc_insertion_point(field_get:t_Object.wing)
  return wing_ != NULL ? *wing_ : *default_instance_->wing_;
}
inline ::wingData* t_Object::mutable_wing() {
  set_has_wing();
  if (wing_ == NULL) wing_ = new ::wingData;
  // @@protoc_insertion_point(field_mutable:t_Object.wing)
  return wing_;
}
inline ::wingData* t_Object::release_wing() {
  clear_has_wing();
  ::wingData* temp = wing_;
  wing_ = NULL;
  return temp;
}
inline void t_Object::set_allocated_wing(::wingData* wing) {
  delete wing_;
  wing_ = wing;
  if (wing) {
    set_has_wing();
  } else {
    clear_has_wing();
  }
  // @@protoc_insertion_point(field_set_allocated:t_Object.wing)
}

// optional uint32 active = 40;
inline bool t_Object::has_active() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void t_Object::set_has_active() {
  _has_bits_[0] |= 0x08000000u;
}
inline void t_Object::clear_has_active() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void t_Object::clear_active() {
  active_ = 0u;
  clear_has_active();
}
inline ::google::protobuf::uint32 t_Object::active() const {
  // @@protoc_insertion_point(field_get:t_Object.active)
  return active_;
}
inline void t_Object::set_active(::google::protobuf::uint32 value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:t_Object.active)
}

// optional uint32 boxExp = 41;
inline bool t_Object::has_boxexp() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void t_Object::set_has_boxexp() {
  _has_bits_[0] |= 0x10000000u;
}
inline void t_Object::clear_has_boxexp() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void t_Object::clear_boxexp() {
  boxexp_ = 0u;
  clear_has_boxexp();
}
inline ::google::protobuf::uint32 t_Object::boxexp() const {
  // @@protoc_insertion_point(field_get:t_Object.boxExp)
  return boxexp_;
}
inline void t_Object::set_boxexp(::google::protobuf::uint32 value) {
  set_has_boxexp();
  boxexp_ = value;
  // @@protoc_insertion_point(field_set:t_Object.boxExp)
}

// optional .flyMessage fly = 43;
inline bool t_Object::has_fly() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void t_Object::set_has_fly() {
  _has_bits_[0] |= 0x20000000u;
}
inline void t_Object::clear_has_fly() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void t_Object::clear_fly() {
  if (fly_ != NULL) fly_->::flyMessage::Clear();
  clear_has_fly();
}
inline const ::flyMessage& t_Object::fly() const {
  // @@protoc_insertion_point(field_get:t_Object.fly)
  return fly_ != NULL ? *fly_ : *default_instance_->fly_;
}
inline ::flyMessage* t_Object::mutable_fly() {
  set_has_fly();
  if (fly_ == NULL) fly_ = new ::flyMessage;
  // @@protoc_insertion_point(field_mutable:t_Object.fly)
  return fly_;
}
inline ::flyMessage* t_Object::release_fly() {
  clear_has_fly();
  ::flyMessage* temp = fly_;
  fly_ = NULL;
  return temp;
}
inline void t_Object::set_allocated_fly(::flyMessage* fly) {
  delete fly_;
  fly_ = fly;
  if (fly) {
    set_has_fly();
  } else {
    clear_has_fly();
  }
  // @@protoc_insertion_point(field_set_allocated:t_Object.fly)
}

// optional uint32 horseid = 44;
inline bool t_Object::has_horseid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void t_Object::set_has_horseid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void t_Object::clear_has_horseid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void t_Object::clear_horseid() {
  horseid_ = 0u;
  clear_has_horseid();
}
inline ::google::protobuf::uint32 t_Object::horseid() const {
  // @@protoc_insertion_point(field_get:t_Object.horseid)
  return horseid_;
}
inline void t_Object::set_horseid(::google::protobuf::uint32 value) {
  set_has_horseid();
  horseid_ = value;
  // @@protoc_insertion_point(field_set:t_Object.horseid)
}

// optional uint32 spvalue = 45;
inline bool t_Object::has_spvalue() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void t_Object::set_has_spvalue() {
  _has_bits_[0] |= 0x80000000u;
}
inline void t_Object::clear_has_spvalue() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void t_Object::clear_spvalue() {
  spvalue_ = 0u;
  clear_has_spvalue();
}
inline ::google::protobuf::uint32 t_Object::spvalue() const {
  // @@protoc_insertion_point(field_get:t_Object.spvalue)
  return spvalue_;
}
inline void t_Object::set_spvalue(::google::protobuf::uint32 value) {
  set_has_spvalue();
  spvalue_ = value;
  // @@protoc_insertion_point(field_set:t_Object.spvalue)
}

// optional uint32 friendvalue = 46;
inline bool t_Object::has_friendvalue() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void t_Object::set_has_friendvalue() {
  _has_bits_[1] |= 0x00000001u;
}
inline void t_Object::clear_has_friendvalue() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void t_Object::clear_friendvalue() {
  friendvalue_ = 0u;
  clear_has_friendvalue();
}
inline ::google::protobuf::uint32 t_Object::friendvalue() const {
  // @@protoc_insertion_point(field_get:t_Object.friendvalue)
  return friendvalue_;
}
inline void t_Object::set_friendvalue(::google::protobuf::uint32 value) {
  set_has_friendvalue();
  friendvalue_ = value;
  // @@protoc_insertion_point(field_set:t_Object.friendvalue)
}

// optional uint32 usepos = 47;
inline bool t_Object::has_usepos() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void t_Object::set_has_usepos() {
  _has_bits_[1] |= 0x00000002u;
}
inline void t_Object::clear_has_usepos() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void t_Object::clear_usepos() {
  usepos_ = 0u;
  clear_has_usepos();
}
inline ::google::protobuf::uint32 t_Object::usepos() const {
  // @@protoc_insertion_point(field_get:t_Object.usepos)
  return usepos_;
}
inline void t_Object::set_usepos(::google::protobuf::uint32 value) {
  set_has_usepos();
  usepos_ = value;
  // @@protoc_insertion_point(field_set:t_Object.usepos)
}

// optional int32 elementattr = 48 [default = -1];
inline bool t_Object::has_elementattr() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void t_Object::set_has_elementattr() {
  _has_bits_[1] |= 0x00000004u;
}
inline void t_Object::clear_has_elementattr() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void t_Object::clear_elementattr() {
  elementattr_ = -1;
  clear_has_elementattr();
}
inline ::google::protobuf::int32 t_Object::elementattr() const {
  // @@protoc_insertion_point(field_get:t_Object.elementattr)
  return elementattr_;
}
inline void t_Object::set_elementattr(::google::protobuf::int32 value) {
  set_has_elementattr();
  elementattr_ = value;
  // @@protoc_insertion_point(field_set:t_Object.elementattr)
}

// optional uint32 suittype = 49;
inline bool t_Object::has_suittype() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void t_Object::set_has_suittype() {
  _has_bits_[1] |= 0x00000008u;
}
inline void t_Object::clear_has_suittype() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void t_Object::clear_suittype() {
  suittype_ = 0u;
  clear_has_suittype();
}
inline ::google::protobuf::uint32 t_Object::suittype() const {
  // @@protoc_insertion_point(field_get:t_Object.suittype)
  return suittype_;
}
inline void t_Object::set_suittype(::google::protobuf::uint32 value) {
  set_has_suittype();
  suittype_ = value;
  // @@protoc_insertion_point(field_set:t_Object.suittype)
}

// optional uint32 suitvalue = 50;
inline bool t_Object::has_suitvalue() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void t_Object::set_has_suitvalue() {
  _has_bits_[1] |= 0x00000010u;
}
inline void t_Object::clear_has_suitvalue() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void t_Object::clear_suitvalue() {
  suitvalue_ = 0u;
  clear_has_suitvalue();
}
inline ::google::protobuf::uint32 t_Object::suitvalue() const {
  // @@protoc_insertion_point(field_get:t_Object.suitvalue)
  return suitvalue_;
}
inline void t_Object::set_suitvalue(::google::protobuf::uint32 value) {
  set_has_suitvalue();
  suitvalue_ = value;
  // @@protoc_insertion_point(field_set:t_Object.suitvalue)
}

// optional .EquipSplitData splitvalue = 51;
inline bool t_Object::has_splitvalue() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void t_Object::set_has_splitvalue() {
  _has_bits_[1] |= 0x00000020u;
}
inline void t_Object::clear_has_splitvalue() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void t_Object::clear_splitvalue() {
  if (splitvalue_ != NULL) splitvalue_->::EquipSplitData::Clear();
  clear_has_splitvalue();
}
inline const ::EquipSplitData& t_Object::splitvalue() const {
  // @@protoc_insertion_point(field_get:t_Object.splitvalue)
  return splitvalue_ != NULL ? *splitvalue_ : *default_instance_->splitvalue_;
}
inline ::EquipSplitData* t_Object::mutable_splitvalue() {
  set_has_splitvalue();
  if (splitvalue_ == NULL) splitvalue_ = new ::EquipSplitData;
  // @@protoc_insertion_point(field_mutable:t_Object.splitvalue)
  return splitvalue_;
}
inline ::EquipSplitData* t_Object::release_splitvalue() {
  clear_has_splitvalue();
  ::EquipSplitData* temp = splitvalue_;
  splitvalue_ = NULL;
  return temp;
}
inline void t_Object::set_allocated_splitvalue(::EquipSplitData* splitvalue) {
  delete splitvalue_;
  splitvalue_ = splitvalue;
  if (splitvalue) {
    set_has_splitvalue();
  } else {
    clear_has_splitvalue();
  }
  // @@protoc_insertion_point(field_set_allocated:t_Object.splitvalue)
}

// optional bool suitact = 52 [default = false];
inline bool t_Object::has_suitact() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void t_Object::set_has_suitact() {
  _has_bits_[1] |= 0x00000040u;
}
inline void t_Object::clear_has_suitact() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void t_Object::clear_suitact() {
  suitact_ = false;
  clear_has_suitact();
}
inline bool t_Object::suitact() const {
  // @@protoc_insertion_point(field_get:t_Object.suitact)
  return suitact_;
}
inline void t_Object::set_suitact(bool value) {
  set_has_suitact();
  suitact_ = value;
  // @@protoc_insertion_point(field_set:t_Object.suitact)
}

// -------------------------------------------------------------------

// ObjectMapData

// optional uint32 id = 1;
inline bool ObjectMapData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectMapData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectMapData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectMapData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ObjectMapData::id() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.id)
  return id_;
}
inline void ObjectMapData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.id)
}

// optional uint32 temp_id = 2;
inline bool ObjectMapData::has_temp_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectMapData::set_has_temp_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectMapData::clear_has_temp_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectMapData::clear_temp_id() {
  temp_id_ = 0u;
  clear_has_temp_id();
}
inline ::google::protobuf::uint32 ObjectMapData::temp_id() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.temp_id)
  return temp_id_;
}
inline void ObjectMapData::set_temp_id(::google::protobuf::uint32 value) {
  set_has_temp_id();
  temp_id_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.temp_id)
}

// optional uint32 type = 3;
inline bool ObjectMapData::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectMapData::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ObjectMapData::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ObjectMapData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ObjectMapData::type() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.type)
  return type_;
}
inline void ObjectMapData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.type)
}

// optional uint32 num = 4;
inline bool ObjectMapData::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectMapData::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ObjectMapData::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ObjectMapData::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 ObjectMapData::num() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.num)
  return num_;
}
inline void ObjectMapData::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.num)
}

// optional uint32 x = 5;
inline bool ObjectMapData::has_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ObjectMapData::set_has_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ObjectMapData::clear_has_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ObjectMapData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 ObjectMapData::x() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.x)
  return x_;
}
inline void ObjectMapData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.x)
}

// optional uint32 y = 6;
inline bool ObjectMapData::has_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ObjectMapData::set_has_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ObjectMapData::clear_has_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ObjectMapData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 ObjectMapData::y() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.y)
  return y_;
}
inline void ObjectMapData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.y)
}

// optional uint32 kind = 7;
inline bool ObjectMapData::has_kind() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ObjectMapData::set_has_kind() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ObjectMapData::clear_has_kind() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ObjectMapData::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 ObjectMapData::kind() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.kind)
  return kind_;
}
inline void ObjectMapData::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.kind)
}

// optional uint32 protect_time = 8;
inline bool ObjectMapData::has_protect_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ObjectMapData::set_has_protect_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ObjectMapData::clear_has_protect_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ObjectMapData::clear_protect_time() {
  protect_time_ = 0u;
  clear_has_protect_time();
}
inline ::google::protobuf::uint32 ObjectMapData::protect_time() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.protect_time)
  return protect_time_;
}
inline void ObjectMapData::set_protect_time(::google::protobuf::uint32 value) {
  set_has_protect_time();
  protect_time_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.protect_time)
}

// optional uint32 disappear_time = 9;
inline bool ObjectMapData::has_disappear_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ObjectMapData::set_has_disappear_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ObjectMapData::clear_has_disappear_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ObjectMapData::clear_disappear_time() {
  disappear_time_ = 0u;
  clear_has_disappear_time();
}
inline ::google::protobuf::uint32 ObjectMapData::disappear_time() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.disappear_time)
  return disappear_time_;
}
inline void ObjectMapData::set_disappear_time(::google::protobuf::uint32 value) {
  set_has_disappear_time();
  disappear_time_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.disappear_time)
}

// optional uint32 owner_type = 10;
inline bool ObjectMapData::has_owner_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ObjectMapData::set_has_owner_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ObjectMapData::clear_has_owner_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ObjectMapData::clear_owner_type() {
  owner_type_ = 0u;
  clear_has_owner_type();
}
inline ::google::protobuf::uint32 ObjectMapData::owner_type() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.owner_type)
  return owner_type_;
}
inline void ObjectMapData::set_owner_type(::google::protobuf::uint32 value) {
  set_has_owner_type();
  owner_type_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.owner_type)
}

// optional uint32 owner_id = 11;
inline bool ObjectMapData::has_owner_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ObjectMapData::set_has_owner_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ObjectMapData::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ObjectMapData::clear_owner_id() {
  owner_id_ = 0u;
  clear_has_owner_id();
}
inline ::google::protobuf::uint32 ObjectMapData::owner_id() const {
  // @@protoc_insertion_point(field_get:ObjectMapData.owner_id)
  return owner_id_;
}
inline void ObjectMapData::set_owner_id(::google::protobuf::uint32 value) {
  set_has_owner_id();
  owner_id_ = value;
  // @@protoc_insertion_point(field_set:ObjectMapData.owner_id)
}

// repeated uint32 prefixkeys = 12;
inline int ObjectMapData::prefixkeys_size() const {
  return prefixkeys_.size();
}
inline void ObjectMapData::clear_prefixkeys() {
  prefixkeys_.Clear();
}
inline ::google::protobuf::uint32 ObjectMapData::prefixkeys(int index) const {
  // @@protoc_insertion_point(field_get:ObjectMapData.prefixkeys)
  return prefixkeys_.Get(index);
}
inline void ObjectMapData::set_prefixkeys(int index, ::google::protobuf::uint32 value) {
  prefixkeys_.Set(index, value);
  // @@protoc_insertion_point(field_set:ObjectMapData.prefixkeys)
}
inline void ObjectMapData::add_prefixkeys(::google::protobuf::uint32 value) {
  prefixkeys_.Add(value);
  // @@protoc_insertion_point(field_add:ObjectMapData.prefixkeys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ObjectMapData::prefixkeys() const {
  // @@protoc_insertion_point(field_list:ObjectMapData.prefixkeys)
  return prefixkeys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ObjectMapData::mutable_prefixkeys() {
  // @@protoc_insertion_point(field_mutable_list:ObjectMapData.prefixkeys)
  return &prefixkeys_;
}

// -------------------------------------------------------------------

// stChatChannel

// optional string senderName = 1;
inline bool stChatChannel::has_sendername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stChatChannel::set_has_sendername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stChatChannel::clear_has_sendername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stChatChannel::clear_sendername() {
  if (sendername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_->clear();
  }
  clear_has_sendername();
}
inline const ::std::string& stChatChannel::sendername() const {
  // @@protoc_insertion_point(field_get:stChatChannel.senderName)
  return *sendername_;
}
inline void stChatChannel::set_sendername(const ::std::string& value) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(value);
  // @@protoc_insertion_point(field_set:stChatChannel.senderName)
}
inline void stChatChannel::set_sendername(const char* value) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(value);
  // @@protoc_insertion_point(field_set_char:stChatChannel.senderName)
}
inline void stChatChannel::set_sendername(const char* value, size_t size) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:stChatChannel.senderName)
}
inline ::std::string* stChatChannel::mutable_sendername() {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:stChatChannel.senderName)
  return sendername_;
}
inline ::std::string* stChatChannel::release_sendername() {
  clear_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sendername_;
    sendername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stChatChannel::set_allocated_sendername(::std::string* sendername) {
  if (sendername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendername_;
  }
  if (sendername) {
    set_has_sendername();
    sendername_ = sendername;
  } else {
    clear_has_sendername();
    sendername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:stChatChannel.senderName)
}

// optional string text = 2;
inline bool stChatChannel::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stChatChannel::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stChatChannel::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stChatChannel::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& stChatChannel::text() const {
  // @@protoc_insertion_point(field_get:stChatChannel.text)
  return *text_;
}
inline void stChatChannel::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:stChatChannel.text)
}
inline void stChatChannel::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:stChatChannel.text)
}
inline void stChatChannel::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:stChatChannel.text)
}
inline ::std::string* stChatChannel::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:stChatChannel.text)
  return text_;
}
inline ::std::string* stChatChannel::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stChatChannel::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:stChatChannel.text)
}

// repeated .ScenePetData petData = 3;
inline int stChatChannel::petdata_size() const {
  return petdata_.size();
}
inline void stChatChannel::clear_petdata() {
  petdata_.Clear();
}
inline const ::ScenePetData& stChatChannel::petdata(int index) const {
  // @@protoc_insertion_point(field_get:stChatChannel.petData)
  return petdata_.Get(index);
}
inline ::ScenePetData* stChatChannel::mutable_petdata(int index) {
  // @@protoc_insertion_point(field_mutable:stChatChannel.petData)
  return petdata_.Mutable(index);
}
inline ::ScenePetData* stChatChannel::add_petdata() {
  // @@protoc_insertion_point(field_add:stChatChannel.petData)
  return petdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ScenePetData >&
stChatChannel::petdata() const {
  // @@protoc_insertion_point(field_list:stChatChannel.petData)
  return petdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::ScenePetData >*
stChatChannel::mutable_petdata() {
  // @@protoc_insertion_point(field_mutable_list:stChatChannel.petData)
  return &petdata_;
}

// repeated .t_Object items = 4;
inline int stChatChannel::items_size() const {
  return items_.size();
}
inline void stChatChannel::clear_items() {
  items_.Clear();
}
inline const ::t_Object& stChatChannel::items(int index) const {
  // @@protoc_insertion_point(field_get:stChatChannel.items)
  return items_.Get(index);
}
inline ::t_Object* stChatChannel::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:stChatChannel.items)
  return items_.Mutable(index);
}
inline ::t_Object* stChatChannel::add_items() {
  // @@protoc_insertion_point(field_add:stChatChannel.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::t_Object >&
stChatChannel::items() const {
  // @@protoc_insertion_point(field_list:stChatChannel.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::t_Object >*
stChatChannel::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:stChatChannel.items)
  return &items_;
}

// repeated .HorseExtraData horsedata = 5;
inline int stChatChannel::horsedata_size() const {
  return horsedata_.size();
}
inline void stChatChannel::clear_horsedata() {
  horsedata_.Clear();
}
inline const ::HorseExtraData& stChatChannel::horsedata(int index) const {
  // @@protoc_insertion_point(field_get:stChatChannel.horsedata)
  return horsedata_.Get(index);
}
inline ::HorseExtraData* stChatChannel::mutable_horsedata(int index) {
  // @@protoc_insertion_point(field_mutable:stChatChannel.horsedata)
  return horsedata_.Mutable(index);
}
inline ::HorseExtraData* stChatChannel::add_horsedata() {
  // @@protoc_insertion_point(field_add:stChatChannel.horsedata)
  return horsedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HorseExtraData >&
stChatChannel::horsedata() const {
  // @@protoc_insertion_point(field_list:stChatChannel.horsedata)
  return horsedata_;
}
inline ::google::protobuf::RepeatedPtrField< ::HorseExtraData >*
stChatChannel::mutable_horsedata() {
  // @@protoc_insertion_point(field_mutable_list:stChatChannel.horsedata)
  return &horsedata_;
}

// -------------------------------------------------------------------

// stUserShopItemView

// optional .t_Object item = 1;
inline bool stUserShopItemView::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stUserShopItemView::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stUserShopItemView::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stUserShopItemView::clear_item() {
  if (item_ != NULL) item_->::t_Object::Clear();
  clear_has_item();
}
inline const ::t_Object& stUserShopItemView::item() const {
  // @@protoc_insertion_point(field_get:stUserShopItemView.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::t_Object* stUserShopItemView::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::t_Object;
  // @@protoc_insertion_point(field_mutable:stUserShopItemView.item)
  return item_;
}
inline ::t_Object* stUserShopItemView::release_item() {
  clear_has_item();
  ::t_Object* temp = item_;
  item_ = NULL;
  return temp;
}
inline void stUserShopItemView::set_allocated_item(::t_Object* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:stUserShopItemView.item)
}

// optional uint32 unitPrice = 2;
inline bool stUserShopItemView::has_unitprice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stUserShopItemView::set_has_unitprice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stUserShopItemView::clear_has_unitprice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stUserShopItemView::clear_unitprice() {
  unitprice_ = 0u;
  clear_has_unitprice();
}
inline ::google::protobuf::uint32 stUserShopItemView::unitprice() const {
  // @@protoc_insertion_point(field_get:stUserShopItemView.unitPrice)
  return unitprice_;
}
inline void stUserShopItemView::set_unitprice(::google::protobuf::uint32 value) {
  set_has_unitprice();
  unitprice_ = value;
  // @@protoc_insertion_point(field_set:stUserShopItemView.unitPrice)
}

// optional uint32 num = 3;
inline bool stUserShopItemView::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stUserShopItemView::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stUserShopItemView::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stUserShopItemView::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stUserShopItemView::num() const {
  // @@protoc_insertion_point(field_get:stUserShopItemView.num)
  return num_;
}
inline void stUserShopItemView::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:stUserShopItemView.num)
}

// optional uint32 x = 4;
inline bool stUserShopItemView::has_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stUserShopItemView::set_has_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stUserShopItemView::clear_has_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stUserShopItemView::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 stUserShopItemView::x() const {
  // @@protoc_insertion_point(field_get:stUserShopItemView.x)
  return x_;
}
inline void stUserShopItemView::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:stUserShopItemView.x)
}

// optional uint32 y = 5;
inline bool stUserShopItemView::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stUserShopItemView::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stUserShopItemView::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stUserShopItemView::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 stUserShopItemView::y() const {
  // @@protoc_insertion_point(field_get:stUserShopItemView.y)
  return y_;
}
inline void stUserShopItemView::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:stUserShopItemView.y)
}

// optional .stUserShopItemView.PriceTypes price_type = 6 [default = Silver];
inline bool stUserShopItemView::has_price_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stUserShopItemView::set_has_price_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stUserShopItemView::clear_has_price_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stUserShopItemView::clear_price_type() {
  price_type_ = 0;
  clear_has_price_type();
}
inline ::stUserShopItemView_PriceTypes stUserShopItemView::price_type() const {
  // @@protoc_insertion_point(field_get:stUserShopItemView.price_type)
  return static_cast< ::stUserShopItemView_PriceTypes >(price_type_);
}
inline void stUserShopItemView::set_price_type(::stUserShopItemView_PriceTypes value) {
  assert(::stUserShopItemView_PriceTypes_IsValid(value));
  set_has_price_type();
  price_type_ = value;
  // @@protoc_insertion_point(field_set:stUserShopItemView.price_type)
}

// optional uint32 tax = 7;
inline bool stUserShopItemView::has_tax() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stUserShopItemView::set_has_tax() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stUserShopItemView::clear_has_tax() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stUserShopItemView::clear_tax() {
  tax_ = 0u;
  clear_has_tax();
}
inline ::google::protobuf::uint32 stUserShopItemView::tax() const {
  // @@protoc_insertion_point(field_get:stUserShopItemView.tax)
  return tax_;
}
inline void stUserShopItemView::set_tax(::google::protobuf::uint32 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:stUserShopItemView.tax)
}

// -------------------------------------------------------------------

// LockItem

// optional uint32 id = 1;
inline bool LockItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LockItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LockItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LockItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 LockItem::id() const {
  // @@protoc_insertion_point(field_get:LockItem.id)
  return id_;
}
inline void LockItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:LockItem.id)
}

// optional uint32 value = 2;
inline bool LockItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LockItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LockItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LockItem::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 LockItem::value() const {
  // @@protoc_insertion_point(field_get:LockItem.value)
  return value_;
}
inline void LockItem::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:LockItem.value)
}

// -------------------------------------------------------------------

// CounterNum

// optional uint32 id = 1;
inline bool CounterNum::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CounterNum::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CounterNum::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CounterNum::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CounterNum::id() const {
  // @@protoc_insertion_point(field_get:CounterNum.id)
  return id_;
}
inline void CounterNum::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CounterNum.id)
}

// optional uint32 time = 2;
inline bool CounterNum::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CounterNum::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CounterNum::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CounterNum::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CounterNum::time() const {
  // @@protoc_insertion_point(field_get:CounterNum.time)
  return time_;
}
inline void CounterNum::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:CounterNum.time)
}

// optional uint32 valueForDay = 3;
inline bool CounterNum::has_valueforday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CounterNum::set_has_valueforday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CounterNum::clear_has_valueforday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CounterNum::clear_valueforday() {
  valueforday_ = 0u;
  clear_has_valueforday();
}
inline ::google::protobuf::uint32 CounterNum::valueforday() const {
  // @@protoc_insertion_point(field_get:CounterNum.valueForDay)
  return valueforday_;
}
inline void CounterNum::set_valueforday(::google::protobuf::uint32 value) {
  set_has_valueforday();
  valueforday_ = value;
  // @@protoc_insertion_point(field_set:CounterNum.valueForDay)
}

// optional uint32 valueForWeek = 4;
inline bool CounterNum::has_valueforweek() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CounterNum::set_has_valueforweek() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CounterNum::clear_has_valueforweek() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CounterNum::clear_valueforweek() {
  valueforweek_ = 0u;
  clear_has_valueforweek();
}
inline ::google::protobuf::uint32 CounterNum::valueforweek() const {
  // @@protoc_insertion_point(field_get:CounterNum.valueForWeek)
  return valueforweek_;
}
inline void CounterNum::set_valueforweek(::google::protobuf::uint32 value) {
  set_has_valueforweek();
  valueforweek_ = value;
  // @@protoc_insertion_point(field_set:CounterNum.valueForWeek)
}

// optional uint32 valueForMonth = 5;
inline bool CounterNum::has_valueformonth() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CounterNum::set_has_valueformonth() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CounterNum::clear_has_valueformonth() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CounterNum::clear_valueformonth() {
  valueformonth_ = 0u;
  clear_has_valueformonth();
}
inline ::google::protobuf::uint32 CounterNum::valueformonth() const {
  // @@protoc_insertion_point(field_get:CounterNum.valueForMonth)
  return valueformonth_;
}
inline void CounterNum::set_valueformonth(::google::protobuf::uint32 value) {
  set_has_valueformonth();
  valueformonth_ = value;
  // @@protoc_insertion_point(field_set:CounterNum.valueForMonth)
}

// optional uint32 valueForYear = 6;
inline bool CounterNum::has_valueforyear() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CounterNum::set_has_valueforyear() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CounterNum::clear_has_valueforyear() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CounterNum::clear_valueforyear() {
  valueforyear_ = 0u;
  clear_has_valueforyear();
}
inline ::google::protobuf::uint32 CounterNum::valueforyear() const {
  // @@protoc_insertion_point(field_get:CounterNum.valueForYear)
  return valueforyear_;
}
inline void CounterNum::set_valueforyear(::google::protobuf::uint32 value) {
  set_has_valueforyear();
  valueforyear_ = value;
  // @@protoc_insertion_point(field_set:CounterNum.valueForYear)
}

// optional uint32 valueForever = 7;
inline bool CounterNum::has_valueforever() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CounterNum::set_has_valueforever() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CounterNum::clear_has_valueforever() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CounterNum::clear_valueforever() {
  valueforever_ = 0u;
  clear_has_valueforever();
}
inline ::google::protobuf::uint32 CounterNum::valueforever() const {
  // @@protoc_insertion_point(field_get:CounterNum.valueForever)
  return valueforever_;
}
inline void CounterNum::set_valueforever(::google::protobuf::uint32 value) {
  set_has_valueforever();
  valueforever_ = value;
  // @@protoc_insertion_point(field_set:CounterNum.valueForever)
}

// -------------------------------------------------------------------

// CounterSave

// optional .CounterType counttype = 1 [default = COUNTERT_NONE];
inline bool CounterSave::has_counttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CounterSave::set_has_counttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CounterSave::clear_has_counttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CounterSave::clear_counttype() {
  counttype_ = 0;
  clear_has_counttype();
}
inline ::CounterType CounterSave::counttype() const {
  // @@protoc_insertion_point(field_get:CounterSave.counttype)
  return static_cast< ::CounterType >(counttype_);
}
inline void CounterSave::set_counttype(::CounterType value) {
  assert(::CounterType_IsValid(value));
  set_has_counttype();
  counttype_ = value;
  // @@protoc_insertion_point(field_set:CounterSave.counttype)
}

// repeated .CounterNum countnum = 2;
inline int CounterSave::countnum_size() const {
  return countnum_.size();
}
inline void CounterSave::clear_countnum() {
  countnum_.Clear();
}
inline const ::CounterNum& CounterSave::countnum(int index) const {
  // @@protoc_insertion_point(field_get:CounterSave.countnum)
  return countnum_.Get(index);
}
inline ::CounterNum* CounterSave::mutable_countnum(int index) {
  // @@protoc_insertion_point(field_mutable:CounterSave.countnum)
  return countnum_.Mutable(index);
}
inline ::CounterNum* CounterSave::add_countnum() {
  // @@protoc_insertion_point(field_add:CounterSave.countnum)
  return countnum_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CounterNum >&
CounterSave::countnum() const {
  // @@protoc_insertion_point(field_list:CounterSave.countnum)
  return countnum_;
}
inline ::google::protobuf::RepeatedPtrField< ::CounterNum >*
CounterSave::mutable_countnum() {
  // @@protoc_insertion_point(field_mutable_list:CounterSave.countnum)
  return &countnum_;
}

// -------------------------------------------------------------------

// TimeExpItem

// optional uint32 baseid = 1;
inline bool TimeExpItem::has_baseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeExpItem::set_has_baseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeExpItem::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeExpItem::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
inline ::google::protobuf::uint32 TimeExpItem::baseid() const {
  // @@protoc_insertion_point(field_get:TimeExpItem.baseid)
  return baseid_;
}
inline void TimeExpItem::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:TimeExpItem.baseid)
}

// optional uint32 type = 2;
inline bool TimeExpItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeExpItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeExpItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeExpItem::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 TimeExpItem::type() const {
  // @@protoc_insertion_point(field_get:TimeExpItem.type)
  return type_;
}
inline void TimeExpItem::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TimeExpItem.type)
}

// optional uint32 end_time = 3;
inline bool TimeExpItem::has_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TimeExpItem::set_has_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TimeExpItem::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TimeExpItem::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 TimeExpItem::end_time() const {
  // @@protoc_insertion_point(field_get:TimeExpItem.end_time)
  return end_time_;
}
inline void TimeExpItem::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:TimeExpItem.end_time)
}

// optional uint32 coefficient = 4;
inline bool TimeExpItem::has_coefficient() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TimeExpItem::set_has_coefficient() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TimeExpItem::clear_has_coefficient() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TimeExpItem::clear_coefficient() {
  coefficient_ = 0u;
  clear_has_coefficient();
}
inline ::google::protobuf::uint32 TimeExpItem::coefficient() const {
  // @@protoc_insertion_point(field_get:TimeExpItem.coefficient)
  return coefficient_;
}
inline void TimeExpItem::set_coefficient(::google::protobuf::uint32 value) {
  set_has_coefficient();
  coefficient_ = value;
  // @@protoc_insertion_point(field_set:TimeExpItem.coefficient)
}

// optional uint32 state = 5;
inline bool TimeExpItem::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TimeExpItem::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TimeExpItem::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TimeExpItem::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 TimeExpItem::state() const {
  // @@protoc_insertion_point(field_get:TimeExpItem.state)
  return state_;
}
inline void TimeExpItem::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:TimeExpItem.state)
}

// -------------------------------------------------------------------

// TimeExpSave

// optional uint32 left_time = 1;
inline bool TimeExpSave::has_left_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeExpSave::set_has_left_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeExpSave::clear_has_left_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeExpSave::clear_left_time() {
  left_time_ = 0u;
  clear_has_left_time();
}
inline ::google::protobuf::uint32 TimeExpSave::left_time() const {
  // @@protoc_insertion_point(field_get:TimeExpSave.left_time)
  return left_time_;
}
inline void TimeExpSave::set_left_time(::google::protobuf::uint32 value) {
  set_has_left_time();
  left_time_ = value;
  // @@protoc_insertion_point(field_set:TimeExpSave.left_time)
}

// optional uint32 reset_time = 2;
inline bool TimeExpSave::has_reset_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeExpSave::set_has_reset_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeExpSave::clear_has_reset_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeExpSave::clear_reset_time() {
  reset_time_ = 0u;
  clear_has_reset_time();
}
inline ::google::protobuf::uint32 TimeExpSave::reset_time() const {
  // @@protoc_insertion_point(field_get:TimeExpSave.reset_time)
  return reset_time_;
}
inline void TimeExpSave::set_reset_time(::google::protobuf::uint32 value) {
  set_has_reset_time();
  reset_time_ = value;
  // @@protoc_insertion_point(field_set:TimeExpSave.reset_time)
}

// repeated .TimeExpItem expitem = 3;
inline int TimeExpSave::expitem_size() const {
  return expitem_.size();
}
inline void TimeExpSave::clear_expitem() {
  expitem_.Clear();
}
inline const ::TimeExpItem& TimeExpSave::expitem(int index) const {
  // @@protoc_insertion_point(field_get:TimeExpSave.expitem)
  return expitem_.Get(index);
}
inline ::TimeExpItem* TimeExpSave::mutable_expitem(int index) {
  // @@protoc_insertion_point(field_mutable:TimeExpSave.expitem)
  return expitem_.Mutable(index);
}
inline ::TimeExpItem* TimeExpSave::add_expitem() {
  // @@protoc_insertion_point(field_add:TimeExpSave.expitem)
  return expitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TimeExpItem >&
TimeExpSave::expitem() const {
  // @@protoc_insertion_point(field_list:TimeExpSave.expitem)
  return expitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::TimeExpItem >*
TimeExpSave::mutable_expitem() {
  // @@protoc_insertion_point(field_mutable_list:TimeExpSave.expitem)
  return &expitem_;
}

// -------------------------------------------------------------------

// ObjectArray

// repeated .t_Object objects = 1;
inline int ObjectArray::objects_size() const {
  return objects_.size();
}
inline void ObjectArray::clear_objects() {
  objects_.Clear();
}
inline const ::t_Object& ObjectArray::objects(int index) const {
  // @@protoc_insertion_point(field_get:ObjectArray.objects)
  return objects_.Get(index);
}
inline ::t_Object* ObjectArray::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:ObjectArray.objects)
  return objects_.Mutable(index);
}
inline ::t_Object* ObjectArray::add_objects() {
  // @@protoc_insertion_point(field_add:ObjectArray.objects)
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::t_Object >&
ObjectArray::objects() const {
  // @@protoc_insertion_point(field_list:ObjectArray.objects)
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::t_Object >*
ObjectArray::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:ObjectArray.objects)
  return &objects_;
}

// -------------------------------------------------------------------

// MailOneObject

// optional uint32 index = 1;
inline bool MailOneObject::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailOneObject::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailOneObject::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailOneObject::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 MailOneObject::index() const {
  // @@protoc_insertion_point(field_get:MailOneObject.index)
  return index_;
}
inline void MailOneObject::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:MailOneObject.index)
}

// optional .t_Object object = 2;
inline bool MailOneObject::has_object() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailOneObject::set_has_object() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailOneObject::clear_has_object() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailOneObject::clear_object() {
  if (object_ != NULL) object_->::t_Object::Clear();
  clear_has_object();
}
inline const ::t_Object& MailOneObject::object() const {
  // @@protoc_insertion_point(field_get:MailOneObject.object)
  return object_ != NULL ? *object_ : *default_instance_->object_;
}
inline ::t_Object* MailOneObject::mutable_object() {
  set_has_object();
  if (object_ == NULL) object_ = new ::t_Object;
  // @@protoc_insertion_point(field_mutable:MailOneObject.object)
  return object_;
}
inline ::t_Object* MailOneObject::release_object() {
  clear_has_object();
  ::t_Object* temp = object_;
  object_ = NULL;
  return temp;
}
inline void MailOneObject::set_allocated_object(::t_Object* object) {
  delete object_;
  object_ = object;
  if (object) {
    set_has_object();
  } else {
    clear_has_object();
  }
  // @@protoc_insertion_point(field_set_allocated:MailOneObject.object)
}

// -------------------------------------------------------------------

// MailObjects

// repeated .MailOneObject objects = 1;
inline int MailObjects::objects_size() const {
  return objects_.size();
}
inline void MailObjects::clear_objects() {
  objects_.Clear();
}
inline const ::MailOneObject& MailObjects::objects(int index) const {
  // @@protoc_insertion_point(field_get:MailObjects.objects)
  return objects_.Get(index);
}
inline ::MailOneObject* MailObjects::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:MailObjects.objects)
  return objects_.Mutable(index);
}
inline ::MailOneObject* MailObjects::add_objects() {
  // @@protoc_insertion_point(field_add:MailObjects.objects)
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MailOneObject >&
MailObjects::objects() const {
  // @@protoc_insertion_point(field_list:MailObjects.objects)
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::MailOneObject >*
MailObjects::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:MailObjects.objects)
  return &objects_;
}

// -------------------------------------------------------------------

// SceneShowFuncNpcData

// optional uint32 baseId = 1;
inline bool SceneShowFuncNpcData::has_baseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneShowFuncNpcData::set_has_baseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneShowFuncNpcData::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneShowFuncNpcData::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
inline ::google::protobuf::uint32 SceneShowFuncNpcData::baseid() const {
  // @@protoc_insertion_point(field_get:SceneShowFuncNpcData.baseId)
  return baseid_;
}
inline void SceneShowFuncNpcData::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:SceneShowFuncNpcData.baseId)
}

// optional uint32 tempId = 2;
inline bool SceneShowFuncNpcData::has_tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneShowFuncNpcData::set_has_tempid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneShowFuncNpcData::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneShowFuncNpcData::clear_tempid() {
  tempid_ = 0u;
  clear_has_tempid();
}
inline ::google::protobuf::uint32 SceneShowFuncNpcData::tempid() const {
  // @@protoc_insertion_point(field_get:SceneShowFuncNpcData.tempId)
  return tempid_;
}
inline void SceneShowFuncNpcData::set_tempid(::google::protobuf::uint32 value) {
  set_has_tempid();
  tempid_ = value;
  // @@protoc_insertion_point(field_set:SceneShowFuncNpcData.tempId)
}

// optional uint32 x = 3;
inline bool SceneShowFuncNpcData::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneShowFuncNpcData::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneShowFuncNpcData::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneShowFuncNpcData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 SceneShowFuncNpcData::x() const {
  // @@protoc_insertion_point(field_get:SceneShowFuncNpcData.x)
  return x_;
}
inline void SceneShowFuncNpcData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:SceneShowFuncNpcData.x)
}

// optional uint32 y = 4;
inline bool SceneShowFuncNpcData::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneShowFuncNpcData::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneShowFuncNpcData::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneShowFuncNpcData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 SceneShowFuncNpcData::y() const {
  // @@protoc_insertion_point(field_get:SceneShowFuncNpcData.y)
  return y_;
}
inline void SceneShowFuncNpcData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:SceneShowFuncNpcData.y)
}

// optional uint32 show = 5;
inline bool SceneShowFuncNpcData::has_show() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SceneShowFuncNpcData::set_has_show() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SceneShowFuncNpcData::clear_has_show() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SceneShowFuncNpcData::clear_show() {
  show_ = 0u;
  clear_has_show();
}
inline ::google::protobuf::uint32 SceneShowFuncNpcData::show() const {
  // @@protoc_insertion_point(field_get:SceneShowFuncNpcData.show)
  return show_;
}
inline void SceneShowFuncNpcData::set_show(::google::protobuf::uint32 value) {
  set_has_show();
  show_ = value;
  // @@protoc_insertion_point(field_set:SceneShowFuncNpcData.show)
}

// optional uint32 sign = 6;
inline bool SceneShowFuncNpcData::has_sign() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SceneShowFuncNpcData::set_has_sign() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SceneShowFuncNpcData::clear_has_sign() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SceneShowFuncNpcData::clear_sign() {
  sign_ = 0u;
  clear_has_sign();
}
inline ::google::protobuf::uint32 SceneShowFuncNpcData::sign() const {
  // @@protoc_insertion_point(field_get:SceneShowFuncNpcData.sign)
  return sign_;
}
inline void SceneShowFuncNpcData::set_sign(::google::protobuf::uint32 value) {
  set_has_sign();
  sign_ = value;
  // @@protoc_insertion_point(field_set:SceneShowFuncNpcData.sign)
}

// -------------------------------------------------------------------

// MapFuncNpcList

// repeated .SceneShowFuncNpcData data = 1;
inline int MapFuncNpcList::data_size() const {
  return data_.size();
}
inline void MapFuncNpcList::clear_data() {
  data_.Clear();
}
inline const ::SceneShowFuncNpcData& MapFuncNpcList::data(int index) const {
  // @@protoc_insertion_point(field_get:MapFuncNpcList.data)
  return data_.Get(index);
}
inline ::SceneShowFuncNpcData* MapFuncNpcList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MapFuncNpcList.data)
  return data_.Mutable(index);
}
inline ::SceneShowFuncNpcData* MapFuncNpcList::add_data() {
  // @@protoc_insertion_point(field_add:MapFuncNpcList.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SceneShowFuncNpcData >&
MapFuncNpcList::data() const {
  // @@protoc_insertion_point(field_list:MapFuncNpcList.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::SceneShowFuncNpcData >*
MapFuncNpcList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MapFuncNpcList.data)
  return &data_;
}

// -------------------------------------------------------------------

// MusterCount

// optional uint32 musterid = 1;
inline bool MusterCount::has_musterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MusterCount::set_has_musterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MusterCount::clear_has_musterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MusterCount::clear_musterid() {
  musterid_ = 0u;
  clear_has_musterid();
}
inline ::google::protobuf::uint32 MusterCount::musterid() const {
  // @@protoc_insertion_point(field_get:MusterCount.musterid)
  return musterid_;
}
inline void MusterCount::set_musterid(::google::protobuf::uint32 value) {
  set_has_musterid();
  musterid_ = value;
  // @@protoc_insertion_point(field_set:MusterCount.musterid)
}

// optional uint32 count = 2;
inline bool MusterCount::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MusterCount::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MusterCount::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MusterCount::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 MusterCount::count() const {
  // @@protoc_insertion_point(field_get:MusterCount.count)
  return count_;
}
inline void MusterCount::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:MusterCount.count)
}

// -------------------------------------------------------------------

// septCartHelpBack

// optional uint32 scene_id = 1;
inline bool septCartHelpBack::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void septCartHelpBack::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void septCartHelpBack::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void septCartHelpBack::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 septCartHelpBack::scene_id() const {
  // @@protoc_insertion_point(field_get:septCartHelpBack.scene_id)
  return scene_id_;
}
inline void septCartHelpBack::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:septCartHelpBack.scene_id)
}

// optional string scene_name = 2;
inline bool septCartHelpBack::has_scene_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void septCartHelpBack::set_has_scene_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void septCartHelpBack::clear_has_scene_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void septCartHelpBack::clear_scene_name() {
  if (scene_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_->clear();
  }
  clear_has_scene_name();
}
inline const ::std::string& septCartHelpBack::scene_name() const {
  // @@protoc_insertion_point(field_get:septCartHelpBack.scene_name)
  return *scene_name_;
}
inline void septCartHelpBack::set_scene_name(const ::std::string& value) {
  set_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_ = new ::std::string;
  }
  scene_name_->assign(value);
  // @@protoc_insertion_point(field_set:septCartHelpBack.scene_name)
}
inline void septCartHelpBack::set_scene_name(const char* value) {
  set_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_ = new ::std::string;
  }
  scene_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:septCartHelpBack.scene_name)
}
inline void septCartHelpBack::set_scene_name(const char* value, size_t size) {
  set_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_ = new ::std::string;
  }
  scene_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:septCartHelpBack.scene_name)
}
inline ::std::string* septCartHelpBack::mutable_scene_name() {
  set_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scene_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:septCartHelpBack.scene_name)
  return scene_name_;
}
inline ::std::string* septCartHelpBack::release_scene_name() {
  clear_has_scene_name();
  if (scene_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = scene_name_;
    scene_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void septCartHelpBack::set_allocated_scene_name(::std::string* scene_name) {
  if (scene_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scene_name_;
  }
  if (scene_name) {
    set_has_scene_name();
    scene_name_ = scene_name;
  } else {
    clear_has_scene_name();
    scene_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:septCartHelpBack.scene_name)
}

// optional uint32 x = 3;
inline bool septCartHelpBack::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void septCartHelpBack::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void septCartHelpBack::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void septCartHelpBack::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 septCartHelpBack::x() const {
  // @@protoc_insertion_point(field_get:septCartHelpBack.x)
  return x_;
}
inline void septCartHelpBack::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:septCartHelpBack.x)
}

// optional uint32 y = 4;
inline bool septCartHelpBack::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void septCartHelpBack::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void septCartHelpBack::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void septCartHelpBack::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 septCartHelpBack::y() const {
  // @@protoc_insertion_point(field_get:septCartHelpBack.y)
  return y_;
}
inline void septCartHelpBack::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:septCartHelpBack.y)
}

// optional uint32 help_time = 5;
inline bool septCartHelpBack::has_help_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void septCartHelpBack::set_has_help_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void septCartHelpBack::clear_has_help_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void septCartHelpBack::clear_help_time() {
  help_time_ = 0u;
  clear_has_help_time();
}
inline ::google::protobuf::uint32 septCartHelpBack::help_time() const {
  // @@protoc_insertion_point(field_get:septCartHelpBack.help_time)
  return help_time_;
}
inline void septCartHelpBack::set_help_time(::google::protobuf::uint32 value) {
  set_has_help_time();
  help_time_ = value;
  // @@protoc_insertion_point(field_set:septCartHelpBack.help_time)
}

// -------------------------------------------------------------------

// septCartHelpSave

// optional uint32 cart_tmpid = 1 [default = 0];
inline bool septCartHelpSave::has_cart_tmpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void septCartHelpSave::set_has_cart_tmpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void septCartHelpSave::clear_has_cart_tmpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void septCartHelpSave::clear_cart_tmpid() {
  cart_tmpid_ = 0u;
  clear_has_cart_tmpid();
}
inline ::google::protobuf::uint32 septCartHelpSave::cart_tmpid() const {
  // @@protoc_insertion_point(field_get:septCartHelpSave.cart_tmpid)
  return cart_tmpid_;
}
inline void septCartHelpSave::set_cart_tmpid(::google::protobuf::uint32 value) {
  set_has_cart_tmpid();
  cart_tmpid_ = value;
  // @@protoc_insertion_point(field_set:septCartHelpSave.cart_tmpid)
}

// optional bool available = 2 [default = false];
inline bool septCartHelpSave::has_available() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void septCartHelpSave::set_has_available() {
  _has_bits_[0] |= 0x00000002u;
}
inline void septCartHelpSave::clear_has_available() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void septCartHelpSave::clear_available() {
  available_ = false;
  clear_has_available();
}
inline bool septCartHelpSave::available() const {
  // @@protoc_insertion_point(field_get:septCartHelpSave.available)
  return available_;
}
inline void septCartHelpSave::set_available(bool value) {
  set_has_available();
  available_ = value;
  // @@protoc_insertion_point(field_set:septCartHelpSave.available)
}

// -------------------------------------------------------------------

// BinaryGangData

// optional uint32 startdoubleexptime = 1;
inline bool BinaryGangData::has_startdoubleexptime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BinaryGangData::set_has_startdoubleexptime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BinaryGangData::clear_has_startdoubleexptime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BinaryGangData::clear_startdoubleexptime() {
  startdoubleexptime_ = 0u;
  clear_has_startdoubleexptime();
}
inline ::google::protobuf::uint32 BinaryGangData::startdoubleexptime() const {
  // @@protoc_insertion_point(field_get:BinaryGangData.startdoubleexptime)
  return startdoubleexptime_;
}
inline void BinaryGangData::set_startdoubleexptime(::google::protobuf::uint32 value) {
  set_has_startdoubleexptime();
  startdoubleexptime_ = value;
  // @@protoc_insertion_point(field_set:BinaryGangData.startdoubleexptime)
}

// -------------------------------------------------------------------

// GangServerSyncData

// optional uint32 gangid = 1;
inline bool GangServerSyncData::has_gangid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GangServerSyncData::set_has_gangid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GangServerSyncData::clear_has_gangid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GangServerSyncData::clear_gangid() {
  gangid_ = 0u;
  clear_has_gangid();
}
inline ::google::protobuf::uint32 GangServerSyncData::gangid() const {
  // @@protoc_insertion_point(field_get:GangServerSyncData.gangid)
  return gangid_;
}
inline void GangServerSyncData::set_gangid(::google::protobuf::uint32 value) {
  set_has_gangid();
  gangid_ = value;
  // @@protoc_insertion_point(field_set:GangServerSyncData.gangid)
}

// optional string gangname = 2;
inline bool GangServerSyncData::has_gangname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GangServerSyncData::set_has_gangname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GangServerSyncData::clear_has_gangname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GangServerSyncData::clear_gangname() {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_->clear();
  }
  clear_has_gangname();
}
inline const ::std::string& GangServerSyncData::gangname() const {
  // @@protoc_insertion_point(field_get:GangServerSyncData.gangname)
  return *gangname_;
}
inline void GangServerSyncData::set_gangname(const ::std::string& value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set:GangServerSyncData.gangname)
}
inline void GangServerSyncData::set_gangname(const char* value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GangServerSyncData.gangname)
}
inline void GangServerSyncData::set_gangname(const char* value, size_t size) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GangServerSyncData.gangname)
}
inline ::std::string* GangServerSyncData::mutable_gangname() {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GangServerSyncData.gangname)
  return gangname_;
}
inline ::std::string* GangServerSyncData::release_gangname() {
  clear_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gangname_;
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GangServerSyncData::set_allocated_gangname(::std::string* gangname) {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gangname_;
  }
  if (gangname) {
    set_has_gangname();
    gangname_ = gangname;
  } else {
    clear_has_gangname();
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GangServerSyncData.gangname)
}

// optional uint32 startdoubleexptime = 3;
inline bool GangServerSyncData::has_startdoubleexptime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GangServerSyncData::set_has_startdoubleexptime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GangServerSyncData::clear_has_startdoubleexptime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GangServerSyncData::clear_startdoubleexptime() {
  startdoubleexptime_ = 0u;
  clear_has_startdoubleexptime();
}
inline ::google::protobuf::uint32 GangServerSyncData::startdoubleexptime() const {
  // @@protoc_insertion_point(field_get:GangServerSyncData.startdoubleexptime)
  return startdoubleexptime_;
}
inline void GangServerSyncData::set_startdoubleexptime(::google::protobuf::uint32 value) {
  set_has_startdoubleexptime();
  startdoubleexptime_ = value;
  // @@protoc_insertion_point(field_set:GangServerSyncData.startdoubleexptime)
}

// -------------------------------------------------------------------

// StockAccountData

// optional uint32 money = 1;
inline bool StockAccountData::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StockAccountData::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StockAccountData::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StockAccountData::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 StockAccountData::money() const {
  // @@protoc_insertion_point(field_get:StockAccountData.money)
  return money_;
}
inline void StockAccountData::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:StockAccountData.money)
}

// optional uint32 gold = 2;
inline bool StockAccountData::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StockAccountData::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StockAccountData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StockAccountData::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 StockAccountData::gold() const {
  // @@protoc_insertion_point(field_get:StockAccountData.gold)
  return gold_;
}
inline void StockAccountData::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:StockAccountData.gold)
}

// -------------------------------------------------------------------

// OneStockItem

// optional uint32 price = 1;
inline bool OneStockItem::has_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneStockItem::set_has_price() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneStockItem::clear_has_price() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneStockItem::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 OneStockItem::price() const {
  // @@protoc_insertion_point(field_get:OneStockItem.price)
  return price_;
}
inline void OneStockItem::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:OneStockItem.price)
}

// optional uint32 num = 2;
inline bool OneStockItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneStockItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneStockItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneStockItem::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 OneStockItem::num() const {
  // @@protoc_insertion_point(field_get:OneStockItem.num)
  return num_;
}
inline void OneStockItem::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:OneStockItem.num)
}

// -------------------------------------------------------------------

// SelfOneStockItem

// optional uint32 tradeid = 1;
inline bool SelfOneStockItem::has_tradeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelfOneStockItem::set_has_tradeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelfOneStockItem::clear_has_tradeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelfOneStockItem::clear_tradeid() {
  tradeid_ = 0u;
  clear_has_tradeid();
}
inline ::google::protobuf::uint32 SelfOneStockItem::tradeid() const {
  // @@protoc_insertion_point(field_get:SelfOneStockItem.tradeid)
  return tradeid_;
}
inline void SelfOneStockItem::set_tradeid(::google::protobuf::uint32 value) {
  set_has_tradeid();
  tradeid_ = value;
  // @@protoc_insertion_point(field_set:SelfOneStockItem.tradeid)
}

// optional .enumStockAuctionType type = 2 [default = enumStock_SellGold];
inline bool SelfOneStockItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelfOneStockItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelfOneStockItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelfOneStockItem::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::enumStockAuctionType SelfOneStockItem::type() const {
  // @@protoc_insertion_point(field_get:SelfOneStockItem.type)
  return static_cast< ::enumStockAuctionType >(type_);
}
inline void SelfOneStockItem::set_type(::enumStockAuctionType value) {
  assert(::enumStockAuctionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SelfOneStockItem.type)
}

// optional uint32 price = 3;
inline bool SelfOneStockItem::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SelfOneStockItem::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SelfOneStockItem::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SelfOneStockItem::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 SelfOneStockItem::price() const {
  // @@protoc_insertion_point(field_get:SelfOneStockItem.price)
  return price_;
}
inline void SelfOneStockItem::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:SelfOneStockItem.price)
}

// optional uint32 num = 4;
inline bool SelfOneStockItem::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SelfOneStockItem::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SelfOneStockItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SelfOneStockItem::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 SelfOneStockItem::num() const {
  // @@protoc_insertion_point(field_get:SelfOneStockItem.num)
  return num_;
}
inline void SelfOneStockItem::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:SelfOneStockItem.num)
}

// optional uint32 time = 5;
inline bool SelfOneStockItem::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SelfOneStockItem::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SelfOneStockItem::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SelfOneStockItem::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 SelfOneStockItem::time() const {
  // @@protoc_insertion_point(field_get:SelfOneStockItem.time)
  return time_;
}
inline void SelfOneStockItem::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:SelfOneStockItem.time)
}

// -------------------------------------------------------------------

// StockTypeList

// optional .enumStockAuctionType type = 1 [default = enumStock_SellGold];
inline bool StockTypeList::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StockTypeList::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StockTypeList::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StockTypeList::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::enumStockAuctionType StockTypeList::type() const {
  // @@protoc_insertion_point(field_get:StockTypeList.type)
  return static_cast< ::enumStockAuctionType >(type_);
}
inline void StockTypeList::set_type(::enumStockAuctionType value) {
  assert(::enumStockAuctionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:StockTypeList.type)
}

// repeated .OneStockItem items = 2;
inline int StockTypeList::items_size() const {
  return items_.size();
}
inline void StockTypeList::clear_items() {
  items_.Clear();
}
inline const ::OneStockItem& StockTypeList::items(int index) const {
  // @@protoc_insertion_point(field_get:StockTypeList.items)
  return items_.Get(index);
}
inline ::OneStockItem* StockTypeList::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:StockTypeList.items)
  return items_.Mutable(index);
}
inline ::OneStockItem* StockTypeList::add_items() {
  // @@protoc_insertion_point(field_add:StockTypeList.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneStockItem >&
StockTypeList::items() const {
  // @@protoc_insertion_point(field_list:StockTypeList.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneStockItem >*
StockTypeList::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:StockTypeList.items)
  return &items_;
}

// -------------------------------------------------------------------

// SeptBuildingData

// required .enumSeptBuildingType type = 1 [default = enumSeptBuildingType_None];
inline bool SeptBuildingData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeptBuildingData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeptBuildingData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeptBuildingData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::enumSeptBuildingType SeptBuildingData::type() const {
  // @@protoc_insertion_point(field_get:SeptBuildingData.type)
  return static_cast< ::enumSeptBuildingType >(type_);
}
inline void SeptBuildingData::set_type(::enumSeptBuildingType value) {
  assert(::enumSeptBuildingType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SeptBuildingData.type)
}

// optional uint32 level = 2;
inline bool SeptBuildingData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeptBuildingData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeptBuildingData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeptBuildingData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SeptBuildingData::level() const {
  // @@protoc_insertion_point(field_get:SeptBuildingData.level)
  return level_;
}
inline void SeptBuildingData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SeptBuildingData.level)
}

// optional uint32 point = 3;
inline bool SeptBuildingData::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SeptBuildingData::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SeptBuildingData::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SeptBuildingData::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 SeptBuildingData::point() const {
  // @@protoc_insertion_point(field_get:SeptBuildingData.point)
  return point_;
}
inline void SeptBuildingData::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:SeptBuildingData.point)
}

// optional uint32 buildstate = 4 [default = 0];
inline bool SeptBuildingData::has_buildstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SeptBuildingData::set_has_buildstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SeptBuildingData::clear_has_buildstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SeptBuildingData::clear_buildstate() {
  buildstate_ = 0u;
  clear_has_buildstate();
}
inline ::google::protobuf::uint32 SeptBuildingData::buildstate() const {
  // @@protoc_insertion_point(field_get:SeptBuildingData.buildstate)
  return buildstate_;
}
inline void SeptBuildingData::set_buildstate(::google::protobuf::uint32 value) {
  set_has_buildstate();
  buildstate_ = value;
  // @@protoc_insertion_point(field_set:SeptBuildingData.buildstate)
}

// -------------------------------------------------------------------

// SceneChariotSkill

// optional uint32 skill_id = 1;
inline bool SceneChariotSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneChariotSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneChariotSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneChariotSkill::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 SceneChariotSkill::skill_id() const {
  // @@protoc_insertion_point(field_get:SceneChariotSkill.skill_id)
  return skill_id_;
}
inline void SceneChariotSkill::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotSkill.skill_id)
}

// optional uint32 skill_level = 2;
inline bool SceneChariotSkill::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneChariotSkill::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneChariotSkill::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneChariotSkill::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 SceneChariotSkill::skill_level() const {
  // @@protoc_insertion_point(field_get:SceneChariotSkill.skill_level)
  return skill_level_;
}
inline void SceneChariotSkill::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotSkill.skill_level)
}

// optional uint32 use_type = 3;
inline bool SceneChariotSkill::has_use_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneChariotSkill::set_has_use_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneChariotSkill::clear_has_use_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneChariotSkill::clear_use_type() {
  use_type_ = 0u;
  clear_has_use_type();
}
inline ::google::protobuf::uint32 SceneChariotSkill::use_type() const {
  // @@protoc_insertion_point(field_get:SceneChariotSkill.use_type)
  return use_type_;
}
inline void SceneChariotSkill::set_use_type(::google::protobuf::uint32 value) {
  set_has_use_type();
  use_type_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotSkill.use_type)
}

// -------------------------------------------------------------------

// SceneChariotBaseData

// optional uint32 base_id = 1;
inline bool SceneChariotBaseData::has_base_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneChariotBaseData::set_has_base_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneChariotBaseData::clear_has_base_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneChariotBaseData::clear_base_id() {
  base_id_ = 0u;
  clear_has_base_id();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::base_id() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.base_id)
  return base_id_;
}
inline void SceneChariotBaseData::set_base_id(::google::protobuf::uint32 value) {
  set_has_base_id();
  base_id_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.base_id)
}

// optional string name = 2;
inline bool SceneChariotBaseData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneChariotBaseData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneChariotBaseData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneChariotBaseData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SceneChariotBaseData::name() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.name)
  return *name_;
}
inline void SceneChariotBaseData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.name)
}
inline void SceneChariotBaseData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SceneChariotBaseData.name)
}
inline void SceneChariotBaseData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SceneChariotBaseData.name)
}
inline ::std::string* SceneChariotBaseData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SceneChariotBaseData.name)
  return name_;
}
inline ::std::string* SceneChariotBaseData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SceneChariotBaseData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SceneChariotBaseData.name)
}

// optional string type_name = 3;
inline bool SceneChariotBaseData::has_type_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneChariotBaseData::set_has_type_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneChariotBaseData::clear_has_type_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneChariotBaseData::clear_type_name() {
  if (type_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_->clear();
  }
  clear_has_type_name();
}
inline const ::std::string& SceneChariotBaseData::type_name() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.type_name)
  return *type_name_;
}
inline void SceneChariotBaseData::set_type_name(const ::std::string& value) {
  set_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_ = new ::std::string;
  }
  type_name_->assign(value);
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.type_name)
}
inline void SceneChariotBaseData::set_type_name(const char* value) {
  set_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_ = new ::std::string;
  }
  type_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SceneChariotBaseData.type_name)
}
inline void SceneChariotBaseData::set_type_name(const char* value, size_t size) {
  set_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_ = new ::std::string;
  }
  type_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SceneChariotBaseData.type_name)
}
inline ::std::string* SceneChariotBaseData::mutable_type_name() {
  set_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SceneChariotBaseData.type_name)
  return type_name_;
}
inline ::std::string* SceneChariotBaseData::release_type_name() {
  clear_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_name_;
    type_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SceneChariotBaseData::set_allocated_type_name(::std::string* type_name) {
  if (type_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_name_;
  }
  if (type_name) {
    set_has_type_name();
    type_name_ = type_name;
  } else {
    clear_has_type_name();
    type_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SceneChariotBaseData.type_name)
}

// repeated uint32 sign = 4 [packed = true];
inline int SceneChariotBaseData::sign_size() const {
  return sign_.size();
}
inline void SceneChariotBaseData::clear_sign() {
  sign_.Clear();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::sign(int index) const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.sign)
  return sign_.Get(index);
}
inline void SceneChariotBaseData::set_sign(int index, ::google::protobuf::uint32 value) {
  sign_.Set(index, value);
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.sign)
}
inline void SceneChariotBaseData::add_sign(::google::protobuf::uint32 value) {
  sign_.Add(value);
  // @@protoc_insertion_point(field_add:SceneChariotBaseData.sign)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneChariotBaseData::sign() const {
  // @@protoc_insertion_point(field_list:SceneChariotBaseData.sign)
  return sign_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneChariotBaseData::mutable_sign() {
  // @@protoc_insertion_point(field_mutable_list:SceneChariotBaseData.sign)
  return &sign_;
}

// repeated uint32 ai = 5;
inline int SceneChariotBaseData::ai_size() const {
  return ai_.size();
}
inline void SceneChariotBaseData::clear_ai() {
  ai_.Clear();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::ai(int index) const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.ai)
  return ai_.Get(index);
}
inline void SceneChariotBaseData::set_ai(int index, ::google::protobuf::uint32 value) {
  ai_.Set(index, value);
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.ai)
}
inline void SceneChariotBaseData::add_ai(::google::protobuf::uint32 value) {
  ai_.Add(value);
  // @@protoc_insertion_point(field_add:SceneChariotBaseData.ai)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneChariotBaseData::ai() const {
  // @@protoc_insertion_point(field_list:SceneChariotBaseData.ai)
  return ai_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneChariotBaseData::mutable_ai() {
  // @@protoc_insertion_point(field_mutable_list:SceneChariotBaseData.ai)
  return &ai_;
}

// optional uint32 honor_level = 6;
inline bool SceneChariotBaseData::has_honor_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SceneChariotBaseData::set_has_honor_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SceneChariotBaseData::clear_has_honor_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SceneChariotBaseData::clear_honor_level() {
  honor_level_ = 0u;
  clear_has_honor_level();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::honor_level() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.honor_level)
  return honor_level_;
}
inline void SceneChariotBaseData::set_honor_level(::google::protobuf::uint32 value) {
  set_has_honor_level();
  honor_level_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.honor_level)
}

// optional uint32 honor = 7;
inline bool SceneChariotBaseData::has_honor() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SceneChariotBaseData::set_has_honor() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SceneChariotBaseData::clear_has_honor() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SceneChariotBaseData::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::honor() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.honor)
  return honor_;
}
inline void SceneChariotBaseData::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.honor)
}

// optional uint32 sept_id = 8;
inline bool SceneChariotBaseData::has_sept_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SceneChariotBaseData::set_has_sept_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SceneChariotBaseData::clear_has_sept_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SceneChariotBaseData::clear_sept_id() {
  sept_id_ = 0u;
  clear_has_sept_id();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::sept_id() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.sept_id)
  return sept_id_;
}
inline void SceneChariotBaseData::set_sept_id(::google::protobuf::uint32 value) {
  set_has_sept_id();
  sept_id_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.sept_id)
}

// optional uint32 index = 9;
inline bool SceneChariotBaseData::has_index() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SceneChariotBaseData::set_has_index() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SceneChariotBaseData::clear_has_index() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SceneChariotBaseData::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::index() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.index)
  return index_;
}
inline void SceneChariotBaseData::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.index)
}

// optional string ex_holder_name = 10;
inline bool SceneChariotBaseData::has_ex_holder_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SceneChariotBaseData::set_has_ex_holder_name() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SceneChariotBaseData::clear_has_ex_holder_name() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SceneChariotBaseData::clear_ex_holder_name() {
  if (ex_holder_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ex_holder_name_->clear();
  }
  clear_has_ex_holder_name();
}
inline const ::std::string& SceneChariotBaseData::ex_holder_name() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.ex_holder_name)
  return *ex_holder_name_;
}
inline void SceneChariotBaseData::set_ex_holder_name(const ::std::string& value) {
  set_has_ex_holder_name();
  if (ex_holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ex_holder_name_ = new ::std::string;
  }
  ex_holder_name_->assign(value);
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.ex_holder_name)
}
inline void SceneChariotBaseData::set_ex_holder_name(const char* value) {
  set_has_ex_holder_name();
  if (ex_holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ex_holder_name_ = new ::std::string;
  }
  ex_holder_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SceneChariotBaseData.ex_holder_name)
}
inline void SceneChariotBaseData::set_ex_holder_name(const char* value, size_t size) {
  set_has_ex_holder_name();
  if (ex_holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ex_holder_name_ = new ::std::string;
  }
  ex_holder_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SceneChariotBaseData.ex_holder_name)
}
inline ::std::string* SceneChariotBaseData::mutable_ex_holder_name() {
  set_has_ex_holder_name();
  if (ex_holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ex_holder_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SceneChariotBaseData.ex_holder_name)
  return ex_holder_name_;
}
inline ::std::string* SceneChariotBaseData::release_ex_holder_name() {
  clear_has_ex_holder_name();
  if (ex_holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ex_holder_name_;
    ex_holder_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SceneChariotBaseData::set_allocated_ex_holder_name(::std::string* ex_holder_name) {
  if (ex_holder_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ex_holder_name_;
  }
  if (ex_holder_name) {
    set_has_ex_holder_name();
    ex_holder_name_ = ex_holder_name;
  } else {
    clear_has_ex_holder_name();
    ex_holder_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SceneChariotBaseData.ex_holder_name)
}

// optional uint32 max_carrier = 11;
inline bool SceneChariotBaseData::has_max_carrier() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SceneChariotBaseData::set_has_max_carrier() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SceneChariotBaseData::clear_has_max_carrier() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SceneChariotBaseData::clear_max_carrier() {
  max_carrier_ = 0u;
  clear_has_max_carrier();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::max_carrier() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.max_carrier)
  return max_carrier_;
}
inline void SceneChariotBaseData::set_max_carrier(::google::protobuf::uint32 value) {
  set_has_max_carrier();
  max_carrier_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.max_carrier)
}

// optional uint32 hp = 12;
inline bool SceneChariotBaseData::has_hp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SceneChariotBaseData::set_has_hp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SceneChariotBaseData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SceneChariotBaseData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::hp() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.hp)
  return hp_;
}
inline void SceneChariotBaseData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.hp)
}

// optional uint32 maxhp = 13;
inline bool SceneChariotBaseData::has_maxhp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SceneChariotBaseData::set_has_maxhp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SceneChariotBaseData::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SceneChariotBaseData::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::maxhp() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.maxhp)
  return maxhp_;
}
inline void SceneChariotBaseData::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.maxhp)
}

// optional uint32 mp = 14;
inline bool SceneChariotBaseData::has_mp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SceneChariotBaseData::set_has_mp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SceneChariotBaseData::clear_has_mp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SceneChariotBaseData::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::mp() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.mp)
  return mp_;
}
inline void SceneChariotBaseData::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.mp)
}

// optional uint32 maxmp = 15;
inline bool SceneChariotBaseData::has_maxmp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SceneChariotBaseData::set_has_maxmp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SceneChariotBaseData::clear_has_maxmp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SceneChariotBaseData::clear_maxmp() {
  maxmp_ = 0u;
  clear_has_maxmp();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::maxmp() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.maxmp)
  return maxmp_;
}
inline void SceneChariotBaseData::set_maxmp(::google::protobuf::uint32 value) {
  set_has_maxmp();
  maxmp_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.maxmp)
}

// optional uint32 pmax_attack = 16;
inline bool SceneChariotBaseData::has_pmax_attack() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SceneChariotBaseData::set_has_pmax_attack() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SceneChariotBaseData::clear_has_pmax_attack() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SceneChariotBaseData::clear_pmax_attack() {
  pmax_attack_ = 0u;
  clear_has_pmax_attack();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::pmax_attack() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.pmax_attack)
  return pmax_attack_;
}
inline void SceneChariotBaseData::set_pmax_attack(::google::protobuf::uint32 value) {
  set_has_pmax_attack();
  pmax_attack_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.pmax_attack)
}

// optional uint32 mmax_attack = 17;
inline bool SceneChariotBaseData::has_mmax_attack() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SceneChariotBaseData::set_has_mmax_attack() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SceneChariotBaseData::clear_has_mmax_attack() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SceneChariotBaseData::clear_mmax_attack() {
  mmax_attack_ = 0u;
  clear_has_mmax_attack();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::mmax_attack() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.mmax_attack)
  return mmax_attack_;
}
inline void SceneChariotBaseData::set_mmax_attack(::google::protobuf::uint32 value) {
  set_has_mmax_attack();
  mmax_attack_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.mmax_attack)
}

// optional uint32 pmin_attack = 18;
inline bool SceneChariotBaseData::has_pmin_attack() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SceneChariotBaseData::set_has_pmin_attack() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SceneChariotBaseData::clear_has_pmin_attack() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SceneChariotBaseData::clear_pmin_attack() {
  pmin_attack_ = 0u;
  clear_has_pmin_attack();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::pmin_attack() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.pmin_attack)
  return pmin_attack_;
}
inline void SceneChariotBaseData::set_pmin_attack(::google::protobuf::uint32 value) {
  set_has_pmin_attack();
  pmin_attack_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.pmin_attack)
}

// optional uint32 mmin_attack = 19;
inline bool SceneChariotBaseData::has_mmin_attack() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SceneChariotBaseData::set_has_mmin_attack() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SceneChariotBaseData::clear_has_mmin_attack() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SceneChariotBaseData::clear_mmin_attack() {
  mmin_attack_ = 0u;
  clear_has_mmin_attack();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::mmin_attack() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.mmin_attack)
  return mmin_attack_;
}
inline void SceneChariotBaseData::set_mmin_attack(::google::protobuf::uint32 value) {
  set_has_mmin_attack();
  mmin_attack_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.mmin_attack)
}

// optional uint32 pdefence = 20;
inline bool SceneChariotBaseData::has_pdefence() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SceneChariotBaseData::set_has_pdefence() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SceneChariotBaseData::clear_has_pdefence() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SceneChariotBaseData::clear_pdefence() {
  pdefence_ = 0u;
  clear_has_pdefence();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::pdefence() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.pdefence)
  return pdefence_;
}
inline void SceneChariotBaseData::set_pdefence(::google::protobuf::uint32 value) {
  set_has_pdefence();
  pdefence_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.pdefence)
}

// optional uint32 mdefence = 21;
inline bool SceneChariotBaseData::has_mdefence() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SceneChariotBaseData::set_has_mdefence() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SceneChariotBaseData::clear_has_mdefence() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SceneChariotBaseData::clear_mdefence() {
  mdefence_ = 0u;
  clear_has_mdefence();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::mdefence() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.mdefence)
  return mdefence_;
}
inline void SceneChariotBaseData::set_mdefence(::google::protobuf::uint32 value) {
  set_has_mdefence();
  mdefence_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.mdefence)
}

// optional uint32 heavy = 22;
inline bool SceneChariotBaseData::has_heavy() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SceneChariotBaseData::set_has_heavy() {
  _has_bits_[0] |= 0x00200000u;
}
inline void SceneChariotBaseData::clear_has_heavy() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void SceneChariotBaseData::clear_heavy() {
  heavy_ = 0u;
  clear_has_heavy();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::heavy() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.heavy)
  return heavy_;
}
inline void SceneChariotBaseData::set_heavy(::google::protobuf::uint32 value) {
  set_has_heavy();
  heavy_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.heavy)
}

// optional uint32 attack_speed_level = 23;
inline bool SceneChariotBaseData::has_attack_speed_level() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SceneChariotBaseData::set_has_attack_speed_level() {
  _has_bits_[0] |= 0x00400000u;
}
inline void SceneChariotBaseData::clear_has_attack_speed_level() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void SceneChariotBaseData::clear_attack_speed_level() {
  attack_speed_level_ = 0u;
  clear_has_attack_speed_level();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::attack_speed_level() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.attack_speed_level)
  return attack_speed_level_;
}
inline void SceneChariotBaseData::set_attack_speed_level(::google::protobuf::uint32 value) {
  set_has_attack_speed_level();
  attack_speed_level_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.attack_speed_level)
}

// optional uint32 attack_length_level = 24;
inline bool SceneChariotBaseData::has_attack_length_level() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SceneChariotBaseData::set_has_attack_length_level() {
  _has_bits_[0] |= 0x00800000u;
}
inline void SceneChariotBaseData::clear_has_attack_length_level() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void SceneChariotBaseData::clear_attack_length_level() {
  attack_length_level_ = 0u;
  clear_has_attack_length_level();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::attack_length_level() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.attack_length_level)
  return attack_length_level_;
}
inline void SceneChariotBaseData::set_attack_length_level(::google::protobuf::uint32 value) {
  set_has_attack_length_level();
  attack_length_level_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.attack_length_level)
}

// optional uint32 move_speed_level = 25;
inline bool SceneChariotBaseData::has_move_speed_level() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SceneChariotBaseData::set_has_move_speed_level() {
  _has_bits_[0] |= 0x01000000u;
}
inline void SceneChariotBaseData::clear_has_move_speed_level() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void SceneChariotBaseData::clear_move_speed_level() {
  move_speed_level_ = 0u;
  clear_has_move_speed_level();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::move_speed_level() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.move_speed_level)
  return move_speed_level_;
}
inline void SceneChariotBaseData::set_move_speed_level(::google::protobuf::uint32 value) {
  set_has_move_speed_level();
  move_speed_level_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.move_speed_level)
}

// optional uint32 strength = 26;
inline bool SceneChariotBaseData::has_strength() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SceneChariotBaseData::set_has_strength() {
  _has_bits_[0] |= 0x02000000u;
}
inline void SceneChariotBaseData::clear_has_strength() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void SceneChariotBaseData::clear_strength() {
  strength_ = 0u;
  clear_has_strength();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::strength() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.strength)
  return strength_;
}
inline void SceneChariotBaseData::set_strength(::google::protobuf::uint32 value) {
  set_has_strength();
  strength_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.strength)
}

// optional uint32 dexterity = 27;
inline bool SceneChariotBaseData::has_dexterity() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SceneChariotBaseData::set_has_dexterity() {
  _has_bits_[0] |= 0x04000000u;
}
inline void SceneChariotBaseData::clear_has_dexterity() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void SceneChariotBaseData::clear_dexterity() {
  dexterity_ = 0u;
  clear_has_dexterity();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::dexterity() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.dexterity)
  return dexterity_;
}
inline void SceneChariotBaseData::set_dexterity(::google::protobuf::uint32 value) {
  set_has_dexterity();
  dexterity_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.dexterity)
}

// optional uint32 mentality = 28;
inline bool SceneChariotBaseData::has_mentality() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SceneChariotBaseData::set_has_mentality() {
  _has_bits_[0] |= 0x08000000u;
}
inline void SceneChariotBaseData::clear_has_mentality() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void SceneChariotBaseData::clear_mentality() {
  mentality_ = 0u;
  clear_has_mentality();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::mentality() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.mentality)
  return mentality_;
}
inline void SceneChariotBaseData::set_mentality(::google::protobuf::uint32 value) {
  set_has_mentality();
  mentality_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.mentality)
}

// optional uint32 constitution = 29;
inline bool SceneChariotBaseData::has_constitution() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SceneChariotBaseData::set_has_constitution() {
  _has_bits_[0] |= 0x10000000u;
}
inline void SceneChariotBaseData::clear_has_constitution() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void SceneChariotBaseData::clear_constitution() {
  constitution_ = 0u;
  clear_has_constitution();
}
inline ::google::protobuf::uint32 SceneChariotBaseData::constitution() const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.constitution)
  return constitution_;
}
inline void SceneChariotBaseData::set_constitution(::google::protobuf::uint32 value) {
  set_has_constitution();
  constitution_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBaseData.constitution)
}

// repeated .SceneChariotSkill skill = 35;
inline int SceneChariotBaseData::skill_size() const {
  return skill_.size();
}
inline void SceneChariotBaseData::clear_skill() {
  skill_.Clear();
}
inline const ::SceneChariotSkill& SceneChariotBaseData::skill(int index) const {
  // @@protoc_insertion_point(field_get:SceneChariotBaseData.skill)
  return skill_.Get(index);
}
inline ::SceneChariotSkill* SceneChariotBaseData::mutable_skill(int index) {
  // @@protoc_insertion_point(field_mutable:SceneChariotBaseData.skill)
  return skill_.Mutable(index);
}
inline ::SceneChariotSkill* SceneChariotBaseData::add_skill() {
  // @@protoc_insertion_point(field_add:SceneChariotBaseData.skill)
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SceneChariotSkill >&
SceneChariotBaseData::skill() const {
  // @@protoc_insertion_point(field_list:SceneChariotBaseData.skill)
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::SceneChariotSkill >*
SceneChariotBaseData::mutable_skill() {
  // @@protoc_insertion_point(field_mutable_list:SceneChariotBaseData.skill)
  return &skill_;
}

// -------------------------------------------------------------------

// SceneChariotBinaryData

// optional .SceneChariotBaseData base = 1;
inline bool SceneChariotBinaryData::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneChariotBinaryData::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneChariotBinaryData::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneChariotBinaryData::clear_base() {
  if (base_ != NULL) base_->::SceneChariotBaseData::Clear();
  clear_has_base();
}
inline const ::SceneChariotBaseData& SceneChariotBinaryData::base() const {
  // @@protoc_insertion_point(field_get:SceneChariotBinaryData.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::SceneChariotBaseData* SceneChariotBinaryData::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::SceneChariotBaseData;
  // @@protoc_insertion_point(field_mutable:SceneChariotBinaryData.base)
  return base_;
}
inline ::SceneChariotBaseData* SceneChariotBinaryData::release_base() {
  clear_has_base();
  ::SceneChariotBaseData* temp = base_;
  base_ = NULL;
  return temp;
}
inline void SceneChariotBinaryData::set_allocated_base(::SceneChariotBaseData* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:SceneChariotBinaryData.base)
}

// optional uint32 holder_id = 2;
inline bool SceneChariotBinaryData::has_holder_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneChariotBinaryData::set_has_holder_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneChariotBinaryData::clear_has_holder_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneChariotBinaryData::clear_holder_id() {
  holder_id_ = 0u;
  clear_has_holder_id();
}
inline ::google::protobuf::uint32 SceneChariotBinaryData::holder_id() const {
  // @@protoc_insertion_point(field_get:SceneChariotBinaryData.holder_id)
  return holder_id_;
}
inline void SceneChariotBinaryData::set_holder_id(::google::protobuf::uint32 value) {
  set_has_holder_id();
  holder_id_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBinaryData.holder_id)
}

// optional string holder_name = 3;
inline bool SceneChariotBinaryData::has_holder_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneChariotBinaryData::set_has_holder_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneChariotBinaryData::clear_has_holder_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneChariotBinaryData::clear_holder_name() {
  if (holder_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    holder_name_->clear();
  }
  clear_has_holder_name();
}
inline const ::std::string& SceneChariotBinaryData::holder_name() const {
  // @@protoc_insertion_point(field_get:SceneChariotBinaryData.holder_name)
  return *holder_name_;
}
inline void SceneChariotBinaryData::set_holder_name(const ::std::string& value) {
  set_has_holder_name();
  if (holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    holder_name_ = new ::std::string;
  }
  holder_name_->assign(value);
  // @@protoc_insertion_point(field_set:SceneChariotBinaryData.holder_name)
}
inline void SceneChariotBinaryData::set_holder_name(const char* value) {
  set_has_holder_name();
  if (holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    holder_name_ = new ::std::string;
  }
  holder_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SceneChariotBinaryData.holder_name)
}
inline void SceneChariotBinaryData::set_holder_name(const char* value, size_t size) {
  set_has_holder_name();
  if (holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    holder_name_ = new ::std::string;
  }
  holder_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SceneChariotBinaryData.holder_name)
}
inline ::std::string* SceneChariotBinaryData::mutable_holder_name() {
  set_has_holder_name();
  if (holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    holder_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SceneChariotBinaryData.holder_name)
  return holder_name_;
}
inline ::std::string* SceneChariotBinaryData::release_holder_name() {
  clear_has_holder_name();
  if (holder_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = holder_name_;
    holder_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SceneChariotBinaryData::set_allocated_holder_name(::std::string* holder_name) {
  if (holder_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete holder_name_;
  }
  if (holder_name) {
    set_has_holder_name();
    holder_name_ = holder_name;
  } else {
    clear_has_holder_name();
    holder_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SceneChariotBinaryData.holder_name)
}

// optional uint32 state = 4;
inline bool SceneChariotBinaryData::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneChariotBinaryData::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneChariotBinaryData::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneChariotBinaryData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 SceneChariotBinaryData::state() const {
  // @@protoc_insertion_point(field_get:SceneChariotBinaryData.state)
  return state_;
}
inline void SceneChariotBinaryData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBinaryData.state)
}

// optional uint32 tmpid = 5;
inline bool SceneChariotBinaryData::has_tmpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SceneChariotBinaryData::set_has_tmpid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SceneChariotBinaryData::clear_has_tmpid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SceneChariotBinaryData::clear_tmpid() {
  tmpid_ = 0u;
  clear_has_tmpid();
}
inline ::google::protobuf::uint32 SceneChariotBinaryData::tmpid() const {
  // @@protoc_insertion_point(field_get:SceneChariotBinaryData.tmpid)
  return tmpid_;
}
inline void SceneChariotBinaryData::set_tmpid(::google::protobuf::uint32 value) {
  set_has_tmpid();
  tmpid_ = value;
  // @@protoc_insertion_point(field_set:SceneChariotBinaryData.tmpid)
}

// -------------------------------------------------------------------

// UserTempPosition

// optional uint32 src_sceneid = 1;
inline bool UserTempPosition::has_src_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserTempPosition::set_has_src_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserTempPosition::clear_has_src_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserTempPosition::clear_src_sceneid() {
  src_sceneid_ = 0u;
  clear_has_src_sceneid();
}
inline ::google::protobuf::uint32 UserTempPosition::src_sceneid() const {
  // @@protoc_insertion_point(field_get:UserTempPosition.src_sceneid)
  return src_sceneid_;
}
inline void UserTempPosition::set_src_sceneid(::google::protobuf::uint32 value) {
  set_has_src_sceneid();
  src_sceneid_ = value;
  // @@protoc_insertion_point(field_set:UserTempPosition.src_sceneid)
}

// optional uint32 src_posx = 2;
inline bool UserTempPosition::has_src_posx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserTempPosition::set_has_src_posx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserTempPosition::clear_has_src_posx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserTempPosition::clear_src_posx() {
  src_posx_ = 0u;
  clear_has_src_posx();
}
inline ::google::protobuf::uint32 UserTempPosition::src_posx() const {
  // @@protoc_insertion_point(field_get:UserTempPosition.src_posx)
  return src_posx_;
}
inline void UserTempPosition::set_src_posx(::google::protobuf::uint32 value) {
  set_has_src_posx();
  src_posx_ = value;
  // @@protoc_insertion_point(field_set:UserTempPosition.src_posx)
}

// optional uint32 src_posy = 3;
inline bool UserTempPosition::has_src_posy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserTempPosition::set_has_src_posy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserTempPosition::clear_has_src_posy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserTempPosition::clear_src_posy() {
  src_posy_ = 0u;
  clear_has_src_posy();
}
inline ::google::protobuf::uint32 UserTempPosition::src_posy() const {
  // @@protoc_insertion_point(field_get:UserTempPosition.src_posy)
  return src_posy_;
}
inline void UserTempPosition::set_src_posy(::google::protobuf::uint32 value) {
  set_has_src_posy();
  src_posy_ = value;
  // @@protoc_insertion_point(field_set:UserTempPosition.src_posy)
}

// optional string src_mapname = 4;
inline bool UserTempPosition::has_src_mapname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserTempPosition::set_has_src_mapname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserTempPosition::clear_has_src_mapname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserTempPosition::clear_src_mapname() {
  if (src_mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_mapname_->clear();
  }
  clear_has_src_mapname();
}
inline const ::std::string& UserTempPosition::src_mapname() const {
  // @@protoc_insertion_point(field_get:UserTempPosition.src_mapname)
  return *src_mapname_;
}
inline void UserTempPosition::set_src_mapname(const ::std::string& value) {
  set_has_src_mapname();
  if (src_mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_mapname_ = new ::std::string;
  }
  src_mapname_->assign(value);
  // @@protoc_insertion_point(field_set:UserTempPosition.src_mapname)
}
inline void UserTempPosition::set_src_mapname(const char* value) {
  set_has_src_mapname();
  if (src_mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_mapname_ = new ::std::string;
  }
  src_mapname_->assign(value);
  // @@protoc_insertion_point(field_set_char:UserTempPosition.src_mapname)
}
inline void UserTempPosition::set_src_mapname(const char* value, size_t size) {
  set_has_src_mapname();
  if (src_mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_mapname_ = new ::std::string;
  }
  src_mapname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UserTempPosition.src_mapname)
}
inline ::std::string* UserTempPosition::mutable_src_mapname() {
  set_has_src_mapname();
  if (src_mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_mapname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:UserTempPosition.src_mapname)
  return src_mapname_;
}
inline ::std::string* UserTempPosition::release_src_mapname() {
  clear_has_src_mapname();
  if (src_mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = src_mapname_;
    src_mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserTempPosition::set_allocated_src_mapname(::std::string* src_mapname) {
  if (src_mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete src_mapname_;
  }
  if (src_mapname) {
    set_has_src_mapname();
    src_mapname_ = src_mapname;
  } else {
    clear_has_src_mapname();
    src_mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:UserTempPosition.src_mapname)
}

// -------------------------------------------------------------------

// BiGuanXiuXianData

// optional .enumBiGuanXiuXianType type = 1 [default = enumBiGuanXiuXian_None];
inline bool BiGuanXiuXianData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BiGuanXiuXianData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BiGuanXiuXianData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BiGuanXiuXianData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::enumBiGuanXiuXianType BiGuanXiuXianData::type() const {
  // @@protoc_insertion_point(field_get:BiGuanXiuXianData.type)
  return static_cast< ::enumBiGuanXiuXianType >(type_);
}
inline void BiGuanXiuXianData::set_type(::enumBiGuanXiuXianType value) {
  assert(::enumBiGuanXiuXianType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BiGuanXiuXianData.type)
}

// optional uint32 expeffic = 2;
inline bool BiGuanXiuXianData::has_expeffic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BiGuanXiuXianData::set_has_expeffic() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BiGuanXiuXianData::clear_has_expeffic() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BiGuanXiuXianData::clear_expeffic() {
  expeffic_ = 0u;
  clear_has_expeffic();
}
inline ::google::protobuf::uint32 BiGuanXiuXianData::expeffic() const {
  // @@protoc_insertion_point(field_get:BiGuanXiuXianData.expeffic)
  return expeffic_;
}
inline void BiGuanXiuXianData::set_expeffic(::google::protobuf::uint32 value) {
  set_has_expeffic();
  expeffic_ = value;
  // @@protoc_insertion_point(field_set:BiGuanXiuXianData.expeffic)
}

// optional uint32 starttime = 3;
inline bool BiGuanXiuXianData::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BiGuanXiuXianData::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BiGuanXiuXianData::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BiGuanXiuXianData::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 BiGuanXiuXianData::starttime() const {
  // @@protoc_insertion_point(field_get:BiGuanXiuXianData.starttime)
  return starttime_;
}
inline void BiGuanXiuXianData::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:BiGuanXiuXianData.starttime)
}

// optional uint64 storeexp = 4;
inline bool BiGuanXiuXianData::has_storeexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BiGuanXiuXianData::set_has_storeexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BiGuanXiuXianData::clear_has_storeexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BiGuanXiuXianData::clear_storeexp() {
  storeexp_ = GOOGLE_ULONGLONG(0);
  clear_has_storeexp();
}
inline ::google::protobuf::uint64 BiGuanXiuXianData::storeexp() const {
  // @@protoc_insertion_point(field_get:BiGuanXiuXianData.storeexp)
  return storeexp_;
}
inline void BiGuanXiuXianData::set_storeexp(::google::protobuf::uint64 value) {
  set_has_storeexp();
  storeexp_ = value;
  // @@protoc_insertion_point(field_set:BiGuanXiuXianData.storeexp)
}

// optional uint32 silver = 5;
inline bool BiGuanXiuXianData::has_silver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BiGuanXiuXianData::set_has_silver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BiGuanXiuXianData::clear_has_silver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BiGuanXiuXianData::clear_silver() {
  silver_ = 0u;
  clear_has_silver();
}
inline ::google::protobuf::uint32 BiGuanXiuXianData::silver() const {
  // @@protoc_insertion_point(field_get:BiGuanXiuXianData.silver)
  return silver_;
}
inline void BiGuanXiuXianData::set_silver(::google::protobuf::uint32 value) {
  set_has_silver();
  silver_ = value;
  // @@protoc_insertion_point(field_set:BiGuanXiuXianData.silver)
}

// optional uint32 gold = 6;
inline bool BiGuanXiuXianData::has_gold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BiGuanXiuXianData::set_has_gold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BiGuanXiuXianData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BiGuanXiuXianData::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 BiGuanXiuXianData::gold() const {
  // @@protoc_insertion_point(field_get:BiGuanXiuXianData.gold)
  return gold_;
}
inline void BiGuanXiuXianData::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:BiGuanXiuXianData.gold)
}

// optional uint32 level = 7;
inline bool BiGuanXiuXianData::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BiGuanXiuXianData::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BiGuanXiuXianData::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BiGuanXiuXianData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BiGuanXiuXianData::level() const {
  // @@protoc_insertion_point(field_get:BiGuanXiuXianData.level)
  return level_;
}
inline void BiGuanXiuXianData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BiGuanXiuXianData.level)
}

// optional uint32 alltime = 8;
inline bool BiGuanXiuXianData::has_alltime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BiGuanXiuXianData::set_has_alltime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BiGuanXiuXianData::clear_has_alltime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BiGuanXiuXianData::clear_alltime() {
  alltime_ = 0u;
  clear_has_alltime();
}
inline ::google::protobuf::uint32 BiGuanXiuXianData::alltime() const {
  // @@protoc_insertion_point(field_get:BiGuanXiuXianData.alltime)
  return alltime_;
}
inline void BiGuanXiuXianData::set_alltime(::google::protobuf::uint32 value) {
  set_has_alltime();
  alltime_ = value;
  // @@protoc_insertion_point(field_set:BiGuanXiuXianData.alltime)
}

// -------------------------------------------------------------------

// ObjectDrop

// optional .enumObjectDropType type = 1 [default = enumObjectDropType_Set];
inline bool ObjectDrop::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectDrop::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectDrop::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectDrop::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::enumObjectDropType ObjectDrop::type() const {
  // @@protoc_insertion_point(field_get:ObjectDrop.type)
  return static_cast< ::enumObjectDropType >(type_);
}
inline void ObjectDrop::set_type(::enumObjectDropType value) {
  assert(::enumObjectDropType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ObjectDrop.type)
}

// optional uint32 countryid = 2;
inline bool ObjectDrop::has_countryid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectDrop::set_has_countryid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectDrop::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectDrop::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 ObjectDrop::countryid() const {
  // @@protoc_insertion_point(field_get:ObjectDrop.countryid)
  return countryid_;
}
inline void ObjectDrop::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:ObjectDrop.countryid)
}

// optional uint32 objectid = 3;
inline bool ObjectDrop::has_objectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectDrop::set_has_objectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ObjectDrop::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ObjectDrop::clear_objectid() {
  objectid_ = 0u;
  clear_has_objectid();
}
inline ::google::protobuf::uint32 ObjectDrop::objectid() const {
  // @@protoc_insertion_point(field_get:ObjectDrop.objectid)
  return objectid_;
}
inline void ObjectDrop::set_objectid(::google::protobuf::uint32 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:ObjectDrop.objectid)
}

// optional uint32 num = 4;
inline bool ObjectDrop::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectDrop::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ObjectDrop::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ObjectDrop::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 ObjectDrop::num() const {
  // @@protoc_insertion_point(field_get:ObjectDrop.num)
  return num_;
}
inline void ObjectDrop::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:ObjectDrop.num)
}

// optional uint32 period = 5;
inline bool ObjectDrop::has_period() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ObjectDrop::set_has_period() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ObjectDrop::clear_has_period() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ObjectDrop::clear_period() {
  period_ = 0u;
  clear_has_period();
}
inline ::google::protobuf::uint32 ObjectDrop::period() const {
  // @@protoc_insertion_point(field_get:ObjectDrop.period)
  return period_;
}
inline void ObjectDrop::set_period(::google::protobuf::uint32 value) {
  set_has_period();
  period_ = value;
  // @@protoc_insertion_point(field_set:ObjectDrop.period)
}

// optional uint32 starttime = 6;
inline bool ObjectDrop::has_starttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ObjectDrop::set_has_starttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ObjectDrop::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ObjectDrop::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 ObjectDrop::starttime() const {
  // @@protoc_insertion_point(field_get:ObjectDrop.starttime)
  return starttime_;
}
inline void ObjectDrop::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:ObjectDrop.starttime)
}

// optional uint32 endtime = 7;
inline bool ObjectDrop::has_endtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ObjectDrop::set_has_endtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ObjectDrop::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ObjectDrop::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 ObjectDrop::endtime() const {
  // @@protoc_insertion_point(field_get:ObjectDrop.endtime)
  return endtime_;
}
inline void ObjectDrop::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:ObjectDrop.endtime)
}

// optional uint32 next_resettime = 8;
inline bool ObjectDrop::has_next_resettime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ObjectDrop::set_has_next_resettime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ObjectDrop::clear_has_next_resettime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ObjectDrop::clear_next_resettime() {
  next_resettime_ = 0u;
  clear_has_next_resettime();
}
inline ::google::protobuf::uint32 ObjectDrop::next_resettime() const {
  // @@protoc_insertion_point(field_get:ObjectDrop.next_resettime)
  return next_resettime_;
}
inline void ObjectDrop::set_next_resettime(::google::protobuf::uint32 value) {
  set_has_next_resettime();
  next_resettime_ = value;
  // @@protoc_insertion_point(field_set:ObjectDrop.next_resettime)
}

// -------------------------------------------------------------------

// ObjectDropSave

// repeated .ObjectDrop object = 1;
inline int ObjectDropSave::object_size() const {
  return object_.size();
}
inline void ObjectDropSave::clear_object() {
  object_.Clear();
}
inline const ::ObjectDrop& ObjectDropSave::object(int index) const {
  // @@protoc_insertion_point(field_get:ObjectDropSave.object)
  return object_.Get(index);
}
inline ::ObjectDrop* ObjectDropSave::mutable_object(int index) {
  // @@protoc_insertion_point(field_mutable:ObjectDropSave.object)
  return object_.Mutable(index);
}
inline ::ObjectDrop* ObjectDropSave::add_object() {
  // @@protoc_insertion_point(field_add:ObjectDropSave.object)
  return object_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ObjectDrop >&
ObjectDropSave::object() const {
  // @@protoc_insertion_point(field_list:ObjectDropSave.object)
  return object_;
}
inline ::google::protobuf::RepeatedPtrField< ::ObjectDrop >*
ObjectDropSave::mutable_object() {
  // @@protoc_insertion_point(field_mutable_list:ObjectDropSave.object)
  return &object_;
}

// -------------------------------------------------------------------

// CopyUserMember

// optional uint32 charid = 1;
inline bool CopyUserMember::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CopyUserMember::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CopyUserMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CopyUserMember::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 CopyUserMember::charid() const {
  // @@protoc_insertion_point(field_get:CopyUserMember.charid)
  return charid_;
}
inline void CopyUserMember::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:CopyUserMember.charid)
}

// -------------------------------------------------------------------

// DBCopySceneBinaryData

// repeated .CopyUserMember member1 = 1;
inline int DBCopySceneBinaryData::member1_size() const {
  return member1_.size();
}
inline void DBCopySceneBinaryData::clear_member1() {
  member1_.Clear();
}
inline const ::CopyUserMember& DBCopySceneBinaryData::member1(int index) const {
  // @@protoc_insertion_point(field_get:DBCopySceneBinaryData.member1)
  return member1_.Get(index);
}
inline ::CopyUserMember* DBCopySceneBinaryData::mutable_member1(int index) {
  // @@protoc_insertion_point(field_mutable:DBCopySceneBinaryData.member1)
  return member1_.Mutable(index);
}
inline ::CopyUserMember* DBCopySceneBinaryData::add_member1() {
  // @@protoc_insertion_point(field_add:DBCopySceneBinaryData.member1)
  return member1_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CopyUserMember >&
DBCopySceneBinaryData::member1() const {
  // @@protoc_insertion_point(field_list:DBCopySceneBinaryData.member1)
  return member1_;
}
inline ::google::protobuf::RepeatedPtrField< ::CopyUserMember >*
DBCopySceneBinaryData::mutable_member1() {
  // @@protoc_insertion_point(field_mutable_list:DBCopySceneBinaryData.member1)
  return &member1_;
}

// repeated .CopyUserMember member2 = 2;
inline int DBCopySceneBinaryData::member2_size() const {
  return member2_.size();
}
inline void DBCopySceneBinaryData::clear_member2() {
  member2_.Clear();
}
inline const ::CopyUserMember& DBCopySceneBinaryData::member2(int index) const {
  // @@protoc_insertion_point(field_get:DBCopySceneBinaryData.member2)
  return member2_.Get(index);
}
inline ::CopyUserMember* DBCopySceneBinaryData::mutable_member2(int index) {
  // @@protoc_insertion_point(field_mutable:DBCopySceneBinaryData.member2)
  return member2_.Mutable(index);
}
inline ::CopyUserMember* DBCopySceneBinaryData::add_member2() {
  // @@protoc_insertion_point(field_add:DBCopySceneBinaryData.member2)
  return member2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CopyUserMember >&
DBCopySceneBinaryData::member2() const {
  // @@protoc_insertion_point(field_list:DBCopySceneBinaryData.member2)
  return member2_;
}
inline ::google::protobuf::RepeatedPtrField< ::CopyUserMember >*
DBCopySceneBinaryData::mutable_member2() {
  // @@protoc_insertion_point(field_mutable_list:DBCopySceneBinaryData.member2)
  return &member2_;
}

// optional uint32 cost = 3;
inline bool DBCopySceneBinaryData::has_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBCopySceneBinaryData::set_has_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBCopySceneBinaryData::clear_has_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBCopySceneBinaryData::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 DBCopySceneBinaryData::cost() const {
  // @@protoc_insertion_point(field_get:DBCopySceneBinaryData.cost)
  return cost_;
}
inline void DBCopySceneBinaryData::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:DBCopySceneBinaryData.cost)
}

// optional uint32 septid = 13;
inline bool DBCopySceneBinaryData::has_septid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBCopySceneBinaryData::set_has_septid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBCopySceneBinaryData::clear_has_septid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBCopySceneBinaryData::clear_septid() {
  septid_ = 0u;
  clear_has_septid();
}
inline ::google::protobuf::uint32 DBCopySceneBinaryData::septid() const {
  // @@protoc_insertion_point(field_get:DBCopySceneBinaryData.septid)
  return septid_;
}
inline void DBCopySceneBinaryData::set_septid(::google::protobuf::uint32 value) {
  set_has_septid();
  septid_ = value;
  // @@protoc_insertion_point(field_set:DBCopySceneBinaryData.septid)
}

// -------------------------------------------------------------------

// HorseExtraData

// optional uint32 horseid = 1;
inline bool HorseExtraData::has_horseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorseExtraData::set_has_horseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorseExtraData::clear_has_horseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorseExtraData::clear_horseid() {
  horseid_ = 0u;
  clear_has_horseid();
}
inline ::google::protobuf::uint32 HorseExtraData::horseid() const {
  // @@protoc_insertion_point(field_get:HorseExtraData.horseid)
  return horseid_;
}
inline void HorseExtraData::set_horseid(::google::protobuf::uint32 value) {
  set_has_horseid();
  horseid_ = value;
  // @@protoc_insertion_point(field_set:HorseExtraData.horseid)
}

// optional uint32 level = 2;
inline bool HorseExtraData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HorseExtraData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HorseExtraData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HorseExtraData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 HorseExtraData::level() const {
  // @@protoc_insertion_point(field_get:HorseExtraData.level)
  return level_;
}
inline void HorseExtraData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:HorseExtraData.level)
}

// optional uint32 exp = 3;
inline bool HorseExtraData::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HorseExtraData::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HorseExtraData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HorseExtraData::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 HorseExtraData::exp() const {
  // @@protoc_insertion_point(field_get:HorseExtraData.exp)
  return exp_;
}
inline void HorseExtraData::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:HorseExtraData.exp)
}

// optional uint32 speed = 4;
inline bool HorseExtraData::has_speed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HorseExtraData::set_has_speed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HorseExtraData::clear_has_speed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HorseExtraData::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 HorseExtraData::speed() const {
  // @@protoc_insertion_point(field_get:HorseExtraData.speed)
  return speed_;
}
inline void HorseExtraData::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:HorseExtraData.speed)
}

// optional uint32 smiterate = 5;
inline bool HorseExtraData::has_smiterate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HorseExtraData::set_has_smiterate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HorseExtraData::clear_has_smiterate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HorseExtraData::clear_smiterate() {
  smiterate_ = 0u;
  clear_has_smiterate();
}
inline ::google::protobuf::uint32 HorseExtraData::smiterate() const {
  // @@protoc_insertion_point(field_get:HorseExtraData.smiterate)
  return smiterate_;
}
inline void HorseExtraData::set_smiterate(::google::protobuf::uint32 value) {
  set_has_smiterate();
  smiterate_ = value;
  // @@protoc_insertion_point(field_set:HorseExtraData.smiterate)
}

// optional uint32 luck = 6;
inline bool HorseExtraData::has_luck() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HorseExtraData::set_has_luck() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HorseExtraData::clear_has_luck() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HorseExtraData::clear_luck() {
  luck_ = 0u;
  clear_has_luck();
}
inline ::google::protobuf::uint32 HorseExtraData::luck() const {
  // @@protoc_insertion_point(field_get:HorseExtraData.luck)
  return luck_;
}
inline void HorseExtraData::set_luck(::google::protobuf::uint32 value) {
  set_has_luck();
  luck_ = value;
  // @@protoc_insertion_point(field_set:HorseExtraData.luck)
}

// repeated uint32 skillid = 7;
inline int HorseExtraData::skillid_size() const {
  return skillid_.size();
}
inline void HorseExtraData::clear_skillid() {
  skillid_.Clear();
}
inline ::google::protobuf::uint32 HorseExtraData::skillid(int index) const {
  // @@protoc_insertion_point(field_get:HorseExtraData.skillid)
  return skillid_.Get(index);
}
inline void HorseExtraData::set_skillid(int index, ::google::protobuf::uint32 value) {
  skillid_.Set(index, value);
  // @@protoc_insertion_point(field_set:HorseExtraData.skillid)
}
inline void HorseExtraData::add_skillid(::google::protobuf::uint32 value) {
  skillid_.Add(value);
  // @@protoc_insertion_point(field_add:HorseExtraData.skillid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HorseExtraData::skillid() const {
  // @@protoc_insertion_point(field_list:HorseExtraData.skillid)
  return skillid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HorseExtraData::mutable_skillid() {
  // @@protoc_insertion_point(field_mutable_list:HorseExtraData.skillid)
  return &skillid_;
}

// optional uint32 baseid = 8;
inline bool HorseExtraData::has_baseid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HorseExtraData::set_has_baseid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HorseExtraData::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HorseExtraData::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
inline ::google::protobuf::uint32 HorseExtraData::baseid() const {
  // @@protoc_insertion_point(field_get:HorseExtraData.baseid)
  return baseid_;
}
inline void HorseExtraData::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:HorseExtraData.baseid)
}

// optional uint32 thisid = 9;
inline bool HorseExtraData::has_thisid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HorseExtraData::set_has_thisid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HorseExtraData::clear_has_thisid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HorseExtraData::clear_thisid() {
  thisid_ = 0u;
  clear_has_thisid();
}
inline ::google::protobuf::uint32 HorseExtraData::thisid() const {
  // @@protoc_insertion_point(field_get:HorseExtraData.thisid)
  return thisid_;
}
inline void HorseExtraData::set_thisid(::google::protobuf::uint32 value) {
  set_has_thisid();
  thisid_ = value;
  // @@protoc_insertion_point(field_set:HorseExtraData.thisid)
}

// repeated uint32 skilllevel = 10;
inline int HorseExtraData::skilllevel_size() const {
  return skilllevel_.size();
}
inline void HorseExtraData::clear_skilllevel() {
  skilllevel_.Clear();
}
inline ::google::protobuf::uint32 HorseExtraData::skilllevel(int index) const {
  // @@protoc_insertion_point(field_get:HorseExtraData.skilllevel)
  return skilllevel_.Get(index);
}
inline void HorseExtraData::set_skilllevel(int index, ::google::protobuf::uint32 value) {
  skilllevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:HorseExtraData.skilllevel)
}
inline void HorseExtraData::add_skilllevel(::google::protobuf::uint32 value) {
  skilllevel_.Add(value);
  // @@protoc_insertion_point(field_add:HorseExtraData.skilllevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HorseExtraData::skilllevel() const {
  // @@protoc_insertion_point(field_list:HorseExtraData.skilllevel)
  return skilllevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HorseExtraData::mutable_skilllevel() {
  // @@protoc_insertion_point(field_mutable_list:HorseExtraData.skilllevel)
  return &skilllevel_;
}

// -------------------------------------------------------------------

// CharacterMapShow

// optional uint32 face = 1;
inline bool CharacterMapShow::has_face() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterMapShow::set_has_face() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterMapShow::clear_has_face() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterMapShow::clear_face() {
  face_ = 0u;
  clear_has_face();
}
inline ::google::protobuf::uint32 CharacterMapShow::face() const {
  // @@protoc_insertion_point(field_get:CharacterMapShow.face)
  return face_;
}
inline void CharacterMapShow::set_face(::google::protobuf::uint32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapShow.face)
}

// optional uint32 hairstyle = 2;
inline bool CharacterMapShow::has_hairstyle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterMapShow::set_has_hairstyle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterMapShow::clear_has_hairstyle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterMapShow::clear_hairstyle() {
  hairstyle_ = 0u;
  clear_has_hairstyle();
}
inline ::google::protobuf::uint32 CharacterMapShow::hairstyle() const {
  // @@protoc_insertion_point(field_get:CharacterMapShow.hairstyle)
  return hairstyle_;
}
inline void CharacterMapShow::set_hairstyle(::google::protobuf::uint32 value) {
  set_has_hairstyle();
  hairstyle_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapShow.hairstyle)
}

// optional uint32 haircolor = 3;
inline bool CharacterMapShow::has_haircolor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterMapShow::set_has_haircolor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterMapShow::clear_has_haircolor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterMapShow::clear_haircolor() {
  haircolor_ = 0u;
  clear_has_haircolor();
}
inline ::google::protobuf::uint32 CharacterMapShow::haircolor() const {
  // @@protoc_insertion_point(field_get:CharacterMapShow.haircolor)
  return haircolor_;
}
inline void CharacterMapShow::set_haircolor(::google::protobuf::uint32 value) {
  set_has_haircolor();
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapShow.haircolor)
}

// optional uint32 weapon = 4;
inline bool CharacterMapShow::has_weapon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterMapShow::set_has_weapon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterMapShow::clear_has_weapon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterMapShow::clear_weapon() {
  weapon_ = 0u;
  clear_has_weapon();
}
inline ::google::protobuf::uint32 CharacterMapShow::weapon() const {
  // @@protoc_insertion_point(field_get:CharacterMapShow.weapon)
  return weapon_;
}
inline void CharacterMapShow::set_weapon(::google::protobuf::uint32 value) {
  set_has_weapon();
  weapon_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapShow.weapon)
}

// optional uint32 coat = 5;
inline bool CharacterMapShow::has_coat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterMapShow::set_has_coat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterMapShow::clear_has_coat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterMapShow::clear_coat() {
  coat_ = 0u;
  clear_has_coat();
}
inline ::google::protobuf::uint32 CharacterMapShow::coat() const {
  // @@protoc_insertion_point(field_get:CharacterMapShow.coat)
  return coat_;
}
inline void CharacterMapShow::set_coat(::google::protobuf::uint32 value) {
  set_has_coat();
  coat_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapShow.coat)
}

// optional uint32 horse = 6;
inline bool CharacterMapShow::has_horse() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterMapShow::set_has_horse() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterMapShow::clear_has_horse() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterMapShow::clear_horse() {
  horse_ = 0u;
  clear_has_horse();
}
inline ::google::protobuf::uint32 CharacterMapShow::horse() const {
  // @@protoc_insertion_point(field_get:CharacterMapShow.horse)
  return horse_;
}
inline void CharacterMapShow::set_horse(::google::protobuf::uint32 value) {
  set_has_horse();
  horse_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapShow.horse)
}

// optional uint32 wing = 7;
inline bool CharacterMapShow::has_wing() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterMapShow::set_has_wing() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterMapShow::clear_has_wing() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterMapShow::clear_wing() {
  wing_ = 0u;
  clear_has_wing();
}
inline ::google::protobuf::uint32 CharacterMapShow::wing() const {
  // @@protoc_insertion_point(field_get:CharacterMapShow.wing)
  return wing_;
}
inline void CharacterMapShow::set_wing(::google::protobuf::uint32 value) {
  set_has_wing();
  wing_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapShow.wing)
}

// -------------------------------------------------------------------

// StateData

// optional uint64 stateid = 1;
inline bool StateData::has_stateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateData::set_has_stateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StateData::clear_has_stateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StateData::clear_stateid() {
  stateid_ = GOOGLE_ULONGLONG(0);
  clear_has_stateid();
}
inline ::google::protobuf::uint64 StateData::stateid() const {
  // @@protoc_insertion_point(field_get:StateData.stateid)
  return stateid_;
}
inline void StateData::set_stateid(::google::protobuf::uint64 value) {
  set_has_stateid();
  stateid_ = value;
  // @@protoc_insertion_point(field_set:StateData.stateid)
}

// optional int32 time = 2;
inline bool StateData::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateData::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StateData::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StateData::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 StateData::time() const {
  // @@protoc_insertion_point(field_get:StateData.time)
  return time_;
}
inline void StateData::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:StateData.time)
}

// optional int32 level = 3;
inline bool StateData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StateData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StateData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 StateData::level() const {
  // @@protoc_insertion_point(field_get:StateData.level)
  return level_;
}
inline void StateData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:StateData.level)
}

// optional uint32 linkpoint = 4;
inline bool StateData::has_linkpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateData::set_has_linkpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StateData::clear_has_linkpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StateData::clear_linkpoint() {
  linkpoint_ = 0u;
  clear_has_linkpoint();
}
inline ::google::protobuf::uint32 StateData::linkpoint() const {
  // @@protoc_insertion_point(field_get:StateData.linkpoint)
  return linkpoint_;
}
inline void StateData::set_linkpoint(::google::protobuf::uint32 value) {
  set_has_linkpoint();
  linkpoint_ = value;
  // @@protoc_insertion_point(field_set:StateData.linkpoint)
}

// -------------------------------------------------------------------

// CharacterMapData

// optional .CharacterMapShow mapShow = 1;
inline bool CharacterMapData::has_mapshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterMapData::set_has_mapshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterMapData::clear_has_mapshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterMapData::clear_mapshow() {
  if (mapshow_ != NULL) mapshow_->::CharacterMapShow::Clear();
  clear_has_mapshow();
}
inline const ::CharacterMapShow& CharacterMapData::mapshow() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.mapShow)
  return mapshow_ != NULL ? *mapshow_ : *default_instance_->mapshow_;
}
inline ::CharacterMapShow* CharacterMapData::mutable_mapshow() {
  set_has_mapshow();
  if (mapshow_ == NULL) mapshow_ = new ::CharacterMapShow;
  // @@protoc_insertion_point(field_mutable:CharacterMapData.mapShow)
  return mapshow_;
}
inline ::CharacterMapShow* CharacterMapData::release_mapshow() {
  clear_has_mapshow();
  ::CharacterMapShow* temp = mapshow_;
  mapshow_ = NULL;
  return temp;
}
inline void CharacterMapData::set_allocated_mapshow(::CharacterMapShow* mapshow) {
  delete mapshow_;
  mapshow_ = mapshow;
  if (mapshow) {
    set_has_mapshow();
  } else {
    clear_has_mapshow();
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterMapData.mapShow)
}

// optional uint32 id = 2;
inline bool CharacterMapData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterMapData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterMapData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterMapData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CharacterMapData::id() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.id)
  return id_;
}
inline void CharacterMapData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.id)
}

// optional uint32 country = 3;
inline bool CharacterMapData::has_country() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterMapData::set_has_country() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterMapData::clear_has_country() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterMapData::clear_country() {
  country_ = 0u;
  clear_has_country();
}
inline ::google::protobuf::uint32 CharacterMapData::country() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.country)
  return country_;
}
inline void CharacterMapData::set_country(::google::protobuf::uint32 value) {
  set_has_country();
  country_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.country)
}

// optional uint32 septOfficer = 4;
inline bool CharacterMapData::has_septofficer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterMapData::set_has_septofficer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterMapData::clear_has_septofficer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterMapData::clear_septofficer() {
  septofficer_ = 0u;
  clear_has_septofficer();
}
inline ::google::protobuf::uint32 CharacterMapData::septofficer() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.septOfficer)
  return septofficer_;
}
inline void CharacterMapData::set_septofficer(::google::protobuf::uint32 value) {
  set_has_septofficer();
  septofficer_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.septOfficer)
}

// optional uint32 level = 6;
inline bool CharacterMapData::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterMapData::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterMapData::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterMapData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CharacterMapData::level() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.level)
  return level_;
}
inline void CharacterMapData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.level)
}

// optional uint32 x = 7;
inline bool CharacterMapData::has_x() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterMapData::set_has_x() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterMapData::clear_has_x() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterMapData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CharacterMapData::x() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.x)
  return x_;
}
inline void CharacterMapData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.x)
}

// optional uint32 y = 8;
inline bool CharacterMapData::has_y() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterMapData::set_has_y() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterMapData::clear_has_y() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterMapData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CharacterMapData::y() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.y)
  return y_;
}
inline void CharacterMapData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.y)
}

// optional uint32 z = 38;
inline bool CharacterMapData::has_z() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterMapData::set_has_z() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterMapData::clear_has_z() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterMapData::clear_z() {
  z_ = 0u;
  clear_has_z();
}
inline ::google::protobuf::uint32 CharacterMapData::z() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.z)
  return z_;
}
inline void CharacterMapData::set_z(::google::protobuf::uint32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.z)
}

// optional uint32 dir = 9;
inline bool CharacterMapData::has_dir() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterMapData::set_has_dir() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterMapData::clear_has_dir() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterMapData::clear_dir() {
  dir_ = 0u;
  clear_has_dir();
}
inline ::google::protobuf::uint32 CharacterMapData::dir() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.dir)
  return dir_;
}
inline void CharacterMapData::set_dir(::google::protobuf::uint32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.dir)
}

// optional uint32 moveSpeed = 10;
inline bool CharacterMapData::has_movespeed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharacterMapData::set_has_movespeed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharacterMapData::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharacterMapData::clear_movespeed() {
  movespeed_ = 0u;
  clear_has_movespeed();
}
inline ::google::protobuf::uint32 CharacterMapData::movespeed() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.moveSpeed)
  return movespeed_;
}
inline void CharacterMapData::set_movespeed(::google::protobuf::uint32 value) {
  set_has_movespeed();
  movespeed_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.moveSpeed)
}

// optional uint32 evilvalue = 11;
inline bool CharacterMapData::has_evilvalue() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharacterMapData::set_has_evilvalue() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharacterMapData::clear_has_evilvalue() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharacterMapData::clear_evilvalue() {
  evilvalue_ = 0u;
  clear_has_evilvalue();
}
inline ::google::protobuf::uint32 CharacterMapData::evilvalue() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.evilvalue)
  return evilvalue_;
}
inline void CharacterMapData::set_evilvalue(::google::protobuf::uint32 value) {
  set_has_evilvalue();
  evilvalue_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.evilvalue)
}

// optional uint32 questState = 12;
inline bool CharacterMapData::has_queststate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharacterMapData::set_has_queststate() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharacterMapData::clear_has_queststate() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharacterMapData::clear_queststate() {
  queststate_ = 0u;
  clear_has_queststate();
}
inline ::google::protobuf::uint32 CharacterMapData::queststate() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.questState)
  return queststate_;
}
inline void CharacterMapData::set_queststate(::google::protobuf::uint32 value) {
  set_has_queststate();
  queststate_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.questState)
}

// optional string shopName = 13;
inline bool CharacterMapData::has_shopname() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CharacterMapData::set_has_shopname() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CharacterMapData::clear_has_shopname() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CharacterMapData::clear_shopname() {
  if (shopname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_->clear();
  }
  clear_has_shopname();
}
inline const ::std::string& CharacterMapData::shopname() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.shopName)
  return *shopname_;
}
inline void CharacterMapData::set_shopname(const ::std::string& value) {
  set_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_ = new ::std::string;
  }
  shopname_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterMapData.shopName)
}
inline void CharacterMapData::set_shopname(const char* value) {
  set_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_ = new ::std::string;
  }
  shopname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterMapData.shopName)
}
inline void CharacterMapData::set_shopname(const char* value, size_t size) {
  set_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_ = new ::std::string;
  }
  shopname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterMapData.shopName)
}
inline ::std::string* CharacterMapData::mutable_shopname() {
  set_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterMapData.shopName)
  return shopname_;
}
inline ::std::string* CharacterMapData::release_shopname() {
  clear_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = shopname_;
    shopname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterMapData::set_allocated_shopname(::std::string* shopname) {
  if (shopname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete shopname_;
  }
  if (shopname) {
    set_has_shopname();
    shopname_ = shopname;
  } else {
    clear_has_shopname();
    shopname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterMapData.shopName)
}

// optional uint32 shopState = 14;
inline bool CharacterMapData::has_shopstate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CharacterMapData::set_has_shopstate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CharacterMapData::clear_has_shopstate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CharacterMapData::clear_shopstate() {
  shopstate_ = 0u;
  clear_has_shopstate();
}
inline ::google::protobuf::uint32 CharacterMapData::shopstate() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.shopState)
  return shopstate_;
}
inline void CharacterMapData::set_shopstate(::google::protobuf::uint32 value) {
  set_has_shopstate();
  shopstate_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.shopState)
}

// optional uint32 shopNameColor = 15;
inline bool CharacterMapData::has_shopnamecolor() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CharacterMapData::set_has_shopnamecolor() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CharacterMapData::clear_has_shopnamecolor() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CharacterMapData::clear_shopnamecolor() {
  shopnamecolor_ = 0u;
  clear_has_shopnamecolor();
}
inline ::google::protobuf::uint32 CharacterMapData::shopnamecolor() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.shopNameColor)
  return shopnamecolor_;
}
inline void CharacterMapData::set_shopnamecolor(::google::protobuf::uint32 value) {
  set_has_shopnamecolor();
  shopnamecolor_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.shopNameColor)
}

// repeated .StateData ninestate = 16;
inline int CharacterMapData::ninestate_size() const {
  return ninestate_.size();
}
inline void CharacterMapData::clear_ninestate() {
  ninestate_.Clear();
}
inline const ::StateData& CharacterMapData::ninestate(int index) const {
  // @@protoc_insertion_point(field_get:CharacterMapData.ninestate)
  return ninestate_.Get(index);
}
inline ::StateData* CharacterMapData::mutable_ninestate(int index) {
  // @@protoc_insertion_point(field_mutable:CharacterMapData.ninestate)
  return ninestate_.Mutable(index);
}
inline ::StateData* CharacterMapData::add_ninestate() {
  // @@protoc_insertion_point(field_add:CharacterMapData.ninestate)
  return ninestate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::StateData >&
CharacterMapData::ninestate() const {
  // @@protoc_insertion_point(field_list:CharacterMapData.ninestate)
  return ninestate_;
}
inline ::google::protobuf::RepeatedPtrField< ::StateData >*
CharacterMapData::mutable_ninestate() {
  // @@protoc_insertion_point(field_mutable_list:CharacterMapData.ninestate)
  return &ninestate_;
}

// optional string name = 17;
inline bool CharacterMapData::has_name() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CharacterMapData::set_has_name() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CharacterMapData::clear_has_name() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CharacterMapData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CharacterMapData::name() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.name)
  return *name_;
}
inline void CharacterMapData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterMapData.name)
}
inline void CharacterMapData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterMapData.name)
}
inline void CharacterMapData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterMapData.name)
}
inline ::std::string* CharacterMapData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterMapData.name)
  return name_;
}
inline ::std::string* CharacterMapData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterMapData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterMapData.name)
}

// optional string septname = 18;
inline bool CharacterMapData::has_septname() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CharacterMapData::set_has_septname() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CharacterMapData::clear_has_septname() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CharacterMapData::clear_septname() {
  if (septname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_->clear();
  }
  clear_has_septname();
}
inline const ::std::string& CharacterMapData::septname() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.septname)
  return *septname_;
}
inline void CharacterMapData::set_septname(const ::std::string& value) {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  septname_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterMapData.septname)
}
inline void CharacterMapData::set_septname(const char* value) {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  septname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterMapData.septname)
}
inline void CharacterMapData::set_septname(const char* value, size_t size) {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  septname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterMapData.septname)
}
inline ::std::string* CharacterMapData::mutable_septname() {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterMapData.septname)
  return septname_;
}
inline ::std::string* CharacterMapData::release_septname() {
  clear_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = septname_;
    septname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterMapData::set_allocated_septname(::std::string* septname) {
  if (septname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete septname_;
  }
  if (septname) {
    set_has_septname();
    septname_ = septname;
  } else {
    clear_has_septname();
    septname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterMapData.septname)
}

// optional string title = 20;
inline bool CharacterMapData::has_title() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CharacterMapData::set_has_title() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CharacterMapData::clear_has_title() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CharacterMapData::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CharacterMapData::title() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.title)
  return *title_;
}
inline void CharacterMapData::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterMapData.title)
}
inline void CharacterMapData::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterMapData.title)
}
inline void CharacterMapData::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterMapData.title)
}
inline ::std::string* CharacterMapData::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterMapData.title)
  return title_;
}
inline ::std::string* CharacterMapData::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterMapData::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterMapData.title)
}

// optional string teamName = 21;
inline bool CharacterMapData::has_teamname() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CharacterMapData::set_has_teamname() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CharacterMapData::clear_has_teamname() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CharacterMapData::clear_teamname() {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_->clear();
  }
  clear_has_teamname();
}
inline const ::std::string& CharacterMapData::teamname() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.teamName)
  return *teamname_;
}
inline void CharacterMapData::set_teamname(const ::std::string& value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterMapData.teamName)
}
inline void CharacterMapData::set_teamname(const char* value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterMapData.teamName)
}
inline void CharacterMapData::set_teamname(const char* value, size_t size) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterMapData.teamName)
}
inline ::std::string* CharacterMapData::mutable_teamname() {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterMapData.teamName)
  return teamname_;
}
inline ::std::string* CharacterMapData::release_teamname() {
  clear_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = teamname_;
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterMapData::set_allocated_teamname(::std::string* teamname) {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete teamname_;
  }
  if (teamname) {
    set_has_teamname();
    teamname_ = teamname;
  } else {
    clear_has_teamname();
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterMapData.teamName)
}

// optional uint32 worldLevel = 22;
inline bool CharacterMapData::has_worldlevel() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CharacterMapData::set_has_worldlevel() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CharacterMapData::clear_has_worldlevel() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CharacterMapData::clear_worldlevel() {
  worldlevel_ = 0u;
  clear_has_worldlevel();
}
inline ::google::protobuf::uint32 CharacterMapData::worldlevel() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.worldLevel)
  return worldlevel_;
}
inline void CharacterMapData::set_worldlevel(::google::protobuf::uint32 value) {
  set_has_worldlevel();
  worldlevel_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.worldLevel)
}

// optional uint32 gohome = 23;
inline bool CharacterMapData::has_gohome() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CharacterMapData::set_has_gohome() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CharacterMapData::clear_has_gohome() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CharacterMapData::clear_gohome() {
  gohome_ = 0u;
  clear_has_gohome();
}
inline ::google::protobuf::uint32 CharacterMapData::gohome() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.gohome)
  return gohome_;
}
inline void CharacterMapData::set_gohome(::google::protobuf::uint32 value) {
  set_has_gohome();
  gohome_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.gohome)
}

// optional uint32 chariot_tempid = 24;
inline bool CharacterMapData::has_chariot_tempid() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CharacterMapData::set_has_chariot_tempid() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CharacterMapData::clear_has_chariot_tempid() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CharacterMapData::clear_chariot_tempid() {
  chariot_tempid_ = 0u;
  clear_has_chariot_tempid();
}
inline ::google::protobuf::uint32 CharacterMapData::chariot_tempid() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.chariot_tempid)
  return chariot_tempid_;
}
inline void CharacterMapData::set_chariot_tempid(::google::protobuf::uint32 value) {
  set_has_chariot_tempid();
  chariot_tempid_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.chariot_tempid)
}

// optional uint32 chariot_mastertype = 25;
inline bool CharacterMapData::has_chariot_mastertype() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CharacterMapData::set_has_chariot_mastertype() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CharacterMapData::clear_has_chariot_mastertype() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CharacterMapData::clear_chariot_mastertype() {
  chariot_mastertype_ = 0u;
  clear_has_chariot_mastertype();
}
inline ::google::protobuf::uint32 CharacterMapData::chariot_mastertype() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.chariot_mastertype)
  return chariot_mastertype_;
}
inline void CharacterMapData::set_chariot_mastertype(::google::protobuf::uint32 value) {
  set_has_chariot_mastertype();
  chariot_mastertype_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.chariot_mastertype)
}

// optional .ProfessionType profession = 26 [default = Profession_None];
inline bool CharacterMapData::has_profession() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CharacterMapData::set_has_profession() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CharacterMapData::clear_has_profession() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CharacterMapData::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::ProfessionType CharacterMapData::profession() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.profession)
  return static_cast< ::ProfessionType >(profession_);
}
inline void CharacterMapData::set_profession(::ProfessionType value) {
  assert(::ProfessionType_IsValid(value));
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.profession)
}

// optional bool is_gold_shop = 27 [default = false];
inline bool CharacterMapData::has_is_gold_shop() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CharacterMapData::set_has_is_gold_shop() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CharacterMapData::clear_has_is_gold_shop() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CharacterMapData::clear_is_gold_shop() {
  is_gold_shop_ = false;
  clear_has_is_gold_shop();
}
inline bool CharacterMapData::is_gold_shop() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.is_gold_shop)
  return is_gold_shop_;
}
inline void CharacterMapData::set_is_gold_shop(bool value) {
  set_has_is_gold_shop();
  is_gold_shop_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.is_gold_shop)
}

// optional uint32 hp = 28;
inline bool CharacterMapData::has_hp() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CharacterMapData::set_has_hp() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CharacterMapData::clear_has_hp() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CharacterMapData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 CharacterMapData::hp() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.hp)
  return hp_;
}
inline void CharacterMapData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.hp)
}

// optional uint32 maxhp = 29;
inline bool CharacterMapData::has_maxhp() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CharacterMapData::set_has_maxhp() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CharacterMapData::clear_has_maxhp() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CharacterMapData::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 CharacterMapData::maxhp() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.maxhp)
  return maxhp_;
}
inline void CharacterMapData::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.maxhp)
}

// optional uint32 pkcamp = 30;
inline bool CharacterMapData::has_pkcamp() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CharacterMapData::set_has_pkcamp() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CharacterMapData::clear_has_pkcamp() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CharacterMapData::clear_pkcamp() {
  pkcamp_ = 0u;
  clear_has_pkcamp();
}
inline ::google::protobuf::uint32 CharacterMapData::pkcamp() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.pkcamp)
  return pkcamp_;
}
inline void CharacterMapData::set_pkcamp(::google::protobuf::uint32 value) {
  set_has_pkcamp();
  pkcamp_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.pkcamp)
}

// optional bool citywarwinner = 31;
inline bool CharacterMapData::has_citywarwinner() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CharacterMapData::set_has_citywarwinner() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CharacterMapData::clear_has_citywarwinner() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CharacterMapData::clear_citywarwinner() {
  citywarwinner_ = false;
  clear_has_citywarwinner();
}
inline bool CharacterMapData::citywarwinner() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.citywarwinner)
  return citywarwinner_;
}
inline void CharacterMapData::set_citywarwinner(bool value) {
  set_has_citywarwinner();
  citywarwinner_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.citywarwinner)
}

// optional uint32 duelmode = 32;
inline bool CharacterMapData::has_duelmode() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CharacterMapData::set_has_duelmode() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CharacterMapData::clear_has_duelmode() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CharacterMapData::clear_duelmode() {
  duelmode_ = 0u;
  clear_has_duelmode();
}
inline ::google::protobuf::uint32 CharacterMapData::duelmode() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.duelmode)
  return duelmode_;
}
inline void CharacterMapData::set_duelmode(::google::protobuf::uint32 value) {
  set_has_duelmode();
  duelmode_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.duelmode)
}

// optional uint32 castle_level = 33;
inline bool CharacterMapData::has_castle_level() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CharacterMapData::set_has_castle_level() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CharacterMapData::clear_has_castle_level() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CharacterMapData::clear_castle_level() {
  castle_level_ = 0u;
  clear_has_castle_level();
}
inline ::google::protobuf::uint32 CharacterMapData::castle_level() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.castle_level)
  return castle_level_;
}
inline void CharacterMapData::set_castle_level(::google::protobuf::uint32 value) {
  set_has_castle_level();
  castle_level_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.castle_level)
}

// optional uint32 wingid = 34;
inline bool CharacterMapData::has_wingid() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CharacterMapData::set_has_wingid() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CharacterMapData::clear_has_wingid() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CharacterMapData::clear_wingid() {
  wingid_ = 0u;
  clear_has_wingid();
}
inline ::google::protobuf::uint32 CharacterMapData::wingid() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.wingid)
  return wingid_;
}
inline void CharacterMapData::set_wingid(::google::protobuf::uint32 value) {
  set_has_wingid();
  wingid_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.wingid)
}

// optional uint32 winglevel = 35;
inline bool CharacterMapData::has_winglevel() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CharacterMapData::set_has_winglevel() {
  _has_bits_[1] |= 0x00000002u;
}
inline void CharacterMapData::clear_has_winglevel() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void CharacterMapData::clear_winglevel() {
  winglevel_ = 0u;
  clear_has_winglevel();
}
inline ::google::protobuf::uint32 CharacterMapData::winglevel() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.winglevel)
  return winglevel_;
}
inline void CharacterMapData::set_winglevel(::google::protobuf::uint32 value) {
  set_has_winglevel();
  winglevel_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.winglevel)
}

// optional uint32 wingstrenglevel = 36;
inline bool CharacterMapData::has_wingstrenglevel() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CharacterMapData::set_has_wingstrenglevel() {
  _has_bits_[1] |= 0x00000004u;
}
inline void CharacterMapData::clear_has_wingstrenglevel() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void CharacterMapData::clear_wingstrenglevel() {
  wingstrenglevel_ = 0u;
  clear_has_wingstrenglevel();
}
inline ::google::protobuf::uint32 CharacterMapData::wingstrenglevel() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.wingstrenglevel)
  return wingstrenglevel_;
}
inline void CharacterMapData::set_wingstrenglevel(::google::protobuf::uint32 value) {
  set_has_wingstrenglevel();
  wingstrenglevel_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.wingstrenglevel)
}

// optional uint32 subprofession = 37;
inline bool CharacterMapData::has_subprofession() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CharacterMapData::set_has_subprofession() {
  _has_bits_[1] |= 0x00000008u;
}
inline void CharacterMapData::clear_has_subprofession() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void CharacterMapData::clear_subprofession() {
  subprofession_ = 0u;
  clear_has_subprofession();
}
inline ::google::protobuf::uint32 CharacterMapData::subprofession() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.subprofession)
  return subprofession_;
}
inline void CharacterMapData::set_subprofession(::google::protobuf::uint32 value) {
  set_has_subprofession();
  subprofession_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.subprofession)
}

// optional uint32 newtitle = 39;
inline bool CharacterMapData::has_newtitle() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void CharacterMapData::set_has_newtitle() {
  _has_bits_[1] |= 0x00000010u;
}
inline void CharacterMapData::clear_has_newtitle() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void CharacterMapData::clear_newtitle() {
  newtitle_ = 0u;
  clear_has_newtitle();
}
inline ::google::protobuf::uint32 CharacterMapData::newtitle() const {
  // @@protoc_insertion_point(field_get:CharacterMapData.newtitle)
  return newtitle_;
}
inline void CharacterMapData::set_newtitle(::google::protobuf::uint32 value) {
  set_has_newtitle();
  newtitle_ = value;
  // @@protoc_insertion_point(field_set:CharacterMapData.newtitle)
}

// -------------------------------------------------------------------

// CharacterMainData

// optional .CharacterMapData mapData = 1;
inline bool CharacterMainData::has_mapdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterMainData::set_has_mapdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterMainData::clear_has_mapdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterMainData::clear_mapdata() {
  if (mapdata_ != NULL) mapdata_->::CharacterMapData::Clear();
  clear_has_mapdata();
}
inline const ::CharacterMapData& CharacterMainData::mapdata() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.mapData)
  return mapdata_ != NULL ? *mapdata_ : *default_instance_->mapdata_;
}
inline ::CharacterMapData* CharacterMainData::mutable_mapdata() {
  set_has_mapdata();
  if (mapdata_ == NULL) mapdata_ = new ::CharacterMapData;
  // @@protoc_insertion_point(field_mutable:CharacterMainData.mapData)
  return mapdata_;
}
inline ::CharacterMapData* CharacterMainData::release_mapdata() {
  clear_has_mapdata();
  ::CharacterMapData* temp = mapdata_;
  mapdata_ = NULL;
  return temp;
}
inline void CharacterMainData::set_allocated_mapdata(::CharacterMapData* mapdata) {
  delete mapdata_;
  mapdata_ = mapdata;
  if (mapdata) {
    set_has_mapdata();
  } else {
    clear_has_mapdata();
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterMainData.mapData)
}

// optional uint32 mp = 4;
inline bool CharacterMainData::has_mp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterMainData::set_has_mp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterMainData::clear_has_mp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterMainData::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 CharacterMainData::mp() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.mp)
  return mp_;
}
inline void CharacterMainData::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.mp)
}

// optional uint32 maxmp = 5;
inline bool CharacterMainData::has_maxmp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterMainData::set_has_maxmp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterMainData::clear_has_maxmp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterMainData::clear_maxmp() {
  maxmp_ = 0u;
  clear_has_maxmp();
}
inline ::google::protobuf::uint32 CharacterMainData::maxmp() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.maxmp)
  return maxmp_;
}
inline void CharacterMainData::set_maxmp(::google::protobuf::uint32 value) {
  set_has_maxmp();
  maxmp_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.maxmp)
}

// optional uint64 exp = 6;
inline bool CharacterMainData::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterMainData::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterMainData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterMainData::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 CharacterMainData::exp() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.exp)
  return exp_;
}
inline void CharacterMainData::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.exp)
}

// optional uint32 strength = 7;
inline bool CharacterMainData::has_strength() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterMainData::set_has_strength() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterMainData::clear_has_strength() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterMainData::clear_strength() {
  strength_ = 0u;
  clear_has_strength();
}
inline ::google::protobuf::uint32 CharacterMainData::strength() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.strength)
  return strength_;
}
inline void CharacterMainData::set_strength(::google::protobuf::uint32 value) {
  set_has_strength();
  strength_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.strength)
}

// optional uint32 dexterity = 8;
inline bool CharacterMainData::has_dexterity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterMainData::set_has_dexterity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterMainData::clear_has_dexterity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterMainData::clear_dexterity() {
  dexterity_ = 0u;
  clear_has_dexterity();
}
inline ::google::protobuf::uint32 CharacterMainData::dexterity() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.dexterity)
  return dexterity_;
}
inline void CharacterMainData::set_dexterity(::google::protobuf::uint32 value) {
  set_has_dexterity();
  dexterity_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.dexterity)
}

// optional uint32 mentality = 9;
inline bool CharacterMainData::has_mentality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterMainData::set_has_mentality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterMainData::clear_has_mentality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterMainData::clear_mentality() {
  mentality_ = 0u;
  clear_has_mentality();
}
inline ::google::protobuf::uint32 CharacterMainData::mentality() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.mentality)
  return mentality_;
}
inline void CharacterMainData::set_mentality(::google::protobuf::uint32 value) {
  set_has_mentality();
  mentality_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.mentality)
}

// optional uint32 constitution = 10;
inline bool CharacterMainData::has_constitution() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterMainData::set_has_constitution() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterMainData::clear_has_constitution() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterMainData::clear_constitution() {
  constitution_ = 0u;
  clear_has_constitution();
}
inline ::google::protobuf::uint32 CharacterMainData::constitution() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.constitution)
  return constitution_;
}
inline void CharacterMainData::set_constitution(::google::protobuf::uint32 value) {
  set_has_constitution();
  constitution_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.constitution)
}

// optional uint32 attrpoint = 12;
inline bool CharacterMainData::has_attrpoint() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterMainData::set_has_attrpoint() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterMainData::clear_has_attrpoint() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterMainData::clear_attrpoint() {
  attrpoint_ = 0u;
  clear_has_attrpoint();
}
inline ::google::protobuf::uint32 CharacterMainData::attrpoint() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.attrpoint)
  return attrpoint_;
}
inline void CharacterMainData::set_attrpoint(::google::protobuf::uint32 value) {
  set_has_attrpoint();
  attrpoint_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.attrpoint)
}

// optional uint32 attackSpeed = 13;
inline bool CharacterMainData::has_attackspeed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharacterMainData::set_has_attackspeed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharacterMainData::clear_has_attackspeed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharacterMainData::clear_attackspeed() {
  attackspeed_ = 0u;
  clear_has_attackspeed();
}
inline ::google::protobuf::uint32 CharacterMainData::attackspeed() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.attackSpeed)
  return attackspeed_;
}
inline void CharacterMainData::set_attackspeed(::google::protobuf::uint32 value) {
  set_has_attackspeed();
  attackspeed_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.attackSpeed)
}

// optional uint32 minPhysics = 14;
inline bool CharacterMainData::has_minphysics() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharacterMainData::set_has_minphysics() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharacterMainData::clear_has_minphysics() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharacterMainData::clear_minphysics() {
  minphysics_ = 0u;
  clear_has_minphysics();
}
inline ::google::protobuf::uint32 CharacterMainData::minphysics() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.minPhysics)
  return minphysics_;
}
inline void CharacterMainData::set_minphysics(::google::protobuf::uint32 value) {
  set_has_minphysics();
  minphysics_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.minPhysics)
}

// optional uint32 maxPhysics = 15;
inline bool CharacterMainData::has_maxphysics() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharacterMainData::set_has_maxphysics() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharacterMainData::clear_has_maxphysics() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharacterMainData::clear_maxphysics() {
  maxphysics_ = 0u;
  clear_has_maxphysics();
}
inline ::google::protobuf::uint32 CharacterMainData::maxphysics() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.maxPhysics)
  return maxphysics_;
}
inline void CharacterMainData::set_maxphysics(::google::protobuf::uint32 value) {
  set_has_maxphysics();
  maxphysics_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.maxPhysics)
}

// optional uint32 minMagic = 16;
inline bool CharacterMainData::has_minmagic() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CharacterMainData::set_has_minmagic() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CharacterMainData::clear_has_minmagic() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CharacterMainData::clear_minmagic() {
  minmagic_ = 0u;
  clear_has_minmagic();
}
inline ::google::protobuf::uint32 CharacterMainData::minmagic() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.minMagic)
  return minmagic_;
}
inline void CharacterMainData::set_minmagic(::google::protobuf::uint32 value) {
  set_has_minmagic();
  minmagic_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.minMagic)
}

// optional uint32 maxMagic = 17;
inline bool CharacterMainData::has_maxmagic() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CharacterMainData::set_has_maxmagic() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CharacterMainData::clear_has_maxmagic() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CharacterMainData::clear_maxmagic() {
  maxmagic_ = 0u;
  clear_has_maxmagic();
}
inline ::google::protobuf::uint32 CharacterMainData::maxmagic() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.maxMagic)
  return maxmagic_;
}
inline void CharacterMainData::set_maxmagic(::google::protobuf::uint32 value) {
  set_has_maxmagic();
  maxmagic_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.maxMagic)
}

// optional uint32 pDefence = 18;
inline bool CharacterMainData::has_pdefence() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CharacterMainData::set_has_pdefence() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CharacterMainData::clear_has_pdefence() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CharacterMainData::clear_pdefence() {
  pdefence_ = 0u;
  clear_has_pdefence();
}
inline ::google::protobuf::uint32 CharacterMainData::pdefence() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.pDefence)
  return pdefence_;
}
inline void CharacterMainData::set_pdefence(::google::protobuf::uint32 value) {
  set_has_pdefence();
  pdefence_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.pDefence)
}

// optional uint32 mDefence = 19;
inline bool CharacterMainData::has_mdefence() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CharacterMainData::set_has_mdefence() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CharacterMainData::clear_has_mdefence() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CharacterMainData::clear_mdefence() {
  mdefence_ = 0u;
  clear_has_mdefence();
}
inline ::google::protobuf::uint32 CharacterMainData::mdefence() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.mDefence)
  return mdefence_;
}
inline void CharacterMainData::set_mdefence(::google::protobuf::uint32 value) {
  set_has_mdefence();
  mdefence_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.mDefence)
}

// optional uint32 money = 20;
inline bool CharacterMainData::has_money() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CharacterMainData::set_has_money() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CharacterMainData::clear_has_money() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CharacterMainData::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 CharacterMainData::money() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.money)
  return money_;
}
inline void CharacterMainData::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.money)
}

// optional uint32 bindMoney = 21;
inline bool CharacterMainData::has_bindmoney() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CharacterMainData::set_has_bindmoney() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CharacterMainData::clear_has_bindmoney() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CharacterMainData::clear_bindmoney() {
  bindmoney_ = 0u;
  clear_has_bindmoney();
}
inline ::google::protobuf::uint32 CharacterMainData::bindmoney() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.bindMoney)
  return bindmoney_;
}
inline void CharacterMainData::set_bindmoney(::google::protobuf::uint32 value) {
  set_has_bindmoney();
  bindmoney_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.bindMoney)
}

// optional uint32 gold = 22;
inline bool CharacterMainData::has_gold() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CharacterMainData::set_has_gold() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CharacterMainData::clear_has_gold() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CharacterMainData::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 CharacterMainData::gold() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.gold)
  return gold_;
}
inline void CharacterMainData::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.gold)
}

// optional uint32 bindGold = 23;
inline bool CharacterMainData::has_bindgold() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CharacterMainData::set_has_bindgold() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CharacterMainData::clear_has_bindgold() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CharacterMainData::clear_bindgold() {
  bindgold_ = 0u;
  clear_has_bindgold();
}
inline ::google::protobuf::uint32 CharacterMainData::bindgold() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.bindGold)
  return bindgold_;
}
inline void CharacterMainData::set_bindgold(::google::protobuf::uint32 value) {
  set_has_bindgold();
  bindgold_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.bindGold)
}

// optional uint32 luckyRate = 24;
inline bool CharacterMainData::has_luckyrate() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CharacterMainData::set_has_luckyrate() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CharacterMainData::clear_has_luckyrate() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CharacterMainData::clear_luckyrate() {
  luckyrate_ = 0u;
  clear_has_luckyrate();
}
inline ::google::protobuf::uint32 CharacterMainData::luckyrate() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.luckyRate)
  return luckyrate_;
}
inline void CharacterMainData::set_luckyrate(::google::protobuf::uint32 value) {
  set_has_luckyrate();
  luckyrate_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.luckyRate)
}

// optional uint32 antiLuckyRate = 25;
inline bool CharacterMainData::has_antiluckyrate() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CharacterMainData::set_has_antiluckyrate() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CharacterMainData::clear_has_antiluckyrate() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CharacterMainData::clear_antiluckyrate() {
  antiluckyrate_ = 0u;
  clear_has_antiluckyrate();
}
inline ::google::protobuf::uint32 CharacterMainData::antiluckyrate() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.antiLuckyRate)
  return antiluckyrate_;
}
inline void CharacterMainData::set_antiluckyrate(::google::protobuf::uint32 value) {
  set_has_antiluckyrate();
  antiluckyrate_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.antiLuckyRate)
}

// optional uint32 heavyRate = 26;
inline bool CharacterMainData::has_heavyrate() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CharacterMainData::set_has_heavyrate() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CharacterMainData::clear_has_heavyrate() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CharacterMainData::clear_heavyrate() {
  heavyrate_ = 0u;
  clear_has_heavyrate();
}
inline ::google::protobuf::uint32 CharacterMainData::heavyrate() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.heavyRate)
  return heavyrate_;
}
inline void CharacterMainData::set_heavyrate(::google::protobuf::uint32 value) {
  set_has_heavyrate();
  heavyrate_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.heavyRate)
}

// optional uint32 antiHeavyRate = 27;
inline bool CharacterMainData::has_antiheavyrate() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CharacterMainData::set_has_antiheavyrate() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CharacterMainData::clear_has_antiheavyrate() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CharacterMainData::clear_antiheavyrate() {
  antiheavyrate_ = 0u;
  clear_has_antiheavyrate();
}
inline ::google::protobuf::uint32 CharacterMainData::antiheavyrate() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.antiHeavyRate)
  return antiheavyrate_;
}
inline void CharacterMainData::set_antiheavyrate(::google::protobuf::uint32 value) {
  set_has_antiheavyrate();
  antiheavyrate_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.antiHeavyRate)
}

// optional uint32 honor = 28;
inline bool CharacterMainData::has_honor() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CharacterMainData::set_has_honor() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CharacterMainData::clear_has_honor() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CharacterMainData::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 CharacterMainData::honor() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.honor)
  return honor_;
}
inline void CharacterMainData::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.honor)
}

// optional uint32 funcvalue = 30;
inline bool CharacterMainData::has_funcvalue() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CharacterMainData::set_has_funcvalue() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CharacterMainData::clear_has_funcvalue() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CharacterMainData::clear_funcvalue() {
  funcvalue_ = 0u;
  clear_has_funcvalue();
}
inline ::google::protobuf::uint32 CharacterMainData::funcvalue() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.funcvalue)
  return funcvalue_;
}
inline void CharacterMainData::set_funcvalue(::google::protobuf::uint32 value) {
  set_has_funcvalue();
  funcvalue_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.funcvalue)
}

// optional uint32 septaward = 31;
inline bool CharacterMainData::has_septaward() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CharacterMainData::set_has_septaward() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CharacterMainData::clear_has_septaward() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CharacterMainData::clear_septaward() {
  septaward_ = 0u;
  clear_has_septaward();
}
inline ::google::protobuf::uint32 CharacterMainData::septaward() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.septaward)
  return septaward_;
}
inline void CharacterMainData::set_septaward(::google::protobuf::uint32 value) {
  set_has_septaward();
  septaward_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.septaward)
}

// optional uint32 septactive = 32;
inline bool CharacterMainData::has_septactive() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CharacterMainData::set_has_septactive() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CharacterMainData::clear_has_septactive() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CharacterMainData::clear_septactive() {
  septactive_ = 0u;
  clear_has_septactive();
}
inline ::google::protobuf::uint32 CharacterMainData::septactive() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.septactive)
  return septactive_;
}
inline void CharacterMainData::set_septactive(::google::protobuf::uint32 value) {
  set_has_septactive();
  septactive_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.septactive)
}

// optional uint32 friendvalue = 33;
inline bool CharacterMainData::has_friendvalue() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CharacterMainData::set_has_friendvalue() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CharacterMainData::clear_has_friendvalue() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CharacterMainData::clear_friendvalue() {
  friendvalue_ = 0u;
  clear_has_friendvalue();
}
inline ::google::protobuf::uint32 CharacterMainData::friendvalue() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.friendvalue)
  return friendvalue_;
}
inline void CharacterMainData::set_friendvalue(::google::protobuf::uint32 value) {
  set_has_friendvalue();
  friendvalue_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.friendvalue)
}

// optional uint32 subprofession = 34;
inline bool CharacterMainData::has_subprofession() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CharacterMainData::set_has_subprofession() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CharacterMainData::clear_has_subprofession() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CharacterMainData::clear_subprofession() {
  subprofession_ = 0u;
  clear_has_subprofession();
}
inline ::google::protobuf::uint32 CharacterMainData::subprofession() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.subprofession)
  return subprofession_;
}
inline void CharacterMainData::set_subprofession(::google::protobuf::uint32 value) {
  set_has_subprofession();
  subprofession_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.subprofession)
}

// optional uint32 horseid = 35;
inline bool CharacterMainData::has_horseid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CharacterMainData::set_has_horseid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CharacterMainData::clear_has_horseid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CharacterMainData::clear_horseid() {
  horseid_ = 0u;
  clear_has_horseid();
}
inline ::google::protobuf::uint32 CharacterMainData::horseid() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.horseid)
  return horseid_;
}
inline void CharacterMainData::set_horseid(::google::protobuf::uint32 value) {
  set_has_horseid();
  horseid_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.horseid)
}

// optional uint64 totalexp = 36;
inline bool CharacterMainData::has_totalexp() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CharacterMainData::set_has_totalexp() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CharacterMainData::clear_has_totalexp() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CharacterMainData::clear_totalexp() {
  totalexp_ = GOOGLE_ULONGLONG(0);
  clear_has_totalexp();
}
inline ::google::protobuf::uint64 CharacterMainData::totalexp() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.totalexp)
  return totalexp_;
}
inline void CharacterMainData::set_totalexp(::google::protobuf::uint64 value) {
  set_has_totalexp();
  totalexp_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.totalexp)
}

// optional bool zonelimit = 37;
inline bool CharacterMainData::has_zonelimit() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CharacterMainData::set_has_zonelimit() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CharacterMainData::clear_has_zonelimit() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CharacterMainData::clear_zonelimit() {
  zonelimit_ = false;
  clear_has_zonelimit();
}
inline bool CharacterMainData::zonelimit() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.zonelimit)
  return zonelimit_;
}
inline void CharacterMainData::set_zonelimit(bool value) {
  set_has_zonelimit();
  zonelimit_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.zonelimit)
}

// optional bool countryzone = 38;
inline bool CharacterMainData::has_countryzone() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CharacterMainData::set_has_countryzone() {
  _has_bits_[1] |= 0x00000002u;
}
inline void CharacterMainData::clear_has_countryzone() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void CharacterMainData::clear_countryzone() {
  countryzone_ = false;
  clear_has_countryzone();
}
inline bool CharacterMainData::countryzone() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.countryzone)
  return countryzone_;
}
inline void CharacterMainData::set_countryzone(bool value) {
  set_has_countryzone();
  countryzone_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.countryzone)
}

// repeated uint64 resource = 39;
inline int CharacterMainData::resource_size() const {
  return resource_.size();
}
inline void CharacterMainData::clear_resource() {
  resource_.Clear();
}
inline ::google::protobuf::uint64 CharacterMainData::resource(int index) const {
  // @@protoc_insertion_point(field_get:CharacterMainData.resource)
  return resource_.Get(index);
}
inline void CharacterMainData::set_resource(int index, ::google::protobuf::uint64 value) {
  resource_.Set(index, value);
  // @@protoc_insertion_point(field_set:CharacterMainData.resource)
}
inline void CharacterMainData::add_resource(::google::protobuf::uint64 value) {
  resource_.Add(value);
  // @@protoc_insertion_point(field_add:CharacterMainData.resource)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CharacterMainData::resource() const {
  // @@protoc_insertion_point(field_list:CharacterMainData.resource)
  return resource_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CharacterMainData::mutable_resource() {
  // @@protoc_insertion_point(field_mutable_list:CharacterMainData.resource)
  return &resource_;
}

// optional uint32 petskill = 40;
inline bool CharacterMainData::has_petskill() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CharacterMainData::set_has_petskill() {
  _has_bits_[1] |= 0x00000008u;
}
inline void CharacterMainData::clear_has_petskill() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void CharacterMainData::clear_petskill() {
  petskill_ = 0u;
  clear_has_petskill();
}
inline ::google::protobuf::uint32 CharacterMainData::petskill() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.petskill)
  return petskill_;
}
inline void CharacterMainData::set_petskill(::google::protobuf::uint32 value) {
  set_has_petskill();
  petskill_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.petskill)
}

// optional bool autofight = 41;
inline bool CharacterMainData::has_autofight() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void CharacterMainData::set_has_autofight() {
  _has_bits_[1] |= 0x00000010u;
}
inline void CharacterMainData::clear_has_autofight() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void CharacterMainData::clear_autofight() {
  autofight_ = false;
  clear_has_autofight();
}
inline bool CharacterMainData::autofight() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.autofight)
  return autofight_;
}
inline void CharacterMainData::set_autofight(bool value) {
  set_has_autofight();
  autofight_ = value;
  // @@protoc_insertion_point(field_set:CharacterMainData.autofight)
}

// optional .PropertyValues propertys = 100;
inline bool CharacterMainData::has_propertys() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void CharacterMainData::set_has_propertys() {
  _has_bits_[1] |= 0x00000020u;
}
inline void CharacterMainData::clear_has_propertys() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void CharacterMainData::clear_propertys() {
  if (propertys_ != NULL) propertys_->::PropertyValues::Clear();
  clear_has_propertys();
}
inline const ::PropertyValues& CharacterMainData::propertys() const {
  // @@protoc_insertion_point(field_get:CharacterMainData.propertys)
  return propertys_ != NULL ? *propertys_ : *default_instance_->propertys_;
}
inline ::PropertyValues* CharacterMainData::mutable_propertys() {
  set_has_propertys();
  if (propertys_ == NULL) propertys_ = new ::PropertyValues;
  // @@protoc_insertion_point(field_mutable:CharacterMainData.propertys)
  return propertys_;
}
inline ::PropertyValues* CharacterMainData::release_propertys() {
  clear_has_propertys();
  ::PropertyValues* temp = propertys_;
  propertys_ = NULL;
  return temp;
}
inline void CharacterMainData::set_allocated_propertys(::PropertyValues* propertys) {
  delete propertys_;
  propertys_ = propertys;
  if (propertys) {
    set_has_propertys();
  } else {
    clear_has_propertys();
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterMainData.propertys)
}

// -------------------------------------------------------------------

// NpcMapData

// optional uint32 id = 1;
inline bool NpcMapData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcMapData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcMapData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcMapData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NpcMapData::id() const {
  // @@protoc_insertion_point(field_get:NpcMapData.id)
  return id_;
}
inline void NpcMapData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.id)
}

// optional uint32 tmpid = 2;
inline bool NpcMapData::has_tmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcMapData::set_has_tmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcMapData::clear_has_tmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcMapData::clear_tmpid() {
  tmpid_ = 0u;
  clear_has_tmpid();
}
inline ::google::protobuf::uint32 NpcMapData::tmpid() const {
  // @@protoc_insertion_point(field_get:NpcMapData.tmpid)
  return tmpid_;
}
inline void NpcMapData::set_tmpid(::google::protobuf::uint32 value) {
  set_has_tmpid();
  tmpid_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.tmpid)
}

// optional uint32 hp = 3;
inline bool NpcMapData::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcMapData::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcMapData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcMapData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 NpcMapData::hp() const {
  // @@protoc_insertion_point(field_get:NpcMapData.hp)
  return hp_;
}
inline void NpcMapData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.hp)
}

// optional uint32 x = 4;
inline bool NpcMapData::has_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NpcMapData::set_has_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NpcMapData::clear_has_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NpcMapData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 NpcMapData::x() const {
  // @@protoc_insertion_point(field_get:NpcMapData.x)
  return x_;
}
inline void NpcMapData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.x)
}

// optional uint32 y = 5;
inline bool NpcMapData::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NpcMapData::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NpcMapData::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NpcMapData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 NpcMapData::y() const {
  // @@protoc_insertion_point(field_get:NpcMapData.y)
  return y_;
}
inline void NpcMapData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.y)
}

// optional uint32 speed = 6;
inline bool NpcMapData::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NpcMapData::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NpcMapData::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NpcMapData::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 NpcMapData::speed() const {
  // @@protoc_insertion_point(field_get:NpcMapData.speed)
  return speed_;
}
inline void NpcMapData::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.speed)
}

// optional uint32 dir = 7;
inline bool NpcMapData::has_dir() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NpcMapData::set_has_dir() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NpcMapData::clear_has_dir() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NpcMapData::clear_dir() {
  dir_ = 0u;
  clear_has_dir();
}
inline ::google::protobuf::uint32 NpcMapData::dir() const {
  // @@protoc_insertion_point(field_get:NpcMapData.dir)
  return dir_;
}
inline void NpcMapData::set_dir(::google::protobuf::uint32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.dir)
}

// optional uint32 level = 8;
inline bool NpcMapData::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NpcMapData::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NpcMapData::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NpcMapData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 NpcMapData::level() const {
  // @@protoc_insertion_point(field_get:NpcMapData.level)
  return level_;
}
inline void NpcMapData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.level)
}

// optional uint32 visit = 9;
inline bool NpcMapData::has_visit() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NpcMapData::set_has_visit() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NpcMapData::clear_has_visit() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NpcMapData::clear_visit() {
  visit_ = 0u;
  clear_has_visit();
}
inline ::google::protobuf::uint32 NpcMapData::visit() const {
  // @@protoc_insertion_point(field_get:NpcMapData.visit)
  return visit_;
}
inline void NpcMapData::set_visit(::google::protobuf::uint32 value) {
  set_has_visit();
  visit_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.visit)
}

// optional uint32 countryId = 10;
inline bool NpcMapData::has_countryid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NpcMapData::set_has_countryid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NpcMapData::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NpcMapData::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 NpcMapData::countryid() const {
  // @@protoc_insertion_point(field_get:NpcMapData.countryId)
  return countryid_;
}
inline void NpcMapData::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.countryId)
}

// optional uint32 teamid = 11;
inline bool NpcMapData::has_teamid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void NpcMapData::set_has_teamid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void NpcMapData::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void NpcMapData::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 NpcMapData::teamid() const {
  // @@protoc_insertion_point(field_get:NpcMapData.teamid)
  return teamid_;
}
inline void NpcMapData::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.teamid)
}

// optional uint32 septid = 12;
inline bool NpcMapData::has_septid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void NpcMapData::set_has_septid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void NpcMapData::clear_has_septid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void NpcMapData::clear_septid() {
  septid_ = 0u;
  clear_has_septid();
}
inline ::google::protobuf::uint32 NpcMapData::septid() const {
  // @@protoc_insertion_point(field_get:NpcMapData.septid)
  return septid_;
}
inline void NpcMapData::set_septid(::google::protobuf::uint32 value) {
  set_has_septid();
  septid_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.septid)
}

// optional uint32 unionid = 13;
inline bool NpcMapData::has_unionid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void NpcMapData::set_has_unionid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void NpcMapData::clear_has_unionid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void NpcMapData::clear_unionid() {
  unionid_ = 0u;
  clear_has_unionid();
}
inline ::google::protobuf::uint32 NpcMapData::unionid() const {
  // @@protoc_insertion_point(field_get:NpcMapData.unionid)
  return unionid_;
}
inline void NpcMapData::set_unionid(::google::protobuf::uint32 value) {
  set_has_unionid();
  unionid_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.unionid)
}

// optional uint32 master_type = 14;
inline bool NpcMapData::has_master_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void NpcMapData::set_has_master_type() {
  _has_bits_[0] |= 0x00002000u;
}
inline void NpcMapData::clear_has_master_type() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void NpcMapData::clear_master_type() {
  master_type_ = 0u;
  clear_has_master_type();
}
inline ::google::protobuf::uint32 NpcMapData::master_type() const {
  // @@protoc_insertion_point(field_get:NpcMapData.master_type)
  return master_type_;
}
inline void NpcMapData::set_master_type(::google::protobuf::uint32 value) {
  set_has_master_type();
  master_type_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.master_type)
}

// optional uint32 masterid = 15;
inline bool NpcMapData::has_masterid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void NpcMapData::set_has_masterid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void NpcMapData::clear_has_masterid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void NpcMapData::clear_masterid() {
  masterid_ = 0u;
  clear_has_masterid();
}
inline ::google::protobuf::uint32 NpcMapData::masterid() const {
  // @@protoc_insertion_point(field_get:NpcMapData.masterid)
  return masterid_;
}
inline void NpcMapData::set_masterid(::google::protobuf::uint32 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.masterid)
}

// optional string mastername = 16;
inline bool NpcMapData::has_mastername() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void NpcMapData::set_has_mastername() {
  _has_bits_[0] |= 0x00008000u;
}
inline void NpcMapData::clear_has_mastername() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void NpcMapData::clear_mastername() {
  if (mastername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_->clear();
  }
  clear_has_mastername();
}
inline const ::std::string& NpcMapData::mastername() const {
  // @@protoc_insertion_point(field_get:NpcMapData.mastername)
  return *mastername_;
}
inline void NpcMapData::set_mastername(const ::std::string& value) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
  // @@protoc_insertion_point(field_set:NpcMapData.mastername)
}
inline void NpcMapData::set_mastername(const char* value) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
  // @@protoc_insertion_point(field_set_char:NpcMapData.mastername)
}
inline void NpcMapData::set_mastername(const char* value, size_t size) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NpcMapData.mastername)
}
inline ::std::string* NpcMapData::mutable_mastername() {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:NpcMapData.mastername)
  return mastername_;
}
inline ::std::string* NpcMapData::release_mastername() {
  clear_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mastername_;
    mastername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NpcMapData::set_allocated_mastername(::std::string* mastername) {
  if (mastername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mastername_;
  }
  if (mastername) {
    set_has_mastername();
    mastername_ = mastername;
  } else {
    clear_has_mastername();
    mastername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:NpcMapData.mastername)
}

// optional string name = 17;
inline bool NpcMapData::has_name() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void NpcMapData::set_has_name() {
  _has_bits_[0] |= 0x00010000u;
}
inline void NpcMapData::clear_has_name() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void NpcMapData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& NpcMapData::name() const {
  // @@protoc_insertion_point(field_get:NpcMapData.name)
  return *name_;
}
inline void NpcMapData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:NpcMapData.name)
}
inline void NpcMapData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:NpcMapData.name)
}
inline void NpcMapData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NpcMapData.name)
}
inline ::std::string* NpcMapData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:NpcMapData.name)
  return name_;
}
inline ::std::string* NpcMapData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NpcMapData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:NpcMapData.name)
}

// optional uint32 skillcount = 18;
inline bool NpcMapData::has_skillcount() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void NpcMapData::set_has_skillcount() {
  _has_bits_[0] |= 0x00020000u;
}
inline void NpcMapData::clear_has_skillcount() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void NpcMapData::clear_skillcount() {
  skillcount_ = 0u;
  clear_has_skillcount();
}
inline ::google::protobuf::uint32 NpcMapData::skillcount() const {
  // @@protoc_insertion_point(field_get:NpcMapData.skillcount)
  return skillcount_;
}
inline void NpcMapData::set_skillcount(::google::protobuf::uint32 value) {
  set_has_skillcount();
  skillcount_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.skillcount)
}

// repeated uint32 sign = 19;
inline int NpcMapData::sign_size() const {
  return sign_.size();
}
inline void NpcMapData::clear_sign() {
  sign_.Clear();
}
inline ::google::protobuf::uint32 NpcMapData::sign(int index) const {
  // @@protoc_insertion_point(field_get:NpcMapData.sign)
  return sign_.Get(index);
}
inline void NpcMapData::set_sign(int index, ::google::protobuf::uint32 value) {
  sign_.Set(index, value);
  // @@protoc_insertion_point(field_set:NpcMapData.sign)
}
inline void NpcMapData::add_sign(::google::protobuf::uint32 value) {
  sign_.Add(value);
  // @@protoc_insertion_point(field_add:NpcMapData.sign)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NpcMapData::sign() const {
  // @@protoc_insertion_point(field_list:NpcMapData.sign)
  return sign_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NpcMapData::mutable_sign() {
  // @@protoc_insertion_point(field_mutable_list:NpcMapData.sign)
  return &sign_;
}

// repeated .StateData ninestate = 20;
inline int NpcMapData::ninestate_size() const {
  return ninestate_.size();
}
inline void NpcMapData::clear_ninestate() {
  ninestate_.Clear();
}
inline const ::StateData& NpcMapData::ninestate(int index) const {
  // @@protoc_insertion_point(field_get:NpcMapData.ninestate)
  return ninestate_.Get(index);
}
inline ::StateData* NpcMapData::mutable_ninestate(int index) {
  // @@protoc_insertion_point(field_mutable:NpcMapData.ninestate)
  return ninestate_.Mutable(index);
}
inline ::StateData* NpcMapData::add_ninestate() {
  // @@protoc_insertion_point(field_add:NpcMapData.ninestate)
  return ninestate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::StateData >&
NpcMapData::ninestate() const {
  // @@protoc_insertion_point(field_list:NpcMapData.ninestate)
  return ninestate_;
}
inline ::google::protobuf::RepeatedPtrField< ::StateData >*
NpcMapData::mutable_ninestate() {
  // @@protoc_insertion_point(field_mutable_list:NpcMapData.ninestate)
  return &ninestate_;
}

// optional uint32 attacked_type = 21;
inline bool NpcMapData::has_attacked_type() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void NpcMapData::set_has_attacked_type() {
  _has_bits_[0] |= 0x00100000u;
}
inline void NpcMapData::clear_has_attacked_type() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void NpcMapData::clear_attacked_type() {
  attacked_type_ = 0u;
  clear_has_attacked_type();
}
inline ::google::protobuf::uint32 NpcMapData::attacked_type() const {
  // @@protoc_insertion_point(field_get:NpcMapData.attacked_type)
  return attacked_type_;
}
inline void NpcMapData::set_attacked_type(::google::protobuf::uint32 value) {
  set_has_attacked_type();
  attacked_type_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.attacked_type)
}

// optional uint32 maxhp = 22;
inline bool NpcMapData::has_maxhp() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void NpcMapData::set_has_maxhp() {
  _has_bits_[0] |= 0x00200000u;
}
inline void NpcMapData::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void NpcMapData::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 NpcMapData::maxhp() const {
  // @@protoc_insertion_point(field_get:NpcMapData.maxhp)
  return maxhp_;
}
inline void NpcMapData::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.maxhp)
}

// optional uint32 pkcamp = 23;
inline bool NpcMapData::has_pkcamp() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void NpcMapData::set_has_pkcamp() {
  _has_bits_[0] |= 0x00400000u;
}
inline void NpcMapData::clear_has_pkcamp() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void NpcMapData::clear_pkcamp() {
  pkcamp_ = 0u;
  clear_has_pkcamp();
}
inline ::google::protobuf::uint32 NpcMapData::pkcamp() const {
  // @@protoc_insertion_point(field_get:NpcMapData.pkcamp)
  return pkcamp_;
}
inline void NpcMapData::set_pkcamp(::google::protobuf::uint32 value) {
  set_has_pkcamp();
  pkcamp_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.pkcamp)
}

// optional string desname = 24;
inline bool NpcMapData::has_desname() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void NpcMapData::set_has_desname() {
  _has_bits_[0] |= 0x00800000u;
}
inline void NpcMapData::clear_has_desname() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void NpcMapData::clear_desname() {
  if (desname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_->clear();
  }
  clear_has_desname();
}
inline const ::std::string& NpcMapData::desname() const {
  // @@protoc_insertion_point(field_get:NpcMapData.desname)
  return *desname_;
}
inline void NpcMapData::set_desname(const ::std::string& value) {
  set_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
  // @@protoc_insertion_point(field_set:NpcMapData.desname)
}
inline void NpcMapData::set_desname(const char* value) {
  set_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
  // @@protoc_insertion_point(field_set_char:NpcMapData.desname)
}
inline void NpcMapData::set_desname(const char* value, size_t size) {
  set_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NpcMapData.desname)
}
inline ::std::string* NpcMapData::mutable_desname() {
  set_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:NpcMapData.desname)
  return desname_;
}
inline ::std::string* NpcMapData::release_desname() {
  clear_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desname_;
    desname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NpcMapData::set_allocated_desname(::std::string* desname) {
  if (desname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desname_;
  }
  if (desname) {
    set_has_desname();
    desname_ = desname;
  } else {
    clear_has_desname();
    desname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:NpcMapData.desname)
}

// optional bool into = 25 [default = false];
inline bool NpcMapData::has_into() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void NpcMapData::set_has_into() {
  _has_bits_[0] |= 0x01000000u;
}
inline void NpcMapData::clear_has_into() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void NpcMapData::clear_into() {
  into_ = false;
  clear_has_into();
}
inline bool NpcMapData::into() const {
  // @@protoc_insertion_point(field_get:NpcMapData.into)
  return into_;
}
inline void NpcMapData::set_into(bool value) {
  set_has_into();
  into_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.into)
}

// optional uint32 killer = 26;
inline bool NpcMapData::has_killer() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void NpcMapData::set_has_killer() {
  _has_bits_[0] |= 0x02000000u;
}
inline void NpcMapData::clear_has_killer() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void NpcMapData::clear_killer() {
  killer_ = 0u;
  clear_has_killer();
}
inline ::google::protobuf::uint32 NpcMapData::killer() const {
  // @@protoc_insertion_point(field_get:NpcMapData.killer)
  return killer_;
}
inline void NpcMapData::set_killer(::google::protobuf::uint32 value) {
  set_has_killer();
  killer_ = value;
  // @@protoc_insertion_point(field_set:NpcMapData.killer)
}

// -------------------------------------------------------------------

// NpcDeathMapData

// optional uint32 id = 1;
inline bool NpcDeathMapData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcDeathMapData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcDeathMapData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcDeathMapData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NpcDeathMapData::id() const {
  // @@protoc_insertion_point(field_get:NpcDeathMapData.id)
  return id_;
}
inline void NpcDeathMapData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:NpcDeathMapData.id)
}

// optional uint32 tmpid = 2;
inline bool NpcDeathMapData::has_tmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcDeathMapData::set_has_tmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcDeathMapData::clear_has_tmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcDeathMapData::clear_tmpid() {
  tmpid_ = 0u;
  clear_has_tmpid();
}
inline ::google::protobuf::uint32 NpcDeathMapData::tmpid() const {
  // @@protoc_insertion_point(field_get:NpcDeathMapData.tmpid)
  return tmpid_;
}
inline void NpcDeathMapData::set_tmpid(::google::protobuf::uint32 value) {
  set_has_tmpid();
  tmpid_ = value;
  // @@protoc_insertion_point(field_set:NpcDeathMapData.tmpid)
}

// optional uint32 x = 3;
inline bool NpcDeathMapData::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcDeathMapData::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcDeathMapData::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcDeathMapData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 NpcDeathMapData::x() const {
  // @@protoc_insertion_point(field_get:NpcDeathMapData.x)
  return x_;
}
inline void NpcDeathMapData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:NpcDeathMapData.x)
}

// optional uint32 y = 4;
inline bool NpcDeathMapData::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NpcDeathMapData::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NpcDeathMapData::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NpcDeathMapData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 NpcDeathMapData::y() const {
  // @@protoc_insertion_point(field_get:NpcDeathMapData.y)
  return y_;
}
inline void NpcDeathMapData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:NpcDeathMapData.y)
}

// optional uint32 dir = 5;
inline bool NpcDeathMapData::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NpcDeathMapData::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NpcDeathMapData::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NpcDeathMapData::clear_dir() {
  dir_ = 0u;
  clear_has_dir();
}
inline ::google::protobuf::uint32 NpcDeathMapData::dir() const {
  // @@protoc_insertion_point(field_get:NpcDeathMapData.dir)
  return dir_;
}
inline void NpcDeathMapData::set_dir(::google::protobuf::uint32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:NpcDeathMapData.dir)
}

// optional uint32 disappearTime = 6;
inline bool NpcDeathMapData::has_disappeartime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NpcDeathMapData::set_has_disappeartime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NpcDeathMapData::clear_has_disappeartime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NpcDeathMapData::clear_disappeartime() {
  disappeartime_ = 0u;
  clear_has_disappeartime();
}
inline ::google::protobuf::uint32 NpcDeathMapData::disappeartime() const {
  // @@protoc_insertion_point(field_get:NpcDeathMapData.disappearTime)
  return disappeartime_;
}
inline void NpcDeathMapData::set_disappeartime(::google::protobuf::uint32 value) {
  set_has_disappeartime();
  disappeartime_ = value;
  // @@protoc_insertion_point(field_set:NpcDeathMapData.disappearTime)
}

// optional string name = 7;
inline bool NpcDeathMapData::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NpcDeathMapData::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NpcDeathMapData::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NpcDeathMapData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& NpcDeathMapData::name() const {
  // @@protoc_insertion_point(field_get:NpcDeathMapData.name)
  return *name_;
}
inline void NpcDeathMapData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:NpcDeathMapData.name)
}
inline void NpcDeathMapData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:NpcDeathMapData.name)
}
inline void NpcDeathMapData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NpcDeathMapData.name)
}
inline ::std::string* NpcDeathMapData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:NpcDeathMapData.name)
  return name_;
}
inline ::std::string* NpcDeathMapData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NpcDeathMapData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:NpcDeathMapData.name)
}

// optional uint32 killer = 8;
inline bool NpcDeathMapData::has_killer() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NpcDeathMapData::set_has_killer() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NpcDeathMapData::clear_has_killer() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NpcDeathMapData::clear_killer() {
  killer_ = 0u;
  clear_has_killer();
}
inline ::google::protobuf::uint32 NpcDeathMapData::killer() const {
  // @@protoc_insertion_point(field_get:NpcDeathMapData.killer)
  return killer_;
}
inline void NpcDeathMapData::set_killer(::google::protobuf::uint32 value) {
  set_has_killer();
  killer_ = value;
  // @@protoc_insertion_point(field_set:NpcDeathMapData.killer)
}

// -------------------------------------------------------------------

// EquipChangeMaterial

// optional uint32 thisid = 1;
inline bool EquipChangeMaterial::has_thisid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipChangeMaterial::set_has_thisid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipChangeMaterial::clear_has_thisid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipChangeMaterial::clear_thisid() {
  thisid_ = 0u;
  clear_has_thisid();
}
inline ::google::protobuf::uint32 EquipChangeMaterial::thisid() const {
  // @@protoc_insertion_point(field_get:EquipChangeMaterial.thisid)
  return thisid_;
}
inline void EquipChangeMaterial::set_thisid(::google::protobuf::uint32 value) {
  set_has_thisid();
  thisid_ = value;
  // @@protoc_insertion_point(field_set:EquipChangeMaterial.thisid)
}

// optional uint32 num = 2;
inline bool EquipChangeMaterial::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipChangeMaterial::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipChangeMaterial::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipChangeMaterial::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 EquipChangeMaterial::num() const {
  // @@protoc_insertion_point(field_get:EquipChangeMaterial.num)
  return num_;
}
inline void EquipChangeMaterial::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:EquipChangeMaterial.num)
}

// -------------------------------------------------------------------

// AddMaxCount_Count

// optional .CounterType type = 1 [default = COUNTERT_NONE];
inline bool AddMaxCount_Count::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddMaxCount_Count::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddMaxCount_Count::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddMaxCount_Count::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::CounterType AddMaxCount_Count::type() const {
  // @@protoc_insertion_point(field_get:AddMaxCount.Count.type)
  return static_cast< ::CounterType >(type_);
}
inline void AddMaxCount_Count::set_type(::CounterType value) {
  assert(::CounterType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:AddMaxCount.Count.type)
}

// optional uint32 id = 2;
inline bool AddMaxCount_Count::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddMaxCount_Count::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddMaxCount_Count::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddMaxCount_Count::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AddMaxCount_Count::id() const {
  // @@protoc_insertion_point(field_get:AddMaxCount.Count.id)
  return id_;
}
inline void AddMaxCount_Count::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:AddMaxCount.Count.id)
}

// optional .TimeCycle cycle = 3 [default = TimeCycle_None];
inline bool AddMaxCount_Count::has_cycle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddMaxCount_Count::set_has_cycle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddMaxCount_Count::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddMaxCount_Count::clear_cycle() {
  cycle_ = 0;
  clear_has_cycle();
}
inline ::TimeCycle AddMaxCount_Count::cycle() const {
  // @@protoc_insertion_point(field_get:AddMaxCount.Count.cycle)
  return static_cast< ::TimeCycle >(cycle_);
}
inline void AddMaxCount_Count::set_cycle(::TimeCycle value) {
  assert(::TimeCycle_IsValid(value));
  set_has_cycle();
  cycle_ = value;
  // @@protoc_insertion_point(field_set:AddMaxCount.Count.cycle)
}

// optional uint32 addcount = 4;
inline bool AddMaxCount_Count::has_addcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddMaxCount_Count::set_has_addcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddMaxCount_Count::clear_has_addcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddMaxCount_Count::clear_addcount() {
  addcount_ = 0u;
  clear_has_addcount();
}
inline ::google::protobuf::uint32 AddMaxCount_Count::addcount() const {
  // @@protoc_insertion_point(field_get:AddMaxCount.Count.addcount)
  return addcount_;
}
inline void AddMaxCount_Count::set_addcount(::google::protobuf::uint32 value) {
  set_has_addcount();
  addcount_ = value;
  // @@protoc_insertion_point(field_set:AddMaxCount.Count.addcount)
}

// -------------------------------------------------------------------

// AddMaxCount

// repeated .AddMaxCount.Count count = 1;
inline int AddMaxCount::count_size() const {
  return count_.size();
}
inline void AddMaxCount::clear_count() {
  count_.Clear();
}
inline const ::AddMaxCount_Count& AddMaxCount::count(int index) const {
  // @@protoc_insertion_point(field_get:AddMaxCount.count)
  return count_.Get(index);
}
inline ::AddMaxCount_Count* AddMaxCount::mutable_count(int index) {
  // @@protoc_insertion_point(field_mutable:AddMaxCount.count)
  return count_.Mutable(index);
}
inline ::AddMaxCount_Count* AddMaxCount::add_count() {
  // @@protoc_insertion_point(field_add:AddMaxCount.count)
  return count_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AddMaxCount_Count >&
AddMaxCount::count() const {
  // @@protoc_insertion_point(field_list:AddMaxCount.count)
  return count_;
}
inline ::google::protobuf::RepeatedPtrField< ::AddMaxCount_Count >*
AddMaxCount::mutable_count() {
  // @@protoc_insertion_point(field_mutable_list:AddMaxCount.count)
  return &count_;
}

// -------------------------------------------------------------------

// BossReliveInfo

// optional string name = 1;
inline bool BossReliveInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossReliveInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossReliveInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossReliveInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BossReliveInfo::name() const {
  // @@protoc_insertion_point(field_get:BossReliveInfo.name)
  return *name_;
}
inline void BossReliveInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:BossReliveInfo.name)
}
inline void BossReliveInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:BossReliveInfo.name)
}
inline void BossReliveInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BossReliveInfo.name)
}
inline ::std::string* BossReliveInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BossReliveInfo.name)
  return name_;
}
inline ::std::string* BossReliveInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BossReliveInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BossReliveInfo.name)
}

// optional uint32 hppercent = 2;
inline bool BossReliveInfo::has_hppercent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossReliveInfo::set_has_hppercent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossReliveInfo::clear_has_hppercent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossReliveInfo::clear_hppercent() {
  hppercent_ = 0u;
  clear_has_hppercent();
}
inline ::google::protobuf::uint32 BossReliveInfo::hppercent() const {
  // @@protoc_insertion_point(field_get:BossReliveInfo.hppercent)
  return hppercent_;
}
inline void BossReliveInfo::set_hppercent(::google::protobuf::uint32 value) {
  set_has_hppercent();
  hppercent_ = value;
  // @@protoc_insertion_point(field_set:BossReliveInfo.hppercent)
}

// optional string time = 3;
inline bool BossReliveInfo::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossReliveInfo::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossReliveInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossReliveInfo::clear_time() {
  if (time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_->clear();
  }
  clear_has_time();
}
inline const ::std::string& BossReliveInfo::time() const {
  // @@protoc_insertion_point(field_get:BossReliveInfo.time)
  return *time_;
}
inline void BossReliveInfo::set_time(const ::std::string& value) {
  set_has_time();
  if (time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(value);
  // @@protoc_insertion_point(field_set:BossReliveInfo.time)
}
inline void BossReliveInfo::set_time(const char* value) {
  set_has_time();
  if (time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(value);
  // @@protoc_insertion_point(field_set_char:BossReliveInfo.time)
}
inline void BossReliveInfo::set_time(const char* value, size_t size) {
  set_has_time();
  if (time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BossReliveInfo.time)
}
inline ::std::string* BossReliveInfo::mutable_time() {
  set_has_time();
  if (time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BossReliveInfo.time)
  return time_;
}
inline ::std::string* BossReliveInfo::release_time() {
  clear_has_time();
  if (time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = time_;
    time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BossReliveInfo::set_allocated_time(::std::string* time) {
  if (time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete time_;
  }
  if (time) {
    set_has_time();
    time_ = time;
  } else {
    clear_has_time();
    time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BossReliveInfo.time)
}

// optional string map = 4;
inline bool BossReliveInfo::has_map() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BossReliveInfo::set_has_map() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BossReliveInfo::clear_has_map() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BossReliveInfo::clear_map() {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_->clear();
  }
  clear_has_map();
}
inline const ::std::string& BossReliveInfo::map() const {
  // @@protoc_insertion_point(field_get:BossReliveInfo.map)
  return *map_;
}
inline void BossReliveInfo::set_map(const ::std::string& value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set:BossReliveInfo.map)
}
inline void BossReliveInfo::set_map(const char* value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set_char:BossReliveInfo.map)
}
inline void BossReliveInfo::set_map(const char* value, size_t size) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BossReliveInfo.map)
}
inline ::std::string* BossReliveInfo::mutable_map() {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BossReliveInfo.map)
  return map_;
}
inline ::std::string* BossReliveInfo::release_map() {
  clear_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = map_;
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BossReliveInfo::set_allocated_map(::std::string* map) {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete map_;
  }
  if (map) {
    set_has_map();
    map_ = map;
  } else {
    clear_has_map();
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BossReliveInfo.map)
}

// optional uint32 level = 5;
inline bool BossReliveInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BossReliveInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BossReliveInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BossReliveInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BossReliveInfo::level() const {
  // @@protoc_insertion_point(field_get:BossReliveInfo.level)
  return level_;
}
inline void BossReliveInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BossReliveInfo.level)
}

// optional uint32 country = 6;
inline bool BossReliveInfo::has_country() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BossReliveInfo::set_has_country() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BossReliveInfo::clear_has_country() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BossReliveInfo::clear_country() {
  country_ = 0u;
  clear_has_country();
}
inline ::google::protobuf::uint32 BossReliveInfo::country() const {
  // @@protoc_insertion_point(field_get:BossReliveInfo.country)
  return country_;
}
inline void BossReliveInfo::set_country(::google::protobuf::uint32 value) {
  set_has_country();
  country_ = value;
  // @@protoc_insertion_point(field_set:BossReliveInfo.country)
}

// optional string desc = 7;
inline bool BossReliveInfo::has_desc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BossReliveInfo::set_has_desc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BossReliveInfo::clear_has_desc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BossReliveInfo::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& BossReliveInfo::desc() const {
  // @@protoc_insertion_point(field_get:BossReliveInfo.desc)
  return *desc_;
}
inline void BossReliveInfo::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:BossReliveInfo.desc)
}
inline void BossReliveInfo::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:BossReliveInfo.desc)
}
inline void BossReliveInfo::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BossReliveInfo.desc)
}
inline ::std::string* BossReliveInfo::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BossReliveInfo.desc)
  return desc_;
}
inline ::std::string* BossReliveInfo::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BossReliveInfo::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BossReliveInfo.desc)
}

// -------------------------------------------------------------------

// ChangeZoneInfo

// optional uint32 newzoneid = 1;
inline bool ChangeZoneInfo::has_newzoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeZoneInfo::set_has_newzoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeZoneInfo::clear_has_newzoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeZoneInfo::clear_newzoneid() {
  newzoneid_ = 0u;
  clear_has_newzoneid();
}
inline ::google::protobuf::uint32 ChangeZoneInfo::newzoneid() const {
  // @@protoc_insertion_point(field_get:ChangeZoneInfo.newzoneid)
  return newzoneid_;
}
inline void ChangeZoneInfo::set_newzoneid(::google::protobuf::uint32 value) {
  set_has_newzoneid();
  newzoneid_ = value;
  // @@protoc_insertion_point(field_set:ChangeZoneInfo.newzoneid)
}

// optional uint32 token = 4;
inline bool ChangeZoneInfo::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeZoneInfo::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeZoneInfo::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeZoneInfo::clear_token() {
  token_ = 0u;
  clear_has_token();
}
inline ::google::protobuf::uint32 ChangeZoneInfo::token() const {
  // @@protoc_insertion_point(field_get:ChangeZoneInfo.token)
  return token_;
}
inline void ChangeZoneInfo::set_token(::google::protobuf::uint32 value) {
  set_has_token();
  token_ = value;
  // @@protoc_insertion_point(field_set:ChangeZoneInfo.token)
}

// -------------------------------------------------------------------

// UserScore

// optional .ScoreType type = 1 [default = Score_None];
inline bool UserScore::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserScore::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserScore::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserScore::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::ScoreType UserScore::type() const {
  // @@protoc_insertion_point(field_get:UserScore.type)
  return static_cast< ::ScoreType >(type_);
}
inline void UserScore::set_type(::ScoreType value) {
  assert(::ScoreType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:UserScore.type)
}

// optional uint32 score = 2;
inline bool UserScore::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserScore::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserScore::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 UserScore::score() const {
  // @@protoc_insertion_point(field_get:UserScore.score)
  return score_;
}
inline void UserScore::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:UserScore.score)
}

// optional uint32 totalscore = 3;
inline bool UserScore::has_totalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserScore::set_has_totalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserScore::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserScore::clear_totalscore() {
  totalscore_ = 0u;
  clear_has_totalscore();
}
inline ::google::protobuf::uint32 UserScore::totalscore() const {
  // @@protoc_insertion_point(field_get:UserScore.totalscore)
  return totalscore_;
}
inline void UserScore::set_totalscore(::google::protobuf::uint32 value) {
  set_has_totalscore();
  totalscore_ = value;
  // @@protoc_insertion_point(field_set:UserScore.totalscore)
}

// -------------------------------------------------------------------

// OneYaoQianItem

// optional uint32 buynum = 1;
inline bool OneYaoQianItem::has_buynum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneYaoQianItem::set_has_buynum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneYaoQianItem::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneYaoQianItem::clear_buynum() {
  buynum_ = 0u;
  clear_has_buynum();
}
inline ::google::protobuf::uint32 OneYaoQianItem::buynum() const {
  // @@protoc_insertion_point(field_get:OneYaoQianItem.buynum)
  return buynum_;
}
inline void OneYaoQianItem::set_buynum(::google::protobuf::uint32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:OneYaoQianItem.buynum)
}

// optional uint32 buylevel = 2;
inline bool OneYaoQianItem::has_buylevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneYaoQianItem::set_has_buylevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneYaoQianItem::clear_has_buylevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneYaoQianItem::clear_buylevel() {
  buylevel_ = 0u;
  clear_has_buylevel();
}
inline ::google::protobuf::uint32 OneYaoQianItem::buylevel() const {
  // @@protoc_insertion_point(field_get:OneYaoQianItem.buylevel)
  return buylevel_;
}
inline void OneYaoQianItem::set_buylevel(::google::protobuf::uint32 value) {
  set_has_buylevel();
  buylevel_ = value;
  // @@protoc_insertion_point(field_set:OneYaoQianItem.buylevel)
}

// repeated uint32 returnlevel = 3;
inline int OneYaoQianItem::returnlevel_size() const {
  return returnlevel_.size();
}
inline void OneYaoQianItem::clear_returnlevel() {
  returnlevel_.Clear();
}
inline ::google::protobuf::uint32 OneYaoQianItem::returnlevel(int index) const {
  // @@protoc_insertion_point(field_get:OneYaoQianItem.returnlevel)
  return returnlevel_.Get(index);
}
inline void OneYaoQianItem::set_returnlevel(int index, ::google::protobuf::uint32 value) {
  returnlevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:OneYaoQianItem.returnlevel)
}
inline void OneYaoQianItem::add_returnlevel(::google::protobuf::uint32 value) {
  returnlevel_.Add(value);
  // @@protoc_insertion_point(field_add:OneYaoQianItem.returnlevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OneYaoQianItem::returnlevel() const {
  // @@protoc_insertion_point(field_list:OneYaoQianItem.returnlevel)
  return returnlevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OneYaoQianItem::mutable_returnlevel() {
  // @@protoc_insertion_point(field_mutable_list:OneYaoQianItem.returnlevel)
  return &returnlevel_;
}

// -------------------------------------------------------------------

// YaoQianSaveData

// optional uint32 havebuy = 1;
inline bool YaoQianSaveData::has_havebuy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YaoQianSaveData::set_has_havebuy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YaoQianSaveData::clear_has_havebuy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YaoQianSaveData::clear_havebuy() {
  havebuy_ = 0u;
  clear_has_havebuy();
}
inline ::google::protobuf::uint32 YaoQianSaveData::havebuy() const {
  // @@protoc_insertion_point(field_get:YaoQianSaveData.havebuy)
  return havebuy_;
}
inline void YaoQianSaveData::set_havebuy(::google::protobuf::uint32 value) {
  set_has_havebuy();
  havebuy_ = value;
  // @@protoc_insertion_point(field_set:YaoQianSaveData.havebuy)
}

// optional uint32 returngold = 2;
inline bool YaoQianSaveData::has_returngold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YaoQianSaveData::set_has_returngold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YaoQianSaveData::clear_has_returngold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YaoQianSaveData::clear_returngold() {
  returngold_ = 0u;
  clear_has_returngold();
}
inline ::google::protobuf::uint32 YaoQianSaveData::returngold() const {
  // @@protoc_insertion_point(field_get:YaoQianSaveData.returngold)
  return returngold_;
}
inline void YaoQianSaveData::set_returngold(::google::protobuf::uint32 value) {
  set_has_returngold();
  returngold_ = value;
  // @@protoc_insertion_point(field_set:YaoQianSaveData.returngold)
}

// optional uint32 returnbindgold = 3;
inline bool YaoQianSaveData::has_returnbindgold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YaoQianSaveData::set_has_returnbindgold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YaoQianSaveData::clear_has_returnbindgold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YaoQianSaveData::clear_returnbindgold() {
  returnbindgold_ = 0u;
  clear_has_returnbindgold();
}
inline ::google::protobuf::uint32 YaoQianSaveData::returnbindgold() const {
  // @@protoc_insertion_point(field_get:YaoQianSaveData.returnbindgold)
  return returnbindgold_;
}
inline void YaoQianSaveData::set_returnbindgold(::google::protobuf::uint32 value) {
  set_has_returnbindgold();
  returnbindgold_ = value;
  // @@protoc_insertion_point(field_set:YaoQianSaveData.returnbindgold)
}

// repeated .OneYaoQianItem items = 4;
inline int YaoQianSaveData::items_size() const {
  return items_.size();
}
inline void YaoQianSaveData::clear_items() {
  items_.Clear();
}
inline const ::OneYaoQianItem& YaoQianSaveData::items(int index) const {
  // @@protoc_insertion_point(field_get:YaoQianSaveData.items)
  return items_.Get(index);
}
inline ::OneYaoQianItem* YaoQianSaveData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:YaoQianSaveData.items)
  return items_.Mutable(index);
}
inline ::OneYaoQianItem* YaoQianSaveData::add_items() {
  // @@protoc_insertion_point(field_add:YaoQianSaveData.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneYaoQianItem >&
YaoQianSaveData::items() const {
  // @@protoc_insertion_point(field_list:YaoQianSaveData.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneYaoQianItem >*
YaoQianSaveData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:YaoQianSaveData.items)
  return &items_;
}

// optional uint32 stage = 5 [default = 1];
inline bool YaoQianSaveData::has_stage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YaoQianSaveData::set_has_stage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YaoQianSaveData::clear_has_stage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YaoQianSaveData::clear_stage() {
  stage_ = 1u;
  clear_has_stage();
}
inline ::google::protobuf::uint32 YaoQianSaveData::stage() const {
  // @@protoc_insertion_point(field_get:YaoQianSaveData.stage)
  return stage_;
}
inline void YaoQianSaveData::set_stage(::google::protobuf::uint32 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:YaoQianSaveData.stage)
}

// -------------------------------------------------------------------

// DungeonSaveData

// optional uint32 id = 1;
inline bool DungeonSaveData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonSaveData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonSaveData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonSaveData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DungeonSaveData::id() const {
  // @@protoc_insertion_point(field_get:DungeonSaveData.id)
  return id_;
}
inline void DungeonSaveData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:DungeonSaveData.id)
}

// optional uint32 times = 2;
inline bool DungeonSaveData::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonSaveData::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonSaveData::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonSaveData::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 DungeonSaveData::times() const {
  // @@protoc_insertion_point(field_get:DungeonSaveData.times)
  return times_;
}
inline void DungeonSaveData::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
  // @@protoc_insertion_point(field_set:DungeonSaveData.times)
}

// optional uint32 time = 3;
inline bool DungeonSaveData::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DungeonSaveData::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DungeonSaveData::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DungeonSaveData::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 DungeonSaveData::time() const {
  // @@protoc_insertion_point(field_get:DungeonSaveData.time)
  return time_;
}
inline void DungeonSaveData::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:DungeonSaveData.time)
}

// -------------------------------------------------------------------

// VarInfo

// optional string key = 1;
inline bool VarInfo::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VarInfo::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VarInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VarInfo::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& VarInfo::key() const {
  // @@protoc_insertion_point(field_get:VarInfo.key)
  return *key_;
}
inline void VarInfo::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:VarInfo.key)
}
inline void VarInfo::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:VarInfo.key)
}
inline void VarInfo::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:VarInfo.key)
}
inline ::std::string* VarInfo::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:VarInfo.key)
  return key_;
}
inline ::std::string* VarInfo::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void VarInfo::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:VarInfo.key)
}

// optional string value = 2;
inline bool VarInfo::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VarInfo::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VarInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VarInfo::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& VarInfo::value() const {
  // @@protoc_insertion_point(field_get:VarInfo.value)
  return *value_;
}
inline void VarInfo::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:VarInfo.value)
}
inline void VarInfo::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:VarInfo.value)
}
inline void VarInfo::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:VarInfo.value)
}
inline ::std::string* VarInfo::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:VarInfo.value)
  return value_;
}
inline ::std::string* VarInfo::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void VarInfo::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:VarInfo.value)
}

// optional uint32 type = 3;
inline bool VarInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VarInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VarInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VarInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 VarInfo::type() const {
  // @@protoc_insertion_point(field_get:VarInfo.type)
  return type_;
}
inline void VarInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:VarInfo.type)
}

// -------------------------------------------------------------------

// BuildInfo

// optional uint32 id = 1;
inline bool BuildInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BuildInfo::id() const {
  // @@protoc_insertion_point(field_get:BuildInfo.id)
  return id_;
}
inline void BuildInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BuildInfo.id)
}

// optional uint32 level = 2;
inline bool BuildInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BuildInfo::level() const {
  // @@protoc_insertion_point(field_get:BuildInfo.level)
  return level_;
}
inline void BuildInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BuildInfo.level)
}

// optional uint32 state = 3;
inline bool BuildInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 BuildInfo::state() const {
  // @@protoc_insertion_point(field_get:BuildInfo.state)
  return state_;
}
inline void BuildInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:BuildInfo.state)
}

// optional uint32 lastcollecttime = 4;
inline bool BuildInfo::has_lastcollecttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuildInfo::set_has_lastcollecttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuildInfo::clear_has_lastcollecttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuildInfo::clear_lastcollecttime() {
  lastcollecttime_ = 0u;
  clear_has_lastcollecttime();
}
inline ::google::protobuf::uint32 BuildInfo::lastcollecttime() const {
  // @@protoc_insertion_point(field_get:BuildInfo.lastcollecttime)
  return lastcollecttime_;
}
inline void BuildInfo::set_lastcollecttime(::google::protobuf::uint32 value) {
  set_has_lastcollecttime();
  lastcollecttime_ = value;
  // @@protoc_insertion_point(field_set:BuildInfo.lastcollecttime)
}

// optional uint32 upgradetime = 5;
inline bool BuildInfo::has_upgradetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuildInfo::set_has_upgradetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuildInfo::clear_has_upgradetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuildInfo::clear_upgradetime() {
  upgradetime_ = 0u;
  clear_has_upgradetime();
}
inline ::google::protobuf::uint32 BuildInfo::upgradetime() const {
  // @@protoc_insertion_point(field_get:BuildInfo.upgradetime)
  return upgradetime_;
}
inline void BuildInfo::set_upgradetime(::google::protobuf::uint32 value) {
  set_has_upgradetime();
  upgradetime_ = value;
  // @@protoc_insertion_point(field_set:BuildInfo.upgradetime)
}

// optional uint32 outputitemtimes = 6;
inline bool BuildInfo::has_outputitemtimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuildInfo::set_has_outputitemtimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuildInfo::clear_has_outputitemtimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuildInfo::clear_outputitemtimes() {
  outputitemtimes_ = 0u;
  clear_has_outputitemtimes();
}
inline ::google::protobuf::uint32 BuildInfo::outputitemtimes() const {
  // @@protoc_insertion_point(field_get:BuildInfo.outputitemtimes)
  return outputitemtimes_;
}
inline void BuildInfo::set_outputitemtimes(::google::protobuf::uint32 value) {
  set_has_outputitemtimes();
  outputitemtimes_ = value;
  // @@protoc_insertion_point(field_set:BuildInfo.outputitemtimes)
}

// optional uint32 lastgetitemtime = 7;
inline bool BuildInfo::has_lastgetitemtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuildInfo::set_has_lastgetitemtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuildInfo::clear_has_lastgetitemtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuildInfo::clear_lastgetitemtime() {
  lastgetitemtime_ = 0u;
  clear_has_lastgetitemtime();
}
inline ::google::protobuf::uint32 BuildInfo::lastgetitemtime() const {
  // @@protoc_insertion_point(field_get:BuildInfo.lastgetitemtime)
  return lastgetitemtime_;
}
inline void BuildInfo::set_lastgetitemtime(::google::protobuf::uint32 value) {
  set_has_lastgetitemtime();
  lastgetitemtime_ = value;
  // @@protoc_insertion_point(field_set:BuildInfo.lastgetitemtime)
}

// -------------------------------------------------------------------

// MakeEquipInfo

// optional uint64 iid = 1;
inline bool MakeEquipInfo::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MakeEquipInfo::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MakeEquipInfo::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MakeEquipInfo::clear_iid() {
  iid_ = GOOGLE_ULONGLONG(0);
  clear_has_iid();
}
inline ::google::protobuf::uint64 MakeEquipInfo::iid() const {
  // @@protoc_insertion_point(field_get:MakeEquipInfo.iid)
  return iid_;
}
inline void MakeEquipInfo::set_iid(::google::protobuf::uint64 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:MakeEquipInfo.iid)
}

// optional uint32 equipid = 2;
inline bool MakeEquipInfo::has_equipid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MakeEquipInfo::set_has_equipid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MakeEquipInfo::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MakeEquipInfo::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 MakeEquipInfo::equipid() const {
  // @@protoc_insertion_point(field_get:MakeEquipInfo.equipid)
  return equipid_;
}
inline void MakeEquipInfo::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
  // @@protoc_insertion_point(field_set:MakeEquipInfo.equipid)
}

// optional uint32 quality = 3;
inline bool MakeEquipInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MakeEquipInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MakeEquipInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MakeEquipInfo::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 MakeEquipInfo::quality() const {
  // @@protoc_insertion_point(field_get:MakeEquipInfo.quality)
  return quality_;
}
inline void MakeEquipInfo::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:MakeEquipInfo.quality)
}

// optional uint32 maketime = 4;
inline bool MakeEquipInfo::has_maketime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MakeEquipInfo::set_has_maketime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MakeEquipInfo::clear_has_maketime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MakeEquipInfo::clear_maketime() {
  maketime_ = 0u;
  clear_has_maketime();
}
inline ::google::protobuf::uint32 MakeEquipInfo::maketime() const {
  // @@protoc_insertion_point(field_get:MakeEquipInfo.maketime)
  return maketime_;
}
inline void MakeEquipInfo::set_maketime(::google::protobuf::uint32 value) {
  set_has_maketime();
  maketime_ = value;
  // @@protoc_insertion_point(field_set:MakeEquipInfo.maketime)
}

// optional uint32 state = 5;
inline bool MakeEquipInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MakeEquipInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MakeEquipInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MakeEquipInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 MakeEquipInfo::state() const {
  // @@protoc_insertion_point(field_get:MakeEquipInfo.state)
  return state_;
}
inline void MakeEquipInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:MakeEquipInfo.state)
}

// -------------------------------------------------------------------

// CastleExploreInfo

// optional uint32 id = 1;
inline bool CastleExploreInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CastleExploreInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CastleExploreInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CastleExploreInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CastleExploreInfo::id() const {
  // @@protoc_insertion_point(field_get:CastleExploreInfo.id)
  return id_;
}
inline void CastleExploreInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CastleExploreInfo.id)
}

// optional uint32 state = 2;
inline bool CastleExploreInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CastleExploreInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CastleExploreInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CastleExploreInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 CastleExploreInfo::state() const {
  // @@protoc_insertion_point(field_get:CastleExploreInfo.state)
  return state_;
}
inline void CastleExploreInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CastleExploreInfo.state)
}

// optional uint32 finishtime = 3;
inline bool CastleExploreInfo::has_finishtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CastleExploreInfo::set_has_finishtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CastleExploreInfo::clear_has_finishtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CastleExploreInfo::clear_finishtime() {
  finishtime_ = 0u;
  clear_has_finishtime();
}
inline ::google::protobuf::uint32 CastleExploreInfo::finishtime() const {
  // @@protoc_insertion_point(field_get:CastleExploreInfo.finishtime)
  return finishtime_;
}
inline void CastleExploreInfo::set_finishtime(::google::protobuf::uint32 value) {
  set_has_finishtime();
  finishtime_ = value;
  // @@protoc_insertion_point(field_set:CastleExploreInfo.finishtime)
}

// optional bool issuc = 4;
inline bool CastleExploreInfo::has_issuc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CastleExploreInfo::set_has_issuc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CastleExploreInfo::clear_has_issuc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CastleExploreInfo::clear_issuc() {
  issuc_ = false;
  clear_has_issuc();
}
inline bool CastleExploreInfo::issuc() const {
  // @@protoc_insertion_point(field_get:CastleExploreInfo.issuc)
  return issuc_;
}
inline void CastleExploreInfo::set_issuc(bool value) {
  set_has_issuc();
  issuc_ = value;
  // @@protoc_insertion_point(field_set:CastleExploreInfo.issuc)
}

// repeated uint64 pets = 5;
inline int CastleExploreInfo::pets_size() const {
  return pets_.size();
}
inline void CastleExploreInfo::clear_pets() {
  pets_.Clear();
}
inline ::google::protobuf::uint64 CastleExploreInfo::pets(int index) const {
  // @@protoc_insertion_point(field_get:CastleExploreInfo.pets)
  return pets_.Get(index);
}
inline void CastleExploreInfo::set_pets(int index, ::google::protobuf::uint64 value) {
  pets_.Set(index, value);
  // @@protoc_insertion_point(field_set:CastleExploreInfo.pets)
}
inline void CastleExploreInfo::add_pets(::google::protobuf::uint64 value) {
  pets_.Add(value);
  // @@protoc_insertion_point(field_add:CastleExploreInfo.pets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CastleExploreInfo::pets() const {
  // @@protoc_insertion_point(field_list:CastleExploreInfo.pets)
  return pets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CastleExploreInfo::mutable_pets() {
  // @@protoc_insertion_point(field_mutable_list:CastleExploreInfo.pets)
  return &pets_;
}

// -------------------------------------------------------------------

// BinaryCastle

// optional uint32 level = 1;
inline bool BinaryCastle::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BinaryCastle::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BinaryCastle::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BinaryCastle::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BinaryCastle::level() const {
  // @@protoc_insertion_point(field_get:BinaryCastle.level)
  return level_;
}
inline void BinaryCastle::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BinaryCastle.level)
}

// repeated uint32 dist = 2;
inline int BinaryCastle::dist_size() const {
  return dist_.size();
}
inline void BinaryCastle::clear_dist() {
  dist_.Clear();
}
inline ::google::protobuf::uint32 BinaryCastle::dist(int index) const {
  // @@protoc_insertion_point(field_get:BinaryCastle.dist)
  return dist_.Get(index);
}
inline void BinaryCastle::set_dist(int index, ::google::protobuf::uint32 value) {
  dist_.Set(index, value);
  // @@protoc_insertion_point(field_set:BinaryCastle.dist)
}
inline void BinaryCastle::add_dist(::google::protobuf::uint32 value) {
  dist_.Add(value);
  // @@protoc_insertion_point(field_add:BinaryCastle.dist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BinaryCastle::dist() const {
  // @@protoc_insertion_point(field_list:BinaryCastle.dist)
  return dist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BinaryCastle::mutable_dist() {
  // @@protoc_insertion_point(field_mutable_list:BinaryCastle.dist)
  return &dist_;
}

// repeated .BuildInfo info = 3;
inline int BinaryCastle::info_size() const {
  return info_.size();
}
inline void BinaryCastle::clear_info() {
  info_.Clear();
}
inline const ::BuildInfo& BinaryCastle::info(int index) const {
  // @@protoc_insertion_point(field_get:BinaryCastle.info)
  return info_.Get(index);
}
inline ::BuildInfo* BinaryCastle::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:BinaryCastle.info)
  return info_.Mutable(index);
}
inline ::BuildInfo* BinaryCastle::add_info() {
  // @@protoc_insertion_point(field_add:BinaryCastle.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuildInfo >&
BinaryCastle::info() const {
  // @@protoc_insertion_point(field_list:BinaryCastle.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuildInfo >*
BinaryCastle::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:BinaryCastle.info)
  return &info_;
}

// optional uint32 open = 4;
inline bool BinaryCastle::has_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BinaryCastle::set_has_open() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BinaryCastle::clear_has_open() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BinaryCastle::clear_open() {
  open_ = 0u;
  clear_has_open();
}
inline ::google::protobuf::uint32 BinaryCastle::open() const {
  // @@protoc_insertion_point(field_get:BinaryCastle.open)
  return open_;
}
inline void BinaryCastle::set_open(::google::protobuf::uint32 value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:BinaryCastle.open)
}

// repeated .CastleExploreInfo expinfo = 5;
inline int BinaryCastle::expinfo_size() const {
  return expinfo_.size();
}
inline void BinaryCastle::clear_expinfo() {
  expinfo_.Clear();
}
inline const ::CastleExploreInfo& BinaryCastle::expinfo(int index) const {
  // @@protoc_insertion_point(field_get:BinaryCastle.expinfo)
  return expinfo_.Get(index);
}
inline ::CastleExploreInfo* BinaryCastle::mutable_expinfo(int index) {
  // @@protoc_insertion_point(field_mutable:BinaryCastle.expinfo)
  return expinfo_.Mutable(index);
}
inline ::CastleExploreInfo* BinaryCastle::add_expinfo() {
  // @@protoc_insertion_point(field_add:BinaryCastle.expinfo)
  return expinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CastleExploreInfo >&
BinaryCastle::expinfo() const {
  // @@protoc_insertion_point(field_list:BinaryCastle.expinfo)
  return expinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::CastleExploreInfo >*
BinaryCastle::mutable_expinfo() {
  // @@protoc_insertion_point(field_mutable_list:BinaryCastle.expinfo)
  return &expinfo_;
}

// -------------------------------------------------------------------

// BinaryMakeEquip

// repeated .MakeEquipInfo info = 1;
inline int BinaryMakeEquip::info_size() const {
  return info_.size();
}
inline void BinaryMakeEquip::clear_info() {
  info_.Clear();
}
inline const ::MakeEquipInfo& BinaryMakeEquip::info(int index) const {
  // @@protoc_insertion_point(field_get:BinaryMakeEquip.info)
  return info_.Get(index);
}
inline ::MakeEquipInfo* BinaryMakeEquip::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:BinaryMakeEquip.info)
  return info_.Mutable(index);
}
inline ::MakeEquipInfo* BinaryMakeEquip::add_info() {
  // @@protoc_insertion_point(field_add:BinaryMakeEquip.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MakeEquipInfo >&
BinaryMakeEquip::info() const {
  // @@protoc_insertion_point(field_list:BinaryMakeEquip.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MakeEquipInfo >*
BinaryMakeEquip::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:BinaryMakeEquip.info)
  return &info_;
}

// -------------------------------------------------------------------

// CastlePetInfo

// optional uint64 iid = 1;
inline bool CastlePetInfo::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CastlePetInfo::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CastlePetInfo::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CastlePetInfo::clear_iid() {
  iid_ = GOOGLE_ULONGLONG(0);
  clear_has_iid();
}
inline ::google::protobuf::uint64 CastlePetInfo::iid() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.iid)
  return iid_;
}
inline void CastlePetInfo::set_iid(::google::protobuf::uint64 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.iid)
}

// optional uint32 id = 2;
inline bool CastlePetInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CastlePetInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CastlePetInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CastlePetInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CastlePetInfo::id() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.id)
  return id_;
}
inline void CastlePetInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.id)
}

// optional uint32 baseskill = 3;
inline bool CastlePetInfo::has_baseskill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CastlePetInfo::set_has_baseskill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CastlePetInfo::clear_has_baseskill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CastlePetInfo::clear_baseskill() {
  baseskill_ = 0u;
  clear_has_baseskill();
}
inline ::google::protobuf::uint32 CastlePetInfo::baseskill() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.baseskill)
  return baseskill_;
}
inline void CastlePetInfo::set_baseskill(::google::protobuf::uint32 value) {
  set_has_baseskill();
  baseskill_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.baseskill)
}

// repeated uint32 randomskill = 4;
inline int CastlePetInfo::randomskill_size() const {
  return randomskill_.size();
}
inline void CastlePetInfo::clear_randomskill() {
  randomskill_.Clear();
}
inline ::google::protobuf::uint32 CastlePetInfo::randomskill(int index) const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.randomskill)
  return randomskill_.Get(index);
}
inline void CastlePetInfo::set_randomskill(int index, ::google::protobuf::uint32 value) {
  randomskill_.Set(index, value);
  // @@protoc_insertion_point(field_set:CastlePetInfo.randomskill)
}
inline void CastlePetInfo::add_randomskill(::google::protobuf::uint32 value) {
  randomskill_.Add(value);
  // @@protoc_insertion_point(field_add:CastlePetInfo.randomskill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CastlePetInfo::randomskill() const {
  // @@protoc_insertion_point(field_list:CastlePetInfo.randomskill)
  return randomskill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CastlePetInfo::mutable_randomskill() {
  // @@protoc_insertion_point(field_mutable_list:CastlePetInfo.randomskill)
  return &randomskill_;
}

// optional uint32 level = 5;
inline bool CastlePetInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CastlePetInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CastlePetInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CastlePetInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CastlePetInfo::level() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.level)
  return level_;
}
inline void CastlePetInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.level)
}

// optional uint64 exp = 6;
inline bool CastlePetInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CastlePetInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CastlePetInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CastlePetInfo::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 CastlePetInfo::exp() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.exp)
  return exp_;
}
inline void CastlePetInfo::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.exp)
}

// optional uint32 stars = 7;
inline bool CastlePetInfo::has_stars() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CastlePetInfo::set_has_stars() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CastlePetInfo::clear_has_stars() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CastlePetInfo::clear_stars() {
  stars_ = 0u;
  clear_has_stars();
}
inline ::google::protobuf::uint32 CastlePetInfo::stars() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.stars)
  return stars_;
}
inline void CastlePetInfo::set_stars(::google::protobuf::uint32 value) {
  set_has_stars();
  stars_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.stars)
}

// optional uint32 souls = 8;
inline bool CastlePetInfo::has_souls() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CastlePetInfo::set_has_souls() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CastlePetInfo::clear_has_souls() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CastlePetInfo::clear_souls() {
  souls_ = 0u;
  clear_has_souls();
}
inline ::google::protobuf::uint32 CastlePetInfo::souls() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.souls)
  return souls_;
}
inline void CastlePetInfo::set_souls(::google::protobuf::uint32 value) {
  set_has_souls();
  souls_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.souls)
}

// optional uint32 phyatt = 9;
inline bool CastlePetInfo::has_phyatt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CastlePetInfo::set_has_phyatt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CastlePetInfo::clear_has_phyatt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CastlePetInfo::clear_phyatt() {
  phyatt_ = 0u;
  clear_has_phyatt();
}
inline ::google::protobuf::uint32 CastlePetInfo::phyatt() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.phyatt)
  return phyatt_;
}
inline void CastlePetInfo::set_phyatt(::google::protobuf::uint32 value) {
  set_has_phyatt();
  phyatt_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.phyatt)
}

// optional uint32 phydef = 10;
inline bool CastlePetInfo::has_phydef() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CastlePetInfo::set_has_phydef() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CastlePetInfo::clear_has_phydef() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CastlePetInfo::clear_phydef() {
  phydef_ = 0u;
  clear_has_phydef();
}
inline ::google::protobuf::uint32 CastlePetInfo::phydef() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.phydef)
  return phydef_;
}
inline void CastlePetInfo::set_phydef(::google::protobuf::uint32 value) {
  set_has_phydef();
  phydef_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.phydef)
}

// optional uint32 magatt = 11;
inline bool CastlePetInfo::has_magatt() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CastlePetInfo::set_has_magatt() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CastlePetInfo::clear_has_magatt() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CastlePetInfo::clear_magatt() {
  magatt_ = 0u;
  clear_has_magatt();
}
inline ::google::protobuf::uint32 CastlePetInfo::magatt() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.magatt)
  return magatt_;
}
inline void CastlePetInfo::set_magatt(::google::protobuf::uint32 value) {
  set_has_magatt();
  magatt_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.magatt)
}

// optional uint32 magdef = 12;
inline bool CastlePetInfo::has_magdef() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CastlePetInfo::set_has_magdef() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CastlePetInfo::clear_has_magdef() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CastlePetInfo::clear_magdef() {
  magdef_ = 0u;
  clear_has_magdef();
}
inline ::google::protobuf::uint32 CastlePetInfo::magdef() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.magdef)
  return magdef_;
}
inline void CastlePetInfo::set_magdef(::google::protobuf::uint32 value) {
  set_has_magdef();
  magdef_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.magdef)
}

// optional uint32 hp = 13;
inline bool CastlePetInfo::has_hp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CastlePetInfo::set_has_hp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CastlePetInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CastlePetInfo::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 CastlePetInfo::hp() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.hp)
  return hp_;
}
inline void CastlePetInfo::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.hp)
}

// optional uint32 mp = 14;
inline bool CastlePetInfo::has_mp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CastlePetInfo::set_has_mp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CastlePetInfo::clear_has_mp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CastlePetInfo::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 CastlePetInfo::mp() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.mp)
  return mp_;
}
inline void CastlePetInfo::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.mp)
}

// optional uint32 experttype = 15;
inline bool CastlePetInfo::has_experttype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CastlePetInfo::set_has_experttype() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CastlePetInfo::clear_has_experttype() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CastlePetInfo::clear_experttype() {
  experttype_ = 0u;
  clear_has_experttype();
}
inline ::google::protobuf::uint32 CastlePetInfo::experttype() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.experttype)
  return experttype_;
}
inline void CastlePetInfo::set_experttype(::google::protobuf::uint32 value) {
  set_has_experttype();
  experttype_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.experttype)
}

// optional uint32 workability = 16;
inline bool CastlePetInfo::has_workability() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CastlePetInfo::set_has_workability() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CastlePetInfo::clear_has_workability() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CastlePetInfo::clear_workability() {
  workability_ = 0u;
  clear_has_workability();
}
inline ::google::protobuf::uint32 CastlePetInfo::workability() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.workability)
  return workability_;
}
inline void CastlePetInfo::set_workability(::google::protobuf::uint32 value) {
  set_has_workability();
  workability_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.workability)
}

// optional uint32 state = 17;
inline bool CastlePetInfo::has_state() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CastlePetInfo::set_has_state() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CastlePetInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CastlePetInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 CastlePetInfo::state() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.state)
  return state_;
}
inline void CastlePetInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.state)
}

// optional uint32 allsouls = 18;
inline bool CastlePetInfo::has_allsouls() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CastlePetInfo::set_has_allsouls() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CastlePetInfo::clear_has_allsouls() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CastlePetInfo::clear_allsouls() {
  allsouls_ = 0u;
  clear_has_allsouls();
}
inline ::google::protobuf::uint32 CastlePetInfo::allsouls() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.allsouls)
  return allsouls_;
}
inline void CastlePetInfo::set_allsouls(::google::protobuf::uint32 value) {
  set_has_allsouls();
  allsouls_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.allsouls)
}

// optional string name = 19;
inline bool CastlePetInfo::has_name() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CastlePetInfo::set_has_name() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CastlePetInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CastlePetInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CastlePetInfo::name() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.name)
  return *name_;
}
inline void CastlePetInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CastlePetInfo.name)
}
inline void CastlePetInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CastlePetInfo.name)
}
inline void CastlePetInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CastlePetInfo.name)
}
inline ::std::string* CastlePetInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CastlePetInfo.name)
  return name_;
}
inline ::std::string* CastlePetInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CastlePetInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CastlePetInfo.name)
}

// optional uint32 stateid = 20;
inline bool CastlePetInfo::has_stateid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CastlePetInfo::set_has_stateid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CastlePetInfo::clear_has_stateid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CastlePetInfo::clear_stateid() {
  stateid_ = 0u;
  clear_has_stateid();
}
inline ::google::protobuf::uint32 CastlePetInfo::stateid() const {
  // @@protoc_insertion_point(field_get:CastlePetInfo.stateid)
  return stateid_;
}
inline void CastlePetInfo::set_stateid(::google::protobuf::uint32 value) {
  set_has_stateid();
  stateid_ = value;
  // @@protoc_insertion_point(field_set:CastlePetInfo.stateid)
}

// -------------------------------------------------------------------

// CastleWorkPet

// optional uint64 iid = 1;
inline bool CastleWorkPet::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CastleWorkPet::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CastleWorkPet::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CastleWorkPet::clear_iid() {
  iid_ = GOOGLE_ULONGLONG(0);
  clear_has_iid();
}
inline ::google::protobuf::uint64 CastleWorkPet::iid() const {
  // @@protoc_insertion_point(field_get:CastleWorkPet.iid)
  return iid_;
}
inline void CastleWorkPet::set_iid(::google::protobuf::uint64 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:CastleWorkPet.iid)
}

// optional uint32 buildid = 2;
inline bool CastleWorkPet::has_buildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CastleWorkPet::set_has_buildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CastleWorkPet::clear_has_buildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CastleWorkPet::clear_buildid() {
  buildid_ = 0u;
  clear_has_buildid();
}
inline ::google::protobuf::uint32 CastleWorkPet::buildid() const {
  // @@protoc_insertion_point(field_get:CastleWorkPet.buildid)
  return buildid_;
}
inline void CastleWorkPet::set_buildid(::google::protobuf::uint32 value) {
  set_has_buildid();
  buildid_ = value;
  // @@protoc_insertion_point(field_set:CastleWorkPet.buildid)
}

// -------------------------------------------------------------------

// BinaryCastlePet

// repeated .CastlePetInfo info = 1;
inline int BinaryCastlePet::info_size() const {
  return info_.size();
}
inline void BinaryCastlePet::clear_info() {
  info_.Clear();
}
inline const ::CastlePetInfo& BinaryCastlePet::info(int index) const {
  // @@protoc_insertion_point(field_get:BinaryCastlePet.info)
  return info_.Get(index);
}
inline ::CastlePetInfo* BinaryCastlePet::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:BinaryCastlePet.info)
  return info_.Mutable(index);
}
inline ::CastlePetInfo* BinaryCastlePet::add_info() {
  // @@protoc_insertion_point(field_add:BinaryCastlePet.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CastlePetInfo >&
BinaryCastlePet::info() const {
  // @@protoc_insertion_point(field_list:BinaryCastlePet.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::CastlePetInfo >*
BinaryCastlePet::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:BinaryCastlePet.info)
  return &info_;
}

// repeated uint64 fightpet = 2;
inline int BinaryCastlePet::fightpet_size() const {
  return fightpet_.size();
}
inline void BinaryCastlePet::clear_fightpet() {
  fightpet_.Clear();
}
inline ::google::protobuf::uint64 BinaryCastlePet::fightpet(int index) const {
  // @@protoc_insertion_point(field_get:BinaryCastlePet.fightpet)
  return fightpet_.Get(index);
}
inline void BinaryCastlePet::set_fightpet(int index, ::google::protobuf::uint64 value) {
  fightpet_.Set(index, value);
  // @@protoc_insertion_point(field_set:BinaryCastlePet.fightpet)
}
inline void BinaryCastlePet::add_fightpet(::google::protobuf::uint64 value) {
  fightpet_.Add(value);
  // @@protoc_insertion_point(field_add:BinaryCastlePet.fightpet)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BinaryCastlePet::fightpet() const {
  // @@protoc_insertion_point(field_list:BinaryCastlePet.fightpet)
  return fightpet_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BinaryCastlePet::mutable_fightpet() {
  // @@protoc_insertion_point(field_mutable_list:BinaryCastlePet.fightpet)
  return &fightpet_;
}

// repeated .CastleWorkPet workpet = 3;
inline int BinaryCastlePet::workpet_size() const {
  return workpet_.size();
}
inline void BinaryCastlePet::clear_workpet() {
  workpet_.Clear();
}
inline const ::CastleWorkPet& BinaryCastlePet::workpet(int index) const {
  // @@protoc_insertion_point(field_get:BinaryCastlePet.workpet)
  return workpet_.Get(index);
}
inline ::CastleWorkPet* BinaryCastlePet::mutable_workpet(int index) {
  // @@protoc_insertion_point(field_mutable:BinaryCastlePet.workpet)
  return workpet_.Mutable(index);
}
inline ::CastleWorkPet* BinaryCastlePet::add_workpet() {
  // @@protoc_insertion_point(field_add:BinaryCastlePet.workpet)
  return workpet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CastleWorkPet >&
BinaryCastlePet::workpet() const {
  // @@protoc_insertion_point(field_list:BinaryCastlePet.workpet)
  return workpet_;
}
inline ::google::protobuf::RepeatedPtrField< ::CastleWorkPet >*
BinaryCastlePet::mutable_workpet() {
  // @@protoc_insertion_point(field_mutable_list:BinaryCastlePet.workpet)
  return &workpet_;
}

// repeated uint32 collection = 4;
inline int BinaryCastlePet::collection_size() const {
  return collection_.size();
}
inline void BinaryCastlePet::clear_collection() {
  collection_.Clear();
}
inline ::google::protobuf::uint32 BinaryCastlePet::collection(int index) const {
  // @@protoc_insertion_point(field_get:BinaryCastlePet.collection)
  return collection_.Get(index);
}
inline void BinaryCastlePet::set_collection(int index, ::google::protobuf::uint32 value) {
  collection_.Set(index, value);
  // @@protoc_insertion_point(field_set:BinaryCastlePet.collection)
}
inline void BinaryCastlePet::add_collection(::google::protobuf::uint32 value) {
  collection_.Add(value);
  // @@protoc_insertion_point(field_add:BinaryCastlePet.collection)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BinaryCastlePet::collection() const {
  // @@protoc_insertion_point(field_list:BinaryCastlePet.collection)
  return collection_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BinaryCastlePet::mutable_collection() {
  // @@protoc_insertion_point(field_mutable_list:BinaryCastlePet.collection)
  return &collection_;
}

// -------------------------------------------------------------------

// CastlePetState

// optional uint64 iid = 1;
inline bool CastlePetState::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CastlePetState::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CastlePetState::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CastlePetState::clear_iid() {
  iid_ = GOOGLE_ULONGLONG(0);
  clear_has_iid();
}
inline ::google::protobuf::uint64 CastlePetState::iid() const {
  // @@protoc_insertion_point(field_get:CastlePetState.iid)
  return iid_;
}
inline void CastlePetState::set_iid(::google::protobuf::uint64 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:CastlePetState.iid)
}

// optional uint32 state = 2;
inline bool CastlePetState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CastlePetState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CastlePetState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CastlePetState::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 CastlePetState::state() const {
  // @@protoc_insertion_point(field_get:CastlePetState.state)
  return state_;
}
inline void CastlePetState::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CastlePetState.state)
}

// optional uint32 stateid = 3;
inline bool CastlePetState::has_stateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CastlePetState::set_has_stateid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CastlePetState::clear_has_stateid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CastlePetState::clear_stateid() {
  stateid_ = 0u;
  clear_has_stateid();
}
inline ::google::protobuf::uint32 CastlePetState::stateid() const {
  // @@protoc_insertion_point(field_get:CastlePetState.stateid)
  return stateid_;
}
inline void CastlePetState::set_stateid(::google::protobuf::uint32 value) {
  set_has_stateid();
  stateid_ = value;
  // @@protoc_insertion_point(field_set:CastlePetState.stateid)
}

// -------------------------------------------------------------------

// CastleStatueInfo

// optional uint32 id = 1;
inline bool CastleStatueInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CastleStatueInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CastleStatueInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CastleStatueInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CastleStatueInfo::id() const {
  // @@protoc_insertion_point(field_get:CastleStatueInfo.id)
  return id_;
}
inline void CastleStatueInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CastleStatueInfo.id)
}

// optional uint32 level = 2;
inline bool CastleStatueInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CastleStatueInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CastleStatueInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CastleStatueInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CastleStatueInfo::level() const {
  // @@protoc_insertion_point(field_get:CastleStatueInfo.level)
  return level_;
}
inline void CastleStatueInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CastleStatueInfo.level)
}

// optional uint32 exp = 3;
inline bool CastleStatueInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CastleStatueInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CastleStatueInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CastleStatueInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 CastleStatueInfo::exp() const {
  // @@protoc_insertion_point(field_get:CastleStatueInfo.exp)
  return exp_;
}
inline void CastleStatueInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:CastleStatueInfo.exp)
}

// optional bool select = 4 [default = true];
inline bool CastleStatueInfo::has_select() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CastleStatueInfo::set_has_select() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CastleStatueInfo::clear_has_select() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CastleStatueInfo::clear_select() {
  select_ = true;
  clear_has_select();
}
inline bool CastleStatueInfo::select() const {
  // @@protoc_insertion_point(field_get:CastleStatueInfo.select)
  return select_;
}
inline void CastleStatueInfo::set_select(bool value) {
  set_has_select();
  select_ = value;
  // @@protoc_insertion_point(field_set:CastleStatueInfo.select)
}

// -------------------------------------------------------------------

// BinaryCastleStatue

// repeated .CastleStatueInfo info = 1;
inline int BinaryCastleStatue::info_size() const {
  return info_.size();
}
inline void BinaryCastleStatue::clear_info() {
  info_.Clear();
}
inline const ::CastleStatueInfo& BinaryCastleStatue::info(int index) const {
  // @@protoc_insertion_point(field_get:BinaryCastleStatue.info)
  return info_.Get(index);
}
inline ::CastleStatueInfo* BinaryCastleStatue::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:BinaryCastleStatue.info)
  return info_.Mutable(index);
}
inline ::CastleStatueInfo* BinaryCastleStatue::add_info() {
  // @@protoc_insertion_point(field_add:BinaryCastleStatue.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CastleStatueInfo >&
BinaryCastleStatue::info() const {
  // @@protoc_insertion_point(field_list:BinaryCastleStatue.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::CastleStatueInfo >*
BinaryCastleStatue::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:BinaryCastleStatue.info)
  return &info_;
}

// optional uint32 select = 2;
inline bool BinaryCastleStatue::has_select() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BinaryCastleStatue::set_has_select() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BinaryCastleStatue::clear_has_select() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BinaryCastleStatue::clear_select() {
  select_ = 0u;
  clear_has_select();
}
inline ::google::protobuf::uint32 BinaryCastleStatue::select() const {
  // @@protoc_insertion_point(field_get:BinaryCastleStatue.select)
  return select_;
}
inline void BinaryCastleStatue::set_select(::google::protobuf::uint32 value) {
  set_has_select();
  select_ = value;
  // @@protoc_insertion_point(field_set:BinaryCastleStatue.select)
}

// optional uint32 skill = 3;
inline bool BinaryCastleStatue::has_skill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BinaryCastleStatue::set_has_skill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BinaryCastleStatue::clear_has_skill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BinaryCastleStatue::clear_skill() {
  skill_ = 0u;
  clear_has_skill();
}
inline ::google::protobuf::uint32 BinaryCastleStatue::skill() const {
  // @@protoc_insertion_point(field_get:BinaryCastleStatue.skill)
  return skill_;
}
inline void BinaryCastleStatue::set_skill(::google::protobuf::uint32 value) {
  set_has_skill();
  skill_ = value;
  // @@protoc_insertion_point(field_set:BinaryCastleStatue.skill)
}

// -------------------------------------------------------------------

// ReplaceSkill

// optional uint32 srcskill = 1;
inline bool ReplaceSkill::has_srcskill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplaceSkill::set_has_srcskill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplaceSkill::clear_has_srcskill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplaceSkill::clear_srcskill() {
  srcskill_ = 0u;
  clear_has_srcskill();
}
inline ::google::protobuf::uint32 ReplaceSkill::srcskill() const {
  // @@protoc_insertion_point(field_get:ReplaceSkill.srcskill)
  return srcskill_;
}
inline void ReplaceSkill::set_srcskill(::google::protobuf::uint32 value) {
  set_has_srcskill();
  srcskill_ = value;
  // @@protoc_insertion_point(field_set:ReplaceSkill.srcskill)
}

// optional uint32 desskill = 2;
inline bool ReplaceSkill::has_desskill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplaceSkill::set_has_desskill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplaceSkill::clear_has_desskill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplaceSkill::clear_desskill() {
  desskill_ = 0u;
  clear_has_desskill();
}
inline ::google::protobuf::uint32 ReplaceSkill::desskill() const {
  // @@protoc_insertion_point(field_get:ReplaceSkill.desskill)
  return desskill_;
}
inline void ReplaceSkill::set_desskill(::google::protobuf::uint32 value) {
  set_has_desskill();
  desskill_ = value;
  // @@protoc_insertion_point(field_set:ReplaceSkill.desskill)
}

// optional uint32 studysucc = 3;
inline bool ReplaceSkill::has_studysucc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplaceSkill::set_has_studysucc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplaceSkill::clear_has_studysucc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplaceSkill::clear_studysucc() {
  studysucc_ = 0u;
  clear_has_studysucc();
}
inline ::google::protobuf::uint32 ReplaceSkill::studysucc() const {
  // @@protoc_insertion_point(field_get:ReplaceSkill.studysucc)
  return studysucc_;
}
inline void ReplaceSkill::set_studysucc(::google::protobuf::uint32 value) {
  set_has_studysucc();
  studysucc_ = value;
  // @@protoc_insertion_point(field_set:ReplaceSkill.studysucc)
}

// -------------------------------------------------------------------

// RelicUserPos

// optional uint32 userid = 1;
inline bool RelicUserPos::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelicUserPos::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelicUserPos::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelicUserPos::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 RelicUserPos::userid() const {
  // @@protoc_insertion_point(field_get:RelicUserPos.userid)
  return userid_;
}
inline void RelicUserPos::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:RelicUserPos.userid)
}

// optional uint32 x = 2;
inline bool RelicUserPos::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelicUserPos::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelicUserPos::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelicUserPos::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 RelicUserPos::x() const {
  // @@protoc_insertion_point(field_get:RelicUserPos.x)
  return x_;
}
inline void RelicUserPos::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:RelicUserPos.x)
}

// optional uint32 y = 3;
inline bool RelicUserPos::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RelicUserPos::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RelicUserPos::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RelicUserPos::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 RelicUserPos::y() const {
  // @@protoc_insertion_point(field_get:RelicUserPos.y)
  return y_;
}
inline void RelicUserPos::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:RelicUserPos.y)
}

// optional uint32 septid = 4;
inline bool RelicUserPos::has_septid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RelicUserPos::set_has_septid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RelicUserPos::clear_has_septid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RelicUserPos::clear_septid() {
  septid_ = 0u;
  clear_has_septid();
}
inline ::google::protobuf::uint32 RelicUserPos::septid() const {
  // @@protoc_insertion_point(field_get:RelicUserPos.septid)
  return septid_;
}
inline void RelicUserPos::set_septid(::google::protobuf::uint32 value) {
  set_has_septid();
  septid_ = value;
  // @@protoc_insertion_point(field_set:RelicUserPos.septid)
}

// -------------------------------------------------------------------

// RiskTaskInfo

// optional uint32 task = 1;
inline bool RiskTaskInfo::has_task() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RiskTaskInfo::set_has_task() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RiskTaskInfo::clear_has_task() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RiskTaskInfo::clear_task() {
  task_ = 0u;
  clear_has_task();
}
inline ::google::protobuf::uint32 RiskTaskInfo::task() const {
  // @@protoc_insertion_point(field_get:RiskTaskInfo.task)
  return task_;
}
inline void RiskTaskInfo::set_task(::google::protobuf::uint32 value) {
  set_has_task();
  task_ = value;
  // @@protoc_insertion_point(field_set:RiskTaskInfo.task)
}

// optional uint32 level = 2;
inline bool RiskTaskInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RiskTaskInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RiskTaskInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RiskTaskInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RiskTaskInfo::level() const {
  // @@protoc_insertion_point(field_get:RiskTaskInfo.level)
  return level_;
}
inline void RiskTaskInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:RiskTaskInfo.level)
}

// optional uint32 state = 3;
inline bool RiskTaskInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RiskTaskInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RiskTaskInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RiskTaskInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 RiskTaskInfo::state() const {
  // @@protoc_insertion_point(field_get:RiskTaskInfo.state)
  return state_;
}
inline void RiskTaskInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:RiskTaskInfo.state)
}

// -------------------------------------------------------------------

// BinaryRiskTaskInfo

// optional uint32 time = 1;
inline bool BinaryRiskTaskInfo::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BinaryRiskTaskInfo::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BinaryRiskTaskInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BinaryRiskTaskInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 BinaryRiskTaskInfo::time() const {
  // @@protoc_insertion_point(field_get:BinaryRiskTaskInfo.time)
  return time_;
}
inline void BinaryRiskTaskInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:BinaryRiskTaskInfo.time)
}

// repeated .RiskTaskInfo info = 2;
inline int BinaryRiskTaskInfo::info_size() const {
  return info_.size();
}
inline void BinaryRiskTaskInfo::clear_info() {
  info_.Clear();
}
inline const ::RiskTaskInfo& BinaryRiskTaskInfo::info(int index) const {
  // @@protoc_insertion_point(field_get:BinaryRiskTaskInfo.info)
  return info_.Get(index);
}
inline ::RiskTaskInfo* BinaryRiskTaskInfo::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:BinaryRiskTaskInfo.info)
  return info_.Mutable(index);
}
inline ::RiskTaskInfo* BinaryRiskTaskInfo::add_info() {
  // @@protoc_insertion_point(field_add:BinaryRiskTaskInfo.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RiskTaskInfo >&
BinaryRiskTaskInfo::info() const {
  // @@protoc_insertion_point(field_list:BinaryRiskTaskInfo.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::RiskTaskInfo >*
BinaryRiskTaskInfo::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:BinaryRiskTaskInfo.info)
  return &info_;
}

// optional uint32 num = 3;
inline bool BinaryRiskTaskInfo::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BinaryRiskTaskInfo::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BinaryRiskTaskInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BinaryRiskTaskInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 BinaryRiskTaskInfo::num() const {
  // @@protoc_insertion_point(field_get:BinaryRiskTaskInfo.num)
  return num_;
}
inline void BinaryRiskTaskInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BinaryRiskTaskInfo.num)
}

// -------------------------------------------------------------------

// LifeSkillInfo

// optional uint32 id = 1;
inline bool LifeSkillInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LifeSkillInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LifeSkillInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LifeSkillInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 LifeSkillInfo::id() const {
  // @@protoc_insertion_point(field_get:LifeSkillInfo.id)
  return id_;
}
inline void LifeSkillInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:LifeSkillInfo.id)
}

// optional uint32 level = 2;
inline bool LifeSkillInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LifeSkillInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LifeSkillInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LifeSkillInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LifeSkillInfo::level() const {
  // @@protoc_insertion_point(field_get:LifeSkillInfo.level)
  return level_;
}
inline void LifeSkillInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:LifeSkillInfo.level)
}

// optional uint32 stage = 3;
inline bool LifeSkillInfo::has_stage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LifeSkillInfo::set_has_stage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LifeSkillInfo::clear_has_stage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LifeSkillInfo::clear_stage() {
  stage_ = 0u;
  clear_has_stage();
}
inline ::google::protobuf::uint32 LifeSkillInfo::stage() const {
  // @@protoc_insertion_point(field_get:LifeSkillInfo.stage)
  return stage_;
}
inline void LifeSkillInfo::set_stage(::google::protobuf::uint32 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:LifeSkillInfo.stage)
}

// -------------------------------------------------------------------

// BinaryLifeSkill

// repeated .LifeSkillInfo info = 1;
inline int BinaryLifeSkill::info_size() const {
  return info_.size();
}
inline void BinaryLifeSkill::clear_info() {
  info_.Clear();
}
inline const ::LifeSkillInfo& BinaryLifeSkill::info(int index) const {
  // @@protoc_insertion_point(field_get:BinaryLifeSkill.info)
  return info_.Get(index);
}
inline ::LifeSkillInfo* BinaryLifeSkill::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:BinaryLifeSkill.info)
  return info_.Mutable(index);
}
inline ::LifeSkillInfo* BinaryLifeSkill::add_info() {
  // @@protoc_insertion_point(field_add:BinaryLifeSkill.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LifeSkillInfo >&
BinaryLifeSkill::info() const {
  // @@protoc_insertion_point(field_list:BinaryLifeSkill.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::LifeSkillInfo >*
BinaryLifeSkill::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:BinaryLifeSkill.info)
  return &info_;
}

// -------------------------------------------------------------------

// DayGuideInfo

// optional uint32 id = 1;
inline bool DayGuideInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DayGuideInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DayGuideInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DayGuideInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DayGuideInfo::id() const {
  // @@protoc_insertion_point(field_get:DayGuideInfo.id)
  return id_;
}
inline void DayGuideInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:DayGuideInfo.id)
}

// optional uint32 targettimes = 2;
inline bool DayGuideInfo::has_targettimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DayGuideInfo::set_has_targettimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DayGuideInfo::clear_has_targettimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DayGuideInfo::clear_targettimes() {
  targettimes_ = 0u;
  clear_has_targettimes();
}
inline ::google::protobuf::uint32 DayGuideInfo::targettimes() const {
  // @@protoc_insertion_point(field_get:DayGuideInfo.targettimes)
  return targettimes_;
}
inline void DayGuideInfo::set_targettimes(::google::protobuf::uint32 value) {
  set_has_targettimes();
  targettimes_ = value;
  // @@protoc_insertion_point(field_set:DayGuideInfo.targettimes)
}

// optional uint32 curtimes = 3;
inline bool DayGuideInfo::has_curtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DayGuideInfo::set_has_curtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DayGuideInfo::clear_has_curtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DayGuideInfo::clear_curtimes() {
  curtimes_ = 0u;
  clear_has_curtimes();
}
inline ::google::protobuf::uint32 DayGuideInfo::curtimes() const {
  // @@protoc_insertion_point(field_get:DayGuideInfo.curtimes)
  return curtimes_;
}
inline void DayGuideInfo::set_curtimes(::google::protobuf::uint32 value) {
  set_has_curtimes();
  curtimes_ = value;
  // @@protoc_insertion_point(field_set:DayGuideInfo.curtimes)
}

// optional uint32 para1 = 4;
inline bool DayGuideInfo::has_para1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DayGuideInfo::set_has_para1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DayGuideInfo::clear_has_para1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DayGuideInfo::clear_para1() {
  para1_ = 0u;
  clear_has_para1();
}
inline ::google::protobuf::uint32 DayGuideInfo::para1() const {
  // @@protoc_insertion_point(field_get:DayGuideInfo.para1)
  return para1_;
}
inline void DayGuideInfo::set_para1(::google::protobuf::uint32 value) {
  set_has_para1();
  para1_ = value;
  // @@protoc_insertion_point(field_set:DayGuideInfo.para1)
}

// optional uint32 para2 = 5;
inline bool DayGuideInfo::has_para2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DayGuideInfo::set_has_para2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DayGuideInfo::clear_has_para2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DayGuideInfo::clear_para2() {
  para2_ = 0u;
  clear_has_para2();
}
inline ::google::protobuf::uint32 DayGuideInfo::para2() const {
  // @@protoc_insertion_point(field_get:DayGuideInfo.para2)
  return para2_;
}
inline void DayGuideInfo::set_para2(::google::protobuf::uint32 value) {
  set_has_para2();
  para2_ = value;
  // @@protoc_insertion_point(field_set:DayGuideInfo.para2)
}

// optional uint32 para3 = 6;
inline bool DayGuideInfo::has_para3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DayGuideInfo::set_has_para3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DayGuideInfo::clear_has_para3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DayGuideInfo::clear_para3() {
  para3_ = 0u;
  clear_has_para3();
}
inline ::google::protobuf::uint32 DayGuideInfo::para3() const {
  // @@protoc_insertion_point(field_get:DayGuideInfo.para3)
  return para3_;
}
inline void DayGuideInfo::set_para3(::google::protobuf::uint32 value) {
  set_has_para3();
  para3_ = value;
  // @@protoc_insertion_point(field_set:DayGuideInfo.para3)
}

// optional bool acceptbonus = 7;
inline bool DayGuideInfo::has_acceptbonus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DayGuideInfo::set_has_acceptbonus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DayGuideInfo::clear_has_acceptbonus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DayGuideInfo::clear_acceptbonus() {
  acceptbonus_ = false;
  clear_has_acceptbonus();
}
inline bool DayGuideInfo::acceptbonus() const {
  // @@protoc_insertion_point(field_get:DayGuideInfo.acceptbonus)
  return acceptbonus_;
}
inline void DayGuideInfo::set_acceptbonus(bool value) {
  set_has_acceptbonus();
  acceptbonus_ = value;
  // @@protoc_insertion_point(field_set:DayGuideInfo.acceptbonus)
}

// optional uint32 level = 8;
inline bool DayGuideInfo::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DayGuideInfo::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DayGuideInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DayGuideInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 DayGuideInfo::level() const {
  // @@protoc_insertion_point(field_get:DayGuideInfo.level)
  return level_;
}
inline void DayGuideInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:DayGuideInfo.level)
}

// -------------------------------------------------------------------

// TitleData

// optional uint32 id = 1;
inline bool TitleData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TitleData::id() const {
  // @@protoc_insertion_point(field_get:TitleData.id)
  return id_;
}
inline void TitleData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TitleData.id)
}

// optional uint32 time = 2;
inline bool TitleData::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleData::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleData::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleData::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 TitleData::time() const {
  // @@protoc_insertion_point(field_get:TitleData.time)
  return time_;
}
inline void TitleData::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:TitleData.time)
}

// -------------------------------------------------------------------

// MonthCardData

// optional uint32 id = 1;
inline bool MonthCardData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthCardData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthCardData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthCardData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MonthCardData::id() const {
  // @@protoc_insertion_point(field_get:MonthCardData.id)
  return id_;
}
inline void MonthCardData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MonthCardData.id)
}

// optional uint32 buytime = 2;
inline bool MonthCardData::has_buytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonthCardData::set_has_buytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonthCardData::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonthCardData::clear_buytime() {
  buytime_ = 0u;
  clear_has_buytime();
}
inline ::google::protobuf::uint32 MonthCardData::buytime() const {
  // @@protoc_insertion_point(field_get:MonthCardData.buytime)
  return buytime_;
}
inline void MonthCardData::set_buytime(::google::protobuf::uint32 value) {
  set_has_buytime();
  buytime_ = value;
  // @@protoc_insertion_point(field_set:MonthCardData.buytime)
}

// optional uint32 obtaintime = 3;
inline bool MonthCardData::has_obtaintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonthCardData::set_has_obtaintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonthCardData::clear_has_obtaintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonthCardData::clear_obtaintime() {
  obtaintime_ = 0u;
  clear_has_obtaintime();
}
inline ::google::protobuf::uint32 MonthCardData::obtaintime() const {
  // @@protoc_insertion_point(field_get:MonthCardData.obtaintime)
  return obtaintime_;
}
inline void MonthCardData::set_obtaintime(::google::protobuf::uint32 value) {
  set_has_obtaintime();
  obtaintime_ = value;
  // @@protoc_insertion_point(field_set:MonthCardData.obtaintime)
}

// optional uint32 status = 4;
inline bool MonthCardData::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MonthCardData::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MonthCardData::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MonthCardData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MonthCardData::status() const {
  // @@protoc_insertion_point(field_get:MonthCardData.status)
  return status_;
}
inline void MonthCardData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:MonthCardData.status)
}

// -------------------------------------------------------------------

// WingSystemData

// optional uint32 level = 1;
inline bool WingSystemData::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WingSystemData::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WingSystemData::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WingSystemData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 WingSystemData::level() const {
  // @@protoc_insertion_point(field_get:WingSystemData.level)
  return level_;
}
inline void WingSystemData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.level)
}

// optional uint32 attphymin = 2;
inline bool WingSystemData::has_attphymin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WingSystemData::set_has_attphymin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WingSystemData::clear_has_attphymin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WingSystemData::clear_attphymin() {
  attphymin_ = 0u;
  clear_has_attphymin();
}
inline ::google::protobuf::uint32 WingSystemData::attphymin() const {
  // @@protoc_insertion_point(field_get:WingSystemData.attphymin)
  return attphymin_;
}
inline void WingSystemData::set_attphymin(::google::protobuf::uint32 value) {
  set_has_attphymin();
  attphymin_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.attphymin)
}

// optional uint32 attphymax = 3;
inline bool WingSystemData::has_attphymax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WingSystemData::set_has_attphymax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WingSystemData::clear_has_attphymax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WingSystemData::clear_attphymax() {
  attphymax_ = 0u;
  clear_has_attphymax();
}
inline ::google::protobuf::uint32 WingSystemData::attphymax() const {
  // @@protoc_insertion_point(field_get:WingSystemData.attphymax)
  return attphymax_;
}
inline void WingSystemData::set_attphymax(::google::protobuf::uint32 value) {
  set_has_attphymax();
  attphymax_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.attphymax)
}

// optional uint32 phydef = 4;
inline bool WingSystemData::has_phydef() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WingSystemData::set_has_phydef() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WingSystemData::clear_has_phydef() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WingSystemData::clear_phydef() {
  phydef_ = 0u;
  clear_has_phydef();
}
inline ::google::protobuf::uint32 WingSystemData::phydef() const {
  // @@protoc_insertion_point(field_get:WingSystemData.phydef)
  return phydef_;
}
inline void WingSystemData::set_phydef(::google::protobuf::uint32 value) {
  set_has_phydef();
  phydef_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.phydef)
}

// optional uint32 magdef = 5;
inline bool WingSystemData::has_magdef() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WingSystemData::set_has_magdef() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WingSystemData::clear_has_magdef() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WingSystemData::clear_magdef() {
  magdef_ = 0u;
  clear_has_magdef();
}
inline ::google::protobuf::uint32 WingSystemData::magdef() const {
  // @@protoc_insertion_point(field_get:WingSystemData.magdef)
  return magdef_;
}
inline void WingSystemData::set_magdef(::google::protobuf::uint32 value) {
  set_has_magdef();
  magdef_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.magdef)
}

// optional uint32 hp = 6;
inline bool WingSystemData::has_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WingSystemData::set_has_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WingSystemData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WingSystemData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 WingSystemData::hp() const {
  // @@protoc_insertion_point(field_get:WingSystemData.hp)
  return hp_;
}
inline void WingSystemData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.hp)
}

// optional uint32 mp = 7;
inline bool WingSystemData::has_mp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WingSystemData::set_has_mp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WingSystemData::clear_has_mp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WingSystemData::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 WingSystemData::mp() const {
  // @@protoc_insertion_point(field_get:WingSystemData.mp)
  return mp_;
}
inline void WingSystemData::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.mp)
}

// optional uint32 enhancemaxtimes = 8;
inline bool WingSystemData::has_enhancemaxtimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WingSystemData::set_has_enhancemaxtimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WingSystemData::clear_has_enhancemaxtimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WingSystemData::clear_enhancemaxtimes() {
  enhancemaxtimes_ = 0u;
  clear_has_enhancemaxtimes();
}
inline ::google::protobuf::uint32 WingSystemData::enhancemaxtimes() const {
  // @@protoc_insertion_point(field_get:WingSystemData.enhancemaxtimes)
  return enhancemaxtimes_;
}
inline void WingSystemData::set_enhancemaxtimes(::google::protobuf::uint32 value) {
  set_has_enhancemaxtimes();
  enhancemaxtimes_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.enhancemaxtimes)
}

// optional uint32 enhancemintimes = 9;
inline bool WingSystemData::has_enhancemintimes() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WingSystemData::set_has_enhancemintimes() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WingSystemData::clear_has_enhancemintimes() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WingSystemData::clear_enhancemintimes() {
  enhancemintimes_ = 0u;
  clear_has_enhancemintimes();
}
inline ::google::protobuf::uint32 WingSystemData::enhancemintimes() const {
  // @@protoc_insertion_point(field_get:WingSystemData.enhancemintimes)
  return enhancemintimes_;
}
inline void WingSystemData::set_enhancemintimes(::google::protobuf::uint32 value) {
  set_has_enhancemintimes();
  enhancemintimes_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.enhancemintimes)
}

// repeated uint32 releaseskills = 10;
inline int WingSystemData::releaseskills_size() const {
  return releaseskills_.size();
}
inline void WingSystemData::clear_releaseskills() {
  releaseskills_.Clear();
}
inline ::google::protobuf::uint32 WingSystemData::releaseskills(int index) const {
  // @@protoc_insertion_point(field_get:WingSystemData.releaseskills)
  return releaseskills_.Get(index);
}
inline void WingSystemData::set_releaseskills(int index, ::google::protobuf::uint32 value) {
  releaseskills_.Set(index, value);
  // @@protoc_insertion_point(field_set:WingSystemData.releaseskills)
}
inline void WingSystemData::add_releaseskills(::google::protobuf::uint32 value) {
  releaseskills_.Add(value);
  // @@protoc_insertion_point(field_add:WingSystemData.releaseskills)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WingSystemData::releaseskills() const {
  // @@protoc_insertion_point(field_list:WingSystemData.releaseskills)
  return releaseskills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WingSystemData::mutable_releaseskills() {
  // @@protoc_insertion_point(field_mutable_list:WingSystemData.releaseskills)
  return &releaseskills_;
}

// optional uint32 fighting = 11;
inline bool WingSystemData::has_fighting() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WingSystemData::set_has_fighting() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WingSystemData::clear_has_fighting() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WingSystemData::clear_fighting() {
  fighting_ = 0u;
  clear_has_fighting();
}
inline ::google::protobuf::uint32 WingSystemData::fighting() const {
  // @@protoc_insertion_point(field_get:WingSystemData.fighting)
  return fighting_;
}
inline void WingSystemData::set_fighting(::google::protobuf::uint32 value) {
  set_has_fighting();
  fighting_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.fighting)
}

// optional uint64 curexp = 12;
inline bool WingSystemData::has_curexp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WingSystemData::set_has_curexp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WingSystemData::clear_has_curexp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WingSystemData::clear_curexp() {
  curexp_ = GOOGLE_ULONGLONG(0);
  clear_has_curexp();
}
inline ::google::protobuf::uint64 WingSystemData::curexp() const {
  // @@protoc_insertion_point(field_get:WingSystemData.curexp)
  return curexp_;
}
inline void WingSystemData::set_curexp(::google::protobuf::uint64 value) {
  set_has_curexp();
  curexp_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.curexp)
}

// optional uint64 maxexp = 13;
inline bool WingSystemData::has_maxexp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WingSystemData::set_has_maxexp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void WingSystemData::clear_has_maxexp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void WingSystemData::clear_maxexp() {
  maxexp_ = GOOGLE_ULONGLONG(0);
  clear_has_maxexp();
}
inline ::google::protobuf::uint64 WingSystemData::maxexp() const {
  // @@protoc_insertion_point(field_get:WingSystemData.maxexp)
  return maxexp_;
}
inline void WingSystemData::set_maxexp(::google::protobuf::uint64 value) {
  set_has_maxexp();
  maxexp_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.maxexp)
}

// optional uint32 attmagmin = 14;
inline bool WingSystemData::has_attmagmin() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void WingSystemData::set_has_attmagmin() {
  _has_bits_[0] |= 0x00002000u;
}
inline void WingSystemData::clear_has_attmagmin() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void WingSystemData::clear_attmagmin() {
  attmagmin_ = 0u;
  clear_has_attmagmin();
}
inline ::google::protobuf::uint32 WingSystemData::attmagmin() const {
  // @@protoc_insertion_point(field_get:WingSystemData.attmagmin)
  return attmagmin_;
}
inline void WingSystemData::set_attmagmin(::google::protobuf::uint32 value) {
  set_has_attmagmin();
  attmagmin_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.attmagmin)
}

// optional uint32 attmagmax = 15;
inline bool WingSystemData::has_attmagmax() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void WingSystemData::set_has_attmagmax() {
  _has_bits_[0] |= 0x00004000u;
}
inline void WingSystemData::clear_has_attmagmax() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void WingSystemData::clear_attmagmax() {
  attmagmax_ = 0u;
  clear_has_attmagmax();
}
inline ::google::protobuf::uint32 WingSystemData::attmagmax() const {
  // @@protoc_insertion_point(field_get:WingSystemData.attmagmax)
  return attmagmax_;
}
inline void WingSystemData::set_attmagmax(::google::protobuf::uint32 value) {
  set_has_attmagmax();
  attmagmax_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.attmagmax)
}

// optional uint32 lefttimes = 16;
inline bool WingSystemData::has_lefttimes() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void WingSystemData::set_has_lefttimes() {
  _has_bits_[0] |= 0x00008000u;
}
inline void WingSystemData::clear_has_lefttimes() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void WingSystemData::clear_lefttimes() {
  lefttimes_ = 0u;
  clear_has_lefttimes();
}
inline ::google::protobuf::uint32 WingSystemData::lefttimes() const {
  // @@protoc_insertion_point(field_get:WingSystemData.lefttimes)
  return lefttimes_;
}
inline void WingSystemData::set_lefttimes(::google::protobuf::uint32 value) {
  set_has_lefttimes();
  lefttimes_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.lefttimes)
}

// optional bool open = 17;
inline bool WingSystemData::has_open() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void WingSystemData::set_has_open() {
  _has_bits_[0] |= 0x00010000u;
}
inline void WingSystemData::clear_has_open() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void WingSystemData::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool WingSystemData::open() const {
  // @@protoc_insertion_point(field_get:WingSystemData.open)
  return open_;
}
inline void WingSystemData::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:WingSystemData.open)
}

// -------------------------------------------------------------------

// StatHurtData

// optional uint32 hurt = 1;
inline bool StatHurtData::has_hurt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatHurtData::set_has_hurt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatHurtData::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatHurtData::clear_hurt() {
  hurt_ = 0u;
  clear_has_hurt();
}
inline ::google::protobuf::uint32 StatHurtData::hurt() const {
  // @@protoc_insertion_point(field_get:StatHurtData.hurt)
  return hurt_;
}
inline void StatHurtData::set_hurt(::google::protobuf::uint32 value) {
  set_has_hurt();
  hurt_ = value;
  // @@protoc_insertion_point(field_set:StatHurtData.hurt)
}

// optional string name = 2;
inline bool StatHurtData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatHurtData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatHurtData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatHurtData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& StatHurtData::name() const {
  // @@protoc_insertion_point(field_get:StatHurtData.name)
  return *name_;
}
inline void StatHurtData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:StatHurtData.name)
}
inline void StatHurtData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:StatHurtData.name)
}
inline void StatHurtData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:StatHurtData.name)
}
inline ::std::string* StatHurtData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:StatHurtData.name)
  return name_;
}
inline ::std::string* StatHurtData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StatHurtData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:StatHurtData.name)
}

// -------------------------------------------------------------------

// TitleInfo

// optional uint32 id = 1;
inline bool TitleInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TitleInfo::id() const {
  // @@protoc_insertion_point(field_get:TitleInfo.id)
  return id_;
}
inline void TitleInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TitleInfo.id)
}

// optional uint32 time = 2;
inline bool TitleInfo::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleInfo::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 TitleInfo::time() const {
  // @@protoc_insertion_point(field_get:TitleInfo.time)
  return time_;
}
inline void TitleInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:TitleInfo.time)
}

// -------------------------------------------------------------------

// ItemInfo

// optional uint32 id = 1;
inline bool ItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ItemInfo::id() const {
  // @@protoc_insertion_point(field_get:ItemInfo.id)
  return id_;
}
inline void ItemInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.id)
}

// optional uint32 num = 2;
inline bool ItemInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 ItemInfo::num() const {
  // @@protoc_insertion_point(field_get:ItemInfo.num)
  return num_;
}
inline void ItemInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.num)
}

// optional uint32 bind = 3;
inline bool ItemInfo::has_bind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemInfo::set_has_bind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemInfo::clear_has_bind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemInfo::clear_bind() {
  bind_ = 0u;
  clear_has_bind();
}
inline ::google::protobuf::uint32 ItemInfo::bind() const {
  // @@protoc_insertion_point(field_get:ItemInfo.bind)
  return bind_;
}
inline void ItemInfo::set_bind(::google::protobuf::uint32 value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.bind)
}

// optional uint32 kind = 4;
inline bool ItemInfo::has_kind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemInfo::set_has_kind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemInfo::clear_has_kind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemInfo::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 ItemInfo::kind() const {
  // @@protoc_insertion_point(field_get:ItemInfo.kind)
  return kind_;
}
inline void ItemInfo::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.kind)
}

// -------------------------------------------------------------------

// LimitShopData

// optional uint32 id = 1;
inline bool LimitShopData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitShopData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitShopData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitShopData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 LimitShopData::id() const {
  // @@protoc_insertion_point(field_get:LimitShopData.id)
  return id_;
}
inline void LimitShopData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:LimitShopData.id)
}

// optional string name = 2;
inline bool LimitShopData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitShopData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitShopData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitShopData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LimitShopData::name() const {
  // @@protoc_insertion_point(field_get:LimitShopData.name)
  return *name_;
}
inline void LimitShopData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:LimitShopData.name)
}
inline void LimitShopData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:LimitShopData.name)
}
inline void LimitShopData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LimitShopData.name)
}
inline ::std::string* LimitShopData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LimitShopData.name)
  return name_;
}
inline ::std::string* LimitShopData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LimitShopData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LimitShopData.name)
}

// optional uint32 price = 3;
inline bool LimitShopData::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LimitShopData::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LimitShopData::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LimitShopData::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 LimitShopData::price() const {
  // @@protoc_insertion_point(field_get:LimitShopData.price)
  return price_;
}
inline void LimitShopData::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:LimitShopData.price)
}

// repeated .ItemInfo itemdata = 4;
inline int LimitShopData::itemdata_size() const {
  return itemdata_.size();
}
inline void LimitShopData::clear_itemdata() {
  itemdata_.Clear();
}
inline const ::ItemInfo& LimitShopData::itemdata(int index) const {
  // @@protoc_insertion_point(field_get:LimitShopData.itemdata)
  return itemdata_.Get(index);
}
inline ::ItemInfo* LimitShopData::mutable_itemdata(int index) {
  // @@protoc_insertion_point(field_mutable:LimitShopData.itemdata)
  return itemdata_.Mutable(index);
}
inline ::ItemInfo* LimitShopData::add_itemdata() {
  // @@protoc_insertion_point(field_add:LimitShopData.itemdata)
  return itemdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
LimitShopData::itemdata() const {
  // @@protoc_insertion_point(field_list:LimitShopData.itemdata)
  return itemdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
LimitShopData::mutable_itemdata() {
  // @@protoc_insertion_point(field_mutable_list:LimitShopData.itemdata)
  return &itemdata_;
}

// -------------------------------------------------------------------

// FundData

// repeated uint32 hasbuy = 1;
inline int FundData::hasbuy_size() const {
  return hasbuy_.size();
}
inline void FundData::clear_hasbuy() {
  hasbuy_.Clear();
}
inline ::google::protobuf::uint32 FundData::hasbuy(int index) const {
  // @@protoc_insertion_point(field_get:FundData.hasbuy)
  return hasbuy_.Get(index);
}
inline void FundData::set_hasbuy(int index, ::google::protobuf::uint32 value) {
  hasbuy_.Set(index, value);
  // @@protoc_insertion_point(field_set:FundData.hasbuy)
}
inline void FundData::add_hasbuy(::google::protobuf::uint32 value) {
  hasbuy_.Add(value);
  // @@protoc_insertion_point(field_add:FundData.hasbuy)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FundData::hasbuy() const {
  // @@protoc_insertion_point(field_list:FundData.hasbuy)
  return hasbuy_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FundData::mutable_hasbuy() {
  // @@protoc_insertion_point(field_mutable_list:FundData.hasbuy)
  return &hasbuy_;
}

// repeated .PairDataDWORD levelfund = 2;
inline int FundData::levelfund_size() const {
  return levelfund_.size();
}
inline void FundData::clear_levelfund() {
  levelfund_.Clear();
}
inline const ::PairDataDWORD& FundData::levelfund(int index) const {
  // @@protoc_insertion_point(field_get:FundData.levelfund)
  return levelfund_.Get(index);
}
inline ::PairDataDWORD* FundData::mutable_levelfund(int index) {
  // @@protoc_insertion_point(field_mutable:FundData.levelfund)
  return levelfund_.Mutable(index);
}
inline ::PairDataDWORD* FundData::add_levelfund() {
  // @@protoc_insertion_point(field_add:FundData.levelfund)
  return levelfund_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PairDataDWORD >&
FundData::levelfund() const {
  // @@protoc_insertion_point(field_list:FundData.levelfund)
  return levelfund_;
}
inline ::google::protobuf::RepeatedPtrField< ::PairDataDWORD >*
FundData::mutable_levelfund() {
  // @@protoc_insertion_point(field_mutable_list:FundData.levelfund)
  return &levelfund_;
}

// -------------------------------------------------------------------

// TotalReSpData

// optional uint32 num = 1;
inline bool TotalReSpData::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TotalReSpData::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TotalReSpData::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TotalReSpData::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TotalReSpData::num() const {
  // @@protoc_insertion_point(field_get:TotalReSpData.num)
  return num_;
}
inline void TotalReSpData::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:TotalReSpData.num)
}

// repeated uint32 totalget = 2;
inline int TotalReSpData::totalget_size() const {
  return totalget_.size();
}
inline void TotalReSpData::clear_totalget() {
  totalget_.Clear();
}
inline ::google::protobuf::uint32 TotalReSpData::totalget(int index) const {
  // @@protoc_insertion_point(field_get:TotalReSpData.totalget)
  return totalget_.Get(index);
}
inline void TotalReSpData::set_totalget(int index, ::google::protobuf::uint32 value) {
  totalget_.Set(index, value);
  // @@protoc_insertion_point(field_set:TotalReSpData.totalget)
}
inline void TotalReSpData::add_totalget(::google::protobuf::uint32 value) {
  totalget_.Add(value);
  // @@protoc_insertion_point(field_add:TotalReSpData.totalget)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TotalReSpData::totalget() const {
  // @@protoc_insertion_point(field_list:TotalReSpData.totalget)
  return totalget_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TotalReSpData::mutable_totalget() {
  // @@protoc_insertion_point(field_mutable_list:TotalReSpData.totalget)
  return &totalget_;
}

// optional uint32 days = 3;
inline bool TotalReSpData::has_days() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TotalReSpData::set_has_days() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TotalReSpData::clear_has_days() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TotalReSpData::clear_days() {
  days_ = 0u;
  clear_has_days();
}
inline ::google::protobuf::uint32 TotalReSpData::days() const {
  // @@protoc_insertion_point(field_get:TotalReSpData.days)
  return days_;
}
inline void TotalReSpData::set_days(::google::protobuf::uint32 value) {
  set_has_days();
  days_ = value;
  // @@protoc_insertion_point(field_set:TotalReSpData.days)
}

// -------------------------------------------------------------------

// RechargeSpendData

// optional uint32 reacttime = 1;
inline bool RechargeSpendData::has_reacttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RechargeSpendData::set_has_reacttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RechargeSpendData::clear_has_reacttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RechargeSpendData::clear_reacttime() {
  reacttime_ = 0u;
  clear_has_reacttime();
}
inline ::google::protobuf::uint32 RechargeSpendData::reacttime() const {
  // @@protoc_insertion_point(field_get:RechargeSpendData.reacttime)
  return reacttime_;
}
inline void RechargeSpendData::set_reacttime(::google::protobuf::uint32 value) {
  set_has_reacttime();
  reacttime_ = value;
  // @@protoc_insertion_point(field_set:RechargeSpendData.reacttime)
}

// repeated uint32 redaybonus = 2;
inline int RechargeSpendData::redaybonus_size() const {
  return redaybonus_.size();
}
inline void RechargeSpendData::clear_redaybonus() {
  redaybonus_.Clear();
}
inline ::google::protobuf::uint32 RechargeSpendData::redaybonus(int index) const {
  // @@protoc_insertion_point(field_get:RechargeSpendData.redaybonus)
  return redaybonus_.Get(index);
}
inline void RechargeSpendData::set_redaybonus(int index, ::google::protobuf::uint32 value) {
  redaybonus_.Set(index, value);
  // @@protoc_insertion_point(field_set:RechargeSpendData.redaybonus)
}
inline void RechargeSpendData::add_redaybonus(::google::protobuf::uint32 value) {
  redaybonus_.Add(value);
  // @@protoc_insertion_point(field_add:RechargeSpendData.redaybonus)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RechargeSpendData::redaybonus() const {
  // @@protoc_insertion_point(field_list:RechargeSpendData.redaybonus)
  return redaybonus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RechargeSpendData::mutable_redaybonus() {
  // @@protoc_insertion_point(field_mutable_list:RechargeSpendData.redaybonus)
  return &redaybonus_;
}

// repeated .TotalReSpData retotalbonus = 3;
inline int RechargeSpendData::retotalbonus_size() const {
  return retotalbonus_.size();
}
inline void RechargeSpendData::clear_retotalbonus() {
  retotalbonus_.Clear();
}
inline const ::TotalReSpData& RechargeSpendData::retotalbonus(int index) const {
  // @@protoc_insertion_point(field_get:RechargeSpendData.retotalbonus)
  return retotalbonus_.Get(index);
}
inline ::TotalReSpData* RechargeSpendData::mutable_retotalbonus(int index) {
  // @@protoc_insertion_point(field_mutable:RechargeSpendData.retotalbonus)
  return retotalbonus_.Mutable(index);
}
inline ::TotalReSpData* RechargeSpendData::add_retotalbonus() {
  // @@protoc_insertion_point(field_add:RechargeSpendData.retotalbonus)
  return retotalbonus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TotalReSpData >&
RechargeSpendData::retotalbonus() const {
  // @@protoc_insertion_point(field_list:RechargeSpendData.retotalbonus)
  return retotalbonus_;
}
inline ::google::protobuf::RepeatedPtrField< ::TotalReSpData >*
RechargeSpendData::mutable_retotalbonus() {
  // @@protoc_insertion_point(field_mutable_list:RechargeSpendData.retotalbonus)
  return &retotalbonus_;
}

// optional uint32 spacttime = 4;
inline bool RechargeSpendData::has_spacttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RechargeSpendData::set_has_spacttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RechargeSpendData::clear_has_spacttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RechargeSpendData::clear_spacttime() {
  spacttime_ = 0u;
  clear_has_spacttime();
}
inline ::google::protobuf::uint32 RechargeSpendData::spacttime() const {
  // @@protoc_insertion_point(field_get:RechargeSpendData.spacttime)
  return spacttime_;
}
inline void RechargeSpendData::set_spacttime(::google::protobuf::uint32 value) {
  set_has_spacttime();
  spacttime_ = value;
  // @@protoc_insertion_point(field_set:RechargeSpendData.spacttime)
}

// repeated uint32 spdaybonus = 5;
inline int RechargeSpendData::spdaybonus_size() const {
  return spdaybonus_.size();
}
inline void RechargeSpendData::clear_spdaybonus() {
  spdaybonus_.Clear();
}
inline ::google::protobuf::uint32 RechargeSpendData::spdaybonus(int index) const {
  // @@protoc_insertion_point(field_get:RechargeSpendData.spdaybonus)
  return spdaybonus_.Get(index);
}
inline void RechargeSpendData::set_spdaybonus(int index, ::google::protobuf::uint32 value) {
  spdaybonus_.Set(index, value);
  // @@protoc_insertion_point(field_set:RechargeSpendData.spdaybonus)
}
inline void RechargeSpendData::add_spdaybonus(::google::protobuf::uint32 value) {
  spdaybonus_.Add(value);
  // @@protoc_insertion_point(field_add:RechargeSpendData.spdaybonus)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RechargeSpendData::spdaybonus() const {
  // @@protoc_insertion_point(field_list:RechargeSpendData.spdaybonus)
  return spdaybonus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RechargeSpendData::mutable_spdaybonus() {
  // @@protoc_insertion_point(field_mutable_list:RechargeSpendData.spdaybonus)
  return &spdaybonus_;
}

// repeated .TotalReSpData sptotalbonus = 6;
inline int RechargeSpendData::sptotalbonus_size() const {
  return sptotalbonus_.size();
}
inline void RechargeSpendData::clear_sptotalbonus() {
  sptotalbonus_.Clear();
}
inline const ::TotalReSpData& RechargeSpendData::sptotalbonus(int index) const {
  // @@protoc_insertion_point(field_get:RechargeSpendData.sptotalbonus)
  return sptotalbonus_.Get(index);
}
inline ::TotalReSpData* RechargeSpendData::mutable_sptotalbonus(int index) {
  // @@protoc_insertion_point(field_mutable:RechargeSpendData.sptotalbonus)
  return sptotalbonus_.Mutable(index);
}
inline ::TotalReSpData* RechargeSpendData::add_sptotalbonus() {
  // @@protoc_insertion_point(field_add:RechargeSpendData.sptotalbonus)
  return sptotalbonus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TotalReSpData >&
RechargeSpendData::sptotalbonus() const {
  // @@protoc_insertion_point(field_list:RechargeSpendData.sptotalbonus)
  return sptotalbonus_;
}
inline ::google::protobuf::RepeatedPtrField< ::TotalReSpData >*
RechargeSpendData::mutable_sptotalbonus() {
  // @@protoc_insertion_point(field_mutable_list:RechargeSpendData.sptotalbonus)
  return &sptotalbonus_;
}

// -------------------------------------------------------------------

// DeclareWarData

// optional uint32 septid = 1;
inline bool DeclareWarData::has_septid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeclareWarData::set_has_septid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeclareWarData::clear_has_septid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeclareWarData::clear_septid() {
  septid_ = 0u;
  clear_has_septid();
}
inline ::google::protobuf::uint32 DeclareWarData::septid() const {
  // @@protoc_insertion_point(field_get:DeclareWarData.septid)
  return septid_;
}
inline void DeclareWarData::set_septid(::google::protobuf::uint32 value) {
  set_has_septid();
  septid_ = value;
  // @@protoc_insertion_point(field_set:DeclareWarData.septid)
}

// optional string septname = 2;
inline bool DeclareWarData::has_septname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeclareWarData::set_has_septname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeclareWarData::clear_has_septname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeclareWarData::clear_septname() {
  if (septname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_->clear();
  }
  clear_has_septname();
}
inline const ::std::string& DeclareWarData::septname() const {
  // @@protoc_insertion_point(field_get:DeclareWarData.septname)
  return *septname_;
}
inline void DeclareWarData::set_septname(const ::std::string& value) {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  septname_->assign(value);
  // @@protoc_insertion_point(field_set:DeclareWarData.septname)
}
inline void DeclareWarData::set_septname(const char* value) {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  septname_->assign(value);
  // @@protoc_insertion_point(field_set_char:DeclareWarData.septname)
}
inline void DeclareWarData::set_septname(const char* value, size_t size) {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  septname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DeclareWarData.septname)
}
inline ::std::string* DeclareWarData::mutable_septname() {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DeclareWarData.septname)
  return septname_;
}
inline ::std::string* DeclareWarData::release_septname() {
  clear_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = septname_;
    septname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeclareWarData::set_allocated_septname(::std::string* septname) {
  if (septname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete septname_;
  }
  if (septname) {
    set_has_septname();
    septname_ = septname;
  } else {
    clear_has_septname();
    septname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DeclareWarData.septname)
}

// optional uint32 lefttime = 3;
inline bool DeclareWarData::has_lefttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeclareWarData::set_has_lefttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeclareWarData::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeclareWarData::clear_lefttime() {
  lefttime_ = 0u;
  clear_has_lefttime();
}
inline ::google::protobuf::uint32 DeclareWarData::lefttime() const {
  // @@protoc_insertion_point(field_get:DeclareWarData.lefttime)
  return lefttime_;
}
inline void DeclareWarData::set_lefttime(::google::protobuf::uint32 value) {
  set_has_lefttime();
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:DeclareWarData.lefttime)
}

// optional uint32 leftcd = 4;
inline bool DeclareWarData::has_leftcd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeclareWarData::set_has_leftcd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeclareWarData::clear_has_leftcd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeclareWarData::clear_leftcd() {
  leftcd_ = 0u;
  clear_has_leftcd();
}
inline ::google::protobuf::uint32 DeclareWarData::leftcd() const {
  // @@protoc_insertion_point(field_get:DeclareWarData.leftcd)
  return leftcd_;
}
inline void DeclareWarData::set_leftcd(::google::protobuf::uint32 value) {
  set_has_leftcd();
  leftcd_ = value;
  // @@protoc_insertion_point(field_set:DeclareWarData.leftcd)
}

// optional string leadername = 5;
inline bool DeclareWarData::has_leadername() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DeclareWarData::set_has_leadername() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DeclareWarData::clear_has_leadername() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DeclareWarData::clear_leadername() {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_->clear();
  }
  clear_has_leadername();
}
inline const ::std::string& DeclareWarData::leadername() const {
  // @@protoc_insertion_point(field_get:DeclareWarData.leadername)
  return *leadername_;
}
inline void DeclareWarData::set_leadername(const ::std::string& value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set:DeclareWarData.leadername)
}
inline void DeclareWarData::set_leadername(const char* value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set_char:DeclareWarData.leadername)
}
inline void DeclareWarData::set_leadername(const char* value, size_t size) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DeclareWarData.leadername)
}
inline ::std::string* DeclareWarData::mutable_leadername() {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DeclareWarData.leadername)
  return leadername_;
}
inline ::std::string* DeclareWarData::release_leadername() {
  clear_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = leadername_;
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeclareWarData::set_allocated_leadername(::std::string* leadername) {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete leadername_;
  }
  if (leadername) {
    set_has_leadername();
    leadername_ = leadername;
  } else {
    clear_has_leadername();
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DeclareWarData.leadername)
}

// optional uint32 count = 6;
inline bool DeclareWarData::has_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DeclareWarData::set_has_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DeclareWarData::clear_has_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DeclareWarData::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 DeclareWarData::count() const {
  // @@protoc_insertion_point(field_get:DeclareWarData.count)
  return count_;
}
inline void DeclareWarData::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:DeclareWarData.count)
}

// -------------------------------------------------------------------

// PropValues

// optional uint32 key = 1;
inline bool PropValues::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropValues::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropValues::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropValues::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 PropValues::key() const {
  // @@protoc_insertion_point(field_get:PropValues.key)
  return key_;
}
inline void PropValues::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:PropValues.key)
}

// optional uint32 value = 2;
inline bool PropValues::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PropValues::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PropValues::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PropValues::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 PropValues::value() const {
  // @@protoc_insertion_point(field_get:PropValues.value)
  return value_;
}
inline void PropValues::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:PropValues.value)
}

// -------------------------------------------------------------------

// FPairDataDWORD

// optional uint32 para1 = 1;
inline bool FPairDataDWORD::has_para1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FPairDataDWORD::set_has_para1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FPairDataDWORD::clear_has_para1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FPairDataDWORD::clear_para1() {
  para1_ = 0u;
  clear_has_para1();
}
inline ::google::protobuf::uint32 FPairDataDWORD::para1() const {
  // @@protoc_insertion_point(field_get:FPairDataDWORD.para1)
  return para1_;
}
inline void FPairDataDWORD::set_para1(::google::protobuf::uint32 value) {
  set_has_para1();
  para1_ = value;
  // @@protoc_insertion_point(field_set:FPairDataDWORD.para1)
}

// optional uint32 para2 = 2;
inline bool FPairDataDWORD::has_para2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FPairDataDWORD::set_has_para2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FPairDataDWORD::clear_has_para2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FPairDataDWORD::clear_para2() {
  para2_ = 0u;
  clear_has_para2();
}
inline ::google::protobuf::uint32 FPairDataDWORD::para2() const {
  // @@protoc_insertion_point(field_get:FPairDataDWORD.para2)
  return para2_;
}
inline void FPairDataDWORD::set_para2(::google::protobuf::uint32 value) {
  set_has_para2();
  para2_ = value;
  // @@protoc_insertion_point(field_set:FPairDataDWORD.para2)
}

// -------------------------------------------------------------------

// FPairDataStrDW

// optional string str = 1;
inline bool FPairDataStrDW::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FPairDataStrDW::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FPairDataStrDW::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FPairDataStrDW::clear_str() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& FPairDataStrDW::str() const {
  // @@protoc_insertion_point(field_get:FPairDataStrDW.str)
  return *str_;
}
inline void FPairDataStrDW::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set:FPairDataStrDW.str)
}
inline void FPairDataStrDW::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set_char:FPairDataStrDW.str)
}
inline void FPairDataStrDW::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FPairDataStrDW.str)
}
inline ::std::string* FPairDataStrDW::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FPairDataStrDW.str)
  return str_;
}
inline ::std::string* FPairDataStrDW::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FPairDataStrDW::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FPairDataStrDW.str)
}

// optional uint32 value = 2;
inline bool FPairDataStrDW::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FPairDataStrDW::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FPairDataStrDW::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FPairDataStrDW::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 FPairDataStrDW::value() const {
  // @@protoc_insertion_point(field_get:FPairDataStrDW.value)
  return value_;
}
inline void FPairDataStrDW::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:FPairDataStrDW.value)
}

// -------------------------------------------------------------------

// FTripleDataDWORD

// optional uint32 para1 = 1;
inline bool FTripleDataDWORD::has_para1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FTripleDataDWORD::set_has_para1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FTripleDataDWORD::clear_has_para1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FTripleDataDWORD::clear_para1() {
  para1_ = 0u;
  clear_has_para1();
}
inline ::google::protobuf::uint32 FTripleDataDWORD::para1() const {
  // @@protoc_insertion_point(field_get:FTripleDataDWORD.para1)
  return para1_;
}
inline void FTripleDataDWORD::set_para1(::google::protobuf::uint32 value) {
  set_has_para1();
  para1_ = value;
  // @@protoc_insertion_point(field_set:FTripleDataDWORD.para1)
}

// optional uint32 para2 = 2;
inline bool FTripleDataDWORD::has_para2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FTripleDataDWORD::set_has_para2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FTripleDataDWORD::clear_has_para2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FTripleDataDWORD::clear_para2() {
  para2_ = 0u;
  clear_has_para2();
}
inline ::google::protobuf::uint32 FTripleDataDWORD::para2() const {
  // @@protoc_insertion_point(field_get:FTripleDataDWORD.para2)
  return para2_;
}
inline void FTripleDataDWORD::set_para2(::google::protobuf::uint32 value) {
  set_has_para2();
  para2_ = value;
  // @@protoc_insertion_point(field_set:FTripleDataDWORD.para2)
}

// optional uint32 para3 = 3;
inline bool FTripleDataDWORD::has_para3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FTripleDataDWORD::set_has_para3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FTripleDataDWORD::clear_has_para3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FTripleDataDWORD::clear_para3() {
  para3_ = 0u;
  clear_has_para3();
}
inline ::google::protobuf::uint32 FTripleDataDWORD::para3() const {
  // @@protoc_insertion_point(field_get:FTripleDataDWORD.para3)
  return para3_;
}
inline void FTripleDataDWORD::set_para3(::google::protobuf::uint32 value) {
  set_has_para3();
  para3_ = value;
  // @@protoc_insertion_point(field_set:FTripleDataDWORD.para3)
}

// -------------------------------------------------------------------

// StpObjectNode

// optional uint32 gridType = 1;
inline bool StpObjectNode::has_gridtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StpObjectNode::set_has_gridtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StpObjectNode::clear_has_gridtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StpObjectNode::clear_gridtype() {
  gridtype_ = 0u;
  clear_has_gridtype();
}
inline ::google::protobuf::uint32 StpObjectNode::gridtype() const {
  // @@protoc_insertion_point(field_get:StpObjectNode.gridType)
  return gridtype_;
}
inline void StpObjectNode::set_gridtype(::google::protobuf::uint32 value) {
  set_has_gridtype();
  gridtype_ = value;
  // @@protoc_insertion_point(field_set:StpObjectNode.gridType)
}

// optional uint32 tempid = 2;
inline bool StpObjectNode::has_tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StpObjectNode::set_has_tempid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StpObjectNode::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StpObjectNode::clear_tempid() {
  tempid_ = 0u;
  clear_has_tempid();
}
inline ::google::protobuf::uint32 StpObjectNode::tempid() const {
  // @@protoc_insertion_point(field_get:StpObjectNode.tempid)
  return tempid_;
}
inline void StpObjectNode::set_tempid(::google::protobuf::uint32 value) {
  set_has_tempid();
  tempid_ = value;
  // @@protoc_insertion_point(field_set:StpObjectNode.tempid)
}

// optional uint32 x = 3;
inline bool StpObjectNode::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StpObjectNode::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StpObjectNode::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StpObjectNode::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 StpObjectNode::x() const {
  // @@protoc_insertion_point(field_get:StpObjectNode.x)
  return x_;
}
inline void StpObjectNode::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:StpObjectNode.x)
}

// optional uint32 y = 4;
inline bool StpObjectNode::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StpObjectNode::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StpObjectNode::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StpObjectNode::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 StpObjectNode::y() const {
  // @@protoc_insertion_point(field_get:StpObjectNode.y)
  return y_;
}
inline void StpObjectNode::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:StpObjectNode.y)
}

// optional uint32 num = 5;
inline bool StpObjectNode::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StpObjectNode::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StpObjectNode::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StpObjectNode::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 StpObjectNode::num() const {
  // @@protoc_insertion_point(field_get:StpObjectNode.num)
  return num_;
}
inline void StpObjectNode::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:StpObjectNode.num)
}

// optional bool del = 6;
inline bool StpObjectNode::has_del() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StpObjectNode::set_has_del() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StpObjectNode::clear_has_del() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StpObjectNode::clear_del() {
  del_ = false;
  clear_has_del();
}
inline bool StpObjectNode::del() const {
  // @@protoc_insertion_point(field_get:StpObjectNode.del)
  return del_;
}
inline void StpObjectNode::set_del(bool value) {
  set_has_del();
  del_ = value;
  // @@protoc_insertion_point(field_set:StpObjectNode.del)
}

// -------------------------------------------------------------------

// FMsgNpcFunction

// optional uint32 funcid = 1;
inline bool FMsgNpcFunction::has_funcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FMsgNpcFunction::set_has_funcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FMsgNpcFunction::clear_has_funcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FMsgNpcFunction::clear_funcid() {
  funcid_ = 0u;
  clear_has_funcid();
}
inline ::google::protobuf::uint32 FMsgNpcFunction::funcid() const {
  // @@protoc_insertion_point(field_get:FMsgNpcFunction.funcid)
  return funcid_;
}
inline void FMsgNpcFunction::set_funcid(::google::protobuf::uint32 value) {
  set_has_funcid();
  funcid_ = value;
  // @@protoc_insertion_point(field_set:FMsgNpcFunction.funcid)
}

// optional string funcname = 2;
inline bool FMsgNpcFunction::has_funcname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FMsgNpcFunction::set_has_funcname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FMsgNpcFunction::clear_has_funcname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FMsgNpcFunction::clear_funcname() {
  if (funcname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcname_->clear();
  }
  clear_has_funcname();
}
inline const ::std::string& FMsgNpcFunction::funcname() const {
  // @@protoc_insertion_point(field_get:FMsgNpcFunction.funcname)
  return *funcname_;
}
inline void FMsgNpcFunction::set_funcname(const ::std::string& value) {
  set_has_funcname();
  if (funcname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcname_ = new ::std::string;
  }
  funcname_->assign(value);
  // @@protoc_insertion_point(field_set:FMsgNpcFunction.funcname)
}
inline void FMsgNpcFunction::set_funcname(const char* value) {
  set_has_funcname();
  if (funcname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcname_ = new ::std::string;
  }
  funcname_->assign(value);
  // @@protoc_insertion_point(field_set_char:FMsgNpcFunction.funcname)
}
inline void FMsgNpcFunction::set_funcname(const char* value, size_t size) {
  set_has_funcname();
  if (funcname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcname_ = new ::std::string;
  }
  funcname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FMsgNpcFunction.funcname)
}
inline ::std::string* FMsgNpcFunction::mutable_funcname() {
  set_has_funcname();
  if (funcname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FMsgNpcFunction.funcname)
  return funcname_;
}
inline ::std::string* FMsgNpcFunction::release_funcname() {
  clear_has_funcname();
  if (funcname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = funcname_;
    funcname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FMsgNpcFunction::set_allocated_funcname(::std::string* funcname) {
  if (funcname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete funcname_;
  }
  if (funcname) {
    set_has_funcname();
    funcname_ = funcname;
  } else {
    clear_has_funcname();
    funcname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FMsgNpcFunction.funcname)
}

// optional string funcevent = 3;
inline bool FMsgNpcFunction::has_funcevent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FMsgNpcFunction::set_has_funcevent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FMsgNpcFunction::clear_has_funcevent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FMsgNpcFunction::clear_funcevent() {
  if (funcevent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcevent_->clear();
  }
  clear_has_funcevent();
}
inline const ::std::string& FMsgNpcFunction::funcevent() const {
  // @@protoc_insertion_point(field_get:FMsgNpcFunction.funcevent)
  return *funcevent_;
}
inline void FMsgNpcFunction::set_funcevent(const ::std::string& value) {
  set_has_funcevent();
  if (funcevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcevent_ = new ::std::string;
  }
  funcevent_->assign(value);
  // @@protoc_insertion_point(field_set:FMsgNpcFunction.funcevent)
}
inline void FMsgNpcFunction::set_funcevent(const char* value) {
  set_has_funcevent();
  if (funcevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcevent_ = new ::std::string;
  }
  funcevent_->assign(value);
  // @@protoc_insertion_point(field_set_char:FMsgNpcFunction.funcevent)
}
inline void FMsgNpcFunction::set_funcevent(const char* value, size_t size) {
  set_has_funcevent();
  if (funcevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcevent_ = new ::std::string;
  }
  funcevent_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FMsgNpcFunction.funcevent)
}
inline ::std::string* FMsgNpcFunction::mutable_funcevent() {
  set_has_funcevent();
  if (funcevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcevent_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FMsgNpcFunction.funcevent)
  return funcevent_;
}
inline ::std::string* FMsgNpcFunction::release_funcevent() {
  clear_has_funcevent();
  if (funcevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = funcevent_;
    funcevent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FMsgNpcFunction::set_allocated_funcevent(::std::string* funcevent) {
  if (funcevent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete funcevent_;
  }
  if (funcevent) {
    set_has_funcevent();
    funcevent_ = funcevent;
  } else {
    clear_has_funcevent();
    funcevent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FMsgNpcFunction.funcevent)
}

// optional string funcicon = 4;
inline bool FMsgNpcFunction::has_funcicon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FMsgNpcFunction::set_has_funcicon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FMsgNpcFunction::clear_has_funcicon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FMsgNpcFunction::clear_funcicon() {
  if (funcicon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcicon_->clear();
  }
  clear_has_funcicon();
}
inline const ::std::string& FMsgNpcFunction::funcicon() const {
  // @@protoc_insertion_point(field_get:FMsgNpcFunction.funcicon)
  return *funcicon_;
}
inline void FMsgNpcFunction::set_funcicon(const ::std::string& value) {
  set_has_funcicon();
  if (funcicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcicon_ = new ::std::string;
  }
  funcicon_->assign(value);
  // @@protoc_insertion_point(field_set:FMsgNpcFunction.funcicon)
}
inline void FMsgNpcFunction::set_funcicon(const char* value) {
  set_has_funcicon();
  if (funcicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcicon_ = new ::std::string;
  }
  funcicon_->assign(value);
  // @@protoc_insertion_point(field_set_char:FMsgNpcFunction.funcicon)
}
inline void FMsgNpcFunction::set_funcicon(const char* value, size_t size) {
  set_has_funcicon();
  if (funcicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcicon_ = new ::std::string;
  }
  funcicon_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FMsgNpcFunction.funcicon)
}
inline ::std::string* FMsgNpcFunction::mutable_funcicon() {
  set_has_funcicon();
  if (funcicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    funcicon_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FMsgNpcFunction.funcicon)
  return funcicon_;
}
inline ::std::string* FMsgNpcFunction::release_funcicon() {
  clear_has_funcicon();
  if (funcicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = funcicon_;
    funcicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FMsgNpcFunction::set_allocated_funcicon(::std::string* funcicon) {
  if (funcicon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete funcicon_;
  }
  if (funcicon) {
    set_has_funcicon();
    funcicon_ = funcicon;
  } else {
    clear_has_funcicon();
    funcicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FMsgNpcFunction.funcicon)
}

// optional bool funcopen = 5;
inline bool FMsgNpcFunction::has_funcopen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FMsgNpcFunction::set_has_funcopen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FMsgNpcFunction::clear_has_funcopen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FMsgNpcFunction::clear_funcopen() {
  funcopen_ = false;
  clear_has_funcopen();
}
inline bool FMsgNpcFunction::funcopen() const {
  // @@protoc_insertion_point(field_get:FMsgNpcFunction.funcopen)
  return funcopen_;
}
inline void FMsgNpcFunction::set_funcopen(bool value) {
  set_has_funcopen();
  funcopen_ = value;
  // @@protoc_insertion_point(field_set:FMsgNpcFunction.funcopen)
}

// -------------------------------------------------------------------

// FNpcDlgPara

// optional string tag = 1;
inline bool FNpcDlgPara::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FNpcDlgPara::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FNpcDlgPara::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FNpcDlgPara::clear_tag() {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_->clear();
  }
  clear_has_tag();
}
inline const ::std::string& FNpcDlgPara::tag() const {
  // @@protoc_insertion_point(field_get:FNpcDlgPara.tag)
  return *tag_;
}
inline void FNpcDlgPara::set_tag(const ::std::string& value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set:FNpcDlgPara.tag)
}
inline void FNpcDlgPara::set_tag(const char* value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
  // @@protoc_insertion_point(field_set_char:FNpcDlgPara.tag)
}
inline void FNpcDlgPara::set_tag(const char* value, size_t size) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  tag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FNpcDlgPara.tag)
}
inline ::std::string* FNpcDlgPara::mutable_tag() {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FNpcDlgPara.tag)
  return tag_;
}
inline ::std::string* FNpcDlgPara::release_tag() {
  clear_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tag_;
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FNpcDlgPara::set_allocated_tag(::std::string* tag) {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tag_;
  }
  if (tag) {
    set_has_tag();
    tag_ = tag;
  } else {
    clear_has_tag();
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FNpcDlgPara.tag)
}

// repeated .FValueCell value = 2;
inline int FNpcDlgPara::value_size() const {
  return value_.size();
}
inline void FNpcDlgPara::clear_value() {
  value_.Clear();
}
inline const ::FValueCell& FNpcDlgPara::value(int index) const {
  // @@protoc_insertion_point(field_get:FNpcDlgPara.value)
  return value_.Get(index);
}
inline ::FValueCell* FNpcDlgPara::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:FNpcDlgPara.value)
  return value_.Mutable(index);
}
inline ::FValueCell* FNpcDlgPara::add_value() {
  // @@protoc_insertion_point(field_add:FNpcDlgPara.value)
  return value_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FValueCell >&
FNpcDlgPara::value() const {
  // @@protoc_insertion_point(field_list:FNpcDlgPara.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::FValueCell >*
FNpcDlgPara::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:FNpcDlgPara.value)
  return &value_;
}

// -------------------------------------------------------------------

// FValueCell

// optional uint32 intvalue = 1;
inline bool FValueCell::has_intvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FValueCell::set_has_intvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FValueCell::clear_has_intvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FValueCell::clear_intvalue() {
  intvalue_ = 0u;
  clear_has_intvalue();
}
inline ::google::protobuf::uint32 FValueCell::intvalue() const {
  // @@protoc_insertion_point(field_get:FValueCell.intvalue)
  return intvalue_;
}
inline void FValueCell::set_intvalue(::google::protobuf::uint32 value) {
  set_has_intvalue();
  intvalue_ = value;
  // @@protoc_insertion_point(field_set:FValueCell.intvalue)
}

// optional string strvalue = 2;
inline bool FValueCell::has_strvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FValueCell::set_has_strvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FValueCell::clear_has_strvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FValueCell::clear_strvalue() {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_->clear();
  }
  clear_has_strvalue();
}
inline const ::std::string& FValueCell::strvalue() const {
  // @@protoc_insertion_point(field_get:FValueCell.strvalue)
  return *strvalue_;
}
inline void FValueCell::set_strvalue(const ::std::string& value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
  // @@protoc_insertion_point(field_set:FValueCell.strvalue)
}
inline void FValueCell::set_strvalue(const char* value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:FValueCell.strvalue)
}
inline void FValueCell::set_strvalue(const char* value, size_t size) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FValueCell.strvalue)
}
inline ::std::string* FValueCell::mutable_strvalue() {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strvalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FValueCell.strvalue)
  return strvalue_;
}
inline ::std::string* FValueCell::release_strvalue() {
  clear_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = strvalue_;
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FValueCell::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strvalue_;
  }
  if (strvalue) {
    set_has_strvalue();
    strvalue_ = strvalue;
  } else {
    clear_has_strvalue();
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FValueCell.strvalue)
}

// -------------------------------------------------------------------

// FPropertyValues_FValue

// optional .FPropValueType key = 1 [default = FValueType_none];
inline bool FPropertyValues_FValue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FPropertyValues_FValue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FPropertyValues_FValue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FPropertyValues_FValue::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::FPropValueType FPropertyValues_FValue::key() const {
  // @@protoc_insertion_point(field_get:FPropertyValues.FValue.key)
  return static_cast< ::FPropValueType >(key_);
}
inline void FPropertyValues_FValue::set_key(::FPropValueType value) {
  assert(::FPropValueType_IsValid(value));
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:FPropertyValues.FValue.key)
}

// repeated uint32 value = 2;
inline int FPropertyValues_FValue::value_size() const {
  return value_.size();
}
inline void FPropertyValues_FValue::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::uint32 FPropertyValues_FValue::value(int index) const {
  // @@protoc_insertion_point(field_get:FPropertyValues.FValue.value)
  return value_.Get(index);
}
inline void FPropertyValues_FValue::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:FPropertyValues.FValue.value)
}
inline void FPropertyValues_FValue::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:FPropertyValues.FValue.value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FPropertyValues_FValue::value() const {
  // @@protoc_insertion_point(field_list:FPropertyValues.FValue.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FPropertyValues_FValue::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:FPropertyValues.FValue.value)
  return &value_;
}

// -------------------------------------------------------------------

// FPropertyValues

// repeated .FPropertyValues.FValue value = 1;
inline int FPropertyValues::value_size() const {
  return value_.size();
}
inline void FPropertyValues::clear_value() {
  value_.Clear();
}
inline const ::FPropertyValues_FValue& FPropertyValues::value(int index) const {
  // @@protoc_insertion_point(field_get:FPropertyValues.value)
  return value_.Get(index);
}
inline ::FPropertyValues_FValue* FPropertyValues::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:FPropertyValues.value)
  return value_.Mutable(index);
}
inline ::FPropertyValues_FValue* FPropertyValues::add_value() {
  // @@protoc_insertion_point(field_add:FPropertyValues.value)
  return value_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FPropertyValues_FValue >&
FPropertyValues::value() const {
  // @@protoc_insertion_point(field_list:FPropertyValues.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::FPropertyValues_FValue >*
FPropertyValues::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:FPropertyValues.value)
  return &value_;
}

// -------------------------------------------------------------------

// FNpcMapData

// optional uint32 id = 1;
inline bool FNpcMapData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FNpcMapData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FNpcMapData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FNpcMapData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FNpcMapData::id() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.id)
  return id_;
}
inline void FNpcMapData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.id)
}

// optional uint32 tmpid = 2;
inline bool FNpcMapData::has_tmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FNpcMapData::set_has_tmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FNpcMapData::clear_has_tmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FNpcMapData::clear_tmpid() {
  tmpid_ = 0u;
  clear_has_tmpid();
}
inline ::google::protobuf::uint32 FNpcMapData::tmpid() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.tmpid)
  return tmpid_;
}
inline void FNpcMapData::set_tmpid(::google::protobuf::uint32 value) {
  set_has_tmpid();
  tmpid_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.tmpid)
}

// optional uint32 hp = 3;
inline bool FNpcMapData::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FNpcMapData::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FNpcMapData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FNpcMapData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 FNpcMapData::hp() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.hp)
  return hp_;
}
inline void FNpcMapData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.hp)
}

// optional uint32 x = 4;
inline bool FNpcMapData::has_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FNpcMapData::set_has_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FNpcMapData::clear_has_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FNpcMapData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 FNpcMapData::x() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.x)
  return x_;
}
inline void FNpcMapData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.x)
}

// optional uint32 y = 5;
inline bool FNpcMapData::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FNpcMapData::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FNpcMapData::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FNpcMapData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 FNpcMapData::y() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.y)
  return y_;
}
inline void FNpcMapData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.y)
}

// optional uint32 speed = 6;
inline bool FNpcMapData::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FNpcMapData::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FNpcMapData::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FNpcMapData::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 FNpcMapData::speed() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.speed)
  return speed_;
}
inline void FNpcMapData::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.speed)
}

// optional uint32 dir = 7;
inline bool FNpcMapData::has_dir() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FNpcMapData::set_has_dir() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FNpcMapData::clear_has_dir() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FNpcMapData::clear_dir() {
  dir_ = 0u;
  clear_has_dir();
}
inline ::google::protobuf::uint32 FNpcMapData::dir() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.dir)
  return dir_;
}
inline void FNpcMapData::set_dir(::google::protobuf::uint32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.dir)
}

// optional uint32 level = 8;
inline bool FNpcMapData::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FNpcMapData::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FNpcMapData::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FNpcMapData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FNpcMapData::level() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.level)
  return level_;
}
inline void FNpcMapData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.level)
}

// optional uint32 visit = 9;
inline bool FNpcMapData::has_visit() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FNpcMapData::set_has_visit() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FNpcMapData::clear_has_visit() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FNpcMapData::clear_visit() {
  visit_ = 0u;
  clear_has_visit();
}
inline ::google::protobuf::uint32 FNpcMapData::visit() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.visit)
  return visit_;
}
inline void FNpcMapData::set_visit(::google::protobuf::uint32 value) {
  set_has_visit();
  visit_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.visit)
}

// optional uint32 countryId = 10;
inline bool FNpcMapData::has_countryid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FNpcMapData::set_has_countryid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FNpcMapData::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FNpcMapData::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 FNpcMapData::countryid() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.countryId)
  return countryid_;
}
inline void FNpcMapData::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.countryId)
}

// optional uint32 teamid = 11;
inline bool FNpcMapData::has_teamid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FNpcMapData::set_has_teamid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FNpcMapData::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FNpcMapData::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 FNpcMapData::teamid() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.teamid)
  return teamid_;
}
inline void FNpcMapData::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.teamid)
}

// optional uint32 septid = 12;
inline bool FNpcMapData::has_septid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FNpcMapData::set_has_septid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FNpcMapData::clear_has_septid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FNpcMapData::clear_septid() {
  septid_ = 0u;
  clear_has_septid();
}
inline ::google::protobuf::uint32 FNpcMapData::septid() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.septid)
  return septid_;
}
inline void FNpcMapData::set_septid(::google::protobuf::uint32 value) {
  set_has_septid();
  septid_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.septid)
}

// optional uint32 unionid = 13;
inline bool FNpcMapData::has_unionid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FNpcMapData::set_has_unionid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FNpcMapData::clear_has_unionid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FNpcMapData::clear_unionid() {
  unionid_ = 0u;
  clear_has_unionid();
}
inline ::google::protobuf::uint32 FNpcMapData::unionid() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.unionid)
  return unionid_;
}
inline void FNpcMapData::set_unionid(::google::protobuf::uint32 value) {
  set_has_unionid();
  unionid_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.unionid)
}

// optional uint32 master_type = 14;
inline bool FNpcMapData::has_master_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FNpcMapData::set_has_master_type() {
  _has_bits_[0] |= 0x00002000u;
}
inline void FNpcMapData::clear_has_master_type() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void FNpcMapData::clear_master_type() {
  master_type_ = 0u;
  clear_has_master_type();
}
inline ::google::protobuf::uint32 FNpcMapData::master_type() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.master_type)
  return master_type_;
}
inline void FNpcMapData::set_master_type(::google::protobuf::uint32 value) {
  set_has_master_type();
  master_type_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.master_type)
}

// optional uint32 masterid = 15;
inline bool FNpcMapData::has_masterid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FNpcMapData::set_has_masterid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void FNpcMapData::clear_has_masterid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void FNpcMapData::clear_masterid() {
  masterid_ = 0u;
  clear_has_masterid();
}
inline ::google::protobuf::uint32 FNpcMapData::masterid() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.masterid)
  return masterid_;
}
inline void FNpcMapData::set_masterid(::google::protobuf::uint32 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.masterid)
}

// optional string mastername = 16;
inline bool FNpcMapData::has_mastername() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void FNpcMapData::set_has_mastername() {
  _has_bits_[0] |= 0x00008000u;
}
inline void FNpcMapData::clear_has_mastername() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void FNpcMapData::clear_mastername() {
  if (mastername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_->clear();
  }
  clear_has_mastername();
}
inline const ::std::string& FNpcMapData::mastername() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.mastername)
  return *mastername_;
}
inline void FNpcMapData::set_mastername(const ::std::string& value) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
  // @@protoc_insertion_point(field_set:FNpcMapData.mastername)
}
inline void FNpcMapData::set_mastername(const char* value) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
  // @@protoc_insertion_point(field_set_char:FNpcMapData.mastername)
}
inline void FNpcMapData::set_mastername(const char* value, size_t size) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FNpcMapData.mastername)
}
inline ::std::string* FNpcMapData::mutable_mastername() {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FNpcMapData.mastername)
  return mastername_;
}
inline ::std::string* FNpcMapData::release_mastername() {
  clear_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mastername_;
    mastername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FNpcMapData::set_allocated_mastername(::std::string* mastername) {
  if (mastername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mastername_;
  }
  if (mastername) {
    set_has_mastername();
    mastername_ = mastername;
  } else {
    clear_has_mastername();
    mastername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FNpcMapData.mastername)
}

// optional string name = 17;
inline bool FNpcMapData::has_name() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void FNpcMapData::set_has_name() {
  _has_bits_[0] |= 0x00010000u;
}
inline void FNpcMapData::clear_has_name() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void FNpcMapData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FNpcMapData::name() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.name)
  return *name_;
}
inline void FNpcMapData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:FNpcMapData.name)
}
inline void FNpcMapData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:FNpcMapData.name)
}
inline void FNpcMapData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FNpcMapData.name)
}
inline ::std::string* FNpcMapData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FNpcMapData.name)
  return name_;
}
inline ::std::string* FNpcMapData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FNpcMapData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FNpcMapData.name)
}

// optional uint32 skillcount = 18;
inline bool FNpcMapData::has_skillcount() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void FNpcMapData::set_has_skillcount() {
  _has_bits_[0] |= 0x00020000u;
}
inline void FNpcMapData::clear_has_skillcount() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void FNpcMapData::clear_skillcount() {
  skillcount_ = 0u;
  clear_has_skillcount();
}
inline ::google::protobuf::uint32 FNpcMapData::skillcount() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.skillcount)
  return skillcount_;
}
inline void FNpcMapData::set_skillcount(::google::protobuf::uint32 value) {
  set_has_skillcount();
  skillcount_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.skillcount)
}

// repeated uint32 sign = 19;
inline int FNpcMapData::sign_size() const {
  return sign_.size();
}
inline void FNpcMapData::clear_sign() {
  sign_.Clear();
}
inline ::google::protobuf::uint32 FNpcMapData::sign(int index) const {
  // @@protoc_insertion_point(field_get:FNpcMapData.sign)
  return sign_.Get(index);
}
inline void FNpcMapData::set_sign(int index, ::google::protobuf::uint32 value) {
  sign_.Set(index, value);
  // @@protoc_insertion_point(field_set:FNpcMapData.sign)
}
inline void FNpcMapData::add_sign(::google::protobuf::uint32 value) {
  sign_.Add(value);
  // @@protoc_insertion_point(field_add:FNpcMapData.sign)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FNpcMapData::sign() const {
  // @@protoc_insertion_point(field_list:FNpcMapData.sign)
  return sign_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FNpcMapData::mutable_sign() {
  // @@protoc_insertion_point(field_mutable_list:FNpcMapData.sign)
  return &sign_;
}

// repeated .FStateData ninestate = 20;
inline int FNpcMapData::ninestate_size() const {
  return ninestate_.size();
}
inline void FNpcMapData::clear_ninestate() {
  ninestate_.Clear();
}
inline const ::FStateData& FNpcMapData::ninestate(int index) const {
  // @@protoc_insertion_point(field_get:FNpcMapData.ninestate)
  return ninestate_.Get(index);
}
inline ::FStateData* FNpcMapData::mutable_ninestate(int index) {
  // @@protoc_insertion_point(field_mutable:FNpcMapData.ninestate)
  return ninestate_.Mutable(index);
}
inline ::FStateData* FNpcMapData::add_ninestate() {
  // @@protoc_insertion_point(field_add:FNpcMapData.ninestate)
  return ninestate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FStateData >&
FNpcMapData::ninestate() const {
  // @@protoc_insertion_point(field_list:FNpcMapData.ninestate)
  return ninestate_;
}
inline ::google::protobuf::RepeatedPtrField< ::FStateData >*
FNpcMapData::mutable_ninestate() {
  // @@protoc_insertion_point(field_mutable_list:FNpcMapData.ninestate)
  return &ninestate_;
}

// optional uint32 attacked_type = 21;
inline bool FNpcMapData::has_attacked_type() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void FNpcMapData::set_has_attacked_type() {
  _has_bits_[0] |= 0x00100000u;
}
inline void FNpcMapData::clear_has_attacked_type() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void FNpcMapData::clear_attacked_type() {
  attacked_type_ = 0u;
  clear_has_attacked_type();
}
inline ::google::protobuf::uint32 FNpcMapData::attacked_type() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.attacked_type)
  return attacked_type_;
}
inline void FNpcMapData::set_attacked_type(::google::protobuf::uint32 value) {
  set_has_attacked_type();
  attacked_type_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.attacked_type)
}

// optional uint32 maxhp = 22;
inline bool FNpcMapData::has_maxhp() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void FNpcMapData::set_has_maxhp() {
  _has_bits_[0] |= 0x00200000u;
}
inline void FNpcMapData::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void FNpcMapData::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 FNpcMapData::maxhp() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.maxhp)
  return maxhp_;
}
inline void FNpcMapData::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.maxhp)
}

// optional uint32 pkcamp = 23;
inline bool FNpcMapData::has_pkcamp() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void FNpcMapData::set_has_pkcamp() {
  _has_bits_[0] |= 0x00400000u;
}
inline void FNpcMapData::clear_has_pkcamp() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void FNpcMapData::clear_pkcamp() {
  pkcamp_ = 0u;
  clear_has_pkcamp();
}
inline ::google::protobuf::uint32 FNpcMapData::pkcamp() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.pkcamp)
  return pkcamp_;
}
inline void FNpcMapData::set_pkcamp(::google::protobuf::uint32 value) {
  set_has_pkcamp();
  pkcamp_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.pkcamp)
}

// optional string desname = 24;
inline bool FNpcMapData::has_desname() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void FNpcMapData::set_has_desname() {
  _has_bits_[0] |= 0x00800000u;
}
inline void FNpcMapData::clear_has_desname() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void FNpcMapData::clear_desname() {
  if (desname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_->clear();
  }
  clear_has_desname();
}
inline const ::std::string& FNpcMapData::desname() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.desname)
  return *desname_;
}
inline void FNpcMapData::set_desname(const ::std::string& value) {
  set_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
  // @@protoc_insertion_point(field_set:FNpcMapData.desname)
}
inline void FNpcMapData::set_desname(const char* value) {
  set_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
  // @@protoc_insertion_point(field_set_char:FNpcMapData.desname)
}
inline void FNpcMapData::set_desname(const char* value, size_t size) {
  set_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FNpcMapData.desname)
}
inline ::std::string* FNpcMapData::mutable_desname() {
  set_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FNpcMapData.desname)
  return desname_;
}
inline ::std::string* FNpcMapData::release_desname() {
  clear_has_desname();
  if (desname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desname_;
    desname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FNpcMapData::set_allocated_desname(::std::string* desname) {
  if (desname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desname_;
  }
  if (desname) {
    set_has_desname();
    desname_ = desname;
  } else {
    clear_has_desname();
    desname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FNpcMapData.desname)
}

// optional bool into = 25 [default = false];
inline bool FNpcMapData::has_into() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void FNpcMapData::set_has_into() {
  _has_bits_[0] |= 0x01000000u;
}
inline void FNpcMapData::clear_has_into() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void FNpcMapData::clear_into() {
  into_ = false;
  clear_has_into();
}
inline bool FNpcMapData::into() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.into)
  return into_;
}
inline void FNpcMapData::set_into(bool value) {
  set_has_into();
  into_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.into)
}

// optional uint32 killer = 26;
inline bool FNpcMapData::has_killer() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void FNpcMapData::set_has_killer() {
  _has_bits_[0] |= 0x02000000u;
}
inline void FNpcMapData::clear_has_killer() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void FNpcMapData::clear_killer() {
  killer_ = 0u;
  clear_has_killer();
}
inline ::google::protobuf::uint32 FNpcMapData::killer() const {
  // @@protoc_insertion_point(field_get:FNpcMapData.killer)
  return killer_;
}
inline void FNpcMapData::set_killer(::google::protobuf::uint32 value) {
  set_has_killer();
  killer_ = value;
  // @@protoc_insertion_point(field_set:FNpcMapData.killer)
}

// -------------------------------------------------------------------

// FStateData

// optional uint64 stateid = 1;
inline bool FStateData::has_stateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FStateData::set_has_stateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FStateData::clear_has_stateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FStateData::clear_stateid() {
  stateid_ = GOOGLE_ULONGLONG(0);
  clear_has_stateid();
}
inline ::google::protobuf::uint64 FStateData::stateid() const {
  // @@protoc_insertion_point(field_get:FStateData.stateid)
  return stateid_;
}
inline void FStateData::set_stateid(::google::protobuf::uint64 value) {
  set_has_stateid();
  stateid_ = value;
  // @@protoc_insertion_point(field_set:FStateData.stateid)
}

// optional int32 time = 2;
inline bool FStateData::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FStateData::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FStateData::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FStateData::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 FStateData::time() const {
  // @@protoc_insertion_point(field_get:FStateData.time)
  return time_;
}
inline void FStateData::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:FStateData.time)
}

// optional int32 level = 3;
inline bool FStateData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FStateData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FStateData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FStateData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 FStateData::level() const {
  // @@protoc_insertion_point(field_get:FStateData.level)
  return level_;
}
inline void FStateData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:FStateData.level)
}

// optional uint32 linkpoint = 4;
inline bool FStateData::has_linkpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FStateData::set_has_linkpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FStateData::clear_has_linkpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FStateData::clear_linkpoint() {
  linkpoint_ = 0u;
  clear_has_linkpoint();
}
inline ::google::protobuf::uint32 FStateData::linkpoint() const {
  // @@protoc_insertion_point(field_get:FStateData.linkpoint)
  return linkpoint_;
}
inline void FStateData::set_linkpoint(::google::protobuf::uint32 value) {
  set_has_linkpoint();
  linkpoint_ = value;
  // @@protoc_insertion_point(field_set:FStateData.linkpoint)
}

// -------------------------------------------------------------------

// FCharacterMapShow

// optional uint32 face = 1;
inline bool FCharacterMapShow::has_face() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FCharacterMapShow::set_has_face() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FCharacterMapShow::clear_has_face() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FCharacterMapShow::clear_face() {
  face_ = 0u;
  clear_has_face();
}
inline ::google::protobuf::uint32 FCharacterMapShow::face() const {
  // @@protoc_insertion_point(field_get:FCharacterMapShow.face)
  return face_;
}
inline void FCharacterMapShow::set_face(::google::protobuf::uint32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapShow.face)
}

// optional uint32 hairstyle = 2;
inline bool FCharacterMapShow::has_hairstyle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FCharacterMapShow::set_has_hairstyle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FCharacterMapShow::clear_has_hairstyle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FCharacterMapShow::clear_hairstyle() {
  hairstyle_ = 0u;
  clear_has_hairstyle();
}
inline ::google::protobuf::uint32 FCharacterMapShow::hairstyle() const {
  // @@protoc_insertion_point(field_get:FCharacterMapShow.hairstyle)
  return hairstyle_;
}
inline void FCharacterMapShow::set_hairstyle(::google::protobuf::uint32 value) {
  set_has_hairstyle();
  hairstyle_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapShow.hairstyle)
}

// optional uint32 haircolor = 3;
inline bool FCharacterMapShow::has_haircolor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FCharacterMapShow::set_has_haircolor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FCharacterMapShow::clear_has_haircolor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FCharacterMapShow::clear_haircolor() {
  haircolor_ = 0u;
  clear_has_haircolor();
}
inline ::google::protobuf::uint32 FCharacterMapShow::haircolor() const {
  // @@protoc_insertion_point(field_get:FCharacterMapShow.haircolor)
  return haircolor_;
}
inline void FCharacterMapShow::set_haircolor(::google::protobuf::uint32 value) {
  set_has_haircolor();
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapShow.haircolor)
}

// optional uint32 weapon = 4;
inline bool FCharacterMapShow::has_weapon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FCharacterMapShow::set_has_weapon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FCharacterMapShow::clear_has_weapon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FCharacterMapShow::clear_weapon() {
  weapon_ = 0u;
  clear_has_weapon();
}
inline ::google::protobuf::uint32 FCharacterMapShow::weapon() const {
  // @@protoc_insertion_point(field_get:FCharacterMapShow.weapon)
  return weapon_;
}
inline void FCharacterMapShow::set_weapon(::google::protobuf::uint32 value) {
  set_has_weapon();
  weapon_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapShow.weapon)
}

// optional uint32 coat = 5;
inline bool FCharacterMapShow::has_coat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FCharacterMapShow::set_has_coat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FCharacterMapShow::clear_has_coat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FCharacterMapShow::clear_coat() {
  coat_ = 0u;
  clear_has_coat();
}
inline ::google::protobuf::uint32 FCharacterMapShow::coat() const {
  // @@protoc_insertion_point(field_get:FCharacterMapShow.coat)
  return coat_;
}
inline void FCharacterMapShow::set_coat(::google::protobuf::uint32 value) {
  set_has_coat();
  coat_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapShow.coat)
}

// optional uint32 horse = 6;
inline bool FCharacterMapShow::has_horse() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FCharacterMapShow::set_has_horse() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FCharacterMapShow::clear_has_horse() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FCharacterMapShow::clear_horse() {
  horse_ = 0u;
  clear_has_horse();
}
inline ::google::protobuf::uint32 FCharacterMapShow::horse() const {
  // @@protoc_insertion_point(field_get:FCharacterMapShow.horse)
  return horse_;
}
inline void FCharacterMapShow::set_horse(::google::protobuf::uint32 value) {
  set_has_horse();
  horse_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapShow.horse)
}

// optional uint32 wing = 7;
inline bool FCharacterMapShow::has_wing() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FCharacterMapShow::set_has_wing() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FCharacterMapShow::clear_has_wing() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FCharacterMapShow::clear_wing() {
  wing_ = 0u;
  clear_has_wing();
}
inline ::google::protobuf::uint32 FCharacterMapShow::wing() const {
  // @@protoc_insertion_point(field_get:FCharacterMapShow.wing)
  return wing_;
}
inline void FCharacterMapShow::set_wing(::google::protobuf::uint32 value) {
  set_has_wing();
  wing_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapShow.wing)
}

// -------------------------------------------------------------------

// FCharacterMapData

// optional .FCharacterMapShow mapShow = 1;
inline bool FCharacterMapData::has_mapshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FCharacterMapData::set_has_mapshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FCharacterMapData::clear_has_mapshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FCharacterMapData::clear_mapshow() {
  if (mapshow_ != NULL) mapshow_->::FCharacterMapShow::Clear();
  clear_has_mapshow();
}
inline const ::FCharacterMapShow& FCharacterMapData::mapshow() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.mapShow)
  return mapshow_ != NULL ? *mapshow_ : *default_instance_->mapshow_;
}
inline ::FCharacterMapShow* FCharacterMapData::mutable_mapshow() {
  set_has_mapshow();
  if (mapshow_ == NULL) mapshow_ = new ::FCharacterMapShow;
  // @@protoc_insertion_point(field_mutable:FCharacterMapData.mapShow)
  return mapshow_;
}
inline ::FCharacterMapShow* FCharacterMapData::release_mapshow() {
  clear_has_mapshow();
  ::FCharacterMapShow* temp = mapshow_;
  mapshow_ = NULL;
  return temp;
}
inline void FCharacterMapData::set_allocated_mapshow(::FCharacterMapShow* mapshow) {
  delete mapshow_;
  mapshow_ = mapshow;
  if (mapshow) {
    set_has_mapshow();
  } else {
    clear_has_mapshow();
  }
  // @@protoc_insertion_point(field_set_allocated:FCharacterMapData.mapShow)
}

// optional uint32 id = 2;
inline bool FCharacterMapData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FCharacterMapData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FCharacterMapData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FCharacterMapData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FCharacterMapData::id() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.id)
  return id_;
}
inline void FCharacterMapData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.id)
}

// optional uint32 country = 3;
inline bool FCharacterMapData::has_country() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FCharacterMapData::set_has_country() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FCharacterMapData::clear_has_country() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FCharacterMapData::clear_country() {
  country_ = 0u;
  clear_has_country();
}
inline ::google::protobuf::uint32 FCharacterMapData::country() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.country)
  return country_;
}
inline void FCharacterMapData::set_country(::google::protobuf::uint32 value) {
  set_has_country();
  country_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.country)
}

// optional uint32 septOfficer = 4;
inline bool FCharacterMapData::has_septofficer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FCharacterMapData::set_has_septofficer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FCharacterMapData::clear_has_septofficer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FCharacterMapData::clear_septofficer() {
  septofficer_ = 0u;
  clear_has_septofficer();
}
inline ::google::protobuf::uint32 FCharacterMapData::septofficer() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.septOfficer)
  return septofficer_;
}
inline void FCharacterMapData::set_septofficer(::google::protobuf::uint32 value) {
  set_has_septofficer();
  septofficer_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.septOfficer)
}

// optional uint32 level = 6;
inline bool FCharacterMapData::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FCharacterMapData::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FCharacterMapData::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FCharacterMapData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FCharacterMapData::level() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.level)
  return level_;
}
inline void FCharacterMapData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.level)
}

// optional uint32 x = 7;
inline bool FCharacterMapData::has_x() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FCharacterMapData::set_has_x() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FCharacterMapData::clear_has_x() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FCharacterMapData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 FCharacterMapData::x() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.x)
  return x_;
}
inline void FCharacterMapData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.x)
}

// optional uint32 y = 8;
inline bool FCharacterMapData::has_y() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FCharacterMapData::set_has_y() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FCharacterMapData::clear_has_y() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FCharacterMapData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 FCharacterMapData::y() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.y)
  return y_;
}
inline void FCharacterMapData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.y)
}

// optional uint32 z = 38;
inline bool FCharacterMapData::has_z() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FCharacterMapData::set_has_z() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FCharacterMapData::clear_has_z() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FCharacterMapData::clear_z() {
  z_ = 0u;
  clear_has_z();
}
inline ::google::protobuf::uint32 FCharacterMapData::z() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.z)
  return z_;
}
inline void FCharacterMapData::set_z(::google::protobuf::uint32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.z)
}

// optional uint32 dir = 9;
inline bool FCharacterMapData::has_dir() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FCharacterMapData::set_has_dir() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FCharacterMapData::clear_has_dir() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FCharacterMapData::clear_dir() {
  dir_ = 0u;
  clear_has_dir();
}
inline ::google::protobuf::uint32 FCharacterMapData::dir() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.dir)
  return dir_;
}
inline void FCharacterMapData::set_dir(::google::protobuf::uint32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.dir)
}

// optional uint32 moveSpeed = 10;
inline bool FCharacterMapData::has_movespeed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FCharacterMapData::set_has_movespeed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FCharacterMapData::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FCharacterMapData::clear_movespeed() {
  movespeed_ = 0u;
  clear_has_movespeed();
}
inline ::google::protobuf::uint32 FCharacterMapData::movespeed() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.moveSpeed)
  return movespeed_;
}
inline void FCharacterMapData::set_movespeed(::google::protobuf::uint32 value) {
  set_has_movespeed();
  movespeed_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.moveSpeed)
}

// optional uint32 evilvalue = 11;
inline bool FCharacterMapData::has_evilvalue() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FCharacterMapData::set_has_evilvalue() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FCharacterMapData::clear_has_evilvalue() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FCharacterMapData::clear_evilvalue() {
  evilvalue_ = 0u;
  clear_has_evilvalue();
}
inline ::google::protobuf::uint32 FCharacterMapData::evilvalue() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.evilvalue)
  return evilvalue_;
}
inline void FCharacterMapData::set_evilvalue(::google::protobuf::uint32 value) {
  set_has_evilvalue();
  evilvalue_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.evilvalue)
}

// optional uint32 questState = 12;
inline bool FCharacterMapData::has_queststate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FCharacterMapData::set_has_queststate() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FCharacterMapData::clear_has_queststate() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FCharacterMapData::clear_queststate() {
  queststate_ = 0u;
  clear_has_queststate();
}
inline ::google::protobuf::uint32 FCharacterMapData::queststate() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.questState)
  return queststate_;
}
inline void FCharacterMapData::set_queststate(::google::protobuf::uint32 value) {
  set_has_queststate();
  queststate_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.questState)
}

// optional string shopName = 13;
inline bool FCharacterMapData::has_shopname() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FCharacterMapData::set_has_shopname() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FCharacterMapData::clear_has_shopname() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FCharacterMapData::clear_shopname() {
  if (shopname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_->clear();
  }
  clear_has_shopname();
}
inline const ::std::string& FCharacterMapData::shopname() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.shopName)
  return *shopname_;
}
inline void FCharacterMapData::set_shopname(const ::std::string& value) {
  set_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_ = new ::std::string;
  }
  shopname_->assign(value);
  // @@protoc_insertion_point(field_set:FCharacterMapData.shopName)
}
inline void FCharacterMapData::set_shopname(const char* value) {
  set_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_ = new ::std::string;
  }
  shopname_->assign(value);
  // @@protoc_insertion_point(field_set_char:FCharacterMapData.shopName)
}
inline void FCharacterMapData::set_shopname(const char* value, size_t size) {
  set_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_ = new ::std::string;
  }
  shopname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FCharacterMapData.shopName)
}
inline ::std::string* FCharacterMapData::mutable_shopname() {
  set_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FCharacterMapData.shopName)
  return shopname_;
}
inline ::std::string* FCharacterMapData::release_shopname() {
  clear_has_shopname();
  if (shopname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = shopname_;
    shopname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FCharacterMapData::set_allocated_shopname(::std::string* shopname) {
  if (shopname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete shopname_;
  }
  if (shopname) {
    set_has_shopname();
    shopname_ = shopname;
  } else {
    clear_has_shopname();
    shopname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FCharacterMapData.shopName)
}

// optional uint32 shopState = 14;
inline bool FCharacterMapData::has_shopstate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FCharacterMapData::set_has_shopstate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void FCharacterMapData::clear_has_shopstate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void FCharacterMapData::clear_shopstate() {
  shopstate_ = 0u;
  clear_has_shopstate();
}
inline ::google::protobuf::uint32 FCharacterMapData::shopstate() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.shopState)
  return shopstate_;
}
inline void FCharacterMapData::set_shopstate(::google::protobuf::uint32 value) {
  set_has_shopstate();
  shopstate_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.shopState)
}

// optional uint32 shopNameColor = 15;
inline bool FCharacterMapData::has_shopnamecolor() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FCharacterMapData::set_has_shopnamecolor() {
  _has_bits_[0] |= 0x00004000u;
}
inline void FCharacterMapData::clear_has_shopnamecolor() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void FCharacterMapData::clear_shopnamecolor() {
  shopnamecolor_ = 0u;
  clear_has_shopnamecolor();
}
inline ::google::protobuf::uint32 FCharacterMapData::shopnamecolor() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.shopNameColor)
  return shopnamecolor_;
}
inline void FCharacterMapData::set_shopnamecolor(::google::protobuf::uint32 value) {
  set_has_shopnamecolor();
  shopnamecolor_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.shopNameColor)
}

// repeated .FStateData ninestate = 16;
inline int FCharacterMapData::ninestate_size() const {
  return ninestate_.size();
}
inline void FCharacterMapData::clear_ninestate() {
  ninestate_.Clear();
}
inline const ::FStateData& FCharacterMapData::ninestate(int index) const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.ninestate)
  return ninestate_.Get(index);
}
inline ::FStateData* FCharacterMapData::mutable_ninestate(int index) {
  // @@protoc_insertion_point(field_mutable:FCharacterMapData.ninestate)
  return ninestate_.Mutable(index);
}
inline ::FStateData* FCharacterMapData::add_ninestate() {
  // @@protoc_insertion_point(field_add:FCharacterMapData.ninestate)
  return ninestate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FStateData >&
FCharacterMapData::ninestate() const {
  // @@protoc_insertion_point(field_list:FCharacterMapData.ninestate)
  return ninestate_;
}
inline ::google::protobuf::RepeatedPtrField< ::FStateData >*
FCharacterMapData::mutable_ninestate() {
  // @@protoc_insertion_point(field_mutable_list:FCharacterMapData.ninestate)
  return &ninestate_;
}

// optional string name = 17;
inline bool FCharacterMapData::has_name() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void FCharacterMapData::set_has_name() {
  _has_bits_[0] |= 0x00010000u;
}
inline void FCharacterMapData::clear_has_name() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void FCharacterMapData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FCharacterMapData::name() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.name)
  return *name_;
}
inline void FCharacterMapData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:FCharacterMapData.name)
}
inline void FCharacterMapData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:FCharacterMapData.name)
}
inline void FCharacterMapData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FCharacterMapData.name)
}
inline ::std::string* FCharacterMapData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FCharacterMapData.name)
  return name_;
}
inline ::std::string* FCharacterMapData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FCharacterMapData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FCharacterMapData.name)
}

// optional string septname = 18;
inline bool FCharacterMapData::has_septname() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void FCharacterMapData::set_has_septname() {
  _has_bits_[0] |= 0x00020000u;
}
inline void FCharacterMapData::clear_has_septname() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void FCharacterMapData::clear_septname() {
  if (septname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_->clear();
  }
  clear_has_septname();
}
inline const ::std::string& FCharacterMapData::septname() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.septname)
  return *septname_;
}
inline void FCharacterMapData::set_septname(const ::std::string& value) {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  septname_->assign(value);
  // @@protoc_insertion_point(field_set:FCharacterMapData.septname)
}
inline void FCharacterMapData::set_septname(const char* value) {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  septname_->assign(value);
  // @@protoc_insertion_point(field_set_char:FCharacterMapData.septname)
}
inline void FCharacterMapData::set_septname(const char* value, size_t size) {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  septname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FCharacterMapData.septname)
}
inline ::std::string* FCharacterMapData::mutable_septname() {
  set_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    septname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FCharacterMapData.septname)
  return septname_;
}
inline ::std::string* FCharacterMapData::release_septname() {
  clear_has_septname();
  if (septname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = septname_;
    septname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FCharacterMapData::set_allocated_septname(::std::string* septname) {
  if (septname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete septname_;
  }
  if (septname) {
    set_has_septname();
    septname_ = septname;
  } else {
    clear_has_septname();
    septname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FCharacterMapData.septname)
}

// optional string title = 20;
inline bool FCharacterMapData::has_title() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void FCharacterMapData::set_has_title() {
  _has_bits_[0] |= 0x00040000u;
}
inline void FCharacterMapData::clear_has_title() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void FCharacterMapData::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& FCharacterMapData::title() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.title)
  return *title_;
}
inline void FCharacterMapData::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:FCharacterMapData.title)
}
inline void FCharacterMapData::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:FCharacterMapData.title)
}
inline void FCharacterMapData::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FCharacterMapData.title)
}
inline ::std::string* FCharacterMapData::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FCharacterMapData.title)
  return title_;
}
inline ::std::string* FCharacterMapData::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FCharacterMapData::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FCharacterMapData.title)
}

// optional string teamName = 21;
inline bool FCharacterMapData::has_teamname() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void FCharacterMapData::set_has_teamname() {
  _has_bits_[0] |= 0x00080000u;
}
inline void FCharacterMapData::clear_has_teamname() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void FCharacterMapData::clear_teamname() {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_->clear();
  }
  clear_has_teamname();
}
inline const ::std::string& FCharacterMapData::teamname() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.teamName)
  return *teamname_;
}
inline void FCharacterMapData::set_teamname(const ::std::string& value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set:FCharacterMapData.teamName)
}
inline void FCharacterMapData::set_teamname(const char* value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set_char:FCharacterMapData.teamName)
}
inline void FCharacterMapData::set_teamname(const char* value, size_t size) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FCharacterMapData.teamName)
}
inline ::std::string* FCharacterMapData::mutable_teamname() {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FCharacterMapData.teamName)
  return teamname_;
}
inline ::std::string* FCharacterMapData::release_teamname() {
  clear_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = teamname_;
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FCharacterMapData::set_allocated_teamname(::std::string* teamname) {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete teamname_;
  }
  if (teamname) {
    set_has_teamname();
    teamname_ = teamname;
  } else {
    clear_has_teamname();
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FCharacterMapData.teamName)
}

// optional uint32 worldLevel = 22;
inline bool FCharacterMapData::has_worldlevel() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void FCharacterMapData::set_has_worldlevel() {
  _has_bits_[0] |= 0x00100000u;
}
inline void FCharacterMapData::clear_has_worldlevel() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void FCharacterMapData::clear_worldlevel() {
  worldlevel_ = 0u;
  clear_has_worldlevel();
}
inline ::google::protobuf::uint32 FCharacterMapData::worldlevel() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.worldLevel)
  return worldlevel_;
}
inline void FCharacterMapData::set_worldlevel(::google::protobuf::uint32 value) {
  set_has_worldlevel();
  worldlevel_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.worldLevel)
}

// optional uint32 gohome = 23;
inline bool FCharacterMapData::has_gohome() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void FCharacterMapData::set_has_gohome() {
  _has_bits_[0] |= 0x00200000u;
}
inline void FCharacterMapData::clear_has_gohome() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void FCharacterMapData::clear_gohome() {
  gohome_ = 0u;
  clear_has_gohome();
}
inline ::google::protobuf::uint32 FCharacterMapData::gohome() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.gohome)
  return gohome_;
}
inline void FCharacterMapData::set_gohome(::google::protobuf::uint32 value) {
  set_has_gohome();
  gohome_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.gohome)
}

// optional uint32 chariot_tempid = 24;
inline bool FCharacterMapData::has_chariot_tempid() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void FCharacterMapData::set_has_chariot_tempid() {
  _has_bits_[0] |= 0x00400000u;
}
inline void FCharacterMapData::clear_has_chariot_tempid() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void FCharacterMapData::clear_chariot_tempid() {
  chariot_tempid_ = 0u;
  clear_has_chariot_tempid();
}
inline ::google::protobuf::uint32 FCharacterMapData::chariot_tempid() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.chariot_tempid)
  return chariot_tempid_;
}
inline void FCharacterMapData::set_chariot_tempid(::google::protobuf::uint32 value) {
  set_has_chariot_tempid();
  chariot_tempid_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.chariot_tempid)
}

// optional uint32 chariot_mastertype = 25;
inline bool FCharacterMapData::has_chariot_mastertype() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void FCharacterMapData::set_has_chariot_mastertype() {
  _has_bits_[0] |= 0x00800000u;
}
inline void FCharacterMapData::clear_has_chariot_mastertype() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void FCharacterMapData::clear_chariot_mastertype() {
  chariot_mastertype_ = 0u;
  clear_has_chariot_mastertype();
}
inline ::google::protobuf::uint32 FCharacterMapData::chariot_mastertype() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.chariot_mastertype)
  return chariot_mastertype_;
}
inline void FCharacterMapData::set_chariot_mastertype(::google::protobuf::uint32 value) {
  set_has_chariot_mastertype();
  chariot_mastertype_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.chariot_mastertype)
}

// optional .FProfessionType profession = 26 [default = FProfession_None];
inline bool FCharacterMapData::has_profession() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void FCharacterMapData::set_has_profession() {
  _has_bits_[0] |= 0x01000000u;
}
inline void FCharacterMapData::clear_has_profession() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void FCharacterMapData::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::FProfessionType FCharacterMapData::profession() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.profession)
  return static_cast< ::FProfessionType >(profession_);
}
inline void FCharacterMapData::set_profession(::FProfessionType value) {
  assert(::FProfessionType_IsValid(value));
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.profession)
}

// optional bool is_gold_shop = 27 [default = false];
inline bool FCharacterMapData::has_is_gold_shop() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void FCharacterMapData::set_has_is_gold_shop() {
  _has_bits_[0] |= 0x02000000u;
}
inline void FCharacterMapData::clear_has_is_gold_shop() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void FCharacterMapData::clear_is_gold_shop() {
  is_gold_shop_ = false;
  clear_has_is_gold_shop();
}
inline bool FCharacterMapData::is_gold_shop() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.is_gold_shop)
  return is_gold_shop_;
}
inline void FCharacterMapData::set_is_gold_shop(bool value) {
  set_has_is_gold_shop();
  is_gold_shop_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.is_gold_shop)
}

// optional uint32 hp = 28;
inline bool FCharacterMapData::has_hp() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void FCharacterMapData::set_has_hp() {
  _has_bits_[0] |= 0x04000000u;
}
inline void FCharacterMapData::clear_has_hp() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void FCharacterMapData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 FCharacterMapData::hp() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.hp)
  return hp_;
}
inline void FCharacterMapData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.hp)
}

// optional uint32 maxhp = 29;
inline bool FCharacterMapData::has_maxhp() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void FCharacterMapData::set_has_maxhp() {
  _has_bits_[0] |= 0x08000000u;
}
inline void FCharacterMapData::clear_has_maxhp() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void FCharacterMapData::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 FCharacterMapData::maxhp() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.maxhp)
  return maxhp_;
}
inline void FCharacterMapData::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.maxhp)
}

// optional uint32 pkcamp = 30;
inline bool FCharacterMapData::has_pkcamp() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void FCharacterMapData::set_has_pkcamp() {
  _has_bits_[0] |= 0x10000000u;
}
inline void FCharacterMapData::clear_has_pkcamp() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void FCharacterMapData::clear_pkcamp() {
  pkcamp_ = 0u;
  clear_has_pkcamp();
}
inline ::google::protobuf::uint32 FCharacterMapData::pkcamp() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.pkcamp)
  return pkcamp_;
}
inline void FCharacterMapData::set_pkcamp(::google::protobuf::uint32 value) {
  set_has_pkcamp();
  pkcamp_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.pkcamp)
}

// optional bool citywarwinner = 31;
inline bool FCharacterMapData::has_citywarwinner() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void FCharacterMapData::set_has_citywarwinner() {
  _has_bits_[0] |= 0x20000000u;
}
inline void FCharacterMapData::clear_has_citywarwinner() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void FCharacterMapData::clear_citywarwinner() {
  citywarwinner_ = false;
  clear_has_citywarwinner();
}
inline bool FCharacterMapData::citywarwinner() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.citywarwinner)
  return citywarwinner_;
}
inline void FCharacterMapData::set_citywarwinner(bool value) {
  set_has_citywarwinner();
  citywarwinner_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.citywarwinner)
}

// optional uint32 duelmode = 32;
inline bool FCharacterMapData::has_duelmode() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void FCharacterMapData::set_has_duelmode() {
  _has_bits_[0] |= 0x40000000u;
}
inline void FCharacterMapData::clear_has_duelmode() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void FCharacterMapData::clear_duelmode() {
  duelmode_ = 0u;
  clear_has_duelmode();
}
inline ::google::protobuf::uint32 FCharacterMapData::duelmode() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.duelmode)
  return duelmode_;
}
inline void FCharacterMapData::set_duelmode(::google::protobuf::uint32 value) {
  set_has_duelmode();
  duelmode_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.duelmode)
}

// optional uint32 castle_level = 33;
inline bool FCharacterMapData::has_castle_level() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void FCharacterMapData::set_has_castle_level() {
  _has_bits_[0] |= 0x80000000u;
}
inline void FCharacterMapData::clear_has_castle_level() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void FCharacterMapData::clear_castle_level() {
  castle_level_ = 0u;
  clear_has_castle_level();
}
inline ::google::protobuf::uint32 FCharacterMapData::castle_level() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.castle_level)
  return castle_level_;
}
inline void FCharacterMapData::set_castle_level(::google::protobuf::uint32 value) {
  set_has_castle_level();
  castle_level_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.castle_level)
}

// optional uint32 wingid = 34;
inline bool FCharacterMapData::has_wingid() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void FCharacterMapData::set_has_wingid() {
  _has_bits_[1] |= 0x00000001u;
}
inline void FCharacterMapData::clear_has_wingid() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void FCharacterMapData::clear_wingid() {
  wingid_ = 0u;
  clear_has_wingid();
}
inline ::google::protobuf::uint32 FCharacterMapData::wingid() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.wingid)
  return wingid_;
}
inline void FCharacterMapData::set_wingid(::google::protobuf::uint32 value) {
  set_has_wingid();
  wingid_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.wingid)
}

// optional uint32 winglevel = 35;
inline bool FCharacterMapData::has_winglevel() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void FCharacterMapData::set_has_winglevel() {
  _has_bits_[1] |= 0x00000002u;
}
inline void FCharacterMapData::clear_has_winglevel() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void FCharacterMapData::clear_winglevel() {
  winglevel_ = 0u;
  clear_has_winglevel();
}
inline ::google::protobuf::uint32 FCharacterMapData::winglevel() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.winglevel)
  return winglevel_;
}
inline void FCharacterMapData::set_winglevel(::google::protobuf::uint32 value) {
  set_has_winglevel();
  winglevel_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.winglevel)
}

// optional uint32 wingstrenglevel = 36;
inline bool FCharacterMapData::has_wingstrenglevel() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void FCharacterMapData::set_has_wingstrenglevel() {
  _has_bits_[1] |= 0x00000004u;
}
inline void FCharacterMapData::clear_has_wingstrenglevel() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void FCharacterMapData::clear_wingstrenglevel() {
  wingstrenglevel_ = 0u;
  clear_has_wingstrenglevel();
}
inline ::google::protobuf::uint32 FCharacterMapData::wingstrenglevel() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.wingstrenglevel)
  return wingstrenglevel_;
}
inline void FCharacterMapData::set_wingstrenglevel(::google::protobuf::uint32 value) {
  set_has_wingstrenglevel();
  wingstrenglevel_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.wingstrenglevel)
}

// optional uint32 subprofession = 37;
inline bool FCharacterMapData::has_subprofession() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void FCharacterMapData::set_has_subprofession() {
  _has_bits_[1] |= 0x00000008u;
}
inline void FCharacterMapData::clear_has_subprofession() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void FCharacterMapData::clear_subprofession() {
  subprofession_ = 0u;
  clear_has_subprofession();
}
inline ::google::protobuf::uint32 FCharacterMapData::subprofession() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.subprofession)
  return subprofession_;
}
inline void FCharacterMapData::set_subprofession(::google::protobuf::uint32 value) {
  set_has_subprofession();
  subprofession_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.subprofession)
}

// optional uint32 newtitle = 39;
inline bool FCharacterMapData::has_newtitle() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void FCharacterMapData::set_has_newtitle() {
  _has_bits_[1] |= 0x00000010u;
}
inline void FCharacterMapData::clear_has_newtitle() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void FCharacterMapData::clear_newtitle() {
  newtitle_ = 0u;
  clear_has_newtitle();
}
inline ::google::protobuf::uint32 FCharacterMapData::newtitle() const {
  // @@protoc_insertion_point(field_get:FCharacterMapData.newtitle)
  return newtitle_;
}
inline void FCharacterMapData::set_newtitle(::google::protobuf::uint32 value) {
  set_has_newtitle();
  newtitle_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMapData.newtitle)
}

// -------------------------------------------------------------------

// FNpcDeathMapData

// optional uint32 id = 1;
inline bool FNpcDeathMapData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FNpcDeathMapData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FNpcDeathMapData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FNpcDeathMapData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FNpcDeathMapData::id() const {
  // @@protoc_insertion_point(field_get:FNpcDeathMapData.id)
  return id_;
}
inline void FNpcDeathMapData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:FNpcDeathMapData.id)
}

// optional uint32 tmpid = 2;
inline bool FNpcDeathMapData::has_tmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FNpcDeathMapData::set_has_tmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FNpcDeathMapData::clear_has_tmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FNpcDeathMapData::clear_tmpid() {
  tmpid_ = 0u;
  clear_has_tmpid();
}
inline ::google::protobuf::uint32 FNpcDeathMapData::tmpid() const {
  // @@protoc_insertion_point(field_get:FNpcDeathMapData.tmpid)
  return tmpid_;
}
inline void FNpcDeathMapData::set_tmpid(::google::protobuf::uint32 value) {
  set_has_tmpid();
  tmpid_ = value;
  // @@protoc_insertion_point(field_set:FNpcDeathMapData.tmpid)
}

// optional uint32 x = 3;
inline bool FNpcDeathMapData::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FNpcDeathMapData::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FNpcDeathMapData::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FNpcDeathMapData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 FNpcDeathMapData::x() const {
  // @@protoc_insertion_point(field_get:FNpcDeathMapData.x)
  return x_;
}
inline void FNpcDeathMapData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:FNpcDeathMapData.x)
}

// optional uint32 y = 4;
inline bool FNpcDeathMapData::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FNpcDeathMapData::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FNpcDeathMapData::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FNpcDeathMapData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 FNpcDeathMapData::y() const {
  // @@protoc_insertion_point(field_get:FNpcDeathMapData.y)
  return y_;
}
inline void FNpcDeathMapData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:FNpcDeathMapData.y)
}

// optional uint32 dir = 5;
inline bool FNpcDeathMapData::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FNpcDeathMapData::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FNpcDeathMapData::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FNpcDeathMapData::clear_dir() {
  dir_ = 0u;
  clear_has_dir();
}
inline ::google::protobuf::uint32 FNpcDeathMapData::dir() const {
  // @@protoc_insertion_point(field_get:FNpcDeathMapData.dir)
  return dir_;
}
inline void FNpcDeathMapData::set_dir(::google::protobuf::uint32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:FNpcDeathMapData.dir)
}

// optional uint32 disappearTime = 6;
inline bool FNpcDeathMapData::has_disappeartime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FNpcDeathMapData::set_has_disappeartime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FNpcDeathMapData::clear_has_disappeartime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FNpcDeathMapData::clear_disappeartime() {
  disappeartime_ = 0u;
  clear_has_disappeartime();
}
inline ::google::protobuf::uint32 FNpcDeathMapData::disappeartime() const {
  // @@protoc_insertion_point(field_get:FNpcDeathMapData.disappearTime)
  return disappeartime_;
}
inline void FNpcDeathMapData::set_disappeartime(::google::protobuf::uint32 value) {
  set_has_disappeartime();
  disappeartime_ = value;
  // @@protoc_insertion_point(field_set:FNpcDeathMapData.disappearTime)
}

// optional string name = 7;
inline bool FNpcDeathMapData::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FNpcDeathMapData::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FNpcDeathMapData::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FNpcDeathMapData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FNpcDeathMapData::name() const {
  // @@protoc_insertion_point(field_get:FNpcDeathMapData.name)
  return *name_;
}
inline void FNpcDeathMapData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:FNpcDeathMapData.name)
}
inline void FNpcDeathMapData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:FNpcDeathMapData.name)
}
inline void FNpcDeathMapData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FNpcDeathMapData.name)
}
inline ::std::string* FNpcDeathMapData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FNpcDeathMapData.name)
  return name_;
}
inline ::std::string* FNpcDeathMapData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FNpcDeathMapData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FNpcDeathMapData.name)
}

// optional uint32 killer = 8;
inline bool FNpcDeathMapData::has_killer() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FNpcDeathMapData::set_has_killer() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FNpcDeathMapData::clear_has_killer() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FNpcDeathMapData::clear_killer() {
  killer_ = 0u;
  clear_has_killer();
}
inline ::google::protobuf::uint32 FNpcDeathMapData::killer() const {
  // @@protoc_insertion_point(field_get:FNpcDeathMapData.killer)
  return killer_;
}
inline void FNpcDeathMapData::set_killer(::google::protobuf::uint32 value) {
  set_has_killer();
  killer_ = value;
  // @@protoc_insertion_point(field_set:FNpcDeathMapData.killer)
}

// -------------------------------------------------------------------

// FCharacterMainData

// optional .FCharacterMapData mapData = 1;
inline bool FCharacterMainData::has_mapdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FCharacterMainData::set_has_mapdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FCharacterMainData::clear_has_mapdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FCharacterMainData::clear_mapdata() {
  if (mapdata_ != NULL) mapdata_->::FCharacterMapData::Clear();
  clear_has_mapdata();
}
inline const ::FCharacterMapData& FCharacterMainData::mapdata() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.mapData)
  return mapdata_ != NULL ? *mapdata_ : *default_instance_->mapdata_;
}
inline ::FCharacterMapData* FCharacterMainData::mutable_mapdata() {
  set_has_mapdata();
  if (mapdata_ == NULL) mapdata_ = new ::FCharacterMapData;
  // @@protoc_insertion_point(field_mutable:FCharacterMainData.mapData)
  return mapdata_;
}
inline ::FCharacterMapData* FCharacterMainData::release_mapdata() {
  clear_has_mapdata();
  ::FCharacterMapData* temp = mapdata_;
  mapdata_ = NULL;
  return temp;
}
inline void FCharacterMainData::set_allocated_mapdata(::FCharacterMapData* mapdata) {
  delete mapdata_;
  mapdata_ = mapdata;
  if (mapdata) {
    set_has_mapdata();
  } else {
    clear_has_mapdata();
  }
  // @@protoc_insertion_point(field_set_allocated:FCharacterMainData.mapData)
}

// optional uint32 mp = 4;
inline bool FCharacterMainData::has_mp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FCharacterMainData::set_has_mp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FCharacterMainData::clear_has_mp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FCharacterMainData::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 FCharacterMainData::mp() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.mp)
  return mp_;
}
inline void FCharacterMainData::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.mp)
}

// optional uint32 maxmp = 5;
inline bool FCharacterMainData::has_maxmp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FCharacterMainData::set_has_maxmp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FCharacterMainData::clear_has_maxmp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FCharacterMainData::clear_maxmp() {
  maxmp_ = 0u;
  clear_has_maxmp();
}
inline ::google::protobuf::uint32 FCharacterMainData::maxmp() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.maxmp)
  return maxmp_;
}
inline void FCharacterMainData::set_maxmp(::google::protobuf::uint32 value) {
  set_has_maxmp();
  maxmp_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.maxmp)
}

// optional uint64 exp = 6;
inline bool FCharacterMainData::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FCharacterMainData::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FCharacterMainData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FCharacterMainData::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 FCharacterMainData::exp() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.exp)
  return exp_;
}
inline void FCharacterMainData::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.exp)
}

// optional uint32 strength = 7;
inline bool FCharacterMainData::has_strength() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FCharacterMainData::set_has_strength() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FCharacterMainData::clear_has_strength() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FCharacterMainData::clear_strength() {
  strength_ = 0u;
  clear_has_strength();
}
inline ::google::protobuf::uint32 FCharacterMainData::strength() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.strength)
  return strength_;
}
inline void FCharacterMainData::set_strength(::google::protobuf::uint32 value) {
  set_has_strength();
  strength_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.strength)
}

// optional uint32 dexterity = 8;
inline bool FCharacterMainData::has_dexterity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FCharacterMainData::set_has_dexterity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FCharacterMainData::clear_has_dexterity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FCharacterMainData::clear_dexterity() {
  dexterity_ = 0u;
  clear_has_dexterity();
}
inline ::google::protobuf::uint32 FCharacterMainData::dexterity() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.dexterity)
  return dexterity_;
}
inline void FCharacterMainData::set_dexterity(::google::protobuf::uint32 value) {
  set_has_dexterity();
  dexterity_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.dexterity)
}

// optional uint32 mentality = 9;
inline bool FCharacterMainData::has_mentality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FCharacterMainData::set_has_mentality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FCharacterMainData::clear_has_mentality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FCharacterMainData::clear_mentality() {
  mentality_ = 0u;
  clear_has_mentality();
}
inline ::google::protobuf::uint32 FCharacterMainData::mentality() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.mentality)
  return mentality_;
}
inline void FCharacterMainData::set_mentality(::google::protobuf::uint32 value) {
  set_has_mentality();
  mentality_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.mentality)
}

// optional uint32 constitution = 10;
inline bool FCharacterMainData::has_constitution() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FCharacterMainData::set_has_constitution() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FCharacterMainData::clear_has_constitution() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FCharacterMainData::clear_constitution() {
  constitution_ = 0u;
  clear_has_constitution();
}
inline ::google::protobuf::uint32 FCharacterMainData::constitution() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.constitution)
  return constitution_;
}
inline void FCharacterMainData::set_constitution(::google::protobuf::uint32 value) {
  set_has_constitution();
  constitution_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.constitution)
}

// optional uint32 attrpoint = 12;
inline bool FCharacterMainData::has_attrpoint() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FCharacterMainData::set_has_attrpoint() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FCharacterMainData::clear_has_attrpoint() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FCharacterMainData::clear_attrpoint() {
  attrpoint_ = 0u;
  clear_has_attrpoint();
}
inline ::google::protobuf::uint32 FCharacterMainData::attrpoint() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.attrpoint)
  return attrpoint_;
}
inline void FCharacterMainData::set_attrpoint(::google::protobuf::uint32 value) {
  set_has_attrpoint();
  attrpoint_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.attrpoint)
}

// optional uint32 attackSpeed = 13;
inline bool FCharacterMainData::has_attackspeed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FCharacterMainData::set_has_attackspeed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FCharacterMainData::clear_has_attackspeed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FCharacterMainData::clear_attackspeed() {
  attackspeed_ = 0u;
  clear_has_attackspeed();
}
inline ::google::protobuf::uint32 FCharacterMainData::attackspeed() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.attackSpeed)
  return attackspeed_;
}
inline void FCharacterMainData::set_attackspeed(::google::protobuf::uint32 value) {
  set_has_attackspeed();
  attackspeed_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.attackSpeed)
}

// optional uint32 minPhysics = 14;
inline bool FCharacterMainData::has_minphysics() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FCharacterMainData::set_has_minphysics() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FCharacterMainData::clear_has_minphysics() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FCharacterMainData::clear_minphysics() {
  minphysics_ = 0u;
  clear_has_minphysics();
}
inline ::google::protobuf::uint32 FCharacterMainData::minphysics() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.minPhysics)
  return minphysics_;
}
inline void FCharacterMainData::set_minphysics(::google::protobuf::uint32 value) {
  set_has_minphysics();
  minphysics_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.minPhysics)
}

// optional uint32 maxPhysics = 15;
inline bool FCharacterMainData::has_maxphysics() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FCharacterMainData::set_has_maxphysics() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FCharacterMainData::clear_has_maxphysics() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FCharacterMainData::clear_maxphysics() {
  maxphysics_ = 0u;
  clear_has_maxphysics();
}
inline ::google::protobuf::uint32 FCharacterMainData::maxphysics() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.maxPhysics)
  return maxphysics_;
}
inline void FCharacterMainData::set_maxphysics(::google::protobuf::uint32 value) {
  set_has_maxphysics();
  maxphysics_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.maxPhysics)
}

// optional uint32 minMagic = 16;
inline bool FCharacterMainData::has_minmagic() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FCharacterMainData::set_has_minmagic() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FCharacterMainData::clear_has_minmagic() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FCharacterMainData::clear_minmagic() {
  minmagic_ = 0u;
  clear_has_minmagic();
}
inline ::google::protobuf::uint32 FCharacterMainData::minmagic() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.minMagic)
  return minmagic_;
}
inline void FCharacterMainData::set_minmagic(::google::protobuf::uint32 value) {
  set_has_minmagic();
  minmagic_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.minMagic)
}

// optional uint32 maxMagic = 17;
inline bool FCharacterMainData::has_maxmagic() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FCharacterMainData::set_has_maxmagic() {
  _has_bits_[0] |= 0x00002000u;
}
inline void FCharacterMainData::clear_has_maxmagic() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void FCharacterMainData::clear_maxmagic() {
  maxmagic_ = 0u;
  clear_has_maxmagic();
}
inline ::google::protobuf::uint32 FCharacterMainData::maxmagic() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.maxMagic)
  return maxmagic_;
}
inline void FCharacterMainData::set_maxmagic(::google::protobuf::uint32 value) {
  set_has_maxmagic();
  maxmagic_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.maxMagic)
}

// optional uint32 pDefence = 18;
inline bool FCharacterMainData::has_pdefence() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FCharacterMainData::set_has_pdefence() {
  _has_bits_[0] |= 0x00004000u;
}
inline void FCharacterMainData::clear_has_pdefence() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void FCharacterMainData::clear_pdefence() {
  pdefence_ = 0u;
  clear_has_pdefence();
}
inline ::google::protobuf::uint32 FCharacterMainData::pdefence() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.pDefence)
  return pdefence_;
}
inline void FCharacterMainData::set_pdefence(::google::protobuf::uint32 value) {
  set_has_pdefence();
  pdefence_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.pDefence)
}

// optional uint32 mDefence = 19;
inline bool FCharacterMainData::has_mdefence() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void FCharacterMainData::set_has_mdefence() {
  _has_bits_[0] |= 0x00008000u;
}
inline void FCharacterMainData::clear_has_mdefence() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void FCharacterMainData::clear_mdefence() {
  mdefence_ = 0u;
  clear_has_mdefence();
}
inline ::google::protobuf::uint32 FCharacterMainData::mdefence() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.mDefence)
  return mdefence_;
}
inline void FCharacterMainData::set_mdefence(::google::protobuf::uint32 value) {
  set_has_mdefence();
  mdefence_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.mDefence)
}

// optional uint32 money = 20;
inline bool FCharacterMainData::has_money() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void FCharacterMainData::set_has_money() {
  _has_bits_[0] |= 0x00010000u;
}
inline void FCharacterMainData::clear_has_money() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void FCharacterMainData::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 FCharacterMainData::money() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.money)
  return money_;
}
inline void FCharacterMainData::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.money)
}

// optional uint32 bindMoney = 21;
inline bool FCharacterMainData::has_bindmoney() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void FCharacterMainData::set_has_bindmoney() {
  _has_bits_[0] |= 0x00020000u;
}
inline void FCharacterMainData::clear_has_bindmoney() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void FCharacterMainData::clear_bindmoney() {
  bindmoney_ = 0u;
  clear_has_bindmoney();
}
inline ::google::protobuf::uint32 FCharacterMainData::bindmoney() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.bindMoney)
  return bindmoney_;
}
inline void FCharacterMainData::set_bindmoney(::google::protobuf::uint32 value) {
  set_has_bindmoney();
  bindmoney_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.bindMoney)
}

// optional uint32 gold = 22;
inline bool FCharacterMainData::has_gold() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void FCharacterMainData::set_has_gold() {
  _has_bits_[0] |= 0x00040000u;
}
inline void FCharacterMainData::clear_has_gold() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void FCharacterMainData::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 FCharacterMainData::gold() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.gold)
  return gold_;
}
inline void FCharacterMainData::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.gold)
}

// optional uint32 bindGold = 23;
inline bool FCharacterMainData::has_bindgold() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void FCharacterMainData::set_has_bindgold() {
  _has_bits_[0] |= 0x00080000u;
}
inline void FCharacterMainData::clear_has_bindgold() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void FCharacterMainData::clear_bindgold() {
  bindgold_ = 0u;
  clear_has_bindgold();
}
inline ::google::protobuf::uint32 FCharacterMainData::bindgold() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.bindGold)
  return bindgold_;
}
inline void FCharacterMainData::set_bindgold(::google::protobuf::uint32 value) {
  set_has_bindgold();
  bindgold_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.bindGold)
}

// optional uint32 luckyRate = 24;
inline bool FCharacterMainData::has_luckyrate() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void FCharacterMainData::set_has_luckyrate() {
  _has_bits_[0] |= 0x00100000u;
}
inline void FCharacterMainData::clear_has_luckyrate() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void FCharacterMainData::clear_luckyrate() {
  luckyrate_ = 0u;
  clear_has_luckyrate();
}
inline ::google::protobuf::uint32 FCharacterMainData::luckyrate() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.luckyRate)
  return luckyrate_;
}
inline void FCharacterMainData::set_luckyrate(::google::protobuf::uint32 value) {
  set_has_luckyrate();
  luckyrate_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.luckyRate)
}

// optional uint32 antiLuckyRate = 25;
inline bool FCharacterMainData::has_antiluckyrate() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void FCharacterMainData::set_has_antiluckyrate() {
  _has_bits_[0] |= 0x00200000u;
}
inline void FCharacterMainData::clear_has_antiluckyrate() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void FCharacterMainData::clear_antiluckyrate() {
  antiluckyrate_ = 0u;
  clear_has_antiluckyrate();
}
inline ::google::protobuf::uint32 FCharacterMainData::antiluckyrate() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.antiLuckyRate)
  return antiluckyrate_;
}
inline void FCharacterMainData::set_antiluckyrate(::google::protobuf::uint32 value) {
  set_has_antiluckyrate();
  antiluckyrate_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.antiLuckyRate)
}

// optional uint32 heavyRate = 26;
inline bool FCharacterMainData::has_heavyrate() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void FCharacterMainData::set_has_heavyrate() {
  _has_bits_[0] |= 0x00400000u;
}
inline void FCharacterMainData::clear_has_heavyrate() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void FCharacterMainData::clear_heavyrate() {
  heavyrate_ = 0u;
  clear_has_heavyrate();
}
inline ::google::protobuf::uint32 FCharacterMainData::heavyrate() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.heavyRate)
  return heavyrate_;
}
inline void FCharacterMainData::set_heavyrate(::google::protobuf::uint32 value) {
  set_has_heavyrate();
  heavyrate_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.heavyRate)
}

// optional uint32 antiHeavyRate = 27;
inline bool FCharacterMainData::has_antiheavyrate() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void FCharacterMainData::set_has_antiheavyrate() {
  _has_bits_[0] |= 0x00800000u;
}
inline void FCharacterMainData::clear_has_antiheavyrate() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void FCharacterMainData::clear_antiheavyrate() {
  antiheavyrate_ = 0u;
  clear_has_antiheavyrate();
}
inline ::google::protobuf::uint32 FCharacterMainData::antiheavyrate() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.antiHeavyRate)
  return antiheavyrate_;
}
inline void FCharacterMainData::set_antiheavyrate(::google::protobuf::uint32 value) {
  set_has_antiheavyrate();
  antiheavyrate_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.antiHeavyRate)
}

// optional uint32 honor = 28;
inline bool FCharacterMainData::has_honor() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void FCharacterMainData::set_has_honor() {
  _has_bits_[0] |= 0x01000000u;
}
inline void FCharacterMainData::clear_has_honor() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void FCharacterMainData::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 FCharacterMainData::honor() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.honor)
  return honor_;
}
inline void FCharacterMainData::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.honor)
}

// optional uint32 funcvalue = 30;
inline bool FCharacterMainData::has_funcvalue() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void FCharacterMainData::set_has_funcvalue() {
  _has_bits_[0] |= 0x02000000u;
}
inline void FCharacterMainData::clear_has_funcvalue() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void FCharacterMainData::clear_funcvalue() {
  funcvalue_ = 0u;
  clear_has_funcvalue();
}
inline ::google::protobuf::uint32 FCharacterMainData::funcvalue() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.funcvalue)
  return funcvalue_;
}
inline void FCharacterMainData::set_funcvalue(::google::protobuf::uint32 value) {
  set_has_funcvalue();
  funcvalue_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.funcvalue)
}

// optional uint32 septaward = 31;
inline bool FCharacterMainData::has_septaward() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void FCharacterMainData::set_has_septaward() {
  _has_bits_[0] |= 0x04000000u;
}
inline void FCharacterMainData::clear_has_septaward() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void FCharacterMainData::clear_septaward() {
  septaward_ = 0u;
  clear_has_septaward();
}
inline ::google::protobuf::uint32 FCharacterMainData::septaward() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.septaward)
  return septaward_;
}
inline void FCharacterMainData::set_septaward(::google::protobuf::uint32 value) {
  set_has_septaward();
  septaward_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.septaward)
}

// optional uint32 septactive = 32;
inline bool FCharacterMainData::has_septactive() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void FCharacterMainData::set_has_septactive() {
  _has_bits_[0] |= 0x08000000u;
}
inline void FCharacterMainData::clear_has_septactive() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void FCharacterMainData::clear_septactive() {
  septactive_ = 0u;
  clear_has_septactive();
}
inline ::google::protobuf::uint32 FCharacterMainData::septactive() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.septactive)
  return septactive_;
}
inline void FCharacterMainData::set_septactive(::google::protobuf::uint32 value) {
  set_has_septactive();
  septactive_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.septactive)
}

// optional uint32 friendvalue = 33;
inline bool FCharacterMainData::has_friendvalue() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void FCharacterMainData::set_has_friendvalue() {
  _has_bits_[0] |= 0x10000000u;
}
inline void FCharacterMainData::clear_has_friendvalue() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void FCharacterMainData::clear_friendvalue() {
  friendvalue_ = 0u;
  clear_has_friendvalue();
}
inline ::google::protobuf::uint32 FCharacterMainData::friendvalue() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.friendvalue)
  return friendvalue_;
}
inline void FCharacterMainData::set_friendvalue(::google::protobuf::uint32 value) {
  set_has_friendvalue();
  friendvalue_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.friendvalue)
}

// optional uint32 subprofession = 34;
inline bool FCharacterMainData::has_subprofession() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void FCharacterMainData::set_has_subprofession() {
  _has_bits_[0] |= 0x20000000u;
}
inline void FCharacterMainData::clear_has_subprofession() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void FCharacterMainData::clear_subprofession() {
  subprofession_ = 0u;
  clear_has_subprofession();
}
inline ::google::protobuf::uint32 FCharacterMainData::subprofession() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.subprofession)
  return subprofession_;
}
inline void FCharacterMainData::set_subprofession(::google::protobuf::uint32 value) {
  set_has_subprofession();
  subprofession_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.subprofession)
}

// optional uint32 horseid = 35;
inline bool FCharacterMainData::has_horseid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void FCharacterMainData::set_has_horseid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void FCharacterMainData::clear_has_horseid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void FCharacterMainData::clear_horseid() {
  horseid_ = 0u;
  clear_has_horseid();
}
inline ::google::protobuf::uint32 FCharacterMainData::horseid() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.horseid)
  return horseid_;
}
inline void FCharacterMainData::set_horseid(::google::protobuf::uint32 value) {
  set_has_horseid();
  horseid_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.horseid)
}

// optional uint64 totalexp = 36;
inline bool FCharacterMainData::has_totalexp() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void FCharacterMainData::set_has_totalexp() {
  _has_bits_[0] |= 0x80000000u;
}
inline void FCharacterMainData::clear_has_totalexp() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void FCharacterMainData::clear_totalexp() {
  totalexp_ = GOOGLE_ULONGLONG(0);
  clear_has_totalexp();
}
inline ::google::protobuf::uint64 FCharacterMainData::totalexp() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.totalexp)
  return totalexp_;
}
inline void FCharacterMainData::set_totalexp(::google::protobuf::uint64 value) {
  set_has_totalexp();
  totalexp_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.totalexp)
}

// optional bool zonelimit = 37;
inline bool FCharacterMainData::has_zonelimit() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void FCharacterMainData::set_has_zonelimit() {
  _has_bits_[1] |= 0x00000001u;
}
inline void FCharacterMainData::clear_has_zonelimit() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void FCharacterMainData::clear_zonelimit() {
  zonelimit_ = false;
  clear_has_zonelimit();
}
inline bool FCharacterMainData::zonelimit() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.zonelimit)
  return zonelimit_;
}
inline void FCharacterMainData::set_zonelimit(bool value) {
  set_has_zonelimit();
  zonelimit_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.zonelimit)
}

// optional bool countryzone = 38;
inline bool FCharacterMainData::has_countryzone() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void FCharacterMainData::set_has_countryzone() {
  _has_bits_[1] |= 0x00000002u;
}
inline void FCharacterMainData::clear_has_countryzone() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void FCharacterMainData::clear_countryzone() {
  countryzone_ = false;
  clear_has_countryzone();
}
inline bool FCharacterMainData::countryzone() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.countryzone)
  return countryzone_;
}
inline void FCharacterMainData::set_countryzone(bool value) {
  set_has_countryzone();
  countryzone_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.countryzone)
}

// repeated uint64 resource = 39;
inline int FCharacterMainData::resource_size() const {
  return resource_.size();
}
inline void FCharacterMainData::clear_resource() {
  resource_.Clear();
}
inline ::google::protobuf::uint64 FCharacterMainData::resource(int index) const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.resource)
  return resource_.Get(index);
}
inline void FCharacterMainData::set_resource(int index, ::google::protobuf::uint64 value) {
  resource_.Set(index, value);
  // @@protoc_insertion_point(field_set:FCharacterMainData.resource)
}
inline void FCharacterMainData::add_resource(::google::protobuf::uint64 value) {
  resource_.Add(value);
  // @@protoc_insertion_point(field_add:FCharacterMainData.resource)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FCharacterMainData::resource() const {
  // @@protoc_insertion_point(field_list:FCharacterMainData.resource)
  return resource_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FCharacterMainData::mutable_resource() {
  // @@protoc_insertion_point(field_mutable_list:FCharacterMainData.resource)
  return &resource_;
}

// optional uint32 petskill = 40;
inline bool FCharacterMainData::has_petskill() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void FCharacterMainData::set_has_petskill() {
  _has_bits_[1] |= 0x00000008u;
}
inline void FCharacterMainData::clear_has_petskill() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void FCharacterMainData::clear_petskill() {
  petskill_ = 0u;
  clear_has_petskill();
}
inline ::google::protobuf::uint32 FCharacterMainData::petskill() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.petskill)
  return petskill_;
}
inline void FCharacterMainData::set_petskill(::google::protobuf::uint32 value) {
  set_has_petskill();
  petskill_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.petskill)
}

// optional bool autofight = 41;
inline bool FCharacterMainData::has_autofight() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void FCharacterMainData::set_has_autofight() {
  _has_bits_[1] |= 0x00000010u;
}
inline void FCharacterMainData::clear_has_autofight() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void FCharacterMainData::clear_autofight() {
  autofight_ = false;
  clear_has_autofight();
}
inline bool FCharacterMainData::autofight() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.autofight)
  return autofight_;
}
inline void FCharacterMainData::set_autofight(bool value) {
  set_has_autofight();
  autofight_ = value;
  // @@protoc_insertion_point(field_set:FCharacterMainData.autofight)
}

// optional .FPropertyValues propertys = 100;
inline bool FCharacterMainData::has_propertys() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void FCharacterMainData::set_has_propertys() {
  _has_bits_[1] |= 0x00000020u;
}
inline void FCharacterMainData::clear_has_propertys() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void FCharacterMainData::clear_propertys() {
  if (propertys_ != NULL) propertys_->::FPropertyValues::Clear();
  clear_has_propertys();
}
inline const ::FPropertyValues& FCharacterMainData::propertys() const {
  // @@protoc_insertion_point(field_get:FCharacterMainData.propertys)
  return propertys_ != NULL ? *propertys_ : *default_instance_->propertys_;
}
inline ::FPropertyValues* FCharacterMainData::mutable_propertys() {
  set_has_propertys();
  if (propertys_ == NULL) propertys_ = new ::FPropertyValues;
  // @@protoc_insertion_point(field_mutable:FCharacterMainData.propertys)
  return propertys_;
}
inline ::FPropertyValues* FCharacterMainData::release_propertys() {
  clear_has_propertys();
  ::FPropertyValues* temp = propertys_;
  propertys_ = NULL;
  return temp;
}
inline void FCharacterMainData::set_allocated_propertys(::FPropertyValues* propertys) {
  delete propertys_;
  propertys_ = propertys;
  if (propertys) {
    set_has_propertys();
  } else {
    clear_has_propertys();
  }
  // @@protoc_insertion_point(field_set_allocated:FCharacterMainData.propertys)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::stUserShopItemView_PriceTypes> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::stUserShopItemView_PriceTypes>() {
  return ::stUserShopItemView_PriceTypes_descriptor();
}
template <> struct is_proto_enum< ::CountryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CountryType>() {
  return ::CountryType_descriptor();
}
template <> struct is_proto_enum< ::QuestStateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::QuestStateType>() {
  return ::QuestStateType_descriptor();
}
template <> struct is_proto_enum< ::enumQuestDoubleTimeLimit> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumQuestDoubleTimeLimit>() {
  return ::enumQuestDoubleTimeLimit_descriptor();
}
template <> struct is_proto_enum< ::TimeCycle> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TimeCycle>() {
  return ::TimeCycle_descriptor();
}
template <> struct is_proto_enum< ::CostType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CostType>() {
  return ::CostType_descriptor();
}
template <> struct is_proto_enum< ::PlayerTitleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlayerTitleType>() {
  return ::PlayerTitleType_descriptor();
}
template <> struct is_proto_enum< ::CountryOfficerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CountryOfficerType>() {
  return ::CountryOfficerType_descriptor();
}
template <> struct is_proto_enum< ::ProfessionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProfessionType>() {
  return ::ProfessionType_descriptor();
}
template <> struct is_proto_enum< ::PropGroupType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PropGroupType>() {
  return ::PropGroupType_descriptor();
}
template <> struct is_proto_enum< ::PropValueType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PropValueType>() {
  return ::PropValueType_descriptor();
}
template <> struct is_proto_enum< ::ElementAttrType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ElementAttrType>() {
  return ::ElementAttrType_descriptor();
}
template <> struct is_proto_enum< ::CHANNEL> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CHANNEL>() {
  return ::CHANNEL_descriptor();
}
template <> struct is_proto_enum< ::CounterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CounterType>() {
  return ::CounterType_descriptor();
}
template <> struct is_proto_enum< ::CounterFuncType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CounterFuncType>() {
  return ::CounterFuncType_descriptor();
}
template <> struct is_proto_enum< ::MusterID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MusterID>() {
  return ::MusterID_descriptor();
}
template <> struct is_proto_enum< ::MusterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MusterType>() {
  return ::MusterType_descriptor();
}
template <> struct is_proto_enum< ::enumUserPresentType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumUserPresentType>() {
  return ::enumUserPresentType_descriptor();
}
template <> struct is_proto_enum< ::septCartButtonAvailable> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::septCartButtonAvailable>() {
  return ::septCartButtonAvailable_descriptor();
}
template <> struct is_proto_enum< ::septCartHelpFunctionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::septCartHelpFunctionType>() {
  return ::septCartHelpFunctionType_descriptor();
}
template <> struct is_proto_enum< ::enumStockAuctionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumStockAuctionType>() {
  return ::enumStockAuctionType_descriptor();
}
template <> struct is_proto_enum< ::enumCopySceneType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumCopySceneType>() {
  return ::enumCopySceneType_descriptor();
}
template <> struct is_proto_enum< ::enumSceneType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumSceneType>() {
  return ::enumSceneType_descriptor();
}
template <> struct is_proto_enum< ::enumSeptBuildingType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumSeptBuildingType>() {
  return ::enumSeptBuildingType_descriptor();
}
template <> struct is_proto_enum< ::enumMatchQueueType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumMatchQueueType>() {
  return ::enumMatchQueueType_descriptor();
}
template <> struct is_proto_enum< ::enumUserInfluence> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumUserInfluence>() {
  return ::enumUserInfluence_descriptor();
}
template <> struct is_proto_enum< ::enumCountryPower> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumCountryPower>() {
  return ::enumCountryPower_descriptor();
}
template <> struct is_proto_enum< ::enumGlobalVar> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumGlobalVar>() {
  return ::enumGlobalVar_descriptor();
}
template <> struct is_proto_enum< ::enumBiGuanXiuXianType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumBiGuanXiuXianType>() {
  return ::enumBiGuanXiuXianType_descriptor();
}
template <> struct is_proto_enum< ::enumObjectDropType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumObjectDropType>() {
  return ::enumObjectDropType_descriptor();
}
template <> struct is_proto_enum< ::CountryOfficeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CountryOfficeType>() {
  return ::CountryOfficeType_descriptor();
}
template <> struct is_proto_enum< ::ScoreType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ScoreType>() {
  return ::ScoreType_descriptor();
}
template <> struct is_proto_enum< ::SpeakerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SpeakerType>() {
  return ::SpeakerType_descriptor();
}
template <> struct is_proto_enum< ::SpreaderGoldState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SpreaderGoldState>() {
  return ::SpreaderGoldState_descriptor();
}
template <> struct is_proto_enum< ::empLoginError> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::empLoginError>() {
  return ::empLoginError_descriptor();
}
template <> struct is_proto_enum< ::empTipsType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::empTipsType>() {
  return ::empTipsType_descriptor();
}
template <> struct is_proto_enum< ::empMagicAttackRetType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::empMagicAttackRetType>() {
  return ::empMagicAttackRetType_descriptor();
}
template <> struct is_proto_enum< ::MsgBoxServerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgBoxServerType>() {
  return ::MsgBoxServerType_descriptor();
}
template <> struct is_proto_enum< ::empSceneEntryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::empSceneEntryType>() {
  return ::empSceneEntryType_descriptor();
}
template <> struct is_proto_enum< ::empAttrType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::empAttrType>() {
  return ::empAttrType_descriptor();
}
template <> struct is_proto_enum< ::FQuestCompleteCondType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FQuestCompleteCondType>() {
  return ::FQuestCompleteCondType_descriptor();
}
template <> struct is_proto_enum< ::empPackType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::empPackType>() {
  return ::empPackType_descriptor();
}
template <> struct is_proto_enum< ::FPropValueType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FPropValueType>() {
  return ::FPropValueType_descriptor();
}
template <> struct is_proto_enum< ::FProfessionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FProfessionType>() {
  return ::FProfessionType_descriptor();
}
template <> struct is_proto_enum< ::ObjectType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ObjectType>() {
  return ::ObjectType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
